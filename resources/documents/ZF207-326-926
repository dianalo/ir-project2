<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-326-926  </DOCNO><DOCID>07 326 926.andM;</DOCID><JOURNAL>PC Magazine  June 27 1989 v8 n12 p315(5)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>Environments. (creating a Presentation Manager version of theTaquin puzzle) (column)</TITLE><AUTHOR>Petzoid, Charles.andO;AttFile:   PCMAG\V08N12\TAQUIN;0 Program:  TAQUIN  Make file.andO;PCMAG\V08N12\TAQUIN.C;0 Program:  TAQUIN.C  C source code file.andO;PCMAG\V08N12\TAQUIN.DEF;0 Program:  TAQUIN.DEF  Module definition file.andO;PCMAG\V08N12\TAQUIN.EXE;2 Program:  TAQUIN.EXE  Executable file.andO;PCMAG\V08N12\TAQUIN.H;0 Program:  TAQUIN.H  Header file.andO;PCMAG\V08N12\TAQUIN.ICO;2 Program:  TAQUIN.ICO  Binary Icon file.andO;PCMAG\V08N12\TAQUIN.RC;0 Program:  TAQUIN.RC  Resource script.andM;</AUTHOR><SUMMARY>Creating games provides an excellent way to acquire experience inprogramming for new graphical user interfaces.andP;  The Taquin puzzle,for use under OS-2's Presentation Manager, is provided as anexample of how to program for that interface.andP;  The six files whichare necessary to make the Taquin program run, including the Makefile, the resource script, the binary icon file, the header file,the module definition file and the C source code file are alldiscussed in detail.andM;</SUMMARY><DESCRIPT>Product:   OS/2 Presentation Manager (Graphical user interface) (computerprograms).andO;Topic:     PuzzlesProgrammingTutorial.andM;</DESCRIPT><TEXT>Environments It shouldn't surprise you to learn that games are often thefirst programs written for a new graphical user interface.andP;  Games are oftenheavily interactive (which is what it's all about today); they tend to begraphics-intensive and require fast feedback to the user.andP;  Creating games isan excellent way for programmers to sharpen their GUI programming skills andgain experience with the keyboard, mouse, and graphics.andM;The OS/2 Presentation Manager is, of course, particularly well suited tohighly interactive programs, programs that have menus, make use of graphics,and can benefit from mouse input.andP;  For the INISHOW program I discussed in thelast issue, the PM would have been overkill.andP;  But this time around we arebringing a game to the staid pages of the Productivity section of PC Magazineand the PM is the perfect vehicle for its development and design.andM;JEU DE TAQUINandM;Well, actually what I will be presenting is really a puzzle.andP;  The puzzlewe'll be adapting to the OS/2 Presentation Manager was invented in the 1870s,probably by the famous puzzle-maker Sam Loyd.andP;  For a while it was all therage, particularly in Europe, and was known under various names including the15-Puzzle, the 14-15 Puzzle, the Boss Puzzle, and (in France) Jeu de Taquin.andM;In its classic from, the puzzle consists of 15 square blocks, numbered 1through 15.andP;  The squares are arranged in a 4 by 4 grid, leaving one blankspace.andP;  You can move the squares around the grid by shifting a square intothe blank space, which in turn leaves open a different blank space.andM;As Sam Loyd presented it, the puzzle squares were arranged in consecutiveorder, except with the 14 and 15 reversed.andP;  He offered $1,000 to anyone whocould find a way to shift the squares around to correct the position of the14 and 15.andP;  No one collected the reward because, from that starting point,the puzzle is insoluble.andM;A mathematical analysis of the 14-15 Puzzle appeared in an 1879 article inthe American Journal of Mathematics.andP;  If you're interested, the underlyingmath is summarized in Volume 4 of The World of Mathematics, by James R.andO;Newman (1956, republished 1988 by Tempus Books, an imprint of MicrosoftPress).andM;A Macintosh version, imaginatively called PUZZLE, is a common sight on Macs.andO;A version for Microsoft Windows, called MUZZLE, is included in the WindowsSoftware Development Kit.andP;  Both these programs initially display the 15squares in consecutive (solved) order and present a menu option to scramblethe squares.andP;  Using the mouse, you can attempt to restore the order of thesquares or put the squares into different arrangements, such as consecutiveorder going down the columns rather than across the rows.andM;THE PM VERSIONandM;In this and my next column I'll show you how to write a Presentation Managerversion of this famous puzzle.andP;  To distinguish it from both the Mac andWindows versions, I've called it TAQUIN.andP;  The screen photo in Figure 1 showsTAQUIN running in the Presentation Manager session of OS/2 1.1.andP;  A secondcopy of TAQUIN is also running in the PM session, but the copy has been&quot;minimized,&quot; so it appears as a small icon (the fourth from the left) at thebottom of the screen.andM;The 15 squares are colored with two shades of gray, giving them a pseudo-3-Dappearance.andP;  (Gray shading seems to be the rage in graphical user interfacesthese days.)andP;  You can move the squares using either the keyboard or themouse.andP;  With the keyboard, the cursor arrow keys move a square into the emptyposition.andP;  For example, in the arrangement shown in Figure 1, the down arrowkey will move square 12 down, after which pressing the right arrow key willshift the 11 square to the right.andM;As is typical, however, the mouse interface is slightly more functional.andP;  Itbetter emulates the way you might actually use your fingers, by letting youmove more than a single square at a time.andP;  For example, in the initialarrangement shown in Figure 1, if you click on the 14 square, both the 14 and15 squares move to the right.andP;  If you then click on the 2 square, the 2, 6,and 10 squares all move down.andP;  Any invalid keystrokes or mouse clicks aresimply ignored.andM;TAQUIN has a menu with the single item &quot;Options.&quot;andP;  If you click on the word(or press Alt-O), the submenu shown in the left half of Figure 2 isdisplayed.andP;  The Normal Reset option restores the squares to consecutiveorder.andP;  The Inverted Reset option restores the squares, but reverses the 14and 15, as in Loyd's presentation.andP;  The Scramble option randomly moves thesquares around in software and then updates the screen.andM;The ellipsis (.andP;  .  .) following the About Jeu de Taquin option indicatesthat this option will invoke a dialog box.andP;  In the copy of TAQUIN that isdisplayed on the right side of Figure 2, this has been done.andP;  The dialog boxdisplays the program's icon, a copyright notice, and the name of theprogrammer.andM;THE TAQUIN FILESandM;Thus TAQUIN contains many of the common elements of a PM program, such as anicon, a menu, and a dialog box.andP;  The program displays graphics and processesboth keyboard and mouse input.andP;  That gives us an opportunity to examine thesteps involved in making a relatively complete--yet not verycomplex--full-scale Presentation Manager program.andM;Like most Presentation Manager programs, TAQUIN is written in C, but the Csource code file is not the only file needed to create the TAQUIN.EXEexecutable.andP;  A PM program is often built from several files.andP;  In the case ofTAQUIN, six files are needed, as shown in Figure 3.andM;In this column I'll discuss the first five files on the list.andP;  The last andmost important, TAQUIN.C, will be explored in depth next time.andP;  (Toanticipate a little, by changing two identifiers in TAQUIN.C you'll be ableto go beyond the 4 by 4 version and recompile it for various dimensions--5 by5, 6 by 6, or 3 by 8, or most anything else.)andP;  Of course, you can downloadall these files (as well as TAQUIN.EXE) from PC MagNet.andM;But why so many files to create one program?andP;  In this column, let's find outby examining each of them.andM;THE MAKE FILEandM;The Make file, which is usually given the same filename--but without anyextension--as the program itself, helps you more easily construct the .EXEfile from its various components.andP;  The TAQUIN Make file is shown in Figure 4.andO;Assuming that you have installed the IBM or Microsoft C compiler and OS/2 1.1Programmer's Toolkit, you can create TAQUIN.EXE simply by enteringandM;MAKE TAQUINandM;In the Make file, the lines that are not indented list a target file to theleft of the colon and the dependent files to the right of the colon.andP;  If thefile date and time of any of the dependent files is later than the targetfile (or if the target file does not exist), then the indented command orcommands that follow are executed.andM;The TAQUIN Make file invokes the C compiler, CL.EXE; the resource compiler,RC.EXE (described below); and the linker, LINK.EXE.andP;  Note that the other fivefiles listed in Figure 3 all appear as dependent files in the TAQUIN Makefile.andM;THE RESOURCE SCRIPTandM;The TAQUIN.RC resource script is shown in Figure 5.andP;  If you've never done anyprogramming for a graphical user interface, the concept of &quot;resource&quot; isprobably new to you.andP;  Resources are read-only data that are stored, alongwith the normal code and data segments that make up the program, in theprogram's .EXE file.andM;TAQUIN has three resources: an icon, a menu template, and a dialog boxtemplate.andP;  The resource script either contains the program's resources, inASCII form (as in the case of the menu and dialog box template), or it refersto other files that contain a resource (in this case, the binary TAQUIN.ICOfile that holds the program's icon).andM;The resource compiler, RC.EXE, has two jobs.andP;  First, it compiles theresources into a binary form and stores them in the RC.RES file.andP;  Second, itadds the compiled resources to the RC.EXE file after the file is linked.andP;  Theprogram can then reference these resources when it runs.andM;The menu template is organized in a hierarchical structure that parallels theresultant menu.andP;  The MENU, SUBMENU, and MENUITEM statements in the menutemplate are keywords recognized by the resource compiler.andP;  ID_RESOURCE andthe four identifiers beginning with IDM (&quot;ID for a Menu&quot;) are constants thatare defined in the TAQUIN.H header file.andP;  The TAQUIN.C program usesID_RESOURCE to refer to both the icon and the menu template.andP;  The menu windowthat the program creates based on this menu template uses the four IDMconstants to signal the program when a user selects a menu item.andM;The dialog box template is a bit more complex than the menu template.andP;  Thetemplate defines a hierarchical structure of windows that appear within thedialog box.andP;  In this case, most of these windows simply contain centered textstrings (indicated by the keyword CTEXT).andM;The various numbers shown in the dialog box template refer to the positionand size of the windows within the dialog box.andP;  These numbers designatespecial device-independent coordinates and sizes that are used only in dialogbox templates.andP;  Thus, the horizontal coordinates and sizes shown aremultiples of 1/4 the average width of a system font character.andP;  Verticalcoordinates and sizes are in units of 1/8 the height of a system fontcharacter.andP;  The reason for using these special scales is to ensure that thedialog box will look roughly the same, regardless of the resolution of thevideo adapter on which the program runs.andM;The TAQUIN.C program can refer to the dialog box template by using theidentifier IDD_ABOUT, which is defined in TAQUIN.H.andM;THE ICON FILEandM;TAQUIN.ICO is the only non-ASCII file among the six files shown in Figure 3.andO;Icons are usually stored in a binary bitmap form, with rows and columns ofpixels.andP;  You create an icon file using the ICONEDIT program included in theIBM or Microsoft OS/2 1.1 Programmer's toolkit.andP;  Figure 6 shows the completedTAQUIN.ICO icon in ICONEDIT.andM;THE HEADER FILEandM;The TAQUIN.H header file, listed in Figure 7, defines constants that are usedin both the TAQUIN.RC resource script and the TAQUIN.C program we'll examinein the next issue.andM;To load the icon, menu template, and dialog box template, the TAQUIN.Cprogram must be able to refer to each of them by an ID number.andP;  For the iconand menu template, this is provided by ID_RESOURCE, and for the dialog boxtemplate, by IDD_ABOUT.andM;In addition, when the user selects an item from the menu, the menu windowsends a message to the client window.andP;  The message identifies the selecteditem by the identifier in the menu template.andP;  The TAQUIN.C program uses theIDM identifiers defined in TAQUIN.H to determine which item the user hasselected.andM;THE MODULE DEFINITION FILEandM;TAQUIN.DEF, which is shown in Figure 8, is the module definition file.andP;  Itcontains all of the information that is necessary to enable LINK to constructthe program's .EXE file.andM;The WINDOWAPI keyword identifies TAQUIN as a Presentation Manager program.andO;In the May 16, 1989, Environments column, I discussed how LINK uses thiskeyword in order to set a flag in the .EXE file.andP;  This flag assists OS/2 indetermining the program type when loading the program to run.andM;The ASCII string that follows the DESCRIPTION statement is embedded by LINKin the .EXE file.andP;  You can use this entry for whatever you want; versionnumbers and copyright notices are the most common uses.andM;Finally, the EXPORTS statement lists the two window procedures found inTAQUIN.andP;  These are ClientWndProc, the window procedure for the program'sclient window, and AboutDlgProc, the window procedure for the dialog box.andP;  Aswe'll see in the next issue, it is these two window procedures that make upthe bulk of the TAQUIN.C program.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> ZF32-093-079 </DOCNO><DOCID>11 235 789</DOCID><JOURNAL>IEEE Transactions on Computers  August 1991 v40 n8 p963(14).andM;</JOURNAL><TITLE>Design and analysis of master/slave multiprocessors. (technical)</TITLE><AUTHOR>Greenberg, Albert G.; Wright, Paul E.andM;</AUTHOR><TEXT><ABSTRACT>A simple, stochastic model is developed of a UNIX operatingsystem-based multiprocessor system with one processor designatedas 'master' and the others as 'slaves.' Combined with two simplescheduling algorithms the model enables multiple processes to runconcurrently with few changes to the operating system.andP;  Processesexecuting on UNIX and some other operating systems alternatebetween user and system calls.andP;  The new model designates certain'kernal' system calls only to the master processor, with all otheroperations independent and executable on any processor.andP;  Slaveprocessors must send processes to master processor when kernelcalls are to be performed, thus requiring serialization to preventsimultaneous accesses.andP;  Two algorithms manage transfer ofprocesses: 'kickto' moves jobs from the master to slave processorsas quickly as possible, while 'sampler' moves jobs from master toslave only if the job is in user mode.andP;  Formulae are developed fordetermining the maximum throughput of a master/slave system.andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     MultiprocessingMaster/Slave ConfigurationsSystem DesignPerformance MeasurementComputer SystemsModelingSchedulingAlgorithmsStochastic ModelUNIX.andO;Feature:   illustrationcharttable.andO;Caption:   Flow of jobs in a master/slave multiprocessor. (chart)Comparison of fixed point method and simulation for Sampler.andO;(table)Processing power and queue lengths: master and slave limitedcases. (table)andM;</DESCRIPT></DOC>
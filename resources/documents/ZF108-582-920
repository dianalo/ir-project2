<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-582-920  </DOCNO><DOCID>08 582 920.andM;</DOCID><JOURNAL>PC-Computing  July 1990 v3 n7 p90(5)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>Tailor your software to suit your business and your personalprogram with the power of Windows 3.0. (customizing MicrosoftWindows 3.0 graphical user interface)</TITLE><AUTHOR>Bonner, Paul.andM;</AUTHOR><SUMMARY>Microsoft's new Windows 3.0 graphical user interface lets endusers develop sophisticated applications without requiringextensive programming knowledge because it offers manystandardized tools, such as script languages, batch files, macros,and hypertext development tools.andP;  Users can customizeoff-the-shelf programs or build stand-alone applications.andP;  ManyWindows word processing and communications applications havescripting languages that are nearly as powerful as the BASICprogramming language, but each application's script language isspecific to that application.andP;  Extended batch languages includethe Softbridge Group's Bridge and Publishing Technologies' PubTechBatch Works.andP;  High-end database compilers and object-orientedlanguages such as The Whitewater Group's Actor can create entirelynew applications.andM;</SUMMARY><DESCRIPT>Company:   Microsoft Corp. (products).andO;Ticker:    MSFT.andO;Product:   Microsoft Windows 3.0 (Graphical user interface) (programming).andO;Topic:     Graphical User InterfaceCustom SoftwareSoftware ModificationUser-Written SoftwareProgram Development Tools.andM;</DESCRIPT><TEXT>TAILOR YOUR SOFTWARE TO SUIT YOUR BUSINESS AND YOUR PERSONAL PROGRAM WITH THEPOWER OF WINDOWS 3.0 MOST EXPERIENCED PC users engage in programming of onesort or another.andP;  When you build a financial model within Lotus 1-2-3, you'reprogramming 1-2-3 to perform the analyses you need.andP;  The same is true whenyou build a database application in dBASE, write a set of fancy macros inWordPerfect, or soup up your PC's AUTOEXEC.BAT file.andM;Such programming tasks are simple enough for any experienced PC user tomaster.andP;  But a vast gulf has always loomed between those programming projectsand the more advanced kind in which you build applications from scratch usingC or assembly language or Pascal.andP;  One side of that gulf is a warm territoryfilled with familiar applications that users can tweak and modify easily; theother has always seemed like a cold, harsh wilderness that only professionalprogrammers dared to explore.andM;Nobody bridged that gulf in the character-based DOS world.andP;  Nor, except forthe limited end-user programming capabilities offered by Hypercard, has itbeen bridged on any other computing platform.andP;  Indeed, the gap seems to havebroadened with the widespread adoption of complex graphical operatingenvironments such as the Macintosh and Windows.andP;  A simple program to print&quot;Hello, world&quot; on the screen (which could be generated by a single line ofprogramming code in character-mode BASIC) might require hundreds of lines ofC code using the Windows Software Development Kit (SDK), Microsoft's officialtool kit for Windows developers.andM;Suddenly, with Windows 3.0, the situation is changing in a big way.andP;  Usingthe Windows SDK may still be less comfortable than snuggling up to a grizzlybear, but it doesn't matter, because almost no one needs to do that anymore.andO;Windows offers a variety of more reasonable approaches, one or more of whichshould handle just about any programming project this side of the nextPageMaker or Excel.andM;New versions of tools with which most DOS users are already at leastpassingly familiar--script languages, macros, and batch files--make thispossible.andP;  By taking advantage of Windows' multitasking capabilities, itssupport for communications among applications, and its standardized graphicalinterface, these tools have been enhanced beyond the wildest dreams of theircharacter-based ancestors.andP;  Using them, it is possible to create slick,polished applications that link the capabilities of multiple off-the-shelfprograms with little more effort than it takes to write an extensivespreadsheet macro.andM;The options available for the would-be Windows programmer range from thepowerful script languages built into many Windows applications to extendedbatch languages (Softbridge Microsystems' Bridge or Publishing Technologies'BatchWorks), and from Hypercard-like development tools (Asymetrix's ToolBook,Spinnaker's Plus, and Owl International's Guide, which are discussed in&quot;Hypercard on a PC?&quot; on page 94) to high-end tools (The Whitewater Group'sActor and Bumblebee Software's dBFast/Windows).andM;These products customize off-the-shelf applications or construct full-fledgedstandalone programs.andP;  But they share one important quality: they allow theadventurous end user, even one with no programming experience, to build thekind of sophisticated, functionally rich applications that were once the soleprovince of professional programmers.andP;  In doing so, they free experienced endusers from near-total dependence on commercial programs, allowing them tobuild suites of applications specifically designed to meet their needs.andM;We don't mean to suggest that these tools don't require you to writeprogramming code.andP;  No one has yet come up with a pure point-and-clickapplication development system.andP;  But they do allow you to work on a muchhigher level than traditional programming tools do.andP;  For instance, to open atext editor with DynaComm's script language takes a single WAIT EDIT commandinstead of the thousands of lines of code it would take to build one fromscratch in C.andP;  These Windows tools eliminate the need to learn theintricacies of the C language, of Windows's internal workings, and of DOS,and they free you to concentrate on the task of shaping an application.andM;Script LanguagesandM;Script languages that let you customize off-the-shelf applications arenothing new.andP;  Thousands of 1-2-3 users have taken advantage of 1-2-3's macrolanguage to create custom menu bars and automate repetitive tasks.andP;  But inapplications such as DynaComm, Crosstalk for Windows, Word for Windows,Excel, and Ami Professional, the script language has been elevated to newheights of power and usefulness.andM;Their script capabilities convert these application programs intofull-fledged programming environments.andP;  DynaComm, a terminal emulator, can betransformed into an e-mail management system (We did it.andP;  See &quot;PC/Computing'sWindows-based E-mail System: A Homegrown Script,&quot; page 97) or an automatedportfolio-tracking system, complete with custom menus and dialog boxes thatcompletely insulate the user from any of its standard terminal emulatorfacilities.andP;  A Word for Windows script can turn a general-purpose wordprocessor into a dedicated phone message system or a database publisher.andM;Generally, these script languages employ a BASIC-like syntax with customextensions to support the special features of the Windows environment.andP;  InDynaComm, the &quot;Hello, world&quot; example could be rendered with these commands:andM;DIALOG MESSAGE &quot;Hello, world&quot; DIALOG ENDandM;Combining the individual script language capabilities of these programs withtheir ability to communicate with each other via DDE produces a developmentenvironment of unprecedented capability.andP;  A few lines of script code can putthe full power of another application at your disposal.andP;  You can, forinstance, use Excel as a math and graphics server for aWord-for-Windows-based script, or DynaComm as a communications server for anExcel-based script.andP;  By doing so you can create elaborate custom applicationsthat use the facilities of a half-dozen off-the-shelf applications withouthaving to know how to use any of them.andM;The major drawback to working with application script languages today is thatevery Windows application has a script language of its own.andP;  There is nostandard command or syntax for opening a dialog box or for adding an item tothe File menu.andP;  Microsoft is working to alleviate this within its own set ofWindows applications by equipping them with a standard BASIC-like languagethat made its first appearance in Word for Windows as Word-BASIC.andP;  It willsoon appear in other products, including Excel.andP;  Many Windows developers,however, believe that a common script language should be  part of the Windowsenvironment itself, not a proprietary feature of Microsoft's applications.andO;It isn't clear yet, however, whether Microsoft will succumb to the presure toincorporate WordBASIC into Windows' system software.andM;In addition, many people who use Windows applications equipped with powerfulscript languages may not be aware of the potential power at their fingertips.andO;While some applications (Crosstalk for Windows and DynaComm, for example)fully document their script languages in every package they sell, othersdon't.andP;  Samma supplies a reference manual for Ami Professional's macrolanguage only if a user requests it, while Microsoft actually has thetemerity to charge users an extra $20 fopr the WorldBASIC manual.andM;Batch LanguagesandM;Batch languages running under Windows have advanced as far beyond theircharacter-mode DOS counterparts as have application script languages.andP;  Theycan be used to create job-specific applications that integrate multipleWindows and character-mode DOS programs, to create Windows-based interfacesfor command-line-driven utilities, and to provide menu-driven front ends forthe Windows environment.andM;The granddaddy of Windows batch languages is the Softbridge Group's Bridge.andO;Bridge's forte is the creation of workstations/menu-driven front ends to theWindows environment, providing the user with job-specific menu choices suchas &quot;Monthly Sales Report&quot; or Buy Securities&quot; rather than generic programlistings such as &quot;Excel&quot; or &quot;Ami.&quot;andP;  Once the user makes a selection, Bridgecan launch the applications necessary to accomplish the job, load the correctdocuments, and pass data among applications as necessary.andM;The source of Bridge's power is a language that closely resembles the DOSbatch language.andP;  But its scope is far greater than that of the DOS language,enabling you to create custom menus, dialog boxes, and iconic interfaces; tolaunch multiple Windows applications and initiate DDE conversations betweenthem; and to launch and pass keystrokes to traditional character-mode DOSapplications or to applications running on other PCs over aNetBIOS-compatible LAN.andP;  This allows you to integrate your existing DOSapplications into a Windows-based workstation and link applications runningon multiple PCs.andM;With Bridge, the &quot;Hello, world&quot; example would look something like this:andM;Dialog define &quot;Hello&quot; Begin text &quot;Hello, world&quot; EndandM;PubTechWorks, from Publishing Technologies, is a cheaper version of Bridge.andO;For $ 99.95, instead of $695 for the Bridge Tool Kit, it offers user-defineddialog boxes, a batch language, and macro recorder for controlling Windowsapplications.andP;  It lacks Bridge's advanced menuing and interprocesscommunications features, and suffers from an extremely kludgy method ofdialog box definition.andP;  Still, it's good tool for creating quick-and-dirtyWindows front ends for your favorite command-line utilities (the program diskincludes a front end for the disk-archiving utility PKXARC) or for automatingsimple processes involving multiple Windows applications.andM;High-End ToolsandM;Further up the scale of power (and complexity) stand a number of toolsdesigned for use in building entirely new applications, as opposed to theapplication-customizing and linking activities usually assigned to batch andscript languages.andM;One of these is dBFast/Windows, notable for its ability to integrate existingapplications developed in dBASE with the Windows environment.andP;  This dBASEcompiler for Windows gives you the ability to recompile your existing dBASEapplications directly, in which case they will run in a window but otherwiseunchanged.andP;  You can also modify applications to include such standard Windowsuser interface controls as check-boxes, buttons, pop-up menus, and multiplewindows.andP;  And, of course, dBFast/Windows' dBASE-compatible language can beused to create new applications.andM;If you want a general-purpose programming environment, one-designed for usewith the Windows environment (unlike dBASE, which was originally designed forCP/M systems), consider The Whitewater Group's Actor or Knowledge Garden'sKnowledge Pro for Windows.andM;Actos is a rich, object-oriented programming language, suitable fordevelopment of even the most complex applications.andP;  The ACtor language isfairly straightforward, but it requires a thorough understanding of, andrigorous adherence to, the principles of object-oriented programming.andP;  As aresult, it isn't geared to quick-and-dirty application development, but itoffers broader capabilities than almost any of the other tools discussedhere.andP;  Andit avoids the low-level-programming drudgery traditionallyassociated with programming for Windows.andP;  Version 3.0 (the version of Actordesigned for Windows 3.0) is priced at $ 695.andM;Also priced at $695, Knowledged-Pro began life in the character-based worldas an expert-systems development tool.andP;  In its Windows incarnation, it hasgrown into a full-blown programming environment with trong hypertextcapabilities.andP;  It is designed to accelerate the process of developing Windowsapplications by providing fast and easy access to Windows' user interfacecomponents.andP;  For instance, in KnowledgePro for Windows, the &quot;Hello, world&quot;text could be created and displayed in a resizable window with all thestandard scrolling and arrow controls this easily:andM;window ().andP;  text ('Hello, world').andM;The needs of C programmers haven't been overloocked in the rush to providesimplified programming tools for the Windows environment.andP;  Several companies,including Caseworks, ProtoView Development, and Candlelight Software, offerdevelopment tools designed to make living with the Windows SDK a littleeasier, by simplifying development of the user interface components of anapplication.andP;  This makes it possible for experienced C programmers to developWindows applications without having to master all the complexities ofprogramming the Windows user interface.andM;Caseworks' Case:W takes a computer-aided software engineering approach togenerating C code for the user interface portion of an application, andproviding assistance in prototyping, debugging, and maintaining Windowsapplications.andP;  The Proto/View Screen Management Facility, on the other hand,provides a library of over 150 functions for creating and manipulating dataentry windows, plus a screen painter and code generator for developingprototypes rapidly.andP;  Finally, Candlelight Software's WindowsMaker provides aWysiwyg environment which makes user interface development as simple as usinga Draw program.andM;Democracy in ActionandM;The large and still growing choice of Windows-based application-developmenttools suitable for ends users represents the final triumph of the PCrevolution.andP;  That revolt started some ten years ago, as people refused totolerate the rigidity and lack of responsiveness of corporate data processingdepartments.andM;Much has changed since then.andP;  PCs aren't smuggled into the office, but comein the front door now.andP;  Often, though, nothing on the menu sates a user'shunger and he must still deal with inflexible bureaucracies.andM;When users want an application changed, they're at the mercy of the corporateinformation center or the application developer.andM;High-level development tools that allow end users to develop the applicationsthey need liberate PC users from that dependency, and let them explore a newworld of personal software.andP;  In an era of ever-growing standardization ofsoftware used within organizations, this capability puts the &quot;personal&quot; backin personal computers and provides a way to achieve the ideal balance betweenthe organization's need to standardize and the individual user's uniquepreferences and nees.andO;</TEXT></DOC>
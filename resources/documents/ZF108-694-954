<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-694-954  </DOCNO><DOCID>08 694 954.andM;</DOCID><JOURNAL>IBM Systems Journal  June 1990 v29 n2 p250(15)* Full Text COPYRIGHT International Business Machines Corp. 1990.andM;</JOURNAL><TITLE>DevelopMate: a new paradigm for information system enabling.andO;</TITLE><AUTHOR>Hein, K.P.andM;</AUTHOR><SUMMARY>This paper discusses a new approach to the use of informationsystems that is based on enterprise information system modelingconcepts.andP;  This approach is primarily oriented to the enterpriseexpert, who is considered to be the individual most familiar withthe functioning of a particular area of the enterprise informationsystem.andP;  The approach is not primarily oriented toward the dataprocessing professional.andP;  The paper discusses the phases of theapproach and how the DevelopMate software product supports some ofthose phases.andP;  (Reprinted by permission of the publisher.)andM;</SUMMARY><DESCRIPT>Company:   International Business Machines Corp. (products).andO;Product:   DevelopMate (Program development software) (usage).andO;Topic:     Information SystemsApplications ProgrammingSystems AnalysisProgram Development Techniques.andO;Feature:   illustrationchart.andO;Caption:   Standard development life cycle, granular view. (chart)New approach to development activities. (chart)Example process model. (chart)andM;</DESCRIPT><TEXT>DevelopMate: A new paradigm for information system enabling This paperdiscusses a new approach to the use of information systems that is based onenterprise information system modeling concepts.andP;  This approach is primarilyoriented to the enterprise expert, who is considered to be the individualmost familiar with the functioning of a particular area of the enterpriseinformation system.andP;  The approach is not primarily oriented toward the dataprocessing professional.andP;  The paper discusses the phases of the approach andhow the DevelopMate[TM] [1] software product supports some of those phases.andM;Over the past twenty-five years, we have witnessed an evolution in thedevelopment of information systems by data processing professionals.andP;  First,specific programs were written to solve a particular problem.andP;  These werelater combined via some intermediate step, such as a sort, into a program set(application) that operated oncommon data.andP;  Then, the industry evolved frombuilding a single application to creating integrated, shared-data systems.andO;As this evolution has takenplace, it was discovered that integratedinformation systems are more complex, multidimensional, and highlyinter-related.andP;  These systems affect an ever larger part of the enterprisethan had initially been foreseen.andP;  Unfortunately, development approaches havenot kept pace with this evolution in complexity.andP;  Most data processingorganizations are approaching shared-data system development the same waythey approached the development of single programs.andM;The traditional application development life cycle is shown in Figure 1.andO;This process is not capable of supporting the requirements of integrateddata-system development.andP;  For example, no provision is made to understand howthe system under development affects or communicates with other informationsystems in the enterprise.andP;  There is no accounting for how many systems thereare or what data are affected.andP;  It does not take into account the quantity ofdata being passed or the data standardization that might be required.andO;Instead, the system under consideration is treated as an isolated entity thatis assumed to have no association with any other system in the enterprise.andO;Expensive design, programming, and testing are done for individual systemparts, without an understanding of final interfaces and dependencies.andP;  AsFigure 1 suggests, integration of the various application parts is performedonly after considerable time and effort have been expended.andP;  The results ofthe integration activity send the developers back to the design definitionphase to correct any interoperability problems that might come to light.andO;Thus the cycle is repeated at considerable cost.andP;  This approach is analogousto building an airplane using different subcontractors.andP;  As they meet on theappointed day to join fuselage, wings, landing gear, communicationsequipment, and interior cabin, it is discovered that the major assemblies donot connect.andP;  The seats are too large for the available space in thefuselage, the wings cannot support the weight of the airplane, and thelanding gear is too large to fit into the appropriate place for storage.andM;In manufacturing, this problem is avoided by incorporating the integrationstep into the early design stages of the product, so that subcomponentbuilders may build to predesigned and well-understood interfaces.andP;  In theinformation system manufacturing business, however, a common practice is toisolate applications from their major subsystems and treat them as if therest of the environment did not exist.andP;  As a result, the user and theenterprise pay for the resultant rework and redesign in the form of losttime, dissatisfaction, and production loss.andM;This cost is manifested in successive systems because they must recover theexpense of integrating previous systems.andP;  Each successive system becomes evermore expensive with the cost borne by the sponsoring organization, eventhough the benefit is corporate wide.andP;  The more the already-existing systemsneed to be integrated with the current system, the higher the cost of thecurrent system.andP;  Therefore, it must be concluded that integration at thisprice is undesirable and that the old model of system development does notserve the construction of large-scale integrated systems sharing common data.andM;The result is that the user community feels that its requirements, which areoften very straightforward, require an inordinate amount of time to befulfilled.andP;  When the system is delivered, many requirements and requests arenot implemented or do not perform as specified, and the cost is substantiallyhigher than initially estimated.andP;  Such systems are often delivered late aswell.andP;  The data processing professionals have good and sound technicalreasons for the late delivery and inadequate performance of the systems.andO;However, these technical reasons further alienate the end users from the dataprocessing professionals because end users are often not well versed intechnical matters and do not identify with these technical issues.andM;For these and many other reasons,end users have embarked on creating theirown solutions.andP;  Usually, they purchase a microcomputer or minicomputer inorder to gain control over their own information environment.andP;  They feel thatthis step will allow them to have systems that meet their requirements.andP;  Thetime required to implement the system is under their control, and they needno longer beg and plead with others who appear to be indifferent to theirproblems.andM;As much as these users' actions may satisfy the requirements, when viewedfrom the enterprise perspective, other problems arise.andP;  Instead of sharingdata as a corporate resource, data are being managed as organizationalproperty by narrow groups of users.andP;  Rather than sharing a single informationsource from which consistent decisions can be made, we find that manyinformation sources leave management to make decisions based on conflicting,duplicate, and contradictory data.andP;  The problem created by the dispersal ofinformation has been made worse by the fact that the applications reside ondifferent hardware.andP;  Standardization of terms an ddefinitionof data isnonexistent, and the processing of the same fact multiple times is widespreadand results in inefficiency, duplication, and poor decision making.andM;To solve these problems, a development approach must allow for the creationof large, integrated enterprise information systems at much higherproductivity levels than heretofore realized.andP;  The approach must also takeinto account the requirements of the enterprise to manage data as a resourcein a standardized, integrated, and consistent way.andP;  It must also involve fullparticipation and responsibility by the eventual owners of the system.andP;  Thisaproach must make it possible for the designers to create overallenterprise-wide information systems as a well-functioning, integratedarchitecture.andP;  This requires that the method employ well-recognized designand architectural principles used for complex system building.andP;  Furthermore,the system users must be actively involved in the architectural phase andexercise overall control over each part of the integrated information system.andO;Additionally, the users should be able to express their system specificationsand business rules in their own language and test these specifications forvalidity and accuracy.andP;  And finally, the whole approach must be completelysupported by software in order to gain significant productivity improvements.andM;A new approachandM;A new approach to using information systems based on enterprise modeling anda program product called DevelopMate[TM], is illustrated in Figure 2.andP;  Thisapproach capitalizes on the business professional's desire to be involved andto take responsibility for his or her system.andP;  The user is an extension ofthe total available enterprise information system development resource.andP;  Theuser is supported in this by a set of software support functions that storeand share their information in a facility such as the IBM RepositoryManager[TM](RM).andP;  These support functions, as embodied in DevelopMate, allowthe professional to communicate in terms of the business processes, dataviews (such as invoices and bills of material), organizational units (such asdepartments or individuals), events, locations, and so forth.andP;  thisinformation is defined as enterprise rules and takes the form of models,constraints, report or panel images, and enterprise policy statements.andM;At the start, enterprise experts define an enterprise-wide information systemarchitecture.andP;  Following that, parallel subsystem architecture andspecification begins.andP;  This step is taken with the secure knowledge thatexpensive rework caused by integration problems can be avoided, because thenew approach, as part of its philosophy, takes integration into account atthe start.andM;When the architecture has been captured and stored by RM, th enterpriseexpert can test his or her specifications interactively using DevelopMate.andO;This provides the ability to determine how the system will apply thespecifications at execution time.andP;  The system will let the user correctambiguous statements immediately, without propagating them down to laterstages of development.andP;  The effect of the immediate and interactive testingcapability is to save expensive rework during later definitionphases.andP;  Oncethis concurrent specification checkout is completed and the tested set ofspecifications performs as desired, the user's business subsystem is ready tobe generated into target production environments, such as IMS/VS and CICS/VS,using a generator that can understand and translate the specifications intomore conventional data processing terms.andP;  The information may also be used tosupport traditional program coding.andM;With all of this concurrent architecture and development activity supportedby various software facilities, all the architecture information isintegrated and shared via a common, active knowledge base stored by RM.andO;RM-managed data contain all the information system specifications in terms ofmodels, rules, and formmats.andP;  This concept is explained in more detail below.andM;DevelopMateandM;DevelopMate allows for the definition, decomposition, and refinement of apreviously created information system architectureandgt; it is not an architecturedevelopment system.andP;  Rather, it stores the results of the architecture studyphase and provides for additional decomposition and refinement of thearchitecture.andP;  DevelopMate also allows the user to define enterpriseinformation policies or rules in a nonprocedural manner.andP;  It also allows forthe definition of the enterprise information model in process andentity-relationship form, report formats, panel layouts, and other definingfeatures.andP;  These definitions and refinements can be checked and testedinteractively for consistency using the facilities provided and reported inprinted form through predefined reports or by using Query Management Facility(QMF[TM]).andP;  If desired results are not achieved, the user is free to makemodifications to the specifiations and test them again.andP;  All the informationis stored by RM for later use for concurrent sharing with otherinformation-system facilities.andM;In the following sections, the various phases presented in Figure 2 showingthe new approach are discussed.andP;  It is shown how DevelopMate may supportthese phases.andM;Enterprise analysisandM;Figure 2 shows the steps involved in the new approach.andP;  The first step is anenterprise analysis phase which develops the high-level enterpriseinformation system architecture.andP;  This step can be automated with the use ofthe Information System Model and Architecture Generator (ISMOD 5785-FBA), aprogram offering available from IBM.andP;  ISMOD can support various study methodsthat deal with information system architecture.andP;  [2]andM;The important point is that the enterprise analysis provides an overallblueprint of the information system architecture based on common sharing ofdata.andP;  Once this common blueprint has been established, further top-downdecomposition and architecture refinement can occur concurrently in each oneof the subsystems identified at the higher level.andP;  The result of thisactivity is an enterprise process model.andP;  When the process model iscompleted, it may be mass imported into the DevelopMate system, or it can beentered via a set of DevelopMate panel dialogs if ISMOD was not used.andM;Major subsystem analysisandM;Through the creation of the models defined in this phase, the enterprise candefine the information system processes and their relationship to anunderlying AD information model of the enterprise.andP;  The expert can alsodefine how the data and processes are distributed within the enterprise.andO;This enterprise data model is the vehicle by which system integration isachieved.andP;  A comprehensive process and data architecture are created from avery high level down to the lowest functional primitive, called a minispec.andO;The minispec has some unique information defined for it in order to make it amachine-executable function.andP;  We now expand upon this summary of theapproach, starting with the process model.andP;  Note, however, the user maydefine model types to the DevelopMate system in any order.andM;Enterprise process model definition.andP;  Figure 3 shows a sample process modelthat may be defined to DevelopMate.andP;  It shows the processes performed by theenterprise in network form.andP;  Decomposition can be performed on each processinto lower-level network until the lowest-level process (minispec) has beenreached.andP;  At the lowest level, all the minispecs may have more than oneinput, but they must have only one output.andP;  The minispec becomes the unit ofimplementation either as a manual task description or as a programmingspecification for mechanized implementation.andM;The inputs to and outputs from the process are referred to as data views.andO;Data views are documents that are needed to perform the process in theenterprise information system.andP;  A view is defined as a group of interrelateddata arranged to allow the user to derive useful information.andP;  An invoice,check stub, bill of material, telephone message form, and computer screenformat are examples of data views.andM;Events may also be defined to identify the conditions under which certainprocesses are performed.andP;  Thus, events act as triggering mechanisms thatcause the process to execute when the event is satisfied.andP;  An event can be acertain time of day, end of the month, the completion of a process, orcreation of a data view.andP;  In the initial implementation of DevelopMate,events are defined for documentation purposes only.andP;  Event action isperformed based on trigger policies discussed later in this paper.andM;Enterprise data model definition.andP;  The process model is not enough tocompletely describe the enterprise information system.andP;  Additionally, a datamodel that supports the enterprise information processes is required.andO;Through the DevelopMate data model definition dialog, the enterpsie expertcan express how enterprise data relates.andM;Referring to the example in Figure 4, it can be seen that a customer buys apart through a salesperson who works at a warehouse which stores the part.andO;This data model not only conveys information to the user, but it also allowsthe enterprise expert to define knowledge of complex interrelationships in asimple, understandable form to the system.andP;  Entities and relationships aredescribed by attributes that tell us more about the particular entity orrelationship type.andP;  This type of model is known as an entityrelationship (ER)model and was first advocated as a useful tool for data definition by PeterChen.andP;  [3]  It is created through the common efforts of enterprise expertsand data administrators.andM;The enterprise data model connects to the process model via the data view.andO;The entity attributes that are specified to be displayed on the data viewbecome the connecting thread.andP;  An invoice, for example, displays variousentity attributes, such as customer number, customer name, part number, partname, part price, and salesperson number.andP;  Thus, each data view is supportedby information described in the data model.andP;  What is most important in thisdata representation is that business knowledge is imbedded in the model inthe form of relationships such as: buys, stores, works at, or through.andP;  Thus,an enterprise expert can express highly technical data interrelationships ina simple and friendly way.andM;The model shown in Figure 4 can be made more expressive by applyingassociation rules.andP;  For example, one might define the relationship type WORKSAT as M:1, e.e., many to one.andP;  This allows the user to define the rule that asalesperson may work at only one warehouse and that a warehouse may have manysalespeople.andP;  Other rules for control and dependency may also be defined.andM;Enterprise distribution model definition.andP;  In this step of the majorsubsystem analysis phase, the user may define which organizations perform thevarious enterprise processes, where the organizations are located, wherespecific processes are performed, and the data required at that location toperform the process.andP;  This architecture will be of great importance tocommunication-network and hardware/software planners who must provide thephysical environment in which the eventual information system is to perform.andM;DevelopMate provides the user with a set of dialogs that may be used toacquire such architecture information, but it provides no support fordistribution architecture algorithms.andP;  This is left to appropriatearchitecture facilities.andM;The minispec.andP;  The minispec is defined as the lowest level of decompositionin the process model.andP;  It is at this level that processing algorithmstransform input data into output data.andP;  These algorithms may be written as ajob description to be performed by a person or they may be programmed as atransaction for a computer system.andP;  Another possibility is that anapplication-development-oriented expert system may merge the specificationsand create a computer-executable function without programming.andM;In order for a process to be defined as a minispec, it must meet thefollowing conditions:andM;* Have a superior (parent) processandM;* Not have any subordinate (child) processesandM;* Have multiple inputs but only one outputandM;Another difference between a high-level process and a minispec process isthat the minispec process may also have additional specifications that can beused by a computer system to create an executable function.andP;  These additionalspecifications are:andM;* A data submodel that tells the system the subpart of the enterprise datamodel to be used by the minispec to create the desired output viewandM;* A format that defines the physical form of the output view when it ispresented to the userandM;* An output data view to be produced by this minispec process that providesthe list of entity attributes (data elements) that are to be shown or arerequired to compute values to be shown on the formatandM;* Any policies that pertain to the particular minispecandM;Enterprise policy specificationandM;DevelopMate allows the enterprise expert to define enterprise policies thatimplement his or her particular rules of operation.andP;  This is the step in thedevelopment approach that gives logical life to the process and data modelsdefined in the previous steps.andP;  (See Figure 3.)andP;  Policies are statements madeby the enterprise expert specifying the action to be performed when certainconditions occur during the execution of enterprise processes.andP;  Thesepolicies are divided into the following four main categories:andM;* IntegrityandM;* DerivationandM;* TriggerandM;* SecurityandM;Policies may be expressed as conditional or unconditional.andP;  A conditionalintegrity policy may be expressed as follows:andM;If the EMPLOYEE NUMBER is not in the range of 1000-5000, issue the message&quot;Employee number out of range.&quot;andM;An example of a derivation policy is the following:andM;If the employee is salaried, the EMPLOYEE GROSS PAY is EMPLOYEE YEARLY SALARYdivided by 12.andM;A unconditional derivation policy may be the following:andM;STATE TAX is GROSS PAY * 0.075.andM;A conditional trigger policy may look as follows:andM;If PART QUANTITY ON HAND is less than PART ORDER POINT, Execute the PURCHASEORDER WRITING minispec process, passing the PART NUMBER and the PART ECONOMICORDER QUANTITY on to the next step.andM;These policies can be globally defined for the entire enterprise and byspecific, local processes.andP;  Global policies are defined once, such as theintegrity policy just shown.andP;  The policies can be applied any time theemployee number attribute is referenced at execution time.andP;  Therefore, when achange in the policy is made--such as a range change from 1000-5000 to1000-6000--the enterprise expert can reference the policy and change it.andO;From that instance, all references by all minispecs across the entire systemwill reflect and correctly implement the new policy.andP;  A local policy is onethat is unique to a particular minispec process, and any change made to it isreflected only in the specific minispec.andP;  This allows the user to contain achange to a specific minispec process without affecting the entire system.andM;Note that it is possible with this concept to store enterprise policies in anonredundant manner, making future maintenance much easier than whe logic isduplicated in many application programs.andM;Specification validationandM;In DevelopMate, the above specifications--including the policies--are madeindependent of one another.andP;  This means that no procedural definition ismade, leaving the enterprise expert free to concentrate on the specificdefinition rather than being concerned with detail logic specification.andO;However, DevelopMate is capable of combining the various definitions in sucha way that processing is performed in the proper order to yield the requiredresults.andP;  The enterprise expert can call for an execution of definitions atany time, and the system will produce the result.andP;  Any specification errorscan be corrected immediately and then retried.andM;The significant point is that after the specifications have been defined tothe system, tested, and found to work as desired, they can be moved intoproduction by causing a generator facility to create programs for specificproduction environments.andP;  It may further be noted that the system can onlyexecute properly when the expert's knowledge has been defined to the system.andO;This means that without documenting the required information through thesystem model and rules, there is no functioning system.andP;  Documentationbecomes a necessity to system operation, yet it is a by-product of thedevelopment environment and not a separate step which, in the traditionaldevelopment process, is usually not performed.andM;Operational test and evaluationandM;DevelopMate implements an operational test evaluation phase of the newdevelopment life cycle by allowing the actual every-day users of theprocesses to test and evaluate the ease of use of the system components.andP;  Ifa change is required, the enterprise expert can immediately change thespecification in the enterprise model definitions, and the new result can betested.andP;  Furthermore, if the specifications and policies are global, allother usages in the system will be immediately corrected.andM;After validation by the enterprise expert, who is also the responsible user,the operational test and evaluation phase is almost nonexistent.andP;  The reasonfor this is that the user has worked closely with the system from thebeginning and therefore has made the specifications to meet particularrequirements.andM;Production and maintenanceandM;DevelopMate does not affect applications in the main production environmentsof IMS/VS or CICS/VS.andP;  Instead, it stores the enterprise architecture andassociated rules in the RM-supplied entity-relationship model, so that afollow-on generator may use it to create a production system for the requiredtarget environment.andM;In DevelopMate, change to the architecture and rules is easily accommodated.andO;If business policies change or the process model needs to change, the changecan be applied by the responsible enterprise expert to the DevelopMateinformation stored by RM.andP;  The significant advantage here is that the usremust go back to the model and policy specification to affect the change.andO;This means that the documentation step is an integral part of the changeprocedure and cannot be bypassed, as is so often the case today.andM;IndependenceandM;Note from the preceding description of the approach and from its underlyingcomputerization, that all data about the enterprise information system isstored by RM.andP;  It is, therefore, extremely important that RM be capable ofoperating in various hardware and software environments.andP;  This level ofindependence is provided, because RM is a Systems ApplicationArchitecture[TM] (SAA[TM]} component.andM;Some considerations for automationandM;The ER model.andP;  The entity-relationship (ER) model is a device that is widelyused by analysts today, because it allows the analyst to describe a body ofknowlege in picture form.andP;  An example ER model is shown in Figure 4.andP;  Thefollowing are definitions of some of the terms used in connection with ERmodel.andM;An entity is a person, place, thing, or idea about which the user wants tocollect and maintain data in order to manage a particular resource.andP;  Anentity must be uniquely indentifiable and may be collected into entity sets.andO;In a model, the description of an entity set is called an entity type.andO;Examples of entities may be a customer, general ledger account, student,automobile, etc.andP;  Notice that each instance of an entity type (the entity)must be uniquely identified by one or a combination of its attributes.andM;Entity attributes are characteristics or properties of a particular entitytype.andP;  For example, the entity type CUSTOMER may have the attributes CUSTOMERNUMBER (identifier), CUSTOMER NAME, CUSTOMER STREET ADDRESS, CUSTOMER CURRENTBALANCE, etc.andM;A relationship connects two entities or, if desired, an entity and anotherrelationship.andP;  For example, the entity type STOCKHOLDER owns the entity typeSTOCK CERTIFICATE.andP;  In this case, the verb OWNS is the relationship.andP;  As forthe entity, the relationship description in the model is called arelationship type.andP;  Its instances are the relationships between realentities.andP;  Relationships can define forward and inverse directions.andP;  Thus, wemay say that a stock certificate IS OWNED__BY a stockholder.andP;  Additionally,relationships may have certain rules.andP;  For example, a stockholder may ownMANY stock certificates, but a stock certificate is owned by only ONEstockholder.andM;With these explanations we can now see how easy it is for the enterpriseexpert to express knowledge in pictorial form using the ER model.andP;  In Figure5, Entity types are represented by rectangles, relationship types by lineswith arrowheads, and constraint rules with 1 (ONE) and m (MANY).andM;Let us use the following semantic description of a banking environment:andM;A customer deposits money into a checking account using a deposit slip.andP;  Thecustomer writes checks to withdraw money from the checking account.andM;If we use small capital letters for each of the uniquely identifiable entitytypes in the preceding paragraph, we obtain the follwing sentence:andM;The CUSTOMER Deposits money into a CHECKING ACCOUNT using a DEPOSIT SLIP.andO;The CUSTOMER writes CHECKS to withdraw money from the CHECKING ACCOUNT.andM;The words in small capital represent entity types with uniquely identifiableoccurences and are all nouns.andP;  for example, the entity type CUSTOMER hasunique occurrences of IBM, GE, ATandamp;T, etc.andP;  Thus any noun that represents auniquely distinguishable occurrence of its type--such as customer--is anentity type.andP;  If we capitalize each of the words that expresses arelationship between the nouns, we obtain the following:andM;A customer DEPOSITS money into a checking account using a deposit slip.andP;  Thecustomer WRITES checks and WITHDRAWS__FROM the checking account.andM;The example could be carried further to show that adjectives become theattributes of entity types and that adverbs become attributes of therelationship.andP;  For example:andM;A customer who has a CUSTOMER NAME, CUSTOMER ADDRESS, CUSTOMER NUMBER, anDCUSTOMER TELPHONE NUMBER deposits money into a checking account using adeposit slip.andP;  The entity type CUSTOMER then has the attributes name,address, number, and telephone number.andM;Additionally, it is possible to define constraints about the relationships.andO;To do this, expand our original paragraph and capitalize the constraints, asfollows:andM;A customer may deposit money into MANY checking accounts, using ONE depositslip for eah deposit.andP;  The customer may write ONE chek to withdraw money fromONE checking account, but may have MANY withdrawals per account.andP;  Checkingaccounts may have one ONE customer.andP;  (Partnerships and joint accounts aretreated as one customer for this example.)andM;The advantage of this type of representation can be seen immediately.andP;  In thefirst place, it is easy and straightforward for a user who is not a dataprocessing professional to define complex information in very simple termsand pictures.andP;  Also, a model of this type can be analyzed by a program inorder to make execution decisions.andP;  When policies are added to the entity andrelationship type attributes, the power of the ER model in logic processingbecomes apparent.andM;Therefore, DevelopMate provides this ability to allow easy definition of theenterprise data environment in EF form.andP;  Our experience has shown that the ERfacilities, as provided by RM, serve this purpose in a powerful way.andP;  Thisallows the enterprise expert to communicate with the system at the user'sconceptual level while at the same time being able to physically store andretrieve data from underlying data management servers.andM;Repository Manager.andP;  The ER facility is used to allow the expert to defineevery aspect of the enterprise information system to one common sharedcollection of information.andP;  The definition contains all data necessary todescribe the desired information processing functions.andP;  RM is used tocompletely integrate every aspect of the enterprise model, includingpolicies, screen and report formats, and enterprise analysis outputs (such asprocess and data models).andP;  Thus, the RM-managed data become the integrationvehicle for the functional components supporting the new life cycle, thespecification environment, and the verification facility.andM;With this facility, changes can be made simply by changing the information inRM's data store.andP;  Because RM-managed data are actively consulted atspecification test time, the change can be implemented easily and swiftlythroughout the enterprise information system.andM;Fill-in-the-blan panels are provided to allow the enterprise expert to defineknowledge to the system.andP;  The panels use words familiar to the expert.andP;  Thismakes it unnecessary to learn a dat a processing language that is understoodonly by the computer.andM;Consistency checking.andP;  DevelopMate provides extensive consistency checking toensure that all specifications required to execute a set of minispecs aremet.andP;  This means that extensive checking of the process and data models isdone under user control at various levels of detail.andP;  Furthermore,DevelopMate automatically invokes consistency checking at various points inthe specifications phase.andM;In the facility under discussion, checking of the process model is done atvarious process decomposition levels.andP;  The system ensures that processes areproperly connected vertically through parent-child relationships and thathorizontal connections exist through data views.andP;  Additionally, data viewsare checked for existing and proper definition.andM;The date model is similarly interrogated to ensure that views have formatsdefined for themandgt; that entity types have attributesandgt; that the attributesdefined on a view are present in the entity type specifiedandgt; and that therequired relationship types exist.andP;  Lists of error messages are created toallow the enterprise expert to provide additional information about theenvironment and make corrections.andM;Benefits.andP;  Based on preliminary testing, we have found that the approachpresented here, with the supporting software, provides significant benefitsover the traditional process of information system development.andP;  Thedevelopment team (consisting of the enterprise expert, with support from ananalyst and database administrator, both of whom are knowledgeable about thesytem) can define and prototype high-quality integrated data systems in avery short time.andM;The enterprise requirements analysis phase is a highly stimulating andcreative experience for those involved.andP;  The enterprise expert developsrequirements and has a simple facility in which to store them and from whichthey may be retrieved at a later time.andP;  Computerized support (using theInformation System Model and Architecture Generator [ISMOD] program offering[4]) provided at this point allows the team to tackle very large and complexinformation systems with great efficiency.andP;  Decisions critical to thedevelopment sequence are easily made with architecture and flow matrices,user satisfaction ratings, and simulation.andM;As the requirements and architecture are developed to greater detail, thesystem specifications emerge.andP;  They are stored by RM and are available to thedesigner or expert for review and modification.andP;  The usual lengthy andcumbersome system specification document takes on less significance.andP;  Becausethe enterprise expert and the analyst have made the definitions using RM andhave tested them via the interactive validation capability, the need for aformal sign-off procedure disappears.andP;  Adjustments and modifications are partof the normal process and are therefore an ongoing activity.andM;Interactive validation allows the user to check the specificationsimmediately to determine the result at execution time.andP;  This means that whenspecifications have been executed and pronouced accurate, the particularfunction or process is ready to be generated into production.andP;  Therefore,except for very rate and complex requirements, programmer involment isminimized.andM;Application execution is not possible unless the knowledge about it has beendefined to the system.andP;  Thus documentation is a requirement for systemoperation and not an additional task.andP;  If the documentation is not precise,the resulting executable function may be in error.andM;Integration of the various I/S subsystems in the enterprise is accomplishedin the architecture phase well ahead of any detail specifications.andP;  Thedefinition of the data model becomes the integration mechanism for the entireenterprise information system.andP;  Using the power of ER models and thecapability of relational database facilities, changes and adjustments can bemade easily and at low cost.andP;  Thus the high cost of integration usingtraditional methods (because of rework and redesign) are reduced oreliminated.andM;Figure 6 indicates the enterprise-wide resources invested at the beginning ofan architecture and requirements analysis cycle.andP;  Even though this may taketime and the expenditure of resource, the effort is very cost effective.andP;  Thereason is th at individual subsystems or subcomponents of the architecturecan be implemented at a much more reduced and consistent cost compared to thetraditional practice described earlier in this paper.andM;Maintenance is done by the responsible enterprise organization and can beaccomplished in a matter of minutes or hours rather than days and weeks.andO;Because specifications are stores nonredundantly, the change can be appliedat a precise point and shared throughout the system.andM;Productivity.andP;  The productivity gains are orders of magnitude greater thanthe traditional methods, because specifications can be directly validated anddo not need to be converted to code before testing can begin.andP;  The programmeror analyst no longer is the bottleneck.andP;  Instead, that person can be trainedto be the consultant to the enterprise expert and assist in making thespecifications to the system.andP;  If very difficult problems arise which mayneed a traditional programming solution, the skill of the programmer is stillavailable to solve the problem.andP;  This mode of operation, however, is now anexception rather than the rule.andM;The extension of the development process to the responsible end-usercommunity allows a whole new personnel resource to participate in thisprocess, while at the same time control over the resultant functions ismaintained by the user.andP;  Therefore, a whole new group of people can beinvolved in solving the application backlog problem of today, within theconfines of an overall enterprise architecture.andM;SummaryandM;The purpose of DevelopMate is to demonstrate and test the feasibility of anautomated development method that breaks the barriers to productivity in thetraditional development approach.andP;  DevelopMate allows the user to developlarge-scale integrated, shared-data information systems.andP;  Through the properblending of various techniques and leading-edge software, such concepts asentity-relationship (ER) data modeling, logic creation through non proceduraldefinitions, and various design concepts, we have found it possible to createa development environment in which the eventual user participates frombeginning to end, controls the quality of the output, and prepares theapplication for use.andP;  Yet the enterprise-wide requirements of shared data,smooth integration of enterprise processing systems, and control ofenterprise decision making are incorporated at productivity levels heretoforeseldom attainable.andM;AcknowledgmentsandM;I would like to express my gratitude to vivian Anderson and George Brantzegfor the great assistance they have provided in proving that this concept isviable, usable, and commercially feasible.andP;  I also want to thank Jim Sagawaand Tom Duncanson of the IBM Santa Teresa Laboratory for their excellent workin ER implementation research.andP;  Their contributions significantly reduced thetime required for our efforts.andP;  Finally, I thank Robert Tabory for hisintellectual, advanced technological, and moral support.andM;DevelopMate, Repository Manager, QMF, Systems Application Architecture, andSAA are trademarks of International Business Machines Corporation.andM;Cited references and noteandM;[1.] The DevelopMate program number is 5688-36 and the manual number isGC26-4641-0, both of which nmay be obtained through IBM branch offices.andM;[2.] K. P. Hein, &quot;Information System Model and Architecture Generator,&quot; IBMSystems Journal 24, Nos.andP;  3/4 (1985).andM;[3.] P. P. Chen, Entity-Relationship Approachn to Systems Analysis andDesign, University of California at Los Angeles, Los Angeles, CA (December1979).andM;[4.] M. Veys, Information System Model and Architecture Genrator--SystemGuide, Program Offering Manual, LY20-0975, published by IBM Corporation(December 1984)andgt; available through IBM branch offices.andM;[5.] K. P. Hein and M. Veys, Information Systems Model and ArchitectureGenerator--Study Guide, Program Offering Manual, SH20-6651, published by IBMCorporration (December 1984)andgt; available through IBM branch offices.andM;General ReferencesandM;R.andP;  Ambrosetti, T. A. Ciriani, and R. Pennacchi, &quot;An Application Analyzer,&quot;IBM Systems Journal 23, No.andP;  4, 336-350 (1984).andM;Arthur Young Information Technology Group, The Arthur Young Practical Guideto Information Engineering, John Wiley and Sons, Inc. (1987).andM;A.andP;  Blokdijk and P. Blokdijk, Planning Design of Information Systems,Academic Press, Inc., New York (1987).andM;Business Systems Planning--Information Systems Planning Guide, ApplictionManual, GE20-0527.andM;C.andP;  Gane and T. Sarson, Structured Systems Analysis: Tools and Techniques,Prentice-Hall, Inc., Englewood Cliffs, NJ (1979).andM;W.H.andP;  Inmon, Information Engineering for the Practitioner, Yourdon PressComputing Series, Prentice-Hall, Inc., Englewood Cliffs, NJ (1988).andM;J.andP;  Martin, Application Development without Programmers, Prentice Hall, Inc.,andO;Englewood Cliffs, NJ, 1982.andM;J.andP;  Martin and J. Leben, Strategic Information Planning Methodologies (SecondEdition), Prentice-Hall, Inc., Englwood Cliffs, NJ (1989).andM;R.andP;  L. Nolan, &quot;Managing the Crisis in Data Processing,&quot; Harvard BusinessReview 57, No.andP;  2, 115-126 (March-April 1979).andM;R.L.andP;  Nolan, Restructuring the Data Processing Organization for Data ResourceManagement, Information Processing 77, North-Holland Publishing Co.,andO;Amsterdam, The Netherlands (1977), pp.andP;  261-265.andM;M.andP;  M. Parker, &quot;Enterprise Information Analysis: Cost-Benefit Analysis andthe Data-Managed System,&quot; IBM Systems Journal 21, No.andP;  1, 108-123 (1982).andM;M.andP;  Vetter, &quot;Aufbau Betrieblicher Informationssysteme,&quot; Leitfaeden derAngewandten Informatik, B. G. Teubner (Editor), Stuttgart, West Germany.andM;M.andP;  Vetter, Database Design Methodology, Prentice-Hall International,Englewood Cliffs, NJ (1981).andM;M.andP;  M. Veys, &quot;ISS Pour une Logique de la Productivite,&quot; Information, IBMBelgium 90, Brussels (1979), p. 2.andM;J.andP;  A. Zachman, &quot;Business System Planning and Business Information ControlStudy: A Comparison,&quot; IBM Systems Journal 21, No.andP;  1, 31-53 (1982).andM;Zanthe Information Inc., &quot;ZIM EAR Data Base Management System,&quot; Ottawa,Canada.andM;K.andP;  Peter Hein  IBM General Products Division, Santa Teresa Laboratory, P.O.andO;Box 49023, San Jose, California 95161-9023.andP;  Mr. Hein is a senior programmerwith many years of experience in business systems planning, top-down systemarchitecture, and large-scale system integration.andP;  He has lecturedextensively at conferences and seminars on these subjects in the U.S.andP;  andabroad.andP;  At present, he leads an advanced technology project which deals withthe automation of a complete methodology from the Strategic InformationSystem Plan to application creation with the use of professionals who are nottrained in data processing.andP;  As an advanced research project in the IBMbranch office in Salt Lake City, Utah, Mr. Hein did the basic work that ledto DevelopMate.andP;  In his present position in AD/Cycle external support at theIBM Santa Teresa Laboratory, he is the architect of DevelopMate.andP;  Mr. Heingraduated from the University of Utah with a B.S.andP;  and an M.B.A.andP;  degree.andP;  Heis also a graduate of the IBM System Research Institute, the U.S.andP;  ArmyCommand and General Staff College, and the U.S.andP;  Army War College.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-530-260  </DOCNO><DOCID>07 530 260.andM;</DOCID><JOURNAL>Microprocessor Report  August 1989 v3 n8 p5(1)* Full Text COPYRIGHT MicroDesign Resources Inc. 1989.andM;</JOURNAL><TITLE>MIPS acknowledges three minor bugs in R3000. (MIPS ComputerSystems; defects)andM;</TITLE><DESCRIPT>Company:   MIPS Computer Systems Inc. (products).andO;Product:   MIPS Computer Systems R3000 (Microprocessor) (defects).andO;Topic:     DefectsMicroprogrammingBusesCache Memory.andM;</DESCRIPT><TEXT>The R3000 is the second-generation processor from MIPS Computer Systems,following their earlier R2000.andP;  Revision 2.0 of the R3000 chip is currentlybeing shipped by all three original semiconductor partners (PerformanceSemiconductor, IDT, and LSI Logic).andP;  MIPS acknowledges three bugs in the cuffent silicon, none of which (according to MIPS) are serious problems for mostusers.andM;1.andP;  If the processor is running in mapped space, data memory reads that areterminated by a bus error may modify the destination of the instruction.andM;Implications: When a bus error occurs during a load instruction, the contentsof the destination register may be written with indeterminate data.andP;  Buserrors should be rare events, and if the operating system aborts the taskthat caused the error, then the contents of the destination register areirrelevant.andM;Some systems are designed to retry bus cycles in case of a bus error.andP;  Thereis no problem in this case either, except for load instructions that use thesame register for address and data.andP;  For such instructions, the address islost when the bus error occurs, making a retry impossible.andP;  Thus, if in asystem that retries on a bus error, an instruction uses the same register forthe source address and destination data, the system may fail if a bus erroroccurs while this instruction is executing.andM;Workarounds: The simplest solution is simply to abort on all bus errors.andP;  Ifthis is unacceptable, then more complex software workarounds are possible.andO;If source code is available, the most comprehensive solution is to recompilewith a code generator that never produces the offending type of instruction.andO;2.andP;  The &quot;isolate ache&quot; mode will not prevent the assertion of MemWr* if theWrBusy* signal is asserted during a store instruction.andM;Implications: The &quot;isolate cache&quot; mode is a special mode of operation usedmainly for diagnostics and for cache flushing by the operating system.andP;  Inthis mode, writes from the processor affect only the cache, and are notwritten through to main memory.andP;  However, if the WrBusy* signal is assertedwhile a store instruction (which is supposed to affect only the cache)isexecuting, then the processor will assert MemWr*, causing the data to bewritten to main memory.andM;Workarounds: Since this mode is not used by application programs, onlyoperating system code is affected, and is easily avoided with a simplesoftware workaround.andP;  Performance impact is claimed to be negligible.andM;3.andP;  When in the StorePartial mode, data parity driven to the system during awrite-buffer-stall fixup cycle of a partial-word store is incorrect.andM;Implications: The R3000 generates and checks parity for cache accesses.andP;  Theparity outputs from the processor can also be used for main memory writes.andO;However, under certain conditions, when using the R3000's StorePartial mode,the parity provided to main memory can be incorrect.andM;Workarounds: In many systems, this is not a problem because the main memorysystem has its own parity or ECC circuits, and does not use the parity fromthe processor.andP;  If a system does use parity from the processor for mainmemory, then StorePartial mode must be disabled.andP;  This is easy to do, but hasa performance impact that varies depending on the application.andO;</TEXT></DOC>
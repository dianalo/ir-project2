<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>WSJ900511-0097</DOCNO><DOCID>900511-0097.</DOCID><HL>   Painful Birth:   Creating New Software   Was Agonizing Task   For Mitch Kapor Firm   ---   Despite Expert's Experience,   Job Repeatedly Overran   Time and Cost Forecasts   ---   A Line: (&quot;%3.0f %6.1f/n&quot;,...   ----   By Paul B. Carroll   Staff Reporter of The Wall Street Journal</HL><DATE>05/11/90</DATE><SO>WALL STREET JOURNAL (J), PAGE A1</SO><IN>SOFTWARE (SOF)CORPORATE PROFILE (PRO)</IN><LP>   CAMBRIDGE, Mass. -- The business of creating new computersoftware -- the programs that make computers work -- is oneof the most complex, painstaking, even exasperating jobsaround. It is as if someone is writing &quot;War and Peace&quot; incode, puts one letter out of place and turns the whole bookinto gibberish.   So difficult is the process that it can baffle even suchindustry stars as Mitch Kapor, the founder of LotusDevelopment Corp., and Peter Miller, a well-known veteran. InNovember 1987, the two men formed a software company with theannounced intention of making personal computers much easierto use.</LP><TEXT>   But the path to simplicity proved tortuous, and not untilearly last month did they finally turn over to theirmanufacturing plant their first product, a single floppydisk. The software was late and far over budget; in fact, italmost didn't make it out the door. And it bore littleresemblance to their original plans.   Besides the inherent complexity of the work, there areother problems. Most software-development planning stinks: Ajoke in the industry is that programmers spend 90% of theirtime on the first 80% of a project and 90% of their time onthe final 20%. And most design stinks, too: Programmerseither don't understand their customers well enough or loadup products with features that please themselves but perplexeveryone else.   Meanwhile, computer-using companies trying to become moreefficient have a problem: They have ample computer hardwarebut lack adequate software. And they won't get it soon.   The difficulties faced by Messrs. Kapor and Miller andtheir 23 employees at the fledgling company, ON TechnologyInc., go a long way toward explaining the hopes and fearsthat drive the $8 billion-a-year software industry. The39-year-old Mr. Kapor agreed to give this newspaper an insidelook as their initial project unfolded because he believesthat software design must be improved and the developmentprocess better understood.   The story begins in the summer of 1987. Mr. Kapor hadrecently wound down his dealings with Lotus, where hedeveloped the 1-2-3 spreadsheet that, in selling more thanfive million copies since 1983, made Lotus into one of theworld's software giants and powered the wholepersonal-computer industry into liftoff. Mr. Kapor, who leftLotus because it was getting too big, had taken a floor ofoffice space in a professional building but had no projects.   All he had was his horror at the difficulty of usingcomputers. &quot;Not a day goes by that I don't want to throw mycomputer out the window,&quot; he said.   Mr. Kapor chatted with Mr. Miller, who used to work atLotus, and found that he had some ideas but no office space.They got together. They shared an interest in a new area ofsoftware, object-oriented programming. And they worried thatalthough their secretary would know what to do if they wantedto send a letter to Joe, their word-processing softwarewouldn't know who Joe was, how to send him a letter, howformally to address it.   The two men decided to produce a new layer of softwarethat would let developers build such real-world knowledgeinto their applications. With that idea and Mr. Kapor's name,ON quickly lured some high-profile programmers and built upto 32 people. Mr. Kapor drew on his considerable wealth tofinance the project and attracted investment from twoventure-capital firms that made fortunes on Lotus.   The place resembled a think tank, with people waving magicmarkers while arguing around whiteboards or occasionallywriting papers on software theory. There was a plasticdinosaur in the lobby, carrying a sign saying, &quot;Welcome,Insurance Salesmen, Investment Advisers, MarketingConsultants, Industrial Spies.&quot; A couple of pingpong tableswere in the back.   But the big hardware and software companies didn't see ONas benign: They worried that new, popular software would givethe newcomer too much leverage. Some indicated that theywould try to quash the project by promising to deliversimilar capability themselves. Mr. Kapor found that, in anycase, he was years away from having a product and was runningthrough $300,000 a month. So, in December 1988, he says, &quot;wetook the plan out and we shot it. We got it up at six in themorning, blindfolded it and shot it.&quot;   The company fell into chaos for three months. Employeesstarted arriving late and leaving early. Some drifted away astheir work disappeared. Others were asked to leave. Mr. Kaporwent to the venture capitalists for more money. Wags startedcalling the company OFF Technology.   Even though the company shrank 50%, three projects tookshape. The first, called On Location, was handed over to twoyoung programmers in April 1989. This followed conventionalwisdom that, for good communication, software should bewritten by teams no larger than four people -- that ninewomen can't have one baby by being pregnant a month each.   The senior programmer was Roy Groth, now 27 years old, whospent his evenings and weekends playing trumpet in variousbands. The other was Rob Tsuk (pronounced Chook), a husky24-year-old. Also heavily involved was graphic designer PaulMoody, a 31-year-old car nut who kept a rearview mirror onhis Macintosh so he could watch what was going on outside hisoffice door. Mr. Miller, a 45-year-old who describes hisstyle as management by walking around, was to supervise.   The basic idea behind the product was that people canstore so much information on hard disks that the disks, likefile cabinets, can become so crammed with stuff that it ishard to remember what anything was called or where it is.Products that search for files are slow. So, Messrs. Kaporand Miller decided there's room for a product for theMacintosh such as On Location, which would keep an index ofwhat's where. The index would take up 1% to 2% of the harddisk but, they said, would find files 10 to 15 times fasterthan other products used by the four million Macintoshesoperating world-wide.   The basic approach was to build, try out and then fixrepeated prototypes, with each a bit closer to the finalproduct. That paid off when a mockup was shown to threeindustry gurus. One of them, Bobby Orbach, until recently asenior executive at 47th Street Computer, a New Yorkretailer, said the product must be able to find any word inany file, not just the file names as originally planned. Thatproved to be a crucial piece of advice.   Messrs. Groth and Tsuk started churning out the code,writing in a language with few verbs and awash inpunctuation, such as: printf(&quot;%3.0f %6.1f/n&quot;, fahr,celsius);. They appeared to be making progress toward ashipment date of early November. Mr. Kapor turned tomarketing and hired Conall Ryan, a 32-year-old who onceworked for him at Lotus.   Mr. Moody started what the team called the product'schoreography, figuring out how the user would use the productand anticipating all the errors he might make. It's adaunting task. Mr. Moody went through more than 200 versionsof how the program should look on a monitor.   The office became intense, with programmers on all threeprojects sometimes working in bursts and then falling asleepin their offices, sometimes working well into the night athome. Spirits were high; the pingpong games turned fierce.Mr. Ryan instituted a Friday-afternoon party, whose start wassignaled by blasting music over the intercom and then by thesound of beer glug-glugging into a glass.   By early September, Mr. Miller said the product's featureswere essentially complete, and Mr. Kapor said he would besurprised if it wasn't finished by November. But theneverything started going wrong. Features that were supposedto take a day to produce took three or four.   The biggest, potentially fatal problem concerned theproduct's ability to index automatically. A tiny piece of thesoftware was supposed to be always active in the main memory,watching to see when a file is created or changed, so itcould call in more of the software when the computer is idleand update the index. But the Macintosh operating systemtries to kill off pieces of software like that. Thereappeared to be no solution.   The group pored over lengthy printouts, called dumps, thatcontain a sort of map of what's going on in the computer'smain memory. The dumps consist of groupings of letters andnumbers that, if they weren't arranged in eight-characterstrings, would look as though someone had rested his elbowson a keyboard for an hour. To the initiated, they reveal anartful way to hide from the operating system by hiding insideit. It is a dangerous game of hide and seek. Mr. Tsuk laterspent several days debugging this bit of software, and itkept crashing the system right up until the end.   In September, Mr. Ryan started what he called Real Dinnersfor Real People: He brought in half a dozen Macintosh users,fed them lasagna and got their reactions to the latestprototype of On Location. This proved to be a smart movebecause it gave the team extensive feedback much earlier thanusual. Most software is like a digital watch -- there arefeatures that nobody needs, and it's tough to figure outwhich does what to whom. But feedback helped Mr. Kapor keepbanging away at two truths in software design: Simplicity isparamount, and less is often more.   At the first Real Dinner, Mr. Groth recalls, the RealPeople looked at the installation procedure and said, &quot;Youmust be kidding.&quot; He laughed. &quot;So, we said, `You're right. Wewere kidding.'&quot; Several more tries, and dinners, were neededto get it right. In the process, the team discarded a plan tolet people keep their own indexes of all the files on all thehard disks on a network. It was hard to write the code andimpossible for users to figure it out.   But the schedule kept slipping further and further. As theshipment date headed toward the end of last year, Mr. Kaporworried that ON would miss the Christmas selling season.&quot;It's like a Russian doll,&quot; Mr. Ryan says. &quot;Every time wefinally crack open one problem, we find there's another oneinside.&quot;   The company also was running out of money again. So, Mr.Kapor had to go back to the venture capitalists, a move thatwould raise total financing to $9 million with no product toshow for it. Mr. Kapor made a get-tough speech at a weeklystaff meeting in September. &quot;I'm not going to bail this outif it fails,&quot; he said. &quot;We're playing with live ammo.&quot;   Two weeks later, Mr. Kapor got excited because he had anidea about future products that he described as being as goodan idea as the one that led him to fame with Lotus 1-2-3. Butit required cancellation of the two projects beyond OnLocation. Five more programmers left.   The lone survivor from one of the projects was 27-year-oldNancy Benovich. She was asked to write the software to doso-called fuzzy searches, so that if someone wants all thefiles that contain the word &quot;love,&quot; he will also get &quot;loves,&quot;&quot;loving&quot; and &quot;loved.&quot; Messrs. Kapor and Miller believed thather role would be discrete enough not to cause a problem. Itdid.   Ms. Benovich and Mr. Tsuk wound up writing codes thatoverlapped ever so slightly but bollixed up matters for days.In certain circumstances, their codes could clear a bit ofmemory twice, a nasty development that usually made thesystem crash -- and so as to leave the basic problem hard tolocate. However, debugging tools have improved so much that,once the type of problem was recognized, the team sent somesoftware over telephone wires, attached its sensors to OnLocation and quickly pinpointed the problem.   As it became clear that Christmas was out, shipments werepostponed until January, and the developers breathed a sighof relief. But even as most of the features were completed,development slowed as the bug-fixing process kicked intogear.   Bug-fixing is actually much simpler on the Macintosh thanon IBM-compatible PCs. There are only a few types ofMacintoshes, all made by Apple Computer Inc. In contrast,there are hundreds of IBM-compatible computers, all slightlydifferent and all able to trip up the software in mysteriousways. Nevertheless, thousands of Macintosh applications areon the market, and the team had to make sure that itssoftware doesn't foul up any of them.   Candace Clampitt, 33, who ran the bug-fixing process, hadthree people banging on machines all day and had tests runautomatically through the night. Mr. Tsuk sometimes spentwhole days trying to duplicate, and then resolve, problemsreported by people inside ON or by outside test users. At onepoint, he made a typing error and wiped out three computers,which had to be painstakingly resurrected. Mr. Groth put a&quot;Do Not Disturb&quot; sign on his door and forged ahead.   As the hours got longer, Mr. Groth got carried away whenwriting messages that alert the user to options or problems.Instead of the computer screen showing a box that read&quot;Cancel&quot; when someone has the option of killing a file, hehad the box say, &quot;Make My Day.&quot; But, as Messrs. Groth andTsuk worked through the holidays, they seemed to be gettingclose. Shipment was set for mid-February.   Mr. Ryan, meanwhile, was winding up the marketing end. Thelist price had been set at $129.95, with the actual retailprice at $75 to $85. The hope had been that users could bepersuaded that On Location was in a different class thanother software and thus should cost more. But the RealDinners made it clear that wouldn't work. So, Mr. Ryan toldLillian Rosen to get below $8 the unit cost of duplicatingthe disks and putting them in the boxes. She succeeded: Eachunit would cost ON $7.47.   Mr. Kapor moved everyone into half the office space on thefloor and prepared to rent out the other half. When Ms.Benovich completed her task on On Location, she was toldthere was no more work for her and was asked to leave. &quot;It'sone of those tough business decisions you have to make,&quot; Mr.Miller said. ON was no longer a think tank.   When announcement day, Jan. 22, finally arrived, Mr. Kaporcharmed a group of about 30 reporters at a press conferencein the cafeteria. Afterward, as the programmers ran off tochange out of their suits and ties, a reflective Mr. Kaporexpressed some mixed feelings. &quot;Software planning, at itsbest, is a mess,&quot; he said. &quot;And this wasn't its best.&quot;   Everyone acknowledges being far too optimistic on timing.Mr. Kapor also says some problems could have been solved bytighter management, to keep Messrs. Groth and Tsuk fromspending too much time polishing their code and from fixingbugs before they knew that the solutions wouldn't create moreproblems later.   The prototyping, though helping with the design, may havehampered the scheduling. Jeff Gibbons, a 37-year-old seniorprogrammer, says it is relatively easy to know how long itwill take to add a feature but hard to know how long it willtake to turn a feature from bug-ridden code into a finishedversion.   Nevertheless, Mr. Kapor declares himself pleased with thedesign process. And early reviews support him. &quot;On Locationwinds up being a pretty incredible product from a designstandpoint,&quot; says Stewart Alsop, the editor of PC Letter, anindustry newsletter. The only complaints have been that thecompany didn't deliver on its initial vision and used a wholelot of brainpower to attack a narrow problem. &quot;It's as thoughWilliam Faulkner wrote a really nice cookbook,&quot; says RichardShaffer, the editor of Technologic Computer Letter.   The shipment date slipped to late February, but thatseemed a small problem. At a PC conference in late January,Mr. Kapor made a tough speech about the sorry state ofsoftware design and generated interest in forming a group tofigure out ways to attack the problem.   But Mr. Kapor had a nasty surprise awaiting him when hereturned. On Location was slipping again. This time, no oneeven pretended to know how far behind the product really was.The marketing people told Mr. Kapor that they couldn'toperate without a firm schedule and that they no longer hadany confidence in the development group's ability to provideone.   Mr. Kapor had some long, hard sessions with Mr. Miller,who stormed out once but then returned. Mr. Kapor decided tobecome his Siamese twin in managing the project. Theygathered the team together and produced an excruciatinglydetailed accounting of all the work still to be done. Theydecided they could finish in a bit more than a month, butonly by stopping work on the second project and devotingthree more programmers to On Location.   &quot;This is a mess,&quot; Mr. Kapor said. &quot;A month's delay isn'tthat bad, but it's sort of, `Do I really need this?`&quot;   Office tensions heated up again, but the process stayedremarkably close to the new schedule. The product -- the 30thversion circulated internally -- finally went tomanufacturing.   Even that wasn't the end of the turmoil. Two weeks later,Mr. Miller quit, and Messrs. Groth and Tsuk agreed to leave.Mr. Kapor says there was less here than meets the eye -- Mr.Miller may work on another project that Mr. Kapor would back,and Messrs. Groth and Tsuk were leaving because ofpersonality conflicts that developed during the final days.Still, the departures left the young company with stillanother set of challenges.   Mr. Kapor, reflective again, says, &quot;I view this ascharacter-building.&quot; The former transcendental-meditationteacher adds, &quot;I'm moving closer to spiritual enlightenment.I'm not 10,000 miles away. I'm 9,999 miles away.&quot;   He, and all the others, vow to do better with their nextproject. But there's another software axiom that usuallyproves true. Called Hofstadter's law, it's circular: It sayssoftware development always takes longer than you think, evenwhen you take into account Hofstadter's law.</TEXT></DOC>
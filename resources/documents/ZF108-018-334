<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-018-334  </DOCNO><DOCID>08 018 334.andM;</DOCID><JOURNAL>EXE  Dec 1989 v4 n7 p50(3)* Full Text COPYRIGHT Process Communications Ltd. (England) 1989.andM;</JOURNAL><TITLE>A software Robot. (Software Review) (utility program) (evaluation)</TITLE><AUTHOR>Milne, Don.andM;</AUTHOR><SUMMARY>The main purpose of Information Systems Ltd's 395-pounds-sterlingRobot is to reduce the number of keystrokes needed for repetitivetasks, and this job it does quite well.andP;  Robot has many othermicrocomputer automation tasks.andP;  In particular, Robot's usefulnessin the debugging and testing phases of software development areevaluated.andP;  Many specialized utilities debug software better.andO;Robot may be better at debugging hardware, but there are probablybetter programs for that chore too.andP;  Robot holds the most promiseas an automated quality assurance tool for checking a program'sfunctionality.andP;  Robot requires a microcomputer with 256Kbytes ofRAM running MS-DOS 2.0 or later.andM;</SUMMARY><DESCRIPT>Company:   Information Systems Ltd. (products).andO;Product:   Robot (Utility program).andO;Topic:     EvaluationUtility Programs.andM;</DESCRIPT><TEXT>A Software Robot Robot's main purpose is to make life easier for computingneophytes, by reducing the number of keystrokes required to performrepetitive tasks.andP;  Howeve, Information Systems Ltd, the vendor, points outthat automation of a PC can have many other uses (limited only by yourimagination), and the role I will be looking at in particular is thepotential for Robot as a tool to be used during the debugging and testingphase of software development.andP;  I suspect that few readers of .EXE Magazineconsider themselves beginners at the computing game, so the usefulness of theproduct is this latter role is the one which is likely to be of mostinterest.andM;Most experienced DOS users are familiar with automation through the use ofbatch files which cut down on the keystrokes required to run any application.andO;A batch file might change to a particular directory, rename or copy the oddfile, install a mouse driver and then run the correct program.andP;  At thatpoint, however, the automation is suspended until the application terminates,because DOS batch files control only the DOS command interpreter and notprograms spawned from there.andM;The Robot comman language is not so limited.andP;  Robot's comman interpreter is amemory resident program which sits in the background, feeding keystrokes to aforeground application such as the DOS shell or any other application,whenever the foregound asks the BIOS for a key (Robot also has an optionalfeature which allows keystrokes to be fed to an application which traps Int9h directly and reads the keyboard buffer).andP;  This is normally all that isrequired to control any package, provided it does not require a mouse.andM;If you have a simple repetitive task which you perform regularly, such asrunning a communications package to download all your messages from severalbulletin boards, then Robot can very likely turn this into a single-keystrokeoperation.andP;  Robot scripts can be designed to run from the DOS command line,they can be picked from a simple menu, or they can execute whenever aparticular hot key combination is detected.andP;  Scripts can also be designed towait for a certain event to occur, such as a programmed timeout or a certaintime of day, week or month, or when a particular message appears on thedisplay.andP;  In style, the Robot language is reminiscent of the script languagefor a communications package, and in fact this is one of the suggested usesfor it, to which the manual pays particular attention.andM;If that was all that Robot was used for, it would probably not merit coveragein a technical journal such as .EXE.andP;  However, because a Robot script canautomate the operation of any program, it should be possible to constructtest suites to exercise all the functions of any software that you develop.andO;When you compile a new version of the software, you can have Robot runthrough all of the program features, making sure that the display appearsexactly as it should, and that no new bugs have been introduced -- robot cando all of this unattended.andP;  I'll cover this in more depth later.andM;InstallationandM;Unsually for these days of monster applications, Robot comes on a single 360K disk, of which 218 K is unused.andP;  The first copy that I attempted to reviewwas copy protected, using the kind of protection scheme which allows you toinstall on the hard disk just once.andP;  I duly installed the program on my harddisk, and everything seemed to work find.andP;  However, when next day I tried touse the package, it refused to let me do anything--I could not run theprogram, uninstall or install it again.andP;  I called ISL and waited a couple ofdays for a replacement, only to have it do exactly the same thing again.andP;  Itso happens that I make regular use of a disk defragmentation utility calledSST, which is available in the public domain, and which I have found to bequite reliable on my equipment (you can download this program from the PCconference on CIX as well as other boards).andP;  I was reasonably certain thatthe Robot copy protection scheme, which I knew was creating a couple ofhidden files, was making assumptions either that the hidden files would notbe physically moved around on the disk, or that their directory entry wouldnot be moved, or both.andP;  Neither assumption is in my opinion a particularlyclever one to make, and it appeared that my sue of a isk defragmenter anddirectory sorter (SST performs both functions) was the cause of the upset.andP;  Idid not intend to stop using my precious tools because of a copy protectionscheme.andM;Happily, when I made these points to a friendly person at ISL I was told thatthere had been other problems with the copy protection scheme and that theywere about to drop it -- so I asked for, and received, a disk which was notcopy protected.andP;  To be fair to ISL, they are not the only people using thiskind of copy protection, and they were very prompt in sending me replacementdisks.andM;Provided you make sure that you receive the unprotected version, installationis very simple -- just create a directory and copy all the files into it.andO;Robot expects the home directory to be called C:\ROBOT, but you can overridethis default with an environment variable should you so wish.andP;  I was happywith the default, although I think it might have been smarter if this defaultwere simply \ROBOT.andM;I really do hope that ISL are now shipping the unprotected version tocustomers.andP;  No programmer in possession of the majority of his or her marbleswould allow themselves to become dependant on a piece of copy protectedsoftware.andP;  A programmer's machine is used to run untested software for thefirst time, when almost anything can happen (and does).andP;  The last thing sucha programmer needs is to have his copy protected debugging aid wiped out byan errant program, with no way to recover the situation short of spending allnight cracking the copy protection, or waiting several days for a replacementdisk.andM;ProgramsandM;The Robot package consists of a suite of programs which can be operated ontheir own, or from a more friendly menu-driven front end.andP;  FRONT, is wheremost newcomers to Robot will probably start.andP;  This program is colourful andreasonably friendly, but the multiply nested menus will probably becomequickly cumbersome as experience is gained.andP;  This is no problem, because theother programs in the suite can be invoked directly from the DOS commandline, and scripts can be created using your favourite editor, provided it canproduce plain ASCII files.andP;  FRONT is more than a menu system -- it includeswhat amounts to a syntax directed editor, and it also allows you toautomagically insert portions of display images and keyboard sequencescreated using the SNAPSHOT and REMEMBER utilities (see below).andM;The most commonly used programs in the suite will be COMPILE and ROBOT.andO;COMPILE takes an ASCII source file and converts it to a tokenised form.andP;  As abrief aside, I would quibble with the use of the word 'compile' for this,there is nearly a one for one correspondence between source words and objecttokens (notice how the word WHEN becomes the character 'W' and the wordsINJECT STRING become the token 'I'), so COMPILE no more compiles sourcesfiles than the BASICA interpreter does when it loads and tokenises an ASCIIformat BASIC program.andM;When COMPILE has finished its task, it writes out the final object form ofthe script as a file with a .ROB extension -- this is the file that ROBOT(the TSR) needs in order to execute your script.andP;  Robot takes as a commandline argument the name of a .ROB file as created with COMPILE.andP;  Robot thenbecomes resident in memory and executes the named command file.andP;  In the caseof the example shown in Figure 1, the script waits for two seconds and thenchanges directories and runs a program.andP;  This particular script is rathernaive in that it issues commands which can only be understood by the DOSshell without first checking what the PC is doing at the time -- this wouldcause a confusing mess if you happened (say) to be running your favouriteeditor at that moment, or even if you were in the middle of typing some otherDOS command.andP;  However, it is possible to insert all the appropriate checkswhich prevent such things from happening.andM;There were two things I found disturbing about the Robot memory residentintepreter.andP;  First is tat, contrary to my expectations, the TSR did notunload itself when the script completed.andP;  As a programmer I know that DOS hasproblems in this area (you can mess things up if a TSR releases memory whenanother application is in control of the machine), but I would have thoughtit possible for the interpreter to keep an eye open for an opportunity tounload itself, say when control returns to the DOS prompt.andP;  Nor could I findany mention in the manual of a way to unload the TSR, short of resetting thePC.andM;Even more disturbing was that multiple uses of the Robot command from the DOSprompt caused multiple incarnations of the TSR to become resident in memory.andO;I would expect the new script to be added to a list of tasks for a residentcomman dispatcher to perform -- something similar to the DOS print spooler.andO;This makes it vital that you never use the ROBOT command from within the'shell' feature of another application.andP;  The manual only casually mentionsthis problem, saying that you should try to write more comprehensive singlescripts to avoid multiple copies of Robot being resident in memory, but in myhumble opinion this is a serious flaw which reduces the usefulness of theprogram as a whole.andM;The remaining programs in the suite are called SNAPSHOT and REMEMBER SNAPSHOTis another memory resident utility which you can use to capture next screens-- graphics displays are not supported.andP;  To grab a screen, you simply pressCTRL-SHIFT-Backspace and whatever is on the screen at the time is written toone of eight possible files.andP;  Once grabbed, the stored image can be used as apattern -- you can ask Robot to wait until the screen looks like this beforeit continues with the task in hand.andP;  It is not necessary for the entirescreen to match the stored pattern -- the script can be made to check only aportion of the display for a match if that is all that is required.andM;REMEMBER is another TSR program which is analogous to SNAPSHOT, except thatthis one is used to record keystrokes used to operate a program, ie the inputto the program rather than the output.andP;  Once you know the keystrokes, thesetoo can be pasted into a script -- this is a little like the 'learn' mode insome comms packages.andP;  As far as I can tell, both of the above utilitiesassume that you will use the FRONT program to insert stored screen images andkeyboard sequences into a script.andM;DocumentationandM;The Robot manual is a 100 page affair, written primarily for the nearbeginner to computing.andP;  It has no indix, but the contents pages arereasonably complete.andP;  Chapter one covers installation.andP;  It describes thecontents of the disk and is very clear.andP;  The remaining chapters describe howto use the package and provide a complete list of script commands.andP;  I foundmuch of the manual almost patronising in tone -- the very first sentence inchapter two was the cringe-inducing 'Robot obeys your commands...' .andM;ISL have somewhat confused the target audience for this manual.andP;  By that Imean that, while the output of the package is intended to make life simplerfor beginners, that beginner will only be a user of Robot scripts created bya more experienced person.andP;  There are simply too many things to get wrong forsuch a beginner to write scripts themselves.andP;  To put it plainly, if theperson reading this manual needs to be instructed on the use of the Ctrl keyon a PC keyboard (as the manual patiently explains) then that person isprobably not the right one to be writing the scripts which others will use.andM;UsefulnessandM;So, how useful is the Robot suite of programs as a software debugging aid?andO;For this discussion, I need to split 'debugging' into two topics; debuggingand quality assurance (or simply testing).andP;  I am not convinced that Robot hasmuch of a role in software debugging.andP;  To find a bug with Robot, you wouldhave to have a repetitive task which can be defined in such a way that Robotcan be left to exercise that task until a bug appears (or hopefully doesn't).andO;There is, I admit, a certain type of bug which is only found if you try aprogram feature n times-part of the general class of boundary condition bugs- however it seems that there are faster ways of finding such bugs, and thatthis form of testing is so limited as to be almost useless in my case.andP;  Youmay, of course, feel differently.andM;In my experience, the majority of bugs are easily found by the programmer,and the remainder are found by users (hopefully at the beta test stage) whotry something that the programmer did not foresee, or experience conditionsthat the programmer did not provide for, such as an extreme shortage of diskspace or memory.andP;  It seems to me that the worst way of looking for such bugsis to have the programmer define a series of Robot tasks to exercisecomponents of the program in exactly the way the programmer expects them tobe used.andM;If a programmer knows that a bug is there, he will examine the code or willget stuck in with a debugger.andP;  When the programmer thinks there are no bugsleft then he releases the program for others to test.andP;  I find it difficult tosee a suitable niche for Robot in this scenario.andM;However, I feel that the most promising possibility for Robot lies on thequality assurance side, ie the procedure described earlier of having aprepared suie of test scripts which exercises all or most of thefunctionality of a program, and which can be used as part of the final testphase to which you subject new versions of your own software.andP;  This probablyis a valid use, but it has the obvious problem that new versions of thesoftware may not be intended to function identically to previous ones (unlessthe new version is simply a bug fix), and so the test suite would have to bemodified - however in this situation you would be changing your testprocedure whatever the QA system adopted.andP;  One would also have to be verysure that using Robot did not itself introduce its own bugs, as TSRs arenotorious for so doing.andP;  However, I have no reason for believing that thecurrent release version of Robot is anything but reliable.andM;ConclusionandM;Robot is designed primarily for making life easier for the complete newcomerto the world of personal computing.andP;  In that role I have no doubt that itwill serve very well (provided that a more experienced person such as a .EXEreader writes all the scripts).andP;  As a direct software debugging aid I feelthat it is not quite so useful, and there are more specialised utilitieswhich will serve the programmer better.andP;  It may be more useful as a hardwaredebugging aid, but I am sure that better tools exist in that area also.andP;  As amechanised quality assurance tool, it may well take a lot of the grind out ofthat task-this is certainly the area which I feel holds the most promise forRobot.andP;  To me, Robot looks a little on the pricey side, especiallyconsidering the cost of individual run-time licences.andP;  However ISL point outthat their nearest competitor is PC Automator, which is considerably moreexpensive.andM;Don Milne is the author of Odyssey, a package that provides MNP-correctedcommunications on a PC.andP;  He can be contacted on 0224 63100.andP;  Robot requiresas PC with 256K RAM, and DOS 2x or later.andP;  Colour adds to the utility of thepackage but is not required.andP;  The Robot files occupy little more than 100 Kof disk space, so you will probably not even require a hard disk.andP;  The singleuser developer's version, as reviewed, costs 395 pound sterling, and run-timelicences are 95 pound sterling one-off, with discounts for bulk orders.andO;</TEXT></DOC>
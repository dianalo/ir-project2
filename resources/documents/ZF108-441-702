<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-441-702  </DOCNO><DOCID>08 441 702.andM;</DOCID><JOURNAL>UNIX Review  May 1990 v8 n5 p62(6)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>The psychology of network management. (system administration innetworked environments)</TITLE><AUTHOR>Sandberg, Russel.andM;</AUTHOR><SUMMARY>End users want convenient interfaces and high performance.andP;  Systemmanagers must install and maintain the applications end users wantwhile application developers want someone else to standardizenetwork-resource management.andP;  The main problems of administeringnetwork resources are location and management.andP;  Attributes arebetter than specific names or addresses for locating resources,and an ideal network resource location system should bestructured.andP;  An ideal resource-management system would allowindirect naming, access to both dynamic and static information,centralized control, and decentralized responsibility.andP;  It wouldhave a robust location system and could be scaled to large numbersof resources per machine.andP;  Current protocols such as X.500, SimpleNetwork Management Protocol, and Common Management InformationProtocol each implement only portions of this model.andM;</SUMMARY><DESCRIPT>Topic:     Network ManagementManagement of EDPUNIXMultiuser SoftwareResource SharingUser Needs.andM;</DESCRIPT><TEXT>THE PSYCHOLOGY OF NETWORK MANAGEMENTandM;As a UNIX software developer, I suffer from a split personality.andP;  My dominantpersonality writes software, but sometimes my other personalities takecontrol.andP;  In the morning, usually while I am reading mail, I become a UNIXend-user.andP;  I grumble about loisy user interfaces, system performance, and theeffort required to complete simple tasks.andP;  Having a workstation on my deskseems to be the trigger that activates my third personality.andP;  Every time myworkstation configuration changes, the printer hangs, or I need to recover alost file, I turn into that dread Fiend, the System Administrator.andM;My analyst has suggested that I discuss my personality problem more openly,so I thought I would share it with you and in so doing examine systemadministration in a networked environment from three points of view.andM;When I'm an end-user, i don't want to be aware that the network exists.andP;  Iwant to let my applications do the work of traipsing around the net, locatingand using services, and reporting the results.andP;  When I hit the print buttonon my desktop-publishing tool, I want the document to be printed out on the&quot;right&quot; printer, and I want the tool to read my mind to determine the meaningof &quot;right&quot;.andM;As a network-application developer, I want someone else to do the work ofdesigning, implementing, and standardizing a simple system for locating andmanaging network resources so that I don't have to do it over and over againfor every product I produce.andP;  That way, I can spend more time on amind-reading user interface.andM;As a system administrator, my main concern is keeping end-users and softwaredevelopers out of my office.andP;  To do this I must be able to easily install andmaintain the software and hardware they need to keep them quiet.andP;  I wanteverything I spend money on to be highly automated, yet customizable,available to everyone on the network, and ported to every type of machine andoperating system in my shop.andP;  I want new products to install and runthemselves.andP;  When they break down or I need to institute some Fascist-styleaccess control, I should to be able to do it from the comfort of my ownworkstation, no matter where the products are installed.andM;You will noitce that I have not mentioned the problems of physical networkmanagement or user-account management.andP;  I am ignoring these problems for nowbecause physical network management is already being addressed by many newproducts, and user-account management in a heterogeneous environment is anArtificial Intelligence (in other words, impossible) problem.andM;I will focus instead on the problems associated with the administration ofnetwork resources.andP;  A network resource is anything that is accessible overthe network through a network service.andP;  A network service is the program thatprovides an interface to a particular type of network resource.andP;  For example,printers are a network resource that can be accessed through the networkservice lpd on a BSD-based version of UNIX.andM;The two biggest problems that administration of network resources presentsare location and management.andP;  Let's look at location first, since we have tofind the resources before we can manage them.andM;Locating resources should be done using attributes of the resource inquestion, rather than using specific names or addresses.andP;  The problem withusing names or addresses is that addresses change when things move, and namesare a very static way of referring to resources.andP;  This &quot;static binding&quot; ofapplications to resources makes administration difficult: every time a namedresource is added, moved, changed, or removed, a new set of bindings must beestablished to account for the change.andP;  For example, adding a new printer torelieve the load on an existing printer requires that half the users on thefirst printer be re-bound to the new printer.andP;  With UNIX this is done eitherby writing new /etc/printcap files or by editing .login or .profile files.andM;If a printing application (such as lpr) could specify a printer to use basedon the printer's attributes--for example, &quot;PostScript printer on the fifthfloor with the shortest queue&quot;--rather than on its name, load-sharing withnew printers would be automatic.andP;  This &quot;dynamic binding&quot; of applications toresources is similar, in principle, to dynamic bindig of libraries toprograms.andP;  It allows the choice of resources to be made at the last possibleminute using the most up-to-date information.andM;The problem is obtaining up-to-date information.andP;  Since some of the resourceinformation (for example, printer-queue length) changes rapidly, we can'trely on a human administrator to keep it up to date.andP;  The amount ofinformation required to represent all the resources in even amoderately-sized network could be huge.andP;  If every filesystem, workstation,software application, and peripheral device were considered a resource, theremight be tens or hundreds of resources per machine.andP;  On a network thatcontained several hundred machines, this would mean that a single systemadministrator would have to manage tens of thousands of resources.andM;Let's look at an example of a system that has similar resource-managementrequirements.andP;  The largest network in use today is also the mostfamiliar--the telephone network.andP;  This network also requires that resources(people and businesses) be located.andP;  The phone company relieves the load onits operators by supplying every telephone user with a directory of phonenumbers.andP;  The Yellow Pages telephone directory allows any caller to locatethe phone number of a business given a name or type of business, and alocation.andM;Let's say I need to locate a print shop where i can get business cardsprinted.andP;  I want it to be cheap and nearby, and it must be open late.andP;  Istart by looking in the Yellow Pages under the type of the service I seek:Printers.andP;  I can eliminate many of the print shops listed merely by lookingat their advertised attributes--location, hours, and whether they are able todo business cards, for example.andP;  Once I have narrowed down the list I can usethe phone number to call the shop directly to get more information about costand delivery time.andM;How can this telephone-network solution be applied to computer networks?andO;First, notice that the Yellow Pages directory contains information thatchanges very little over time, and therefore doesn't need to be updated veryoften.andP;  In addition, each directory applies to only one geographic region.andO;Each business is responsible for checking to see that its advertisedinformation is accurate, and for notifying the phone company if it is not.andO;Finally, not all information is advertised in the directory.andP;  Informationthat changes rapidly, like prices and inventory, is available through a calldirectly to the business.andP;  If the company I call is no longer at the numbergiven, I can get up-to-date information from directory assistance, or I cancall one of the other companies listed.andP;  This combination of features servesa large network of callers and businesses, yet puts very little load on anysingle caller, business, or central directory manager.andM;A network-resource location system that provides a facility structurallysimilar to the resource-location method employed in the telephone networkcould be built for a computer network.andP;  Instead of businesses we would havenetwork services, and instead of a Yellow Pages directory we would have aResource Directory.andP;  The advertisements in the Yellow Pages are analogous tothe resource descriptor, which is made up of attributes that provide staticor slow-changing information about single resources.andM;Since programs as well as humans will need to examine the attributes of aresource, we need to be a bit more careful than the phone company indescribing attributes and how they are combined to represent a particularresource.andP;  An attribute is a set of values with a name.andP;  Attribute names areused to distinguish the different attributes of a single resource descriptor,and also to describe, to some extent, the meaning of the values in theattributes.andP;  Some attributes make sense only within a given resourcetype--for example, &quot;papar size&quot; is only applicable for a printer--while otherattribute names refer to more general information, such as &quot;location&quot;.andM;Figure 1 depicts an example of the resource descriptor for a printer.andP;  Inthis notation, the string to the left of the &quot;.&quot; is the name of theattributef the string to the right of the &quot;:&quot; is the attribute value;multiple attribute values are separated by commas.andP;  This resource descriptorcorresponds to a printer known by several names--&quot;pokey&quot;, &quot;ps1&quot;, and &quot;lp&quot;.andO;It is located on the third floor of Building 5 in room 329, prints 4 pagesper minute, speaks the PostScript print language, and can be used by peoplein the engineering and marketing groups.andP;  To use the printer, an applicationconnects to the lpd service on host &quot;print1&quot;.andP;  The attributes with no valuesindicate that this resource can be queried directly for &quot;dynamic&quot; informationabout queue length, current status, and statistics.andM;To see how resource location would work, let's look at the printer exampleagain.andP;  A new printer is plugged directly into the network.andP;  When it ispowered up for the first time, it finds the Resource Directory and adds anentry for itself.andP;  If it finds an entry that is already up to date, it neednot re-register.andP;  Now I run an application program that makes pretty piecharts.andP;  The application needs a PostScript printer, and I would like myoutput to be printed somewhere nearby.andP;  I give the application myrequirements--andM;PRINTER=location : 3rd floor; engineeringandM;and the application adds its own requirements--andM;print language : PostScript; paper size : letter;andM;and checks the Resource Directory to get a list of candidate printers withresource descriptors that contain this set of attributes.andP;  It can then queryeach printer about queue length, for example.andP;  Then, using this information,the application picks the best printer, sends the print job to it, and tellsme where to pick up my output.andM;When a new printer that uses the BSD UNIX lpr/lpd print-spooling system isadded to the network, it must be attached to a particular host machine.andP;  Thesystem administrator must edit several configuration files on that hostmachine, including /etc/printcap, which describes printer resources.andP;  Theadministrator then has to build a different version of /etc/printcap with anentry that describes the new printer's remote location, and distribute thefile to every computer that is to have access to the new printer.andP;  To use thenew printer i must find its name in the /etc/printcap file, then pass thisname to one of the print-spooling programs to forward the print job to theremote host.andM;If we place the burden of registering resources on the print service, and theburden of locating resources on the application, the administrator's job issimplified, and the user is given more flexibility.andM;Resource Management.andP;  In the human world, resources are managed by thebusinesses that own or provide them.andP;  This approach breaks down in the worldof computer networks, where the services that control resources are for themost part dumb.andP;  Instead, an administrator has centralized control over thedistribution and use of resources.andM;To achieve this centralized control within our resource-location framework,we have to allow for the creation, deletion, and modification of resourcedescriptors and attributes.andP;  These changes can affect the operation and useof a resource.andP;  For example, changing the &quot;access&quot; attribute in the printerresource descriptor determines which users are allowed to use the printer.andO;Another example is setting the &quot;status&quot; attribute to &quot;standby&quot;, to allowspooling but not printing while, say, the toner cartridge is being replaced.andM;The set of attributes associated with a given resource should be determinedby its type--but not completely.andP;  It is difficult to know today whatattributes will be required to describe future printers, and differentenvironments may use different attributes to describe the same type ofresource.andP;  For instance, if I install some fancy new CAD package, it mightrequire that all printer resource descriptors include the attribute &quot;pencolors&quot;.andP;  If the printers I've installed don't know about pen colors, I haveto be able to tell them to register &quot;pen colors: black;&quot; from that point on.andM;Much of the information about a resource is stored in two places: in theResource Directory, and in the service that manages the resource.andP;  As in thetelephone-system model, if there is any disagreement between the ResourceDirectory copy and the service's copy, we believe the service.andP;  Giving theservice responsibility for its own resources yields several benefits.andP;  Itallows resources and services to be controlled even in the absence of aResource Directory--as when a server machine is down, in single-user mode, ordisconnected from the network.andP;  It allows the &quot;truth&quot; about a resource toreside at the point closest to that resource; having resources carry theirresource information with them makes them easier to move around.andP;  Finally, tisolves the classic replicated-database update problem: if updates are made todifferent copies of the database simultaneously, which update wins?andP;  Thisconflict is eliminated by having a single point of update for each resourcedescriptor.andM;This model for location and management of resources is scalable, to allow forlarge numbers of resources and machines, and it fulfills some of the mostimportant requirements of any network-service management system:andM;* indirect naming, which allows dynamic binding of applications to resources;andM;* flexible, human-readable, extensible descriptions of resources;andM;* access to both static and dynamic information;andM;* centralized control, but decentralized responsibility;andM;* access control for both the resource information and the resourcesthemselves;andM;* robustness of the location system (through replication of the resourcedirectory, for example);andM;* scalability to large numbers of resources per machine, and large numbers ofmachines.andM;Perhaps the most important aspect of this model is that it can be used by anend-user to browse the set of resources available on the network, by anadministrator to manage resources, and by an application writer to developsmart networked applications.andM;Those of you who are following the standards wars being fought overnetwork-management and name or directory services will notice similaritiesbetween the model I have described and various pieces of X.500, the SimpleNetwork Management Protocol (SNMP), and the Common Management InformationProtocol (CMIP) and CMIP Over TCP (CMOT).andP;  X.500 and other directory servicesaddress the location problem, and SNMP and CMOT/CMIP deal with networkmanagement.andP;  However, none of these protocols provides enough facilities totackle the whole problem.andM;The OSI Directory Service protocols (ISO/IEC 9594, parts 1-8, a.k.a.andP;  X.500),define a global (really global, covering the whole world) hierarchicalnamespace made up of directories that contain entries, some of which aredirectories.andP;  Each entry has a set of attributes, one of which is designatedthe distinguished attribute.andP;  The distinguished attribute must be uniquewithin a given directory.andP;  Different points in the tree are served bydifferent Directory Service Agents (DSAs) that contain entries for specificadministrative domains.andM;The X.500 model is roughly equivalent to the UNIX file tree, where the treeis made up of directories that contain files and other directores.andP;  File statinformation and data are attributes, and the filename is the distinguishedattribute.andP;  Different points in the tree are connected to differentpartitions or remote file servers.andM;Like the UNIX file tree, the X.500 tree is intended to be used to locateentries based on their pathnames.andP;  By specifying a distinguished attributefor each level in the tree, you can unambiguously name any entry in the tree.andO;Because you cannot always know the pathname for every entry you want to find,X.500 includes the equivalent of a UNIX find program.andP;  The X.500 searchoperation is almost as hard to describe as the find program is to use, andfor the same reason: both the UNIX filesystem and most X.500 implementationsare optimized for name-based lookup, not for associative--orattribute-based--querying.andP;  The emphasis on name-based lookup makes itdifficult to use the X.500 tree for attribute-based resource location unlessstrong restrictions are imposed on the use of its hierarchy.andM;Another way in which the X.500 model is similar to UNIX files is that theattributes of an entry are static.andP;  Each X.500 entry has a &quot;class&quot; thatcompletely determines the set of attributes it can contain.andP;  Each attributeis in turn very stringently defined.andP;  In order to implement the addition of a&quot;pen color&quot; attribute to entries of type &quot;printer&quot;, I would have to apply toan ISO standards committee and wait for both the attribute &quot;pen color&quot; andclass &quot;printer&quot; to be produced.andP;  This problem could be eliminated bymodifying the X.500 specification to allow objects in the hierarchy to defineattributes and classes.andM;Various other name or directory services could be used as a basis forresource location, but none provides all the necessary facilities to fulfillthe requirements stated above.andP;  The closest contenders are the Domain NamingSystem (DNS) (RFC 1035), and the Sun Network Information Service (NIS).andP;  DNSis used heavily in the Internet world to resolve machine names into networkaddresses.andP;  The DNS protocol has the ability to support retrieval of othertypes of information, but it suffers from the same &quot;name-based&quot; lookupproblems as X.500.andM;The Sun NIS (which was called Yellow Pages until the phone companydisapproved) provides a very general scheme for mapping a key in a map to achunk of data.andP;  For example, you can match the key &quot;rusty&quot; in the map&quot;passwd&quot; to get the dataandM;rusty:2daVoaQs/nLF.:1002:10:Russel Sandberg:/home/legato/rusty/:/bin/cshandM;New maps can be added by implementing a program such as /etc/printcap intokeys and data.andP;  There are several problems with using NIS for resourcelocation: it has no general protocol for updating maps, and thre is no simpleway to build a general attribute-query mechanism because only one key-to-datamapping per map is allowed.andM;The two network management protocols, SNMP and CMOT/CMIP, do not deal withresource location, but with management of networking components such asnetwork interfaces, routers, and transport protocols.andP;  The SNMP (RFC 1067) issimple.andP;  It defines a protocol for interacting with an agent that lives onevery machine managed on the network.andP;  Binding to an SNMP agent isaccomplished using the IP address of the target machine and a well-known UDPport number.andM;The agent handles a set of objects (akin to our resource descriptors) thatcorrespond to managed entities such as routers, network interfaces, andtransport connections.andP;  Changes made to the variables of an object (like ourattributes) cause actions that change the behavior of the system.andP;  Theprotocol provides facilities for stepping through and manipulating thevariables of an object, but there is no method provided for dealing withwhole objects.andP;  Stepping through the instances of variables of a particularobject type is like scanning a linked list looking for the data structureswith a particular value.andP;  This algorithm works fine for small numbers ofojects, but breaks down as the size of the list grows.andP;  For SNMP to handlenetwork resources, it would have to be able to handle hundreds of objects.andO;Another problem with adapting SNMP to handle network resources is that itprovides no method for creating or removing objects or variables.andP;  Thisability is required, for example, on an NFS server, where adding a new objectof type &quot;NFS filesystem&quot; would cause a subtree of the server's filesystem tobe exported.andM;SNMP-managed objects are described by a Management Information Base (MIB,RFCs 1065 and 1066) that is intended to be used by both SNMP and CMOT.andP;  Whilethe standards body that deals with the MIB may be able to react in a matterof months, this is still too slow to make this description workable for localadditions to be resource information.andM;The CMIP protocol is a lot like X.500.andP;  It has objects with attributes,distinguished attributes, and a tree structure.andP;  CMIP solves some of the SNMPproblems: it does not require a single agent per machine, it allows creationand deletion of objects, and it has a notiion of scope and filteringmechanism, like X.500 search, that can be used for attribute-based lookup.andO;Like SNMP and X.500, though, it relies on a static definition of objects.andO;CMOT also has one problem all its own: it is incredibly complicated.andP;  TheCMOT RFC (1095) is only about 70 pages long, twice as long as the SNMP RFC,but CMOT is simply CMIP over TCP.andP;  The CMIP document is another 60-ish pages,referring to ISO 7498-1:1984, ISO/IEC 7498-4, ISO/IEC 8649, ISO/IEC 8650,ISO/IEC 8822, ISO/IEC 8823, ISO 8824:1987, ISO 8825:1987, ISO/IEC 9072-1,ISO/IEC 9072-2, and ISO/IEC 9595-2.andP;  I'll leave the page counting to you.andM;To write networked applications that operate in heterogeneous environments,our resource-location and management facility can't take up all the availablememory on a PC.andP;  I have strong reservations about the sheer code sizenecessary to implement all of CMOT/CMIP.andM;All the systems mentioned above fall short of the requirements fornetwork-resource management as described above.andP;  The NIS, DNS, and X.500 nameservices are geared toward name-based lookups; the network-managementsystems, SNMP and CMOT/CMIP, are too static in their definition of objects;and all of the above fail to integrate resource location with resourcemanagement.andM;I have proposed a model for network resource location and management, but myreal goal is to encourage discussion, experimentation, and implementation ofa system that will make computer networking easier.andP;  Too many networkingprotocols have been standardized without the experience and feedback of thepeople that these protocols are supposed to help: software developers, systemadministrators, and end-users.andM;Russel Sandberg was one of the principle designers and implementators of theSun Network File System.andP;  His primary responsibility in this effort was theintroduction of the oft-seen system error message &quot;Server not responding,still trying.&quot;andM;Before joining Sun, he worked at the University of Wisconsin, Madison, on theCrystal Distributed Operating System project and on real-time control systemsfor the Hubble Space Telescope, where he introduced the (as yet undiscovered)system error message &quot;Telescope not responding, still trying&quot;.andM;Sandberg is currently co-founder and principal engineer at Legato Systems,Inc., where he is responsible for the design and implementation of newnetwork applications with similar error messages.andO;</TEXT></DOC>
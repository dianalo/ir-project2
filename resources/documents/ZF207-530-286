<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-530-286  </DOCNO><DOCID>07 530 286.andM;</DOCID><JOURNAL>Microprocessor Report  August 1989 v3 n8 p6(4)* Full Text COPYRIGHT MicroDesign Resources Inc. 1989.andM;</JOURNAL><TITLE>Forth chips target embedded applications. (includes relatedarticle on price and availability)</TITLE><AUTHOR>Case, Brian.andM;</AUTHOR><DESCRIPT>Product:   Harris RTX 2000 (Semiconductor device) (usage)Silicon Composers SC32 (Semiconductor Device) (usage).andO;Topic:     FORTHMicroprogrammingEmbedded SystemsCircuit DesignPrimitive Data ItemsProcessor Architecture.andO;Feature:   illustrationtableprogram.andO;Caption:   Commercially available Forth chips. (table)C listing (on left) and two versions of Forth code for a simpleloop. (program)andM;</DESCRIPT><TEXT>Pioneering Novix chips lead to Harris, Silicon Composers productsandM;Despite the glamour of PCs and workstations, embedded control provides thelargest market for microprocessors.andP;  As the definition of embedded controlexpands to embrace more applications that require high performance, RISCvendors have begun to target embedded control more directly and aggressively.andM;Vendors of &quot;Forth-chip&quot; microprocessors, however, have always aimed athigh-performance embedded control.andP;  Forth chips are characterized by simple,RISC-like implementations with (mostly) single-cycle instruction executionand dired support for the Forth programming language.andP;  This makes themsimilar, at least in spirit, to general-purpose RISC chips.andM;Thus, from a designer's point of view, a couple of questions arise.andP;  First,how do the two approaches to embedded control compare? Second, with thatknowledge in hand, should I use a Forth chip in my system?andM;The Forth LanguageandM;The Forth language was invented by Charles Moore over a period of years inthe 1960s.andP;  The primary ideas behind the language were extensibility,simplicity, and interactivity to decrease development time.andP;  Adobe'sPostScript language uses a similar syntax, but in John Warnock's words, PostScript's &quot;conception and development were entirely independent of Forth.&quot;andM;Originally, Forth was implemented as a pure, threaded-interpretive language.andO;The binding of variables to memory locations, and function names (called&quot;Words&quot; in Forth) to machine code was done through a central &quot;dictionary.&quot;andO;This made the Forth environment completely interactive: a change to aprimitive function definition was reflected immediately throughout theandM;Forth program.andM;In modern implementations, functions are compiled.andP;  Groups of Forthprimitives often compile into a single Forth-chip instruction.andP;  Bothtraditional, &quot;batch&quot; compilers and interactive, &quot;on-the-fly&quot; compilers areavailable.andP;  An interactive compiler dramatically reduces theedit-compile-link turnaround.andM;The extensibility of the language is manifested in the fact that alloperations, be they intrinsic or user-defined, are specified in a program inexactly the same way: by a single Forth word.andP;  This means that user-definedwords are indistinguishable, at least syntactically, from primitive Forthwords.andM;Simplicity comes from the fact that all computations are carried out usingreverse-polish (postfix) notation.andP;  To cause something to happen, the name ofthe desired operation is simply preceded by the desired arguments.andP;  Forexample, to subtract 3 from 5, you would say, &quot;5 3 -&quot; in Forth.andP;  The Forthinterpreter pushes 5 and 3 onto a stack.andP;  The &quot;operator pops them off,subtracts them, and pushes 2 back onto the stack.andP;  Parentheses are neverneeded.andM;Even loop constructs are specified in this way.andP;  The result is a programstructure and syntax that is, at the very least, unfamiliar to mostprogrammers.andP;  Specifying data structures is convoluted.andP;  For example, inListing 1, the two Forth codes on the right implement the same function asthe C code on the left.andP;  The Forth code in the middle represents astraight-forward translation while the code on the right represents whatwould be produced by an experienced programmer.andP;  (The &quot;FMIPS&quot; ratings reflectthe number of Forth &quot;instructions&quot; that can be performed by a singleForth-chip instruction at 10 MHz.)andM;Together, the idea of extensibility and postfix notation make the stack thecentral theme upon which Forth implementations are built.andP;  Because theperformance of subroutine calls is especially important for Forth, Forthchips have special facilities for improving call and return performance.andM;LineageandM;The first Forth chip was introduced by Novix, a company started by CharlesMoore.andP;  The Novix technology was subsequently purchased by Harris.andP;  Theoriginal Novix chip has three separate memory ports: one for code and datamemory, one for the return stack, and one for the argument and expressionevaluation stack.andP;  This architecture allowed tremendous concurrency formemory accesses but meant tbat a system board had three separate memories andmemory spaces.andM;The original Novix chip architecture has been superseded by Harris' RTX2000and Silicon Composers' SC32.andP;  These chips have a single external memory port.andO;However, the return and argument stacks are implemented with separate,on-chip memories so that the concurrency of the original design ismaintained.andP;  The RTX2000 is a 16-bit chip while the SC32 is a 32-bit chip.andM;FeaturesandM;Forth chips have RISC-like instruction sets.andP;  All instructions (with oneexception in the RTX2000) are one machine word in length and have very simpledecoding rules.andP;  Most execute in one clock cycle.andP;  Unlike RISCs, theimplementations are not pipelined.andP;  One negative consequence is that, tomaintain single-cycle instruction execution, these chips cannot operate athigh clock frequencies.andP;  One positive consequence is that the chips do notexhibit any of the RISC &quot;warts&quot; such as delayed branches or variableinstruction execution time.andM;Forth chips use a stack for expression evaluation.andP;  However, operands are notalways pushed and popped explicitly because the top-most stack locations aredirectly addressable.andM;Table 1 summarizes some of the features of the latest Forth chips.andM;The RTX2000.andP;  Harris' RTX2000 is a second-generation Forth chip.andP;  Like theoriginal Novix chip, the RTX2000 is a 16-bit microprocessor with 16-bitinstructions.andP;  Unlike the Novix chip, the RTX2000 integrates small, 256-wordcaches for the parameter and return stacks.andM;In most RTX2000 instructions, a single bit in the instruction determineswhether the chip will perform a subroutine return during the execution ofthat instruction.andP;  The use of a single bit is possible because the returnaddress can come only from the top of the reWm stack.andP;  This allows a&quot;zero-cycle&quot; subroutine return; that is, a retum can be overlapped withanother operation, such as an arithmetic computation.andM;Most instructions execute in a single clock cycle.andP;  However, loads, stores,and long-literal (i.e., load fullword constant) instructions take two cycles.andO;Loads and stores take two cycles for the same reason that they do on the cuffent SPARC implementations: there is only one data bus, which can be doingeither an instruction fetch or a data access but not both.andP;  RTX2000 loads andstores can access either a 16-bit word or an 8-bit byte; bytes can beaccessed in either big- or little-endian order.andM;The RTX2000 has an on-chip 16-bit-by-16-bit multiplier.andP;  This is a unique andpowerful feature, even by the standards of some of the bighly-integrated RISCchips (some RISC s implement multiply at a rate of one bit per cycle).andP;  TheRTX2000's multiplier completes its multiplication in one clock cycle, butloading the product back into the processor working register(s) takes one ortwo more cycles depending on whether a 16-bit or 32-bit product is desired.andO;Nonetheless, this effective 200-ns multiply time (300 ns for a 32-bitproduct) makes the RTX2000 appropriate for some DSP applications.andM;The RTX2000 also has three on-chip, 16-bit timer/counters, which can performeither timing or event-counting functions.andP;  When a timer expires, itautomatically reloads its initial value and can generate an interrupt.andM;To make interfacing with peripheral chips simple and efficient, the RTX2000implements its so-called ASIC bus.andP;  This bus has 16 data lines and threeaddress lines.andP;  Even though it has limited addressing, it might be surffcientfor the few peripheral chips that most systems require.andP;  The advantage of theASIC bus is that a peripheral-chip access and a main-memory access canproceed in parallel.andM;Harris has announced a cost-reduced version of the RTX2000 called theRTX2001.andP;  This chip will be fabricated without the hardware multiplier andwith smaller stack caches to reduce die size and cost.andM;The SC32.andP;  Silicon Composers' SC32 is a third-generation Forth chip that, asa 32-bit microprocessor, offers the most significant challenge to RISC chips.andO;The SC32 is much closer to a general-purpose architecture than is the RTX2000because it has up to 12 more-or-less general-purpose registers, depending onthe run-time model used with the processor.andP;  If the chip is running Forth,the number of general registers is essentially two, but a C-language compilercould use the resources differently.andP;  Regardless of the run-time model, thearchitecture is still accumulator-based since one of the ALU operands alwayscomes from a fixed register.andM;All SC32 instructions are a single 32-bit word.andP;  The extra 16 bits, comparedto RTX2000 instructions, are used primarily to encode larger constants andtwo 4-bit general-register address fields, source and destination.andM;In many other respeds, the SC32 is very much like the RTX2000.andP;  The chipintegrates separate parameterand return-stack caches, but with only 16 wordsin each.andP;  A single bit in every instruction determines whether the chip willperform a subroutine return during the execution of that instruction.andP;  Mostinstruction s execute in a single clock cycle except loads and stores, whichexecute in two.andM;In contrast to the RTX2000, the SC32 can only load and store full, 32-bitwords.andP;  Also, the chip has hardware that automatically spills from the stackcaches to memory and fills from memory to the stack caches when necessary,but even with these small caches, overflow is infrequent.andM;The SC32 has a clean, complete comparison and conditional-brancharchitecture.andP;  The single conditioncode bit can be set according to theoutcome of an ALU operation or left unmodified.andP;  The condition code bit canthen be used to determine the outcome of a subsequent conditional branch, orit can be directed to the destination register as a piece of data.andP;  Theabilities to leave the condition-code bit alone and to create a piece of datafrom the result of a comparison help facilitate optimizing compilers forlanguages other than Forth.andM;Comparison With RISCsandM;The major architectural difference between Forth chips and general-purposeRISC chips has to do with the way arithmetic is done.andP;  RISCs have arelatively large set of general registers and three-address arithmetic,logical, and shift instructions that can operate on any two registers andstore the result in any third.andP;  The SC32 comes close to this model: it allowsany register to be specified as one source and any register to be specifiedas the destination, but the other sourceandM;register is always the top of stack.andM;Procedure call and return present another architectural difference.andP;  On aRISC, a return, which is just an indirect branch, takes a separate cycle andis a delayed branch.andP;  If the delay slot cannot be filled, the returneffectively takes two cycles.andP;  On a Forth chip, the return can always beperformed simultaneously with the last instruction of the procedure.andO;However, RISCs still have very fast procedure linkage conventions, andprocedure linkage is less important in a language like C than in Forth.andM;The major implementation difference between Forth chips and RISC chips is inthe degree of pipelining.andP;  Forth chips are not pipelined while RISCs areheavily pipelined.andP;  The result is that RISCs have higher clock rates butrequire more care in instruction scheduling.andP;  The Forth chips have two-cycleloads and stores because of the single data bus.andP;  Many RISCs can haveeffective single-cycle loads and stores because they have two data buses andallow instruction scheduling to cover the memory latency.andM;The major differences in system implementation center around main memorydesign and the number of support chips needed.andM;At first glance, it would appear that RISC chips would need much fastermemory than the &quot;slow&quot; Forth chips.andP;  However, the issue is actually rathercomplicated.andP;  The Forth chips are designed to run with fast SRAM; forexample, at 10 Mhz, SRAMs with access times in the range of 25 ns to 35 nsare needed, depending on the details of the system.andP;  (Fast RAMs are neededbecause the chips are not pipelined.) This is the same speed used by 25 MHzRISCs.andP;  In contrast, RISC chips such as the Am29000 and the Intel 80960 canuse SRAM, static-column DRAM, or VRAM with good results in performance andcost.andP;  Some RISCs can even use a mixture (e.g., the 29K card from YARCSystems).andP;  If the embedded application requires a large amount of memory, saya few megabytes, it will be difficult and costly to implement an all-SRAMmemory system for a Forth chip.andP;  On the other hand, Forth chips need only onebank of RAM, whereas some RISCs require separate banks for instructions anddata.andM;Some of the biggest differences in the memory systems result from the amountof support circuitry needed.andP;  The RTX2000 requires few additional chips in adedicated system.andP;  In contrast, the MIPS R2000 requires a substantial numberof chips just to initialize the processor after a reset.andP;  Also, the ASIC busof the RTX2000 can eliminate some address decoding that RISCs might require.andM;In recognition of the increasing complexity of embedded applications, someForth environments support multitasking.andP;  One issue in such an environment iscontext-switching time.andP;  The SC32 can complete a context switch in 75 to 115cycles, which is about 10 micro-seconds at 10 MHz.andP;  This might seem fast, butfor a 25-MHz RISC, this is 250 cycles, more than enough to complete a contextswitch.andP;  Even for the Am29000, probably the worst case among RISCs, 250cycles is enough time to save all 128 local registers and restore a procedurecontext into the stack cache, assuming burst-mode data memory.andM;Why Choose a Forth Chip?andM;Based solely on the cost of the processor chip, and depending on clockfrequency, the Am29000 and Intel 80960KA, for example, can actually be ascheap as or cheaper than a Forth chip (see micro-PR 7/89 p.andP;  2).andP;  Forexample, a 16 MHz 29000 is $150 (100s), a 16 MHz 80960 is $102 (100s), whilea 10 MHz SC32 is $150 (1000s).andP;  Factoring in the cost of the rest of thesystem might bring the Forth chip ahead, but it could be a close call.andP;  Sowhy would a designer choose a Forth chip for his system?andM;The main reasons for using a Forth chip in an embedded system are thesimplicity and predictability of the implementation.andP;  Both the hardware andsoftware for a Forth system are simple to develop.andP;  With SRAMs, a completesystem requires very few support chips.andP;  The interactive nature of the Forthenvironment makes development, testing, and debugging simple.andP;  After aprogrammer writes a new function, it can be tested by simply typing the nameof the funtion at the command line prompt.andM;Because Forth chips are not pipelined and typically have SRAM memory,determining the exact number of cycles needed to implement a function isstraight-forward.andP;  This can be important for real-time applications.andM;In the end, the biggest advantage of a Forth chip is realized for smallsystems that must be developed rapidly and cheaply and must minimize powerconsumption, glue logic, and engineering effort.andP;  When the program is smalland written by one person, the time from start to prototype system in Forthcan be short.andP;  Forth chips are used in many machine-control and defenseapplications.andM;Why Choose a RISC?andM;If the embedded application is a large program, the features of traditionalhigb-level languages, such as separate compilation, straightforward syntax,and aggressive optimization, can be important to managing the project.andP;  Forexample, Forth is probably not appropriate for something as large as aPostScript interpreter.andP;  If good support for floating-point is required, atraditional language like C is a better choice than Forth.andM;For all its advantages, an interactive environment, such as Forthy, has atleast one drawback: it can result in poor code as programmers are encouragedto &quot;hack&quot; and tinker instead of thinking about algorithms from the&quot;big-picture&quot; perspectove.andM;If general-purpose performance is critically important, a RISC processor is abetter choice than a Forth chip.andP;  Table 2 shows the performance of theRTX2000, the SC32, the 68020 (as implemented in the Macintosh II), and theaverage RISC for sieve, a CPU-bound, integer benchmark.andP;  As shown, the Fortbchips are considerably better at Forth than a 68020 is at C.andP;  However, mostRISC chips can run CPU-bound C programs from 10 to 20 times faster than the68020 in a MacII.andM;Forth chips will certainly become available in versions with higher clockrates, but, even at 20 Mhz, the cuff ent memory-bus timing strategy wouldrequire extremely fast SRAMs.andP;  At high clock rates, Forth chips will beforced to use some of tbe techniques already employed in RISC chips such aspipelining and delayed or overlapped loads and stores.andP;  At that point, theywill become very much like general-purpose RISC chips from the system-designperspective, but they will lack the general-purpose, perforrnance-improvingarchitectural features that RISCs possess.andM;Finally, although C compilers will be available for Forth chips, RISC chipsare better vehicles for serious C programming projects.andP;  RISCs will have moreand better compilers, libraries, linkers, debuggers, etc.andP;  Also, a designerneeds to consider vendor support, vendor viability, market pressures, and thefuture of the chip architecture.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-325-038  </DOCNO><DOCID>08 325 038.andM;</DOCID><JOURNAL>Andrew Seybold's Outlook on Professional Computing  March 1990 v8n8 p1(5)* Full Text COPYRIGHT Andrew Seybold's Computer Insiders Inc.andO;1990.andM;</JOURNAL><TITLE>OOPS, did you miss the revolution?: a review of Matrix Layout 2.0.andO;(object-oriented programming software) (Software Review)(evaluation)</TITLE><AUTHOR>Remington, Robert J.andM;</AUTHOR><SUMMARY>Matrix Software Technology's Layout version 2.0 lets users designand build complete DOS application programs of professionalquality without having to do any traditional programming.andP;  MatrixLayout is one of the most sought-after computer-aided softwareengineering (CASE) tools for the DOS environment; it is examinedhere from a non-programmer perspective.andP;  Installation was simpleand took only 15 minutes; the documentation in the new version ismuch improved, and several sample flowcharts and programs areincluded.andP;  The 'How to Turn Your Ideas into Reality' book teachesthe object-oriented programming concepts underlying the program,including such concepts as objects, variables, pictures and text.andO;Non-programmers need to keep in mind that designing a program foruse by others requires careful consideration of the userinterface, a task which is by no means simple; object-orientedprogramming will likely catch on slowly, and at first withprogrammers.andM;</SUMMARY><DESCRIPT>Company:   Matrix Software Technology Corp. (products).andO;Product:   Layout 2.0 (Program development software).andO;Topic:     Object-Oriented ProgrammingProgram Development ToolsProgram Development TechniquesComputer-Aided Software EngineeringEvaluationApplications ProgrammingSoftware DesignUser Interface.andM;</DESCRIPT><TEXT>OOPS, Did You Miss the Revolution? In the April 1989 Outlook, Andy made somegeneral observations about the new generation of object-oriented programming(OOPS) software which aims to empower non-programming end users to solvetheir own day-to-day computing problems.andP;  In this article, we will take aclose up look at one of the most advanced OOPS products available for IBM PCcompatible users; a product which 10,000 customers wanted badly enough to pay$200 in advance.andM;The folks at Matrix Software Technology tell us that &quot;The desktop programmingrevolution has begun,&quot; and &quot;Don't let the desktop programming revolutionstart without you.&quot;andP;  With the introduction of Matrix Layout 2.0 aroundChristmas-time, they have resurrected a slogan from another time and anotherplace--&quot;Power to the People.&quot;andP;  Matrix Software Technology, a spin-off in 1985from an earlier start at Harvard University, introduced the original MatrixLayout in May of 1988.andP;  Layout 2.0 is the second major release and fourthversion of the product which has sold 50,000 copies.andM;According to Matrix, Layout gives you the ability to design and buildcomplete, professional quality application programs without having to do anytraditional programming.andP;  The programs created with Layout can have a moderngraphical user interface, or GUI (i.e., with windows, pulldown menus, icons,buttons, mouse selection, etc.).andP;  Once a program is complete, you can create,automatically, an EXE file which will run as a stand-alone DOS program, orhave Layout automatically generate Turbo C, Lattice C, Microsoft C, orQuickBASIC source programs.andM;What a remarkable sounding software package!andP;  Little wonder that thousands ofprofessional programmers and want-to-be programmers desire to get their handson such a tool.andP;  Automation in the difficult area of writing the complex coderequired to implement a graphical front-end for a DOS application alone wouldwarrant a closer look.andP;  There is little doubt that professional DOSprogrammers will benefit from Layout as one of the best DOS-based computeraided software engineering (CASE) tools which we have seen.andP;  This review willfocus on Layout from a non-programmer's perspective, since this representsthe domain for the emerging desktop programming market.andP;  Starting with theinstallation process, we will now take a look at what is involved in usingLayout to design and build a useful application program.andM;Installing LayoutandM;Installing the ten 5.25 inch floppy disk Layout program (Version 2.01) was arelatively straightforward and &quot;swearless&quot; 15-minute process.andP;  In fact, thesetup process included a number of nice touches obviously aimed at preventingintimidation of users new to the installation game.andP;  For example, the setupprocedure is broken down into simple yes or no decisions, and the user ispresented with politely worded offers of additional help such as, &quot;If you areconfused and need more information before you decide, then press the F1 key.&quot;andO;Additionally, supportive feedback regarding a user invoked action isdisplayed in a &quot;What's Going On&quot; window.andP;  For example, as files are beingcopied from a floppy to the hard disk, an animation showing file icons beingplaced in a folder icon is presented in sync with the noises being made bythe disk drives.andP;  The only potential source of confusion which we could seewith the Layout 2.0 installation procedure involves the practice of askingfor each installation disk by name (not by number), since many of the disknames look very similar (e.g., Matrix Layout Help Disk versus Matrix DesktopHelp Disk).andM;The system requirements for Layout can be summarized as a PC, PC/XT, PC/AT,PS/2 or compatible machine with:  At least 512K memory; a hard disk with atleast 3.0 megabytes free space; CGA, EGA, VGA, HGA, AGA or MCGA compatiblegraphics card; and DOS 3.0 or above.andP;  Layout did a very good job ofconfiguring itself automatically to run on our 386 with a VGA graphics cardand a serial mouse, as well as a 286 with an EGA card and a bus mouse.andM;Getting StartedandM;Matrix has responded in a very positive fashion to one of the main criticismsof the Layout 1.0--lack of documentation.andP;  Documentation for Layout 2.0consists of three parts:  Read Me First--An Introduction to Layout (67-pagebooklet); How To Turn Your Ideas Into Reality (350-page book); andHELP--Layout's On-line Electronic Reference Manual.andP;  In addition to thedocumentation package, Layout provides several sample flowcharts andprograms, including a Tutor Flowchart which is both a learning aid and anactual program.andP;  Finally, Siskel and Ebert types can also order an optionalVHS demonstraton video for $9.95.andP;  In case you still need help, Matrixprovides a free telephone support service as well as an electronic bulletinboard, and electronic mail for MCI Mail users.andM;The &quot;Read Me First -- An Introduction To Layout&quot; booklet tells you how toinstall Layout, then presents a quick start tutorial which introduces you toLayout's cardfile feature and guides you through the construction of a smallelectronic address book database.andP;  The tutorial does not attempt to explainHOW Layout works or WHY you should build the program in a certain way.andP;  Itsimply shows you the WHAT to do, so you can finish a program quickly.andO;Considering the length of the exercise (i.e., over 50 pages of instructions,or about 2 hours of concentrated effort), it can be quite frustrating afterit becomes obvious that you will come out of the exercise with no hope ofremembering the procedural steps, and with no understanding or workingknowledge of how to build another program.andP;  We hope most would-be Layoutusers will survive this lack of an early confidence building experience, andwill continue their search for the &quot;beef.&quot;andM;Turning Your Ideas intoandM;RealityandM;The beef is actually described in the 350-page &quot;How To Turn Your Ideas IntoReality&quot; book.andP;  This is the book which teaches you the ideas and conceptsbehind Layout, and how Layout works in detail.andP;  In order to become a Layoutprogrammer, you must first come to grips with some key concepts includingobjects, variables, cards, elements, and blackboxes.andM;An object is anything on the screen that you can select to make somethinghappen (like an icon or a button).andP;  A variable is an object that containschangeable information.andP;  A card is an object that contains other objects suchas buttons, variables, pictures and text (i.e., similar to a card inHyperCard).andP;  An element is an object in a flowchart that performs a specificaction, such as displaying a message or making a sound.andP;  A key Layout conceptand construct is the blackbox.andP;  A blackbox is a group of elements, aelf-contained plug-in unit designed to perform a specific task.andP;  Blackboxesthat extend Layout's internal functions can be built with a computer languagelike Pascal.andP;  They can be built using a special application programminginterface (API) which comes with an optional Matrix Toolkit, or they can bepurchased from a vendor.andP;  For example, Matrix has released two blackboxproducts ($69.95 each).andP;  The telecommunications package contains buildingblocks to support a range of communications applications including terminalemulation for IBM and DEC environments, autodialing, and access to electronicmail.andP;  The dBase blackbox package supports the integration of dBasetechnology into Layout programs by allowing you to open and close dBasefiles, read and write to dBase records, add new dBase records, and relateyour Layout cardfiles to Dbase files.andP;  The real attraction here is thecapability of creating your own graphical front-end to dBase.andM;Programming in Layout involves the use of five tools which are invoked fromLayout's Desktop.andP;  The Desktop is a DOS shell which is similar to the GEMDesktop (see the screen showing the Layout Desktop).andP;  In fact, many users maychoose to use the Layout Desktop as a simple way to work with their files andto launch their DOS applications.andP;  The Desktop serves as an organizer for theother Layout tools, which can be summarized as follows.andM;FlowChart is the main tool in Layout.andP;  Programs are built in the form offlowcharts.andP;  Flowcharts control the basic design and action of the program.andO;All other tools support the flowchart creation process.andP;  You typically startthe program creation process by selecting the FlowChart Tool from theDesktop, and use the various support functions available through pulldownmenus to design a rough outline of your program.andP;  A screen showing a typicalLayout flowchart and a pulldown menu accompanies this article.andP;  You continueto extend your flowchart by adding elements, blackboxes, cards, pictures, andHelp files.andP;  Most of the common types of objects that you need are alreadybuilt into the FlowChart menu options.andP;  At any point in time your program isrepresented by a graphically displayed flowchart (or hierarchy of flowcharts)which can be viewed and even executed directly from within the FlowChartTool.andP;  The flowchart tools support If-Then-Else constructions and Whileloops.andM;Cards Tool is used to design cards and build cardfiles which storeinformation that programs use nsimilar to creating stacks within HyperCard onthe Macintosh).andP;  The Cards Tool allows you to create cards quickly whichcontain three kinds of objects: Variables (that hold information), buttons(that trigger actions), and informative or decorative background objects.andP;  Aswith HyperCard, Layout provides the capability to link cards which containpieces of information (all of which may be in different formats and indifferent files) together dynamically to create standalone card-files thatwork and act like miniature programs.andM;BlackBox Manager is used to add new blackboxes, delete old ones, and examinea directory of all the blackboxes which are currently available for use inany program.andP;  Layout procedures are made into blackboxes with the Create aProgram or Make a Blackbox options (from the Flowchart Tool menus), and areadded automatically to the Blackbox Manager.andP;  You can add a blackbox to yourflowchart just like you would add any other flowchart element.andM;The Blackbox Manager includes a blackbox export facility which makes it easyfor you to copy and distribute your blackboxes to other Layout users.andP;  Italso provides an option which creates the header file necessary to install ablackbox written in a computer language.andP;  Layout comes with a number ofuseful ready-to-use blackboxes supporting basic operations involving DOSfiles, printing, load and save boxes, menus, objects and links, etc.andM;Paint Tool lets you create decorative artwork, such as company logos orpicture borders, or graphics which become objects like icons, buttons, etc.andO;Paint Tool allows editing at the individual pixel level.andP;  It also includes aConvert tool to import scanned images, clip art, or use pictures created byother popular paint programs, like PC Paintbrush and Dr. Halo.andP;  Layout comeswith a useful selection of ready-to-use artwork organized by topic (e.g.,andO;people, ideas, theater, etc.).andM;HelpMaker is used to build on-line Help manuals for Layout's programs.andP;  Ittakes an ASCII text file created on your favorite word processor and compilesit into a Help file which can be used as an interactive Help manual inside aLayout program.andP;  Layout's on-line context sensitive Help (one of the betterimplementations which we have seen for the PC) was built using HelpMaker.andM;The User InterfaceandM;Obviously, the user interface will play an important role in the ultimatesuccess or failure of a product which aims to shelter a non-technicalcomputer user from the complexities associated with telling a not-so-smartmachine exactly what it should do (i.e., computer programming).andP;  In general,Layout makes good use of techniques such as the desktop metaphor, directmanipulation, icons, point-and-click function activation, pulldown menus,pop-up dialog boxes, etc., to provide a Graphical User Interface (GUI) for atask which normally involves the use of a complex textual-oriented commandlanguage.andM;A person familiar with Microsoft Windows, GEM, or the Macintosh type of GUI,will be able to learn to use either the keyboard or a mouse to perform thebasic Layout operations relatively quickly.andP;  Layout operations relativelymethod for you to customize several aspects of its user interface.andP;  Forexample, you can assign &quot;shortcut&quot; key equivalents (of your choice) for anyof the Layout menu options.andP;  This is a nice productivity feature forexperienced users.andM;The representation of a program in flowchart form with elements identified byboth pictures and user supplied terminology is a key user interfce innovationand a big step toward a new more intuitive from of visual programming.andM;Unfortunately, some lack of consistency and uneven attention to userinterface design details show up in many ways which are likely to confuse andfrustrate users during the Layout learning process.andP;  Some examples of pooruser interface implementation are summarized in the following paragraphs.andM;Direct manipulation techniques are used to good effect in the Cards Tool toLayout cards, but are missing in other important interfaces.andP;  For example,modification of the pictorial representation of flowchart elements (whichlends itself very nicely to direct manipulation) must be done by a veryawkward procedure involving a combination of keyboarding and selections frompulldown menus.andM;After getting used to the convenience of using what Layout calls a &quot;Loadbox&quot;(loading a file displayed in a directory window via a mouse point-and-click),you find yourself forced to key a full path name within the Cards Tool whenchoosing a cardfile to assign to a cardfile variable.andM;An &quot;undo&quot; function (one that will undo the effects of the most recent userinitiated action) is extremely useful during the periods of uncertaintyassociated with the creative design process.andP;  Layout does not have aconsistently implemented &quot;undo&quot; function.andP;  There is an Undo menu option inthe Paint Tool, but not in the other tools.andP;  The Cancel function assigned tothe Esc key will perform an undo function sometimes, but its behavior is notentirely predictable.andM;Dialog Alert boxes are supposed to help a user to get out of an error orabnormal situation gracefully.andP;  In Layout, if you accidentally click on afloppy drive which is empty (a not too farfetched beginner's mistake) you endup in an endless loop with the &quot;Try Again, &quot; the &quot;Continue&quot; options, and eventhe Esc key all initiating another disk read.andP;  The user has to come up with aformatted floppy to get out of this loop, reorient, and then proceed.andM;In most cases, Layout provides menu option equivalents for keyboard invokedfunctions.andP;  This is a good way to avoid totally &quot;hidden functions&quot; which canonly be learned through the painful process of rote memorization.andP;  However,there are cases in Layout where important functions are assigned to functionkeys exclusively.andP;  The requirement to end a text input equence with the F2key is an example of a hidden (Layout does not come with any keyboardtemplates) non-intuitive function.andP;  By the way, the F2 key is also used asthe only means for marking groups of flowchart elements for moving, deleting,and copying.andM;Layout would benefit from some improvements in its graphical presentation.andO;For example, the fonts associated with many aspects of Layout's userinterface (e.g., pulldown menu option labels) are very small.andP;  This easilycan result in eye discomfort, particularly on a VGA monitor.andP;  Thepresentation of windows, dialog boxes, and pop-up Help windows is relativelycrude and undifferentiated.andP;  For example, you can find yourself trying toselect options from inactive windows which have been partially overlappedne.g., Alert Box options showing from under a Help window), since no attemptis made to use graphical techniques to show depth or to distinguish betweenactive and inactive options.andM;The current Layout Graphical User Interface (GUI) does not have the pizazz ofother DOS GUIs such as GEM and Microsoft Windows.andP;  For example, you cannotre-size windows by rubber-banding, lasso desktop icons, turn a window into anicon, drag an icon to the trash can, use mode sensitive cursor shapes, etc.andO;We also failed to find any special video effects (e.g., fades, wipes, andsplits) or sound effects (other than a beep) which can make presentationsmore interesting and informative.andP;  Presumably, programs which you create withLayout will also lack these useful user interface techniques and specialeffects.andM;ApplicationsandM;Assuming that you are sufficiently motivated to become a Layout programmer,in spite of the inherent complexities of detailed flowcharting and some userinterface design shortcomings, what kind of applications will you be able toprogram with Layout?andP;  The answer to that question is really one of&quot;programming limbo,&quot; or -- How low can you go?andP;  At the low end of thespectrum, a person capable of writing low level C or assembler routines,taking full advantage of the blackbox construct, could use Layout to developjust about any DOS application program that he could conceive.andM;The Matrix Layout promotional videotape provides ample proof that Layout canbe used to create commercial quality programs across a range of applicationareas including education, finance, electronic publishing, and scientific.andO;For example, Diskbook by Signum is a program for creating and managingelectronically published documents including pictures, indexes, footnotes,references, and tables of contents.andP;  And ProfitFinder is a financial analysisprogram used by bankers to study the profitability of different servicesoffered to their customers.andP;  Good examples of what can be achieved using thefull power of Layout are found within the Layout program itself.andP;  The PaintTool and the Cards Tool were developed using basic Layout function.andM;At the other end of the spectrum, those who are restricted to higher levelconstructs, such as cards, will be able to match or surpass what theirMacintosh counterparts are doing with HyperCard.andP;  At this level you couldcreate a program to automate the cataloging and management of anyindexcard-like &quot;databases&quot; (e.g., your phone book of contacts and customers,your customer profiles, or annotated records of all your video tapes as donein Layout learning exercise).andP;  Layout's built-in Helpmaker Tool adds a newdimension to its basic hypertext capabilities, making it particularly well-suited for simple authoring of computer-based training (CBT) programs.andM;The application potential increases dramatically for the Layout user capableof going beyond hypertext programs to programs incorporating blackboxes.andP;  Theability to use pre-built blackboxes alone opens up an expanding number ofpossibilities, such as adding full dBase access and capabilities to yourLayout programs, personalized DOS shells and utilities, and customizedtelecommunications programs.andP;  Matrix plans to take advantage of Layout'sextensibility by expanding its selection of blackboxes and encouraging thirdparty software developers to do the same.andP;  According to the Matrix Layoutvideotape, over the next few months we can count on seeing pre-builtblackboxes which will support the development of applications involvingbusiness graphics, file management, text management, interactive graphics,advanced statistics and math, and realtime communications.andM;Currently, Layout applications are restricted to a standalone DOSenvironment, and the resulting GUIs do not adhere to any of the emerging GUI&quot;standards.&quot;andP;  However, we are informed that future Layout developmentsinclude operation in OS/2 and Unix environments, integration with popularGUIs such as Microsoft Windows, Presentation Manager, New Wave and Open Look,and networked versions for use in peer-to-peer and client/serverconfigurations.andM;ConclusionsandM;We feel that those who have great expectations for advanced OOPS tools suchas Layout, with respect to their power to open up the wonderful world ofapplication programming to a majority of us &quot;want-to-be&quot; programmers, areunderestimating the task at hand.andP;  Both the Matrix marketing and Layoutinstructional documentation talk a lot about creating your own computerprogram and giving it to others (co-workers and friends).andP;  They imply thatthis mainly involves the creation of a DOS executable (.EXE) file whichothers can run without having a Layout runtime environment.andP;  This view doesnot acknowledge one of the major problems of creating a useable applicationprogram.andM;When you start to create &quot;your own&quot; program you suddenly become, among otherthings, a User Interface Designer.andP;  If your program requires humaninteraction of any significance you will have to make and implement manydecisions involving the logic and aesthetics of the computer-human interfacedesign.andP;  When you are designing a Layout program which others will use, youmust anticipate and handle every possible user action at each flowchartelement.andP;  You must break down concepts until they cannot be broken down anyfurther.andP;  While a tool such as Layout provides you with the capability ofincorporating a wide range of traditional and graphical user interfacetechniques into your designs, it does not enforce a user interface designdiscipline, or a &quot;look and feel&quot; policy based upon principles of goodinterface design.andP;  Creating a good GUI is a difficult and time-consumingtask, often requiring an iterative design process which makes use of modernrapid prototyping and usability testing methodologies.andM;Assume for a moment that you have a special talent for designing userinterfaces which do not turn the friends you share your programs with intoinstant enemies.andP;  Then your success with Layout will probably depend upon (1)your aptitude for linear logical thought, and (2) how quickly and creativelyyou are able to take advantage of blackboxes as higher-level procedures toautomate the tedious process of defining an end-to-end application flowchart.andO;The whole process is more likely to flourish in an in-house softwaredevelopment environment where several Layout &quot;believers&quot; stimulate each otherto greater heights and leverage off each others' programs and blackboxes.andM;After reviewing one of the more promising OOPS packages in some depth, wetend to reach the same conclusion expressed by Andy Seybold in his April 1989Outlook.andP;  According to Andy, the current generation of OOPS programs willfirst gain acceptance &quot;in companies that have in-house staff with theexpertise to design and build in the initial user interface and function,leaving end users to concentrate on tweaking the program to make it moreexactly match what they have in mind.&quot;andP;  In short, do not expect the predicteddesktop programming &quot;revolution,&quot; but rather pockets of success, or &quot;athousand points of light&quot; that will sustain an evolution to even higher levelOOPS.andO;</TEXT></DOC>
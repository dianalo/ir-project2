<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-867-944  </DOCNO><DOCID>07 867 944.andM;</DOCID><JOURNAL>Systems Integration  Nov 1989 v22 n11 p27(3)* Full Text COPYRIGHT Cahners Publishing Co. 1989.andM;</JOURNAL><TITLE>DBMSes stake a PC-LAN claim. (DBMS/report) (column)</TITLE><AUTHOR>Carnahan, Ron.andM;</AUTHOR><SUMMARY>OS/2 has advanced the age of multi-tasking data base managementsystems in the microcomputer local area network world.andO;Previously, users were stuck in the single-tasking limitations ofMS-DOS that restricted multiuser capabilities of network dbmsprograms.andP;  The emergence of OS/2 has created new client-serverconfiguration network dbms applications.andP;  In such a configuration,the front end of the application runs on the local microcomputer,while the back end of the application runs on the OS-2 fileserver.andP;  Record locking and concurrency is performed at theserver, rather than at the client level.andP;  Among those developingOS/2 network dbms systems are Oracle Corp, Sybase Inc and GuptaTechnologies.andM;</SUMMARY><DESCRIPT>Topic:     Data base management systemsLocal Area NetworksOS-2File ServersPerformance Measurement.andM;</DESCRIPT><TEXT>DBMSes stake a PC-LAN claimandM;Until recently, running a DBMS on a network of personal computers meantchoosing between two undesirable alternatives.andP;  The first was to set up thePCs in terminal-emulation mode, access the host computer where the databaseresided, and then run the PCs as dumb terminals.andP;  The PC user might downloaddata for later use in an application program (like a spreadsheet or a localdatabase), but the processing power of the PC was completely ignored wheneverthe user wanted access to a shared database application.andM;The second alternative was even less appealing.andP;  When running a databaseapplication, the file server would first send the database management systemsoftware over the network to the PC.andP;  Then, when the application opened adatabase, the database file--with any index files in use--would be sentbehind it.andP;  When the database was closed, both files would be sent back tothe file server, where they might inadvertently be written on top of files ofthe same name that another user had accessed, changed and saved.andP;  This meanta lot of data moving over the network and, without file-locking, mademultiuser database applications unrealistic.andM;Steve Weiss, OS/2 product manager at Relational Technology in Alameda,Calif., sums it up, &quot;In the MS-DOS and PC-DOS world, you're working with asingle-tasking environment.andP;  Until recently, the kinds of operating systemsthat would be running on the network file server (and across the networkoverall) just did not support the type of multiuser, multitasking DBMS thatallows for proper database operations.&quot;andM;Now they do.andP;  Paul Singh, manager of the Developer Program at 3COM, SantaClara, Calif., credits the introduction of OS/2 for the increased attentiongiven DBMS applications on local area networks today.andP;  Singh believes thatthe availability of OS/2, an IBM standard PC operating system that can beused for either DBMS or LAN functions, gives DBMS publishers much-neededconfidence in the PC-LAN platform.andP;  Before OS/2, Singh notes, DBMS publishersresisted porting to proprietary, usually preemptive, network operatingsystems.andM;Enter the client-serverandM;Now, DBMS publishers like such Californian companies as Sybase of Emeryville,Oracle of Belmont and Gupta Technologies of Menlo Park, are actively pursuingthe market by adopting a client-server architecture that makes a lot of sensein a network environment.andP;  In client-server configurations, application frontends run on client PCs, and database back ends run on OS/2 or otherhigh-performance servers.andP;  User applications access the database across thenetwork when they need data.andP;  Only the required data is sent back to theclient.andP;  All concurrency control, record-locking and otherdatabase-management functions are performed at the server.andP;  Network trafficis greatly reduced and true multiuser applications are possible.andM;Sybase was a pioneer in client-server architecture and owes a large part ofits success to the excellence of its implementation.andP;  Simply stated,&quot;client-server&quot; means that application functions are separated fromdatabase-management functions.andP;  In Sybase's case, the server itself is amultithreaded single process that handles data requests from all users inparallel.andM;Traditional DBMS products involve a separate DBMS process for each user, inaddition to the user application process.andP;  This results in more processescompeting for memory and CPU time and adds significantly to the number ofcontext switches performed.andM;But the advent of client-server architecture on PC-LANs is just thebeginning.andP;  DBMS publishers and practitioners are looking forward to newtechnology that will permit LAN users to execute single SQL (structured querylanguage) queries involving multiple tables that not only reside on differentnodes of the network but also are stored by different DBMS (and non-DBMS)packages.andP;  This would be on hardware ranging from PCs to mainframes, allusing a user-interface management system of the developer's choice.andM;Heterogeneous distributionandM;Rod Zimmerman, manager of product marketing at Gupta, explains: &quot;The problemis that we are at a point now where there are a lot of different databasesout there.andP;  It's just not practical to say that one database will run onevery platform--and be efficient on every platform.andP;  Some DBMS publishersmake their business line 'portability,' but when you look at the realities ofwhat they've accomplished, they've got platforms on which their products runwell and others that are more like second thoughts.&quot;andM;Gupta has adopted what Zimmerman calls a &quot;connectability&quot; approach, meaningthat Gupta attempts to give users of its SQLBase access to various vendors'DBMSes.andP;  The greatest challenge, Zimmerman explains, is translating SQLqueries from one DBMS's dialect to another's.andP;  &quot;We have developed anarchitecture that includes a LAN translation component and an SQL translationcomponent.andP;  When SQL messages are sent over the LAN, you use a LANprotocol--NetBIOS or named pipes for example.andP;  When you go to the mainframe,you have a different set of protocols, like LU 6.2.&quot;andP;  Gupta uses a gatewaycalled SQLHost at the IBM mainframe to translate the NetBIOS to LU 6.2.andP;  Thisgateway also converts the SQLBase query into the IBM DB2 format.andM;But Gupta is planning a different approach for its gateway to Oracle's DBMSproduct.andP;  Zimmerman explains: &quot;Because Oracle runs on so many differentplatforms, we've moved the SQL translation component we call SQLHost backonto the LAN.andP;  So, the SQL gateway and the SQLHost are one program.andP;  If we'dkept the DB2 architecture, we would need a different port for every platformthat Oracle runs on.andP;  Instead, we do the translation from Gupta SQL to OracleSQL on the LAN.andP;  Then we have Oracle's connectivity software take the SQLthat we generate at the LAN to whatever platform Oracle runs on.andP;  However,this plan is waiting on just one thing--Oracle's delivery of theirconnectivity software, called SQL*Net, for OS/2.&quot;andM;Making it happenandM;Relational Technology's Eric Wasiolek, manager of distributed Ingres productmarketing, explains the challenges involved in building a heterogeneousdistributed database gateway: &quot;The gateway is a process that maps commonconstructs [like a common query language] to the proprietary constructs of aparticular data manager.andP;  For example, consider an application involving aDigital RMS [record management system] data set and Relational's Ingresdatabase.andP;  The gateway would provide a consistent interface to thedistributed database management process so any data source looks to theapplication like an Ingres database.andP;  The gateway converts the calls that aresent to the data gateway to the RMS file-system management routine.andM;&quot;But there are four major problems that need to be solved.andP;  First, datamanagers understand different query languages.andP;  Even within the relationalworld, although there is SQL, not all SQL dialects are equivalent.andP;  There aresyntactical differences in implementations.andP;  And there are semanticdifferences, so that one data-management system may not execute a givensyntactic construct in exactly the same manner as another data-managementsystem.andP;  This could be called the problem of heterogeneous SQL.andP;  The problemis exacerbated when you're talking about non-relational database managementsystems, which don't even understand SQL.andP;  They expect a completely differentsort of query language.andP;  For example, IBM's IMS has its own proprietary querylanguage, and in the case of file systems, like RMS, there are file-handlerroutines.&quot;andM;&quot;The second major problem,&quot; continues Wasiolek, &quot;is that all of thesedata-management systems generate different error codes.andP;  In building ourgateway strategy, we looked at the error codes of various data-managementsystems and were able to categorize their errors into sets of generic errors.andO;Depending on the data-management system, there are typically from 1,000 to asmany as 4,000 error codes.andP;  We map these into categories of generic errors,where we have on the order of 50 generic errors.andP;  Appended to each genericerror is the proprietary error code, so the application can get moreinformation on the exact cause of the error, if it needs to.andM;&quot;Problem No.andP;  3 is that different data-management systems have radicallydifferent data-dictionary structures.andP;  So we defined, based on a relationalrepresentation of system catalogs, a common system catalog specification.andO;This is a set of calls that detail how to get information about the structureof the underlying database.andP;  It's based on our gateway query language, whichwe call 'Open SQL.'andP;  The data gateway converts these common sets ofcatalog-access routines into proprietary access routines that are used foraccessing data-dictionary information in the particular proprietary datamanager.andM;&quot;The final problem is one of communication.andP;  The protocol by which the clientsends information to, and receives information from, the server (and theformat of the message that goes from the client to the server and back) aredifferent for each vendor.andP;  The result is that vendor A's client cannot evenestablish communication with vendor B's data manager.andP;  We resolved thisproblem of inconsistent client-server protocols by adopting the InternationalStandards Organization's proposal called 'Remote Database Access.'andP;  We had tochoose some standard client-server protocol, and that's the best we thoughtwe could do.andP;  We call our implementation 'GCA' for Global CommunicationsArchitecture.&quot;andM;Wasiolek concludes: &quot;You can see that the data gateway is essentially amapping process.andP;  It maps common constructs, namely Open SQL, generic errors,common system catalog routines and GCA to the proprietary equivalents of theunderlying data manager.andP;  In other words, it maps Open SQL to an IMS call, aproprietary Oracle error code into a generic error, a common system catalogaccess into a set of routines for an RMS file system.andP;  That's really thebasis of how our data gateways provide a consistent interface to varied datamanagers.&quot;andM;Pitfalls and challengesandM;But the database designer should not be too anxious to embrace thistechnology.andP;  In spite of the great promise this area of the DBMS industryholds for future applications, today's PC-LAN DBMS platform still has somematuring to do.andP;  For instance, at present, two-phase commit in heterogeneousdistributed database applications is only accomplished through extensiveapplication-specific coding.andP;  So, as Dwight Davis, director of marketing inNovell's development products division in Provo, Utah, notes, &quot;Most peoplewho are implementing this type of distributed database are using it forread-only applications.&quot;andM;Davis notes that defining an industry standard SQL application programminginterface and the ability to do a partial transaction commit would move theindustry closer to true heterogeneous distribution.andP;  But, he continues &quot;interms of higher performance, connections among different systems&quot; willcontribute to the solution.andM;In short, DBMS technologies currently available on the PC-LAN platform makedistributed-database applications possible.andP;  Client-server architecture makesmultiuser database applications much more attractive than did pastarchitectures.andP;  Homogeneous distributed DBMSes provide the same class ofservice as more traditional local DBMSes.andP;  And, even though they aren't quitethe same familiar DBMS products, heterogeneous distributed-database platformsare offering PC users access to information on other PCs, minicomputers andmainframes through familiar user interfaces.andM;Ron Carnahan is a senior management consultant with JYACC Inc., a New Yorkbased company providing management and technical consulting services as wellas a line of application development tools.andO;</TEXT></DOC>
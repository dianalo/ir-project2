<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-551-922  </DOCNO><DOCID>08 551 922.andM;</DOCID><JOURNAL>UNIX Review  June 1990 v8 n6 p142(2)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>The last word. (letter to the editor)</TITLE><AUTHOR>Price, Timothy C.; Toppin, Doug; Taylor, Vince.andM;</AUTHOR><DESCRIPT/><TEXT>THE LAST WORDandM;Supervening CorrespondenceandM;Dear UNIX REVIEW,andM;I would like to express appreciation for your continuing efforts to cover thewhole scene of UNIX computing, including numerical applications.andP;  While Ifound your articles on supercomputing in Vol.andP;  8 No.andP;  4 to be worth reading,they seemed out of touch with reality at times.andM;If Robert Panoff (&quot;UNIX for Super Computing?&quot;) defines a supercomputer as onewith 100 times the memory and 1000 times the speed of current cost-effectivemachines, we might take as a baseline the 80486 machines discussed in thatsame issue.andP;  Thus, he must be talking about a minimum of 400 MB or realmemory and 1000 MFLOPS performance on vectors of length 50.andP;  As no suchmachine exists, it seems contradictory to fault UNIX for taking too large achunk out of memory on a five-year-old machine with only 32 MB and nohardware support for virtual addressing.andP;  He should be impressed that itcould even approach satisfacotry operation!andM;If supercomputing is, in Dr. Panoff's view, something that should berestricted to installations large enough to support their own homegrownoperating systems, there may be some merit in the view that UNIX should bekept out.andP;  This point of view leads one to the idea that supercomputingshould be antithetical to ease of use, since he expects to see differentoperating systems on supercomputers than on other machines, and not to haveit support network filesystems.andM;Dr.andP;  Panoff has not explained what obstacles he expects UNIX to place in theway of his favorite mode of operation.andP;  One of the greatest benefits I havefound in supercomputing with UNIX is the ability various machines have towork across a network without duplicating files, aside from maintainingseparate Makefile, .o, and a.out files.andP;  Of course, Cray uses a binary dataformat that is incompatible with IEEE, so, unlike files in theminisupercomputer world, Cray files have to be translated.andP;  Mostminisupercomputers provide alternate FORTRAN libraries that read and writebinary files in VAX format, and few serious FORTRAN compilers, even underUNIX, fail to support any reasonable feature of VMS FORTRAN.andP;  Work-alikeversions of most VAX/VMS and PC-DOS software are available to run under UNIX.andO;ASCII source code and data files can be examined and edited by any of theutilities available on any machine on the network, so it is not evident thatany functionality is lost in simply removing some of the obstacles present inDr. Panoff's present systems.andM;Granted, many people who implement UNIX have a casual attitude towardreliability and protection against mistakes, but it is hard to make a casethat this problem is entirely the fault of UNIX or that homegrown operatingsystems are a solution.andP;  CTSS is likely never to be available to most of us,so I can't speak from direct experience.andP;  I have used several both-orientedsystems in the past, such as the mainline CDC systems, which had noprotection against overloading the job queue and which would crash ifeveryone logged on happened to start an average of two batch jobs.andM;The minisupercomputer installations with which I am familiar had nosignificant experience with UNIX before acquiring minisupercomputers, nor didthey hire people with prior UNIX experience.andP;  They moved from single-vendor,obsolete, proprietary operating systems to multivendor UNIX systems with nomore than the expected pain, and these are certainly not installations thatcould consider customized operating systems.andP;  It doesn't take many months forusers to find out not only that basic commands such as wc, grep, make, anddiff are a big improvement over the equivalents that are supported byproprietary systems, and that scripts can be built with help from lex and awkto translate much inscrutable FORTRAN from the past into portable,structured, indented code.andP;  These scripts do in fact work the same onworkstations and minisupercomputers, if one avoids piping between C andFORTRAN, which I haven't seen attempted under any other operating systems.andM;Timothy C. Prince Grose Pte Farms, MIandM;Robert Panoff responds: I do not believe supercomputers should be witheldfrom users--on the contrary, they are and should be made available to as manyscientists and engineers as can use them effectively.andP;  Neither do I believe,however, that &quot;satisfactory operation&quot; is something to be satisfied with orimpressed with.andP;  As supercomputers evolve, we have to be willing to let theoperating systems evolve along with them.andM;I have been very happy to use UNIX-like systems on some newer Crays,Connection Machines, and other multiprocessor platforms.andP;  But I did not waituntil UNIX came along to be productive.andP;  A primary point I tried to make inmy article is that I see very little in UNIX that is particularly unique andthat would make me more productive than I already am.andP;  So if you convert mymachine that isn't running UNIX into one that is, you better have a goodreason for doing so.andM;My own experience tells me that the UNIX community is satisfied when it getsUNIX to run on a new system, but that is not overly concerned with getting itto run well.andP;  The thrust of my discussion, which is very much rooted in thereality of large-scale scientific computing, is that one must be prepared forrapid changes in system design--and waiting to UNIX to catch up each time isnot necessarily the most effective use of resources.andP;  POSIX-compliantsystems, which offer a hope of some standardization across systems andarchitectures, may very likely retain the look and feel of contemporaryUNIX-like systems.andP;  But if the commands, editors, or file structure end upresembling something far afield from UNIX, so be it--as long as they make memore productive.andM;One area of concern is the degree to which UNIX and UNIX-systems people areinclined toward small processes and scalar operations.andP;  As supercomputersprogress in multiplicity of processors (with shared and distributed memory),we may need to start over with a fundamental re-appraisal of the needs of atruly parallel operating system.andP;  &quot;Getting UNIX to run well onsupercomputers&quot;, given the historical roots of UNIX as a castrated version ofMultics, may be akin to &quot;extra-strength light bber&quot;.andP;  While not overlookingthe many advantages of the workstation-to-supercomputer transition which maybe made easier for some users by keeping the operating system the same ornearly the same, let's not limit ourselves to that mode of operation, either.andM;What A Wonderful ViewandM;Dear UNIX REVIEW,andM;We have been using Vermont Views for a year or so and generally concur withEdgar Bartholomew's opinion that it is well done (&quot;Off the Shelf&quot;, Vol.andP;  8No.andP;  4).andP;  One item that should be pointed out, though, is that the VermontViews' runtime libraries will add significantly to the size of anapplication.andP;  The typical program size for applications that use VermontViews on our system (SCO Xenix 2.2.3 286) has been in the 100-to-200 KBrange.andP;  The memory utilization is much higher than we had originallyestimated.andP;  If you are planning to use Vermont Views, the average programsize should be determined before your decide on how much memory to install.andO;Shared libraries (not available on our version of Xenix) may be necessary tosomeone planning to have a number of Vermont Views processes simultaneouslyrunning in a limited-memory environment.andM;Doug Toppin uunet!melpar!toppinandM;Dear UNIX REVIEW,andM;The recent favorable review of Vermont Views would have been even morefavorable if it had concerned version 2.0 of Vermont Views instead of version1.1.andP;  Version 2.0 adds a menu-driven screen designer to the comprehensive Clibrary of interface functions with which the reviewer worked.andP;  Using theVermont Views designer, programmers can quickly create operational prototypesthat serve as the framework for the final application.andP;  All of the powerfulfeatures mentioned in the review are now accessible in the interactiveenvironment.andP;  Mr. Bartholomew will be glad to know that Vermont Views still&quot;makes no assumptions&quot; for the developer.andP;  If he had known about Version 2.0,it seems likely that the only two Bs on the report card (for ease of use andenvironment) would have been replaced by As.andM;Also, Mr. Bartholomew says, &quot;The limited binary support for various flavorsof UNIX isn't much of a problem as long as the company continues to bewilling to ship sources.&quot;andP;  Our policy has always been and will continue to beto make available fully documented source code for the cost of object codefor machines we do not have in-house.andP;  Encrypted source conveys the advantagethat applications created with Vermont Views can be ported at no further costamong all compatible operating systems.andP;  Because we support a wide variety ofmachines through encrypted source, the code we distribute runs on virtuallyany flavor of UNIX after Version 7.andM;Finally, the platform and pricing information provided was incorrect.andP;  Wesupport IBM PCs operating under PC-DOS.andP;  The interfaces developed under DOSare readily portable to UNIX and other supported operating systems.andP;  Theprice for Vermont Views 2.0 for DOS is $495.andP;  Prices for terminal-basedoperating systems start at $1795.andM;In closing, I would like to thank Mr. Bartholomew for raising the banner forcharacter-based interfaces and for a generally fair and accurate review.andM;Vince Taylor Chief Executive Officer Vermont Creative Software</TEXT></DOC>
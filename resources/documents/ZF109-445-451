<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-445-451  </DOCNO><DOCID>09 445 451.andM;</DOCID><JOURNAL>Government Computer News  Sept 10 1990 v9 n19 p50(3)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>Micro DBMS software: databases now juggle text, graphics, evenmusic. (data base management systems) (Government Buyers Guide)(buyers guide)</TITLE><AUTHOR>Price, Rebecca; Clayton, Christopher.andM;</AUTHOR><SUMMARY>Data base management software is changing to reflect the diverseneeds of real-world users.andP;  Many data base packages are now ableto manage text and graphics as well as perform such specializedfunctions as the scanning of photographs, music and engineeringdrawings.andP;  Crucial to the needs of relational data base users arethe capabilities of managing and manipulating stored informationin terms of the principals of relationality set forth by E.F.andO;Codd in 1986.andP;  Since then, the technologies of networking,client-server architectures and the database server have enhancedthe range of tasks that can be performed.andP;  The Buyer's Guideprovides a capsule view of the vendor, operating environments,fields per record and price of 56 relational data base productscurrently on the market.andM;</SUMMARY><DESCRIPT>Topic:     Data Base Management SystemsSoftware PackagesMultiuser SoftwareSoftware PublishersOperating SystemsIntegrated Software.andO;Feature:   illustrationtable.andO;Caption:   Packages for MS-DOS, OS/2, Unix and LANs. (table)andM;</DESCRIPT><TEXT>Micro DBMS SoftwareandM;As the nature of data changes, so does the nature of data management.andO;Databases now manage the text, graphics banks, scanned photograph, motionpictures, engineering drawings, even digital music.andM;If it can be digitized, it represents data that needs to be managed, stored,accessed and retrieved in usable format.andM;When information is fairly simple, it can be arranged sequentially in longtables.andP;  Such single-table records also are known as &quot;flat file&quot; databases.andM;But real-world users always need to cross-correlate information, breaking uprecords in different tables according to some criterion, such asalphabetically by last name or sequentially by an identifying number.andP;  Thisneed led to the development of the relational DBMS.andM;Because data rarely gets entered in a database in sorted order, a few recordinsertions and deletions will mix up any arrangement, no matter how careful.andO;Databases get around this with index files.andM;An index file keeps track of where the actual data is, as a function of itssorted position.andP;  Databases generally have more than one index file to allowsorting on more than one field.andM;The organizational relationships among the various data items are crucial toeffective operation of a DBMS.andP;  Thus the early minicomputer- andmainframe-based sequential and hierarchical files, as well as tree and plexstructures, rapidly gave way to the relational database, defined by therelational algebra developed by E.F.andP;  Codd in the early 1970s.andM;Golden RulesandM;No microcomputer DBMS yet meets all of Codd's 12 rules for relationality asset forth in 1986.andP;  At present, a so-called relational micro DBMS mustsatisfy the following three criteria.andM;First, the data must be laid out in table format.andP;  Rows represents therecords, columns are the fields.andM;Second, the DBMS must support SELECT, PROJECT and JOIN operations either ascommands or as features within its structure.andM;Third, according to the so-called uniqueness rule, any data location in atable must be unique and accessible directly by a single SELECT command.andM;In the early days of PC databases, relationality was seen as the panacea forall data management ills.andP;  These days, life is more complex.andM;The issues now revolve around whether a micro DBMS will run on a network, howwell, and whether it supports multiple users.andM;How does the database interface with users?andP;  How good is its query format?andO;Which tool is most appropriate to get at the data?andP;  It all depends on theenvironment: CD-ROM, optical write-once storage, tape, disk or phone-inpublic network.andM;The transition of the micro DBMS from a standalone, single-user environmentto multiuser networks has created a whole new pattern of use, resulting innew architectural demands.andM;When DBMS products first became network-compatible, they allowed severalusers to work simultaneously.andP;  But none of these products could exploitnetworking to its full potential.andP;  Each had to run a separate copy of theprogram, storing data on the network's filing resources.andM;This caused several problems.andP;  First, with the older packages, multiple userscould access the same data simultaneously.andP;  The only way to preserve dataintegrity was to operate on a first-come, first-served basis -- any requestto access data in use by someone else had to be denied.andM;Second, all data had to be sent to users over the network.andP;  That was slow andalso burdened the network.andP;  Too many users making complex queries could evenbring it down.andM;Today, the client-server architecture has gone a long way toward solving suchearly DBMS problems.andP;  This approach lets different parts of the network carryout the most appropriate parts of processing an application.andM;User interface functions are done best by the user's machine, while moreintensive operations go to highly optimized servers, which act as massstorage for everyone on a network.andM;Drop in the BucketandM;The main problem with the file server-based architectures is that a fileserver has no intelligence from the user's point of view.andP;  If someone wantsto access a database, the entire file gets sent and the user has to selectthe target data.andP;  All the rest gets dumped into the bit bucket.andM;This wasted motion led to the development of the database server -- currentlythe most exciting development in high-end DBMS products.andP;  A database serveracts like an intelligent file server.andP;  It handles network requests toretrieve and modify data, while keeping sole control over the data's actualstorage locations.andM;Because management of the data occurs at the server, data selection is muchmore efficient.andP;  All processing happens at the server, and only the recordsthat satisfy the query go to the user.andP;  That minimizes network traffic andlessens the chance of a paralyzing gridlock.andM;However, networked databases still suffer from problems with concurrencycontrol and data integrity.andM;Concurrency problems arise when more than one user wants access to a specificdata item.andP;  Data integrity is threatened when both users want to edit theitem at thesame time, frequently in different ways.andM;In a non-distributed database, both issues are resolved by brute-forcelocking.andP;  The DBMS simply will not allow more than one user to access anyspecific item for the duration of the first user's session.andM;But that does not really solve the problem.andP;  It makes the database lessuseful and degrades performance in a heavily trafficked system.andM;A more helpful approach is transaction processing at the server.andP;  Commands tothe server specify certain actions it should perform.andP;  These commands arestored up, but no modification of the database occurs until a COMMIT commandis sent.andP;  All modifications then take place at once.andM;This speeds up response and also works well for multiple users, as severaltransaction lists can be built up by the server's network manager.andM;The major advantage, however, is data integrity in the event of systemfailure.andP;  For example, a transaction might involve retrieving an accountrecord, adding a debit description and subtracting the amount of the debitfrom the total.andM;If each of those actions took place sequentially, a system failure couldleave the record only partially updated.andP;  There would be no good way tocomplete the modification or to undo it all.andM;In a transaction-based system, none of the transaction takes place if anupdate is interrupted.andP;  All the information must be present at the server,and a COMMIT instruction must have been issued, for any action to occur.andO;Failure at the user's station or on the LAN means the specific operation thatwas under way simply does not happen.andM;An incomplete transaction also may be aborted by a rollback command.andP;  Thisrestores the database to its condition prior to the last COMMIT.andP;  In severalcurrently available DBMS products, system failure outside the data servercauses automatic rollback, ensuring data integrity at the cost of losing themost recent update.andM;Transaction-based systems keep a journal of transactions performed since thelast backup.andP;  This journal resides on a disk physically separate from thedata files, and can be played back as needed.andP;  The journal is updated beforeany data modifications, and is used to establish a roll-forward feature.andM;Roll-forward starts from a given point in the database's update history, suchas the most recent backup, and sequentially performs all the committedtransactions stored in the journal.andP;  The database can recover from a failurethat occurs after the COMMIT, but before the modification.andM;The Structured Query Language supports these commit-rollback transactioncommands, as do the various SQL-based data servers currently on the market.andM;The Simple LifeandM;A data server also makes the user's life simpler by adding a layer ofabstraction to the data.andP;  A user looks at a database merely as a collectionof information, and does not care about its actual location on a disk orwithin a file.andP;  The database server takes over the chore of keeping track ofsuch details.andM;It does so by way of a data dictionary -- a table showing what fields are inwhich tables, what indexes exist and where the files are.andM;The actual data might reside anywhere on the system, even on differentmachines.andP;  A truly distributed DBMS could have several client servers on onenetwork, each with files located on several machines.andM;During the last year, a number of promised database server applications havecome out.andP;  One of the first developments of an SQL-based data server wasGupta Technologies Inc.'s SQLBase, introduced in 1986.andP;  It runs in MS-DOS orOS/2 environments.andM;Other DBMS products supporting data server technology are Oracle Corp.andO;Server, Ashton-Tate/Microsoft Corp.andP;  SQLserver, Ingres Corp.'s Ingres andInformix Software Inc.'s Informix.andM;But unless a vendor specifically states that its DBMS is distributed or usesclient-server technology, the buyer should assume it is not a distributedDBMS.andM;One major challenge in distributed systems is finding the desired informationas transparently as possible.andP;  A related issue is how easily the desiredinformation can be specified.andP;  Different products have their own ways ofspecifying what records to retrieve.andM;For example, Ashton-Tate's venerable old dBase has a search menu to specifythe records in a file to be retrieved.andP;  The menu creates a set of logicalconditions that a record must match in order to be fetched.andM;An easier way is the query-by-example (QBE) method of Borland InternationalInc.'s Paradox and dBase IV, among others.andP;  QBE starts out with a blank formindicating the data layout of a given database.andP;  The user indicates whichfields are part of the query description.andM;Qualifying conditions can be entered where needed.andP;  When the description iscomplete, the DBMS searches and returns the records that match.andM;This method works well for DBMS systems with direct control over their ownfiles.andP;  However, it does not lend itself to interaction with a separate dataserver, which needs to have a single command protocol.andM;That problem led to SQL's development.andM;SQL, now the leading standard for database access, attempts to standardizethe ways a user can interact with a database.andP;  It is not a general-purposelanguage; SQL statements are meant to be used in one of two ways.andP;  The usereither issues SQL statements from a command line, or embeds them inconventional languages, as database access functions.andM;It is possible to pass SQL statements to a DBMS through a command line, or tobypass SQL altogether by having the program generate SQL commands in responseto standard menus or screen prompts.andM;SQL allows the user to work with record group rather than one record at atime.andP;  It also is a declarative language that describes the results wantedfrom a database operation.andM;A data server accepts that description and determines the best way to producethe results.andP;  The advantages is that the user need not know anything aboutthe database's internal structure.andM;Standardization efforts have long been under way to complete the language andgive it a more complete range of abilities -- for example, to define ordelete database objects from within SQL or, at a system control level, togrant or revoke access requests.andM;No Two AlikeandM;The SQL versions now on the market have flaws, the main one being that no twoare the same.andP;  Many vendors have added extensions to the language to make itmore useful.andP;  Unfortunately, such extensions prevent an application frombeing ported from one SQL system to another.andM;Also, current SQL standard does not comply fully with Codd's rules ofrelationality.andP;  But the promise of SQL still holds, and efforts to create atruly portable standard have made progress.andP;  With all its quirks, SQL stillis the closest thing available to a true DBMS interface standard.andM;All the issues of relational and distributed databases and SQL boil down tothe same two essentials: access and retrievability.andP;  These have been thornytopics in offices since long before computers existed.andM;The most pressing access problems today concern multiple users, multiplenetworks, freeform text, multimedia information, special-purpose queries,standards, and access across hardware platforms and software interfaces.andM;As if the list were not long enough, new DBMS products have raised otherissues of access denial, data security and integrity, disaster recovery anderror handling.andM;In the days when a DBMS resided on a single-user PC, security was a minorissue.andP;  Now that a DBMS can span entire networks, with many users active atany given moment, security and data integrity have become vital concerns.andM;Of course, distributed databases bring their own subset of problems withconnectivity and portability.andP;  Networks are growing increasingly complex,linking mainframes to Macintoshes and various sorts of PCs.andP;  Often the usersat these disparate platforms all perform some common database functions.andM;Perhaps a VAX user and a Macintosh user both need to use the same DBMS.andP;  Somedata may be stored on an MS-DOS machine and some distributed to a Unixplatform.andP;  The best of the distributed DBMS products, such as Oracle andIngres, provide this cross-connectivity.andM;Data server installations also can grant access to several sorts of databaseswith a common network interface.andP;  The server handles the specificinteractions with databases under its control.andM;In the past, databases were limited to storage of simple, discrete thingssuch as name and address lists and financial data.andP;  But most of the importantinformation in office work has a freeform of textual nature.andM;Specific facts appear in a context by which they are discussed andinterpreted.andP;  The context may be as important as the actual facts or more so.andM;Traditional databases can store only a few key words relating to suchinformation.andP;  After that, the user is on his own to find the actual item.andM;Text does not translate readily into the standard database format, and mostcommercially available databases cannot handle freeform text well.andP;  One ofthe most exciting recent innovations is the text database.andM;Programs like AskSam Systems' AskSam allow random access to data stored intext form and infinitely indexed to any other bit of data.andP;  AskSam, SymantecCorp.'s Grandview, Mainstay Software Corp.'s Mainstay and other personalinformation managers verge on being hypertext programs, yet with strong datamanagement abilities.andM;Stuffed With ExtrasandM;These days, people want to pack even more into their databases: artwork,engineering drawings, voice tapes, video.andP;  Text information about an item mayneed to be linked with an image and cross-referenced in one of the newmultimedia programs.andM;As database evolution proceeds, the vendors of single-user products may gothrough a shakeout in the next year or so.andP;  The survivors likely will imitatecurrent de facto standards, such as dBase or Borland's Paradox, and upcomingstandards such as Gupta's SQLBase.andM;The most interesting category to watch, however, will be the hypertext andmultimedia managers.andP;  Early players have appeared, but the newstandard-bearers probably will not be obvious for another few years.andM;Rebecca Price is a free-lance technical writer, and Christopher Clayton is aresearch engineer in Whitmore Lake, Mich.andO;</TEXT></DOC>
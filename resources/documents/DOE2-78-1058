<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> DOE2-78-1058 </DOCNO><TEXT>Object-oriented programming systems are often used for representing knowledgein knowledge-based systems. However, object-oriented programming systemsare programming systems, and have severe problems when considered asknowledge representation systems, such as their operational--not representational--basis,and their limited expressive power. Object-based knowledge representationsystems--systems expressly designed for representing knowledge in theform of objects and classes--do not suffer from these problems. Object-basedknowledge-representation systems derive their behavior from a formalspecification of the meaning of objects and classes, thus providing anindependent, nonoperational basis for them, and can be much more expressivethan object-oriented programming systems. These systems, the differencesbetween them and object-oriented programming systems, and their superiorityover object-oriented programming systems for representing knowledge arediscussed in this paper.</TEXT></DOC>
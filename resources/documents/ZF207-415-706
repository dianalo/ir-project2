<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-415-706  </DOCNO><DOCID>07 415 706.andM;</DOCID><JOURNAL>Communications of the ACM  July 1989 v32 n7 p832(12)* Full Text COPYRIGHT Assn. for Computing Machinery, Inc. 1989.andM;</JOURNAL><TITLE>Intelligent interactive video simulation of a code inspection.andO;(Special Section) (technical)</TITLE><AUTHOR>Stevens, Scott M.andM;</AUTHOR><SUMMARY>The Advanced Learning Technologies Project (ALT) at CarnegieMellon's Software Engineering Institute is applying advancedtechnologies to software engineering education.andP;  Specifically,formal technical review of Ada code is involved.andP;  Inspection isthe methodology taught.andP;  The project promotes advanced learningtechnologies that are applied to software engineering education.andO;The project has four goals: demonstrate applicability of advancededucational media, including Digital Video Interactive (DVI),hypertext, hypermedia, and intelligent tutoring systems, tosoftware engineering; provide a technology-based course; raiseconsciousness concerning software engineering education; andinvestigate ways to improve technology-based software engineeringeducation.andP;  The National Science Board (NSB) supports applicationof new technologies to software engineering instruction.andM;</SUMMARY><DESCRIPT>Topic:     Software EngineeringComputer-assisted instructionComputer-aided software engineeringEngineering EducationUnited States. National Science BoardInteractive videoDigital VideoCarnegie-Mellon University. Software Engineering InstituteColleges and UniversitiesADAProgram Verification.andO;Feature:   illustrationtable.andO;Caption:   Sentence types for the category of correctness. (table)Working memory item: personal attributes. (table)English language version of production rule. (table)andM;</DESCRIPT><NOTE>Only Text is presented here; see printed issues for graphics.andO;</NOTE><TEXT>Intelligent Interactive Video Simulation of a Code Inspection The AdvancedLearning Technologies Project (ALT) at the Software Engineering Institute isapplying advanced hardware and software technologies to software engineeringeducation.andP;  The content domain of the project is the formal technical reviewof Ada code.andP;  The specific type of review methodology taught is inspection.andO;Code inspection is a formal review process that has proven to be an effectivetechnique for defect identification.andP;  Appropriately applied, code inspectionis also a management tool that provides visibility into the softwaredevelopment process.andP;  The purpose of the project is to demonstrate andpromote advanced learning technologies that are applied to softwareengineering education.andM;The project has four broad, overlapping goals.andP;  First, it demonstrates theapplicability of technologically advanced educational media to softwareengineering problems.andP;  These media include Digital Video Interactive (DVI),hypertext, hypermedia, and intelligent tutoring systems.andP;  Second, ittransitions modern software engineering methods into practice by providing atechnology-based course.andP;  Third, it is taking the lead in raising theawareness of the academic community, the government, and industrial trainingcommunities on technology-intensive software engineering education.andP;  fourth,it investigates methods and techniques to reduce the cost, time, and effortnecessary to develop a technology based software engineering education.andM;The National Science Board (NSB) recognizes the need for improved technologybased solutions to engineering education.andP;  In calling for the application ofnew technologies to engineering instruction the NSB states:andM;The mechanisms and modes of delivery of instruction have taken onsignificance nearly as great as the content, with the advent of the newtechnologies, especially the computer.andP;  Ways must be sought to exploit thepower of these technologies in the learning process, in the interests ofincreased efficiency and effectiveness of learning and lower overall costs.andM;The need for technological solutions to learning is especially important inthe software engineering discipline.andP;  Software engineering has been adifficult area for educators because it continues to be human-intensive,especially in areas such as project management and technical review.andP;  Most ofthe instruction necessary to learn skills in these areas depends ongroup-paced learning and on instructors highly skilled in designing anddelivering group-process oriented instruction.andP;  As a result, the quality ofsoftware engineering education often suffers; instructors are primarilytechnical people, skilled in and oriented toward software engineeringtechnical issues, but not experienced in instructional design or groupleadership.andM;Developing the teaching expertise necessary for these courses is difficult.andO;IBM uses software developers and project managers, with an average of tenyears experience as educators, for a two week course on software engineering.andO;Before they are allowed to teach this class, they are given nine months offull-time training in how to teach this course.andP;  Obviously, most institutionsdo not have the resources necessary for this approach.andP;  Advanced learningtechnologies can capture this expertise and deliver it when and where it isneeded.andP;  These technologies have proven to be fruitful, cost effectiveteaching tools in numerous disciplines.andM;The Advanced Learning Technologies Project demonstrates their efficacy in thefield of software engineering through a course on and simulation of an Adacode inspection.andP;  The course is an intelligent tutoring/interactive digitalvideo (intelligent video) system that provides self-paced education, while italso replicates the interactive and adaptive aspects of classroom-style,group-paced education.andM;Advantages of IV/ITSandM;Reasons for choosing an intelligent video approach include decreased cost andlearning time and increased learning effectiveness.andP;  A typical classroomcourse has a modest, onetime development cost and high delivery cost.andP;  Asingle industrial course may be given thousands of times at hundreds oflocations over an average five-year lifetime.andP;  Each time it is given aninstructor presents the course, grades papers, and provides follow-uptutoring.andP;  By comparison, intelligent video has a higher development cost butmuch lower delivery cost.andP;  The only continuing delivery costs are managementcosts that are incurred to provide students access to the materials andequipment.andP;  The courseware presents the material, grades the student, andprovides follow-up tutoring.andP;  Studies with all of these factors consideredhave shown traditional interactive video courses to be three to five timesless expensive than conventional classroom training.andM;Studies by the armed services have shown that students learn material morefully and in less time with interactive video, even when compared andcontrasted with computer-based training.andP;  In one army study, three groups ofstudents took a course on missile electronic troubleshooting.andP;  One group tooka standard lecture course, one a computer-based training course, and one aninteractive video course.andP;  After the courses the students were given actualsystem faults to troubleshoot.andP;  The lecture group solved 25 percent of thefaults.andP;  Both the computer-based training group and the interactive videogroup found 100 percent of the faults.andP;  While the classroom andcomputer-based training groups took about the same amount of time to find thefaults, the interactive video group found the faults in one-half the time ofthe other two groups.andM;In another study, an intelligent tutoring system for electronictroubleshooting gave technicians with 20 hours on the system the equivalentof four years of on the job training.andP;  Studies in other domains haveconsistently found similar results.andM;Transitioning the software engineering content into practice is a fundamentalgoal of the ALT Project.andP;  None of intelligent video's advantages would behelpful, however, if the learning technology was not accepted.andP;  Fortunately,there is a growing installed base of interactive video systems in colleges,industry, and the armed services.andP;  Of all U.S.andP;  organizations with 50 or moreemployees, 15.5 percent used interactive video to deliver job-relatedtraining in 1986, up from 11.6 percent in 1985.andP;  Thirty-six percent of allorganizations with over 10,000 employees use interactive video.andP;  With thelower cost projected for DVI systems in 1990 and DVI's significantly greatercapabilities compared to videodisc, an even greater acceptance of DVI can beexpected.andM;Interactive video technology has matured to the point where it is clearly aviable medium for the delivery of education and training.andP;  Videodiscs havebeen developed in project management, written and oral communications,physics, chemistry, mathematics, electronic troubleshooting skills, andmedical diagnoses.andP;  Videodiscs have also been developed for training inoperating systems (UNIX) and computer languages (C).andP;  One company, EmTech,has just begun developing analog interactive videodiscs for softwareengineering education.andP;  At present no other interactive video, much less DVIprojects, deal with computer science or software engineering.andP;  Evidently theimmaturity of these disciplines is the main reason for this as the medium isbeing used very successfully in other equally abstract areas.andM;Content: InspectionsandM;The content area that was chosen is one of formal technical reviews, in thiscase, inspection.andP;  Inspections were developed in the 1970s by Michael Faganat IBM and have been used extensively at both IBM and ATandamp;T.andP;  Inspections canbe used by a large number of people on a software project and are applicableduring the development, testing, and maintenance phases of a softwareproject.andM;Software inspections or, more correctly, software development workproductinspections are meetings where development workproducts--such as designspecifications, test plans, and code--are &quot;read.&quot;andP;  That is, the workproductis examined meticulously and systematically by its author and his or herpeers.andP;  The examination tries to find defects, mismatches between theworkproduct and the specification or between the workproduct and thestandards.andP;  The sharp focus on detecting defects is the key to theeffectiveness of in-process inspections ...andP;  Checklists of common defects forthe type of workproduct being inspected guide and enhance the meeting'sdefect detection process.andM;The model of an inspection simulated by the ALT Project includes fourseparate roles: a moderator, a reader, a recorder, and a producer.andP;  Each rolein an inspection involves specific duties, while all roles require theparticipant to prepare for the review beforehand and act as a reviewer of thecode during the inspection.andP;  Preparation includes becoming thoroughlyfamiliar with the code.andP;  Additional responsibilities associated with eachrole include:andM;Moderator: Typically, the moderator arranges for the inspection meeting,contacting other inspectors, setting time and place, and distributingmaterials.andP;  The moderator also leads the inspection, controlling pace andmediating disputes.andM;Reader: The reader moves the inspection by reading and summarizing the codesequentially.andP;  He or she also raises action items related to pieces of code.andM;Recorder: The recorder records defects found and decisions and issues raisedin the inspection.andP;  The recorder provides the defect log to the moderatorafter the inspection.andM;Producer: The producer is the author of the work product.andP;  He or she isresponsible for determining that the code satisfies entry criteria, explainsthe product when necessary, and reworks the product after the inspection.andM;The teaching of code inspections invariably requires references toprogramming style and standards.andP;  This project is using Ada programs as thework product for inspection.andP;  Thus, the code inspection simulation permitsthe introduction and discussion of Ada programming style and standards.andP;  Thisis accomplished through access to a library of materials and discussion ofstyle during a simulation of an inspection.andM;For the ALT course, a single, modestly sized piece of code was desired forthe inspection product.andP;  In 1978 Glenford J. Myers of the IBM SystemsResearch Institute performed a controlled experiment in inspections.andP;  Myerswrote a PL/I program based on an Algol program written using techniques ofprogram-correctness proofs by Naur in which six errors were discovered byGoodenough and Gerhart.andP;  Myers translated the program to PL/I and introducedseveral more errors, bringing the total to 15.andM;The PL/I program was translated into Ada for the ALT system.andP;  In addition,there are a number of stylistic points of discussion that have beenintroduced.andP;  This brings the number of points of discussion directly relatedto the documents being inspected to almost 70.andP;  The program has been dividedinto three separate artifacts for inspection.andP;  This permits a student to usethe simulation several times, using different code each time.andM;It is clear from years of training in inspections at organizations such asIBM and ATandamp;T that for someone to become proficient at the inspection processthey must have experience in it.andP;  For this reason group process simulationsare typically used in inspection training.andP;  Traditional training ininspections will last two days.andP;  During the first day information oninspections and group process will be delivered through a lecture.andP;  Thesecond day is devoted to the group process simulation of the inspection,where students perform an inspection and analyze the process they have justexperienced.andP;  This method affords the students experience in one or at mosttwo roles in the inspection.andP;  ALT's goal is to provide a technologicalapproach to each aspect of inspection training, both the simple informationtransfer associated with the lecture format and the knowledge and skilldiscovery associated with the group process simulation.andM;ALT Intelligent Video Simulation (A Cure for theandM;Common Code)andM;Our intent was to create a total learning environment for inspections.andP;  Inthis environment a student can receive a lecture at his or her own pace,peruse the holdings of a library, study code to be inspected with debuggingand hypertext tools, or participate in an inspection.andM;The ALT system simulates a mythical company Ultimex.andP;  The user takes the roleof a new software engineer at Ultimex.andP;  The top level user interface issurrogate travel through Ultimex's office building.andP;  The user has access tosix rooms: the Auditorium, the Training Room, the User's Office, the Library,the Coffee Room, and the Conference Room.andP;  These rooms provide the user withinformation on and experiences in inspections, as well as tools supportingthe inspection process.andM;In the Auditorium, a person using the system the first time gets generalinformation about inspections and their value.andP;  Here, the user also receivesinformation on Ultimex and the course they are about to take.andP;  NASA Apolloand Space shuttle films and short dramatizations are used to illustrate theimportance of software quality and the potentially life threatening aspectsof software errors.andP;  This is principally a motivational section, the &quot;hook&quot;that interests the students in the rest of the course, and takesapproximately ten minutes.andM;After the Auditorium, the student will be led into the Training Room wherethey will learn how to navigate through the simulated world, use both thewindow interface, and the natural language interface.andP;  Here they will alsohave access to instruction on inspections and group process.andP;  The student isgiven information such as the differences between walkthroughs, audits, andformal inspections, as well as descriptions of the inspection process, typesand checklists.andP;  The material in the Training Room is presented throughmotion video, graphics with narration, and text with graphics.andP;  Depending ontheir needs, users may spend from fifteen minutes to one and one half hoursin the Training Room.andM;From the Training Room users may go into the Library where they have easyaccess to a large amount of information.andP;  This is a hypermedia librarycontaining text, graphics, video, and audio materials.andP;  Users will be able toview what looks to them like videotapes.andP;  These are a series of vignettesillustrating what goes into a good inspection, what happens to makeinspections go wrong, as well as tapes on group process.andP;  The Library cardcatalogue provides access to a large database of print materials.andP;  Includedare items such as checklists, NASA Ada style guidelines, approximately 1000slides from traditional courses on inspections developed by the JetPropulsion Laboratory and the Software Engineering Institute, and 12 of theseminal papers on inspections.andM;Some of the material from the Training Room will be accessible in the Libraryas well.andP;  Also, while the user is in the Training Room suggestions will bemade as to material for further study.andP;  This material will then behighlighted in the Library.andP;  Access to both the Library and the Training Roomwill be available to the student at all times.andM;An important aspect of inspections is preparation.andP;  In their Office the userhas a number of tools to help study the code in preparation for theinspection.andP;  To help facilitate this process a windowing environment andtoolset was created.andP;  Off the shelf environments were investigated.andP;  None,however, provided the performance nor integration with the chosen expertsystem language and DVI library that was required.andP;  The toolset, a sourcelevel debugger and hypertext system, was designed to give the user assistancein the preparation task, permit the system to monitor student work, and tomake the process paperless.andM;Source level debuggers are quite common and provide an excellent instrumentfor investigating the operation of another's code.andP;  The source level debuggerincluded in the ALT system allows students to trace a program line by line,set break points, run the program stopping just at those break points, andexamine how selected variables change during execution.andM;The hypertext tool links specific lines code to the specification thatgenerated it and specifications to the code that was generated from them.andO;This way the user may more easily trace code to the requirements that createdthat code and vice versa.andP;  In addition, error reporting forms are providedfor the user.andP;  These include space for information on the specific error aswell as broader comments, and are linked automatically to the particular lineof code under study.andP;  The code, specifications, and error report formscomplete with the hypertext links are available to the user in the ConferenceRoom during the simulation of the inspection.andM;While we recognized the need for this type of tool independently, work bySoloway et al.andP;  has shown the benefits of creating documentation tocompensate for delocalized plans.andP;  The hypertext system, although notintended to be a production level tool, points to the type of tools webelieve would be useful for dealing with the problem of delocalized plans insoftware production and inspection.andM;While they work in their Office, users are asked by the secretary which rolethey would like to take when they actually perform the inspection.andP;  As notedearlier, experience in performing an inspection is crucial to acquiring theskills needed for success in the inspection process.andP;  The ALT system createsa high fidelity simulation of an inspection, giving, we believe, therequisite experiences to become proficient in the inspection process.andM;Since each role is unique, the user is given the choice of taking the role ofmoderator, reader, or recorder.andP;  The role of the producer of the code isalways simulated by the system; there is no way for the students to use theirown code for the inspection.andP;  If such complete automatic analysis of code waspossible, inspections themselves would be unnecessary.andP;  Since code developedby the user cannot be inspected, the user can never have the pride ofownership that causes much of the conflict associated with software reviews.andO;While technically we could have allowed the student to act as the producer ofthe code in the inspection, we prohibit them from assuming this role.andM;Depending on which role has been taken, the student may schedule theinspection (as moderator) or inform the group when they are ready to performthe inspection (if reader or recorder).andP;  The student then moves to theConference Room to perform the inspection.andP;  Here the student will see theother three members of the inspection team enter the room, sit down and begindiscussion.andP;  This begins the simulation of an inspection and is the centralpiece of the ALT system.andP;  Several features of Digital Video Interactive arecritical to the ALT system's ability to create this simulation.andM;DVI permits up to seventy-two minutes of full screen, full motion video to bestored on one compact disc.andP;  The simulation of the inspection requiresapproximately ten hours of audio and two hours of motion video with audio.andO;We are able to increase the apparent storage by saving fractional screenimages and composing the full image from still images plus motion sequences.andM;In analog video, images are fixed during production and post-production.andP;  Forpractical purposes, the image on a videodisc or video tape cannot be alteredsignificantly during playback.andP;  If the information of interest takes up onlya fraction of the screen one full frame of analog video storage must still beallocated.andP;  Since images are stored digitally in DVI neither of theselimitations is true.andP;  We are able to compose the visual image duringplayback.andP;  Since we wished to store the images of the actors separately wecould save significant storage space by saving only the section of the imagesthat is of interest.andM;The actors for the inspection simulation were shot in a blue environment asshown in Figure 1.andP;  Camera placement was held rigid during two weeks ofproduction through a worm drive gear head.andP;  The camera itself, a newgeneration CCD model, was extremely stable electronically.andP;  Lighting wasmeticulously checked throughout the production.andP;  Rigorous attention to suchdetail allows for the precise registration necessary to compose the imageduring playback.andM;After production the table was repainted and a background placed in thescene.andP;  The scene with table and background alone was then taped again asshown in Figure 2 and saved as a still image which the actors are keyed ontoduring playback as we see in Figure 3.andP;  The space for each actor isapproximately one sixth of the full screen.andP;  During playback only the actorspeaking moves.andP;  Stills of the other actors may be changed periodically.andP;  Theviewer, looking at the speaker, gets the impression of normal motion video atone sixth the storage requirement.andM;Even with this technique, not enough full motion video could be stored on asingle CD-ROM to hold all of the data necessary for the ALT system tosimulate a wide ranging discussion between four participants--a discussionwhere the user may ask questions, respond to questions, or change the topicof conversation at any point.andP;  In terms of information transfer to the user,the critical data is audio.andP;  An analysis was made to determine the mostprobable discourse.andP;  The data necessary for this interaction, along withother high interest monolouges were produced and stored as motion video withaudio.andP;  The remainder was recorded and stored as audio only.andP;  This audio,approximately ten hours of AM quality, is presented in conjunction with stillimages.andP;  These stills (over 2,500 are available to the system) arecontinually changed during the audio presentation to give an animated effect,drawing the viewer's attention to the actor speaking.andP;  With these techniquesthe user's impression is one of viewing and taking part in a continuousdiscussion.andM;The producer of the code is part of the inspection team no matter what rolethe user takes and is always in the center of the image.andP;  The image is pointof view.andP;  Depending on which role the user takes, two of the other three teammembers will be keyed into the image to complete the scene.andP;  In order toallow any combination of team members, one actor will have to be presentedscreen right for one combination and screen left for another.andP;  Rather thanproducing and storing one actor's scenes twice, once for left presentationand once for right, only one series is stored and if necessary mirrored atplayback, saving approximately twenty percent of the total video stored asshown in Figure 4.andM;Each student will spend from one to two hours in the inspection, receiving anatural feedback on his or her performance from the intelligent tutoringsystem driving the simulation.andP;  If the interactions are inappropriate,simulated members of the inspection team will respond accordingly.andP;  Still,more direct feedback will be desired by many.andP;  On conclusion of theinspection the user will be given performance feedback in the Coffee Room.andO;During the inspection a global history of the simulation is kept.andP;  Thetutoring system uses this history to analyze the student's performance.andP;  Fromthis analysis the system's video trainer will explain directly both thepositive and the negative aspects of the user's performance in theinspection.andM;Prior to the introduction of DVI, hardware capabilities were unavailable toproduce a simulation of this type.andP;  But even with the impressivefunctionality of DVI, it is the software that is critical to the creation ofa high fidelity, pedagogically sound simulation.andM;Expert System Driven SimulationandM;To simulate the interactions between participants in the inspection, toprovide the ability for the user to take any role, and to provide tutoring inthe inspection process, a rule-based expert system was developed to model theparticipants.andP;  This expert system is used to define the &quot;personalities,&quot; tocontrol the dialogue between the simulated members of the inspection team,personae, and the user, to interpret the response from the user, and tointelligently control the visual presentation.andM;The expert system is composed of over one hundred rules in Ops/83.andP;  This waschosen because it is capable of forward chaining, it is has acceptableperformance on an IBM AT, and it interfaces well with C (the language ofnecessity for DVI development).andP;  The rule base was developed from analyses oftaped inspections, analyses of normal conversations, and considered the workof Bales.andP;  The rule base is used to make decisions in areas such as whoshould speak, the tone they should take, the content (context space search),and who should be addressed.andM;To model different personalities, several emotional attributes are definedfor each individual simulated by the system.andP;  Attributes includedefensiveness, aggressiveness, talkativeness, and the tendency to makeirrelevant, humorous comments.andM;State variables keep track of the history of the conversation.andP;  Thesevariables capture information on the current topic of discussion, the lengthof focus on this topic, how the discussion is resolved, the opinion on thetopic for each participant, the current speaker, the person focused on in thecurrent comment, and the person addressed in the current comment.andM;Rules control the conversation and model the personalities of the personae.andO;Our paradigm is somewhat different from typical intelligent tutors.andP;  Thestudent receives a natural feedback on his or her performance.andP;  After theinspection simulation, more direct feedback is available through an outletinterview with the trainer in the Coffee Room, prior to exiting from thesystem.andM;Development of the rule base proceeded from an English version of the rule topseudocode and finally to its Ops/83 implementation.andP;  For example, one ruledeals with a participant who has been dominating the conversation.andP;  Thisparticipant may be the user or one of the simulated personae.andP;  Anothersimulated persona has tired of this and wants to say something about it.andP;  Whobrings this up, what they say, and how they say it depends on a number offactors including personality variables set for the personae, the history ofthe conversation, what this persona's role is, and what role the user hastaken.andP;  The English version of the rule is shown in Figure 5, the pseudocodeversion in Figure 6, and the Ops/83 implementation in Figure 7.andM;An example of items in the rule base's working memory are personal attributesas shown in Figure 8.andP;  This includes information such as when this personlast spoke, the last comment made that was relevant to the conversation athand, and whether this person has been dominating the conversation.andP;  Alsoincluded here is the name of the person.andP;  The system cannot know a prioriwhich role the user is going to take or who a persona is going to address.andO;When personae are addressing one another they are actually addressing a role,i.e., moderator, recorder, producer, or reader.andP;  The system knows if it isabout to address a simulated participant whose name is known and stored orthe user whose name may not be known.andM;There is a large audio database of names taken from a list of the 120 mostpopular male and female names.andP;  Thus, for the majority of people the videocharacters will be able to address them by name.andP;  This is possible sincenames, like all audio data, are stored as digital files that can beconcatenated with other sentences as needed.andP;  Sentences are constructed suchthat if the user's name is not in the audio database no direct form ofaddress is needed.andP;  For example the sentence &quot;Bill, what do you think aboutthis?&quot; stands without the name as long as there is no ambiguity about who isbeing addressed.andP;  When addressing the user, the speaker looks directly at theuser and the input interface is presented, eliminating any ambiguity.andM;Other factors that are being modeled are defensive, aggressive, and humoroustraits.andP;  The typical user will spend approximately one or two hours in thissimulation, and if it were completely humorless they would tune out veryquickly.andP;  The simulation has been designed to walk a fine line between beingtoo funny and not modeling a good review, and making it too boring and losingthe user.andM;The expert system does not generate the dialogue to be spoken.andP;  Rather, itselects the dialogue from a large audio and video database.andP;  The dialoguestructure that the rule base pulls from, is multi-dimensional.andP;  In Figure 9the horizontal dimension is temporal.andP;  The vertical dimension, the columns ofcards, is one of the individual being modeled.andP;  Each card represents what thepersona may have to say at any point in the conversation.andP;  Within each cardwe model the affective dimension, where the upper areas represent verypassive kinds of statements, middle are more neutral, and the lower areas arevery aggressive or defensive statements.andM;During the simulation, the expert system determines the temporal level of theconversation.andP;  It then determines who wants to speak and their affectivestate.andP;  The dialogue data are then searched to find the appropriate audio andvideo.andP;  If the search is successful, the persona has something to say on thistopic and is permitted to speak.andP;  If the search fails, the system must stillbehave reasonably.andM;This is accomplished since the dialogue structure is actually fourdimensional.andP;  The first three dimensions are temporal, speaker, andaffective.andP;  The fourth dimension is content, the context space.andP;  In Figure 10each enclosing rectangle represents a different content area and the wholefigure the context space.andP;  There are actually two different kinds, that istwo granularities, of content area.andP;  One is a broad temporally-baseddiscussion where the specificity of statements deepen with discussion.andO;Typically, these structures represent discourse on specific topics, such ascode errors.andP;  Finer grained content areas relate to single phrases acting asquick pools of data to pull from.andM;Pools are used to react to special situations.andP;  For example, one pool is usedwhen the expert system determines that someone is being asked a question forwhich they have no answer, (i.e., the dialogue search as described above hasfailed).andP;  The expert system will look at a pool that contains phrases such as&quot;I have nothing to say,&quot; and pull an item from there.andP;  Since situations suchas this may occur several times and at any point in the conversation, westore these comments as pools that are accessible whenever needed.andM;These pools also allow us to bridge between areas.andP;  Due to changes inpersonality factors and intervention by the user, speaker order isindeterminate.andP;  This requires individual script atoms that are independent ofimmediate order.andP;  Acknowledgement of the previous statement, however, is keyto a realistic dialogue.andP;  This acknowledgement is handled with agreement anddisagreement pool topics.andM;For example, at one point in the conversation the reader m ay be able to say&quot;It's a nice day,&quot; the moderator &quot;I think it's a dreary day,&quot; and theproducer &quot;I think it's a beautiful day.&quot;andP;  If the reader speaks first a poolstatement may be combined with the producer's statement to create: &quot;It's anice day&quot; (reader), &quot;I agree, I think it's a beautiful day&quot; (producer).andP;  Onthe other hand, if the moderator speaks first: &quot;I think it's a dreary day&quot;(moderator), &quot;I don't agree, I think it's a beautiful day&quot; (producer).andM;The four dimensional structure provides multiple levels of granularity forphrase generation.andP;  It thus provides great flexibility for the expert systemin generating conversation as well as responding to user input.andM;A unique feature is the ability to run the simulation without taking a role.andO;In this case the system models all four individuals.andP;  They carry on aconversation among themselves, performing a complete inspection with no userintervention.andP;  Trainers and educators can set up particular scenarios.andP;  Forexample, an instructor could have the system model a very aggressivemoderator, defensive producer, and talkative reader and then let the systemplay out the scenario to illustrate the consequences.andP;  As in real life,discussions will vary depending on the personalities of the participants.andO;When the same conversation is begun with new personalities, a differentdiscussion will ensue.andM;An interesting part of the expert system is one that we are callingHitchcock, after the director.andP;  This is the visual director of the system.andO;Now, for the first time with digital video, we can manipulate the images whenwe play them back.andP;  We have to do that for the ALT system.andM;We want the expert system to behave intelligently in presenting images, muchlike a director would do when creating or editing an image.andP;  Here, the systemdoes it during playback.andP;  For instance, if the user is dominating aconversation, the system may present a slightly lower camera angle of theparticipants on the screen.andP;  Years of experience and many studies have shownthat images such as this tend to convey to viewers the impression that theviewers themselves are dominating the scene.andP;  Conversely, if the user isbeing very passive, we may wish to present a close-up from a low angle, wherethe people in the scene now appear more dominant.andP;  From a history of thescene Hitchcock also makes a judgment on whether the presentation of a wideshot, medium shot, or close-up is called for.andM;Natural Language InterfaceandM;From the beginning, one of our largest concerns was how the user shouldsupply input.andP;  Ideally you would be able to speak into the system, and itwould be capable of continuous speaker independent speech recognition,including the comprehension of affective effects of tone.andP;  Obviously, thattechnology is not here today.andP;  Even free-form natural language text input ona system the size of an IBM AT is not feasible with the reliability werequired.andM;To overcome these problems we developed a natural language interface based,in part, on the work of Harry Tennant.andP;  Tennant has done work in a menu basednatural language system: Natural Access.andP;  In Natural Access sentences areconstructed from sentence fragments.andP;  While allowing the user great freedomand power is sentence construction, this method restricts the domain andsyntax to a level manageable by our target machine.andM;Figure 11 illustrates this interface.andP;  With it you construct sentences,address comments to individuals, and add tone and affect to your statement.andO;affect and tone are handled by the sentences created and by selection of toneicons.andP;  Tone ranges from passive (by selecting the cool blue face) up throughaggressive (by selecting the red flame face).andM;The construction of the interface shall was straight-forward.andP;  The mostsignificant problem was the analysis of the sentences to be constructed.andP;  Foran interface such as Natural Access the domain is typically an applicationsuch as a spreadsheet, where analysis is relatively simple.andP;  The discourse inan inspection is quite free in its form and broad in its domain, however.andM;Elliot Soloway had performed a significant amount of inspection analysisduring a research project.andP;  His research team found that there were specifictopic areas that people spent most of their time on, during an inspection,such as looking at clarity and correctness.andP;  We recognized that this analysismight be extended to look for particular sentence types.andP;  After discussionswith Soloway it was determined that a joint project would allow for theextension and tailoring of this research to a form that would provide thefoundation for the ALT language interface sub-system.andM;To complete this work, Robin Lampert was brought to the SEI from Soloway'sproject.andP;  Lampert worked with project members to extend and refine herearlier research.andP;  This part of our work found seven main categories ofdiscourse during an inspection which were labeled: clarity, correctness,simulation, consistency, design rationale/choice, procedural, and generaldiscussion.andP;  Within each category a sufficiently small number of sentencetypes were identified to make the development of a menu based naturallanguage interface feasible as shown in Figure 12.andM;For example, the user may wish to say:andM;&quot;This line when bufpos = maxpos causes an error.&quot;andM;&quot;This line&quot; refers to a line of code and would be highlighted by the user.andM;This sentence is an example of the basic sentence structure: andless;objectandgt; whenandless;code-actionandgt; causes an error.andM;To create this sentence a user selects the andless;objectsandgt; from the OBJECT list asin Figure 11.andP;  The portion called andless;code-actionandgt; is a sub-section ofSIMULATION with construction of specific identifiers by keyboard inputallowed.andP;  The line referred to by &quot;This Line&quot; might be selected by pointingwith the mouse and would remain highlighted during the discussion.andM;Early experience with this interface suggests that users adapt to it in ashort time.andP;  More importantly, they are able to quickly input the content ifnot exactly the form of sentence they wish.andM;ConclusionsandM;The ALT system has several modes of operation.andP;  Software engineers andstudents use all aspects of the system.andP;  Managers are given a presentationdesigned to highlight management uses of inspections and typically would notperform the inspection simulation.andP;  Educators and trainers can use theresources in the Library along with a projection monitor as a powerfulpresentation system for lectures on inspections.andP;  The power of interactivetechnologies is, when designed properly, their ability to adapt to the user.andM;Using expert system technology to model personalities and control thesimulation creates an exceptionally interactive simulation.andP;  This allows, forthe first time, the creation of high fidelity simulations of interactionsbetween people.andP;  Rather than on-the-job education in areas such as reviewsand project management, where errors are costly, the ALT system demonstratesthat it now becomes possible to give students and professionals technologybased experience, where errors are free of dire consequences.andM;The ALT Project has just begun formal evoluation.andP;  The final CD-ROM disc isexpected to be pressed in the fall of 1989.andP;  Early use of prototype versionsindicate that u sers quickly adapt to the interface and find the simulationengaging.andP;  The experience in other domains suggests that benefits of the DVI,hypermedia, and intelligent tutoring learning environment of the ALT systeminclude: inexpensive dissemination of materials, increased learningproductivity, continuous assistance to the learner, practical experience inthe methodology, and the ability to adapt the material to a diverse group ofusers.andP;  It is believed that as the capabilities of CD-ROMs and digital videobecome commonplace on workstations, high quality, technology-intensiveeducation will also become common.andM;Acknowledgments.andP;  The Advanced Learning TECHNOLOGIES Project team includesJuly Chiswell, instructional designer and Robin Lampert, research assistant.andO;A special note of thanks goes to Michael Christel, project software engineer.andO;</TEXT></DOC>
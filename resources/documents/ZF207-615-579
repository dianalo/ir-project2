<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-615-579  </DOCNO><DOCID>07 615 579.andM;</DOCID><JOURNAL>Systems Integration  May 1989 v22 n5 p63(9)* Full Text COPYRIGHT Cahners Publishing Co. 1989.andM;</JOURNAL><TITLE>Adding a 4GL to your SI toolkit. (fourth-generation language)(Systems Integration) (includes directory on fourth-generationlanguages, their manufacturers, and basic features)</TITLE><AUTHOR>Berman, Ellen.andM;</AUTHOR><SUMMARY>The use of fourth-generation languages (4GL) for softwaredevelopment has been found to give systems integrators thebenefits of productivity gains and better communications betweendifferent systems coexisting within one or more environments.andP;  Forvalue-added resellers (VARs), 4GLs offer flexibility, rapidapplication development, ease of prototyping, and portability.andO;The defining attributes of a 4GL include: increased speed ofapplication development, reduced maintenance, ease of debugging,generation of code through high-level expressions of systemrequirements and user-friendly language.andP;  To be functional forsoftware development, a 4GL should have a non-procedural-basedlanguage, should provide application developer-user interfacetools, should contain interfaces to the native DBMS and must beeasy to learn.andM;</SUMMARY><DESCRIPT>Topic:     Fourth-Generation LanguagesSoftware EngineeringComputer systems integratorsApplications ProgrammingCriteriaProductivity.andO;Feature:   illustrationphotographchart.andO;Caption:   Fourth-generation languages. (chart)andM;</DESCRIPT><TEXT>Adding a 4GL to Your SI ToolkitandM;Increased productivity, reduced development time and lower costs make up the&quot;Holy Grail&quot; for today's software development tool vendors and thedevelopers--systems integrators, VARs and ISVs (independent softwarevendors)--who use or resell the products.andP;  Two key weapons in the crusade tobring these benefits to the application development cycle arefourth-generation languages (4GLs) and computer aided software engineering(CASE) products.andM;The 4GL and CASE (the topic of next month's roundup) marketplace has explodedwith hundreds of products promising to streamline the application developmentcycle.andP;  The cycle's stages include: analysis, or identifying user needs andproducing detailed application descriptions; design, or listing the detailsof how an application works; coding, or developing the application code;testing, or verifying the quality of the application; installation, orbringing up the application at the user location; and maintenance, orproviding support for day-to-day use.andM;In contrast to CASE products, which reflect an industry effort to automateand integrate the entire cycle, 4GLs ease the burdens associated withdesigning, coding and testing.andP;  For the systems integrator they meanproductivity gains and better communications between different systemscoexisting in one or more environments; for VARs, like PlanMetrics, a Chicagodeveloper of software for utility companies, and MetaSystems, a ShakerHeights, Ohio, developer of manufacturing software, both involved in OracleCorp.'s VAR program, they mean flexibility, rapid application development,ease of prototyping and portability.andM;Minimum requirementsandM;There are, however, no formally agreed upon standards or baselinerequirements for defining classes of software development tools.andP;  Thisdaunting lack of standards is especially obvious for 4GLs, which vary greatlyin power and capability.andP;  In fact, the definition of a 4GL varies almost inrelation to the volume of 4GLs on the market.andP;  As a result, development toolsfall into this category more or less because of their capabilities.andP;  &quot;A 4GLis not based in any of the pure sciences.andP;  It is defined by its benefits,&quot;says Verne Sheidler, marketing communications manager for InformationBuilders Inc.andM;The defining attributes of a 4GL that industry observers point to include:andM;* Increased speed of application development (up to a 10:1 improvement insome cases);andM;* Reduced maintenance;andM;* Ease of debugging;andM;* Generation of code through high-level expressions of system requirements;andM;* User-friendly language.andM;In order to bring these capabilities to the software developer, a 4GL musthave a non-procedural-based language that supports English-like code andsyntax; it should provide application developer/user interface tools, i.e.,andO;screen generator and reporting capabilities; and the 4GL needs interfaces tothe native DBMS.andP;  Last, but certainly not least, the language must be easy tolearn.andM;To satisfy the easy-to-learn requirement, most 4GLs use a non-proceduralprogramming language.andP;  The easiest way to compare procedural andnon-procedural language is to point out that a procedural language instructsthe computer how something is to be accomplished--step by step; anon-procedural language tells the computer what is to be accomplished withouttelling it how to do it.andP;  In procedural languages, COBOL, FORTRAN, etc., codeis more cryptic and structured.andP;  These traditional 3GLs (third-generationlanguages) include constructs such as IF-THEN/ELSE and DO WHILE; whereasnon-procedural languages state things almost conversationally.andM;The following examples of procedural and non-procedural code makes thedifference obvious: PROCEDURAL CODE: FOR EACH EMPLOYEE WHERE STATUS = 'E' andSALARY-GRADE = 'Q' DO RPT-INC-EMP FOR EACH EMPBEN DO RPT-INS-INC IF EMPBEN =EMPSPOUSE GOTO 3250 ELSE GOTO 3600 ENDIF...andP;  NON-PROCEDURAL CODE: GENERATE AYEARLY PLOT TITLE 'EMPLOYEE INSURANCE INC/SALARY INC' X AXIS LABEL 'SALARY' YAXIS LABEL 'INSURANCE PREMIUM' INPUT DATA .andP;  .  .andM;Non-procedural code is much easier to learn, understand and use.andP;  In fact,the conversational, English-like, non-procedural code and syntax of 4GLsthreaten to bring that ubiquitous phrase &quot;user-friendly&quot; from the packagedsoftware arena to the language and tools markets.andP;  Also, when systemsintegrators can deliver flexibility, quick-learning curves and ease of use ina programming language, they foster independent workgroups and users whoalleviate the backlog pressure on MIS and information center personnel.andP;  Inessence, 4GLs allow decentralized software development to happen.andP;  (JamesMartin, considered by many to be the father of 4GLs, refers to some as &quot;userseductive,&quot; because they allow non-DP personnel to structure and execute adhoc database queries and reports.)andM;Winning the backlog battleandM;Under ideal conditions, this ease of use is what results in the 10:1productivity gain.andP;  Five years ago, if you were a user, somebody up there--inthe MIS department--had to like you before your request for a systemenhancement or fix was honored.andP;  You waited perhaps six months to a year.andO;Today, users can perform their own enhancements.andP;  &quot;The advent of 4GLs andlike productivity tools can shift more responsibility and flexibility to theusers allowing IS [information system] personnel to be the 'wizards in thebackground,'&quot; says Wolfgang Roeder, manager, business and information systemsfor Siemens Gammasonics, Des Plaines, Ill.. &quot;The goal is to allow ISdepartments to be more active than reactive, keeping the system available forthe users.&quot;andM;Because they also offer productivity boosts, code generators are often lumpedinto the 4GL category.andP;  Their screen and report application developmentfacilities provide the interactive user interfaces that allow theinexperienced user to run complex applications with minimal effort andtraining.andP;  &quot;An application that would take three years to develop and code inC can be in prototype mode in approximately one month with a 4GL program oftoday,&quot; says Craig Isaacs, product manager for Unify Corp.andM;Code for sore eyesandM;A very helpful by-product of automatic code generation through applicationdevelopment tools is ease of maintenance and debugging.andM;In modern application development environments, the benefits of using a 4GLor CASE tool to modify a system design early in the application stage canripple throughout the software cycle.andP;  For example, the use of designdictionaries allows user applications to be altered easily to meet evolvingrequirements.andP;  The applications can even be debugged or enhanced through theuse of a screen developer command such as MODIFY or other similar commands.andO;Also, by using direct element manipulation (possible with tools such asSQL*Forms, Oracle's screen generator), developers can, in one brief on-linesession, generate code automatically to represent changes in the screenpresentation or data request made.andM;This mode of operation eases debugging chores because, with a 4GL, debuggingis limited to finding minor errors in syntax for those areas not coded byon-line application generators.andP;  For complex programs written in a morenon-procedural 4GL, debugging activities concentrate on finding syntax errorsor program logic problems, perhaps using the structured query language (SQL)'ORDER BY' before 'WHERE' clauses in a program.andP;  Additionally, and perhapsmost importantly, all code is English-like, which allows the developer tofollow the code easily and make sense of it almost immediately.andP;  This abilityis a quantum leap in debugging for the applications developer or ISprogrammer.andP;  No longer are errors lost in code that literally looks like aforeign language, which essentially it is.andP;  And, because the English-likecoding of a 4GL program is literally a case of reading and interpretingEnglish as a native, first language, both the application and/or the code maybe debugged by people who have never seen them before.andM;In addition to the productivity gains associated with coding and debugging, a4GL should provide an interface to the native DBMS.andP;  Most 4GLs are developedwith relational technology in mind, although a few, such as InformationBuilders' FOCUS, can still operate from a hierarchical architecture.andM;Ten years ago, databases were affectionately called &quot;black boxes&quot;--the placedata went to die.andP;  Data was fed in and rarely, if ever, retrieved.andP;  Incontrast, a 4GL is geared to support ad hoc query and report capabilities.andO;Suddenly, information is being brought back from the native database tomanagement in meaningful form.andP;  Reporting capabilities, both printed andon-line, have become an indispensable tool for management and a marketopportunity for the VARs, OEMs and systems integrators who can provide them.andM;A key to providing these capabilities across various computer platforms isthe portability of the 4GL and the code generated by it--an importantbaseline requirement to most ISVs.andP;  In fact, many 4GL vendors owe theirpopularity to the fact that their product can run in and on a multitude ofhardware and software environments.andP;  For example, Oracle is said to run on 55different hardware platforms.andP;  This level of portability allows the sameapplication to be developed on almost any system and be directly ported tomany target systems without programming modifications--the program will runas originally written.andP;  This is especially important in the VAR arena.andO;&quot;Products are more marketable when they can cross hardware lines andplatforms,&quot; says Margie Kluska, PlanMetrics' marketing manager.andM;However, according to Abby Pinard, vice president of marketing for MustSoftware International, developers of NOMAD, &quot;Portability is important, butnot a major issue.andP;  The maintenance of data integrity is a more centralissue.&quot;andP;  She also suggests that the ability to coexist with SQL is arequirement of any product these days.andP;  That sentiment is echoed in the ISVcommunity.andM;In addition to portability, data integrity and SQL hooks, a 4GL shouldprovide its own data dictionary.andP;  &quot;You can't use a 4GL without going into itsdata dictionary,&quot; says Unify's Isaacs.andP;  The data dictionary of a 4GL providesthe system DBA (database administrator) or user direct access to systeminformation, the application program, the specific application, theindividual users of the system, etc.andP;  Tables that catalog system andapplication information are contained in the dictionary.andP;  The dictionary alsocontains data structures for applications previously created--preventing a&quot;reinventing of the wheel.&quot;andP;  According to 4GL pioneer Martin, the datadictionary is the basis of many report generators, query languages andapplication generators.andM;Will the real 4GL...?andM;Intense competition in the 4GL market has spurred vendors to play abells-and-whistles game in the form of complete DBMSes, turnkey modules forinstant use, and so on.andP;  These bells and whistles are, in some cases, a wayof covering up a lack of language integrity in their 4GL products.andP;  A true4GL should be able to handle all the programming requirements of anapplication with its own language capabilities.andP;  Some products are 4GL-liketools that cannot entirely satisfy all application development programmingrequirements.andP;  Their code must be embedded in a 3GL.andM;Many of these pseudo-4GLs are in fact DBMSes with non-procedural or nearlyprocedure-free languages used to supplement the popular DBMSes.andP;  Often,application generators and report writing capabilities are added along withseveral of the other 4GL features, but their language base is not sufficientto be considered a true 4GL.andP;  Often, the user furthers the confusion.andP;  Forexample, unless you are talking directly to IBM Corp., most users think ofDB2 as a 4GL whereas CSP (Cross System Product) is IBM's 4GL interface forDB2, the popular IBM mainframe and midrange DBMS.andM;A second point of confusion among users results from a widespread belief that4GLs are slower than 3GLs.andP;  According to Isaacs, this perception is caused bythe assumption that because 4GLs are further removed from machine languagethan 3GLs they creep at execution time.andP;  The difference, however, may not beas great as users believe.andP;  Third-generation languages need prodigiousnumbers of instructions (and code) generated for typical applications.andP;  Eachinstruction then compiles into several machine language instructions.andP;  Incontrast, 4GLs require a fraction of the code necessary for the same 3GLapplication.andP;  Thus, even though code is still being executed at themachine-language level, a natural-language level increase in speed is aninherent by-product of 4GLs.andM;What about the future?andP;  According to industry vendors and pundits, the mostfrequently discussed issue for 4GL development is not a specific programenhancement, such as graphic capabilities; instead, it's standards.andM;Here today, gone...andM;A basic set of criteria is needed to assure some integrity in the developmentof the language.andP;  Armed with these guidelines, vendors, as well as resellers,can guarantee that a specific set of objectives or guidelines is satisfied.andO;Additionally, the support of existing and emerging industry standards, suchas SQL and SAA (Systems Application Architecture, a series of interfaces andprotocols that will bring consistent interconnections to various IBMcomputing platforms), will be part of the 4GL of the future.andM;One way that the VAR, OEM and systems integration communities can help shape4GLs of tomorrow is by participating in user groups.andP;  As more 4GLs areincorporated into windowed operating environments, into cooperativeprocessing architectures, into CASE tool products and into expert systems,standards will become increasingly important.andP;  Often, the best way toinfluence the formation of standards is through an organized user groupplatform.andP;  In the past, Oracle has, for example, published user-drivenimprovements in documentation and has created new products modules.andP;  GeneralLedger and ReportWriter were created in response to user's groups.andM;It is this give and take among users, resellers and vendors that willdetermine the direction product development will take.andP;  &quot;Fourth-generationlanguages are the second most popular class of computer languages, and asstandards develop, 4GLs are expected to take on even greater programming andapplications development importance,&quot; says Information Builders' Sheidler.andO;&quot;They are going to become the industry standard that COBOL is today.&quot;andO;</TEXT></DOC>
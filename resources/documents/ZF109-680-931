<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-680-931  </DOCNO><DOCID>09 680 931.andM;</DOCID><JOURNAL>LAN Magazine  Dec 1990 v5 n12 p40(7)* Full Text COPYRIGHT Telecon Library Inc. 1990.andM;</JOURNAL><TITLE>A new personality: give your PCs more than a pretty face.andO;(graphical user interfaces)</TITLE><AUTHOR>Hurwicz, MIke.andM;</AUTHOR><SUMMARY>The characteristics of four graphical user interfaces (GUIs) aredescribed in detail: OS/2 Presentation Manager, Macintosh GUI,NewWave and Windows 3.0.andP;  The interfaces are recommended fornetwork administrators seeking an easier interface for noviceusers.andP;  The GUIs are also recommended for power users searchingfor additional flexibility and capability.andP;  Macintosh, OS/2,Windows and NewWave offer more attractive interfaces than DOS,however the price is memory and disk space.andP;  GUIs offer consistentapplication interfaces, the ability to run multiple tasks at onetime, object data bases, data interchange and task automation.andO;Objects appear as graphical elements, that is, icons or windows,that have properties and other objects associated with them.andO;Programmers are afforded infinite flexibility with objects becauseany number of items can relate to one another in any mannerimaginable.andM;</SUMMARY><DESCRIPT>Product:   Microsoft Windows 3.0 (Graphical user interface) (Design andconstruction)NewWave (Operating System) (Design and construction)Apple Macintosh IIci (Microcomputer) (Computer programs)OS/2 Presentation Manager (Graphical user interface) (Design andconstruction).andO;Topic:     Graphical User InterfaceComparisonSpecificationsSoftware Design.andO;Feature:   illustrationtable.andO;Caption:   Features nd requirements of Windows 3.0. (table)Features and requirements of NewWave. (table)Features and requirements of Macintosh GUI. (table)andM;</DESCRIPT><TEXT>A New PersonalityandM;Ever since the Apple Macintosh reared its not-ugly head, some DOS users havebeen asking, &quot;Why can't I have an easy-to-use, good-looking interface, too?&quot;andO;Over the years, Microsoft's Windows was the failure that came closest tosuccess in giving those users what they wanted.andP;  Lack of speed and aestheticappeal kept it from becoming truly popular, however.andP;  For LAN users, therewas the added problem that Windows was not network-aware.andP;  Thus, it couldconflict with network operating system software at the workstation, behavepeculiarly with network drives or printers, or fail to display messages fromthe network in a window.andM;In May 1990, with great hullaballoo, Microsoft released Windows 3.0.andO;Subsequently, many observers and users have decided that Windows 3.0 wasworth hullaballooing about.andP;  It is prettier than previous versions ofWindows.andP;  Taking advantage of the protected mode of the 286 and especiallythe 386 processor, it is also much faster than previous versions for runningmultiple applications.andP;  With these two hurdles cleared, Windows appears to beon its way to widespread acceptance.andP;  Luckily for LAN users, Windows 3.0 isalso designed to work with networks; it has special drivers for both Novell'sNetWare 2.x and 386 and Microsoft's LAN Manager.andM;Still, many people look at Windows--and Graphical User Interfaces (GUIs) ingeneral--and wonder how useful they really are.andP;  After all, no matter howfast a GUI is, a standard DOS application will always run faster without theGUI than with it.andP;  Does that leave a GUI to get by on its good looks?andP;  Not bya long shot.andP;  In addition to visual appeal, these interfaces may offer:andM;* Consistency.andP;  GUIs bring greater consistency to application interfaces.andM;* Task switching: The ability to move from one task to another withoutclosing any of the tasks.andP;  For instance, you can leave a word processingdocument in the middle of editing it, open a database to find an address, andcome back to the word processing document exactly where you left off--withoutexiting the word processing program or saving the document to disk.andO;Background tasks do not continue to run while you are working on other tasks,however.andM;* Multitasking: The ability to run multiple tasks at the same time.andP;  Programsor groups of programs are allotted &quot;slices&quot; of processor time.andP;  This meansyou can leave one task and start another, and the first task will continue torun.andP;  For instance, you could start a long report in a database program andswitch over to your spreadsheet.andP;  While you're working on the spreadsheet,the database program continues to generate the report.andM;* Objects.andP;  An object is a collection of things that can be stored by acomputer.andP;  It may include data, images, menus, fonts, properties, procedures,or other objects.andP;  For example, an object might include both a file and theprogram that created it.andP;  Objects are a very powerful tool for systemautomation and customization.andM;* Data interchange: The ability to move data among different applications.andO;For example, the ability to take a number from a spreadsheet and insert itinto a word processing document.andP;  Cut-and-paste is a simple form of datainterchange.andP;  Dynamic Data Exchange (DDE) can accomplish the same thingautomatically, without user intervention (after the initial procedure to tellthe system what to insert and where to insert it).andM;* Task automation: The ability to execute complex tasks with minimal inputfrom a user.andP;  A GUI may facilitate this, for instance, by allowing users torecord keystrokes and mouse events and providing a facility for &quot;playingback&quot; the recorded sequence by making a menu choice or dragging one icon toanother.andM;ConsistencyandM;Each GUI requires a high level of uniformity in applications written for thatGUI.andP;  For instance, all Windows applications have a lot in common.andP;  So do allMacintosh applications.andP;  In addition, the various popular GUIs closelyresemble one another.andP;  A user familiar with one GUI will have a much easiertime using another GUI.andP;  For instance, to see what's in a Macintosh folder ora Windows 3.0 program group, you do exactly the same thing: Click on theappropriate window.andP;  Character-based interfaces don't offer this kind ofconsistency.andP;  For instance, knowing the DOS command DIR for listing adirectory doesn't help you figure out the Unix commands Is and Ic, whichperform similar functions.andM;Although a legitimate argument can be made against imposing uniformity withinand across user interfaces (an independent programmer has little incentive toconcoct a fundamentally better user interface), such uniformity makesapplications much easier to learn.andP;  Since more and more jobs now require somecomputer use, and the number of occasional computer users is increasing, suchease of learning is a prime consideration in many instances.andM;Of all the graphical environments in existence today, the Macintosh probablyoffers the most consistency in its GUI, because all Macintosh applicationsuse a GUI.andP;  In other graphical environments, there are still lots of &quot;old&quot;applications around that don't use the GUI.andP;  With Windows and OS/2, forinstance, there are character-based DOS programs, while with Unix there areprograms designed for dumb terminals.andM;TaskmastersandM;Most people do not have the luxury of working on a single task withoutinterruptions.andP;  DOS, however, poses serious impediments tointerruption-driven work, because it is designed to be single tasking.andP;  Theidea is that you always end one task before starting another.andP;  That justdoesn't accord with reality.andM;GUIs are not the only way to cope with this problem.andP;  For instance, manyapplications allow you to &quot;shell out&quot; to a DOS prompt while the applicationremains suspended in memory.andP;  From the DOS prompt, you can start anotherapplication.andP;  After terminating the second application, you type &quot;EXIT&quot; atthe DOS prompt, and you are returned to the original application.andP;  Shellingout is a useful technique, but its usefulness is limited because both thesuspended application and the application you run while shelled out normallyhave to reside in the standard 640KB of DOS low memory.andP;  That puts severelimitations on what programs you can run while you are shelled out.andM;Terminate-and-Stay-Resident (TSR) programs are another way of switching taskswithout terminating applications.andP;  TSRs also compete for limited DOS memoryresources.andP;  Since they are designed to remain in memory all the time, theyhave to be small and therefore relatively limited in functionality.andP;  Finally,because DOS was not designed with TSRs in mind, the system does not have thefacilities to make sure that they do not interfere with one another or withother programs running on the machine.andM;These problems have lead to the emergence of task switchers like SoftLogicSolutions' (Manchester, N.H.) Software Carousel.andP;  Such programs store programinformation somewhere other than low memory--either in memory beyond 640KB oron the disk.andP;  Applications are &quot;frozen&quot; wherever they are stored, but you canquickly select any application and bring it back to life again.andM;The Mac has always included task switching.andP;  When running in standard mode(most often used on 286-based PCs), Windows 3.0 offers task switching,writing program information to disk.andP;  NewWave, when running on top ofWindows, retains this feature.andP;  The Macintosh saves suspended tasks inmemory, so the user can switch back to a suspended task quite quickly.andO;Windows and NewWave switch tasks by writing program information to disk.andO;Writing to disk can be somewhat slow, but it still may be a lot moreconvenient than having to terminate a desktop publishing program just to lookup an address in a database.andM;MultitaskmastersandM;For most purposes, multitasking is far more appealing than task switching,because it lets you accomplish multiple things simultaneously, rather thanjust keep them ready to be worked on.andP;  Multitasking is a feature of theMacintosh Multi-Finder, Unix, and OS/2.andP;  DOS users also have numerousmultitasking options.andP;  For instance, DesqView 2.2 from QuarterDeck (SantaMonica, Calif.) was the first popular environment for running multiple DOSapplications.andM;Windows offers multitasking for Windows applications.andP;  Running in &quot;386Enhanced&quot; mode, Windows 3.0 offers multitasking for all applications.andP;  As thename implies, this mode only works on a 386 machine.andP;  Windows 3.0multitasking is reasonably reliable and speedy.andP;  Unfortunately, superimposinga multitasking capability on singletasking DOS is a difficult feat.andP;  Becauseof this, Macintosh, Unix, and OS/2 all provide more robust multitasking thanWindows: If one Macintosh, Unix, or OS/2 application crashes, it probablywon't affect other applications running on the machine.andP;  In contrast, if anapplication running under Windows 3.0 freezes up, there is a good chance thewhole machine will freeze with it.andM;In general, a Mac, OS/2, or Unix machine also can be expected to have betteroverall performance than a Windows machine when more than one application isrunning.andP;  Even other DOS-based solutions for multitasking, such as DesqView,are faster and less prone to problems than is Windows, though probably onlybecause Microsoft has had a few more years to optimize and work the kinksout.andM;Unfortunately, the inherently better multitasking solutions (Macintosh, OS/2,Unix) aren't too helpful for DOS users.andP;  OS/2, for instance (until version2.0 comes along), runs only one DOS application at a time, and thatapplication is suspended when OS/2 applications are active.andP;  Some versions ofUnix let you run multiple DOS applications, but few users care to go thetrouble and expense of installing Unix just to get DOS multitasking.andP;  Thesame will probably apply to OS/2 2.0.andP;  And the Macintosh normally doesn't runDOS applications at all.andM;That leaves solutions such as DesqView, which are currently somewhat superiorto Windows if you are considering only multitasking.andP;  They also may offerother features, such as cut-and-paste, windows, and keyboard macros.andM;Many potential Windows users, however, probably will be comparing Windows notto Unix, OS/2, or DesqView, but to DOS.andM;Multitasking makes it possible to get more out of a single PC.andP;  Though peoplewho are comparing it to OS/2 or DesqView may not agree, many DOS users whotry Windows 3.0 could be quite satisfied with the robustness and speed of itsmultitasking.andM;Objects of DesireandM;From a user's standpoint, an object appears as a graphical element, such as awindow or an icon, that has properties, procedures, or other objectsassociated with it.andP;  Each operating environment defines different types ofobjects, and it may be possible for a user to define new types of objects, aswell.andP;  In most graphical environments, objects appear as windows when theyare open, and as icons when closed.andM;For instance, a folder object may contain data file objects and programobjects.andP;  Each object is associated with certain mouse actions, such asclicking and double clicking.andP;  The type of object (folder, data file, orprogram) determines how the object handles a given mouse action.andP;  Each datafile object may be associated with a program object, as well as with fonts,menus, and macros.andM;Such a structure facilitates scenarios like the following: A user doubleclicks on an icon representing a folder.andP;  The folder opens, becoming a windowcontaining icons representing data files and programs.andP;  The user doubleclicks on an icon representing a data file.andP;  The data file is associated witha program, which starts automatically.andP;  The data file is associated withfonts, menus, and macros, which will be employed as the program accesses thedata file.andM;Objects provide infinite flexibility for programmers, since objects canrelate any number of items in any imaginable way.andP;  For users, on the otherhand, objects tend to simplify interactions, since most items remain internalto objects.andP;  Only a limited number of procedures, such as double clicking,have to be understood by users.andP;  For instance, in the example above, it isonly necessary for a user to double click on a folder to open it.andP;  The folderobject itself &quot;knows&quot; what files and programs it contains.andP;  Similarly, doubleclicking opens a data file.andP;  The data file object itself &quot;knows&quot; whatapplication to start, as well as the fonts, menus, and macros to use.andM;DOS is not object oriented.andP;  A DOS file essentially is just a collection ofbytes, and this operating system offers no standard means of associating afile with anything other than its own contents and a few pieces ofinformation such as the file's size and creation date.andP;  The Macintosh, incontrast, is quite object oriented.andP;  Files can be associated withapplications, fonts, menus, icons--anything that can be stored on disk.andP;  TheMacintosh uses this object orientation to provide features such as automaticstarting of an application by double clicking on a data file.andP;  Most of thebenefits and complexities of object orientation, however, are hidden from theMacintosh user.andP;  Only programmers have to know about them.andM;From a user's perspective, Windows 3.0 supplies some of the look and feel ofobject orientation, but not much of the substance of it.andP;  This means extrawork but also, sometimes, more flexibility.andM;For instance, you can configure Windows 3.0 two ways so when you double clickon a data file icon, Windows starts an associated application and opens thefile.andP;  One way is to associate a particular file extension (such as .WP) witha particular application (such as WordPerfect).andP;  Whenever you double click ona file with the extension .WP, Windows will start WordPerfect and load thatdata file.andP;  Windows 3.0 also lets you create individual icons that, when youdouble click on them, start the application and load a specified file.andM;In both cases, the effect is indistinguishable from what happens on theMacintosh.andP;  However, the way you arrive at that effect is different, becauseWindows doesn't relate the data file and the application in the same way thatthe Macintosh does.andP;  Instead, Windows requires you to tell it which datafiles are associated with which applications, either by providing theextension or by making the associations one by one.andP;  For both techniques, theapplication must be able to accept the name of a data file as a command lineparameter.andM;Essentially you tell Windows, &quot;When I double click this icon, start theWP.EXE program in the C:_WP directory with the command line parameterINVOICE.DOC.&quot;andP;  Creating the icon is functionally equivalent to setting up abatch file with the command: C:_WP_WP INVOICE.DOC.andP;  Double clicking on theicon is like executing the batch file.andM;The Macintosh provides a more general and far more automated solution, thoughone which provides fewer opportunities for customization.andP;  With the Mac, anydata file can &quot;know,&quot; via a standard mechanism, which application created it.andO;A user doesn't have to keep track of file extensions or type in command lineparameters one by one.andP;  With the Macintosh, moreover, a standard mechanismexists for associating data files with all kinds of things, not justapplications.andM;Although it poses these limitations and makes these demands on the user,Windows offers more flexibility than the Mac in many instances.andP;  WithWindows, you decide which data files and programs will appear in a particularprogram group and which application, data file, and command line parametersare associated with a particular icon--and you don't have to reorganize yourdirectory structure or copy files from place to place to do it.andM;With the Macintosh, document icons are created, and associations withprograms are made, automatically.andP;  Thus, for instance, on the Mac, everyWordPerfect document is represented by an icon that can be double clicked tostart WordPerfect and load that document.andP;  With Windows, you can create adocument with WordPerfect and then create an icon to open that document withanother program, such as a grammar checker.andP;  If you aren't currently workingwith a document, you don't have to represent it in a program group at all.andM;For instance, you could have a WordPerfect program group, with one iconrepresenting WordPerfect itself and other icons for starting WordPerfect andloading particular documents.andP;  The WordPerfect executable and the variousdocuments can all be stored in different directories.andP;  When a documentbecomes inactive, you can delete the icon, without affecting the data file.andO;If you start working with the document again, you can quickly create an iconfor it.andM;The Macintosh is expected to have similar capabilities with the &quot;aliasing&quot;capability that will come with System 7, due in the first half of 1991.andO;Aliasing will allow you to create multiple icons in multiple folders, allreferring to the same data file.andP;  Double clicking on an alias icon is justlike double clicking on an original icon.andP;  Aliasing will not make it possibleto open the same data file with two different applications, however.andP;  Norwill it help in hiding files.andM;The Virtue of VirtualityandM;The Windows Program Manager provides a &quot;virtual file system&quot; that can bestructured any way you like, independently of the file system and directorystructure on the disk.andP;  A program group functions as if it were a collectionof batch files, with each batch file represented by an icon.andP;  In the same waythat moving, deleting, or copying a batch file has no effect on any programor data file, moving, deleting, or duplicating an icon in a program groupdoes not move, delete, or duplicate a disk file.andP;  Similarly, when you createa program group window, you do not create a directory or change theorganization of the information on the disk.andM;Yet, if you want a realistic view of the file system on disk, the WindowsFile Manager or the DOS command line will give it to you.andP;  If you delete afile with DOS or the File Manager, it's wiped off the disk.andP;  If you copy afile with the File Manager or DOS, a second physical copy is made on thedisk.andM;If you're in the Program Manager, getting to the File Manager will cost you afew mouse clicks and some waiting time while the File Manager reads the diskinformation--an inconvenience you don't suffer with the Macintosh.andP;  TheMacintosh GUI is much simpler--it just shows you the files on the disk.andP;  Bothprogram and data files appear automatically.andP;  If you delete or copy aMacintosh document icon, you affect the information on the physical disk.andM;Although the simplicity of the Macintosh interface is a clear advantage, avirtual interface such as that offered by Windows 3.0 can be useful, too,particularly on networks.andP;  Server directory structures can be complex with alarge number of files.andP;  Yet only a small part of this complex system islikely to be relevant to any single user.andP;  Furthermore, different users arelikely to use the same information in different ways.andP;  The virtual interfaceallows each user to see program groups that make sense to him or her, whilehiding files that are not relevant to that user.andM;To someone in a marketing department, for instance, a particular spreadsheetmay contain numbers to include in a brochure; consequently, it would be mostconvenient to have it in a window with other items for the brochure.andP;  Someonein the planning department, on the other hand, may use the spreadsheet forforecasting revenue.andP;  The planner wants the spreadsheet in a window withother items needed for forecasting.andP;  Windows 3.0 permits such restructuringof reality.andP;  A user can represent the same spreadsheet file with twodifferent icons in two different windows and label the icons differently.andO;Users can duplicate program icons in multiple windows, too, without affectingdisk files.andP;  NewWave retains this flexibility.andM;Virtually the SameandM;Windows 3.0 and OS/2 Presentation Manager are similar in appearance, sincethey both follow the Common User Access specification of IBM's SystemsApplication Architecture (SAA): The same key combinations (e.g., Ctrl-Esc tobring up the Task Manager) and function keys (e.g., F1 for help) are used forthe same functions.andP;  Windows, icons, scroll bars, and other graphicalelements look and work the same.andM;The similarity goes deeper than appearances, though.andP;  The OS/2 user interfaceis similar to Windows in that it offers a realistic and a virtual view ofsystem resources, as well as a DOS-like command prompt.andP;  As with Windows,some actions, such as task switching, have to be performed through thewindowing interface or special command keys.andP;  However, all the commands thatare carried over to OS/2 from DOS can be executed from the OS/2 commandprompt.andM;As with Windows, the virtual view of the system is offered through programgroups.andP;  OS/2 PM also allows a user to create new program groups and add,move, or delete programs in groups.andP;  Users can place programs that are storedin different directories in a single group or place a single program inmultiple groups.andM;One difference is OS/2 uses menu choices to represent most programs, whileWindows represents all program by icons.andP;  Like Windows, OS/2 allows a user tocreate program group items that cause applications to start and loadparticular data files.andP;  OS/2 offers both one-by-one, batch file-likecapability and the ability to start a particular application based on theextension of the file.andP;  OS/2 also makes the file extension method moreflexible by allowing the same extension to be associated with multipleapplications.andP;  When you click on a file with a certain extension, you get alist of associated applications from which you can select one.andM;OS/2 gives the non-virtual view of system resources through the File System,which is similar to the Windows 3.0 File Manager.andP;  The OS/2 File Systemwindow shows directory trees as they exist on the disk.andP;  Any actions(deleting, copying, etc.) performed in the OS/2 File System have real effectson disk files.andM;More ObjectiveandM;Hewlett-Packard's NewWave is an extension to a GUI, designed to retain thebenefits of the GUI and add a number of capabilities.andP;  The current version ofNewWave runs on top of Windows 3.0.andP;  Putting NewWave on top of Windows 3.0does not seem to impact performance or reliability.andP;  Unix and OS/2 versionsof NewWave are also planned.andP;  NewWave contains a myriad of features andfunctions.andP;  However, its most significant additions to the Windowsenvironment stem from NewWave's object orientation.andM;NewWave is even more explicitly and devotedly object oriented than theMacintosh.andP;  For example, if you want to create a new Lotus 1-2-3 worksheet inNewWave, you do not start by bringing up 1-2-3, as you would on the Macintoshor under DOS, Windows, or OS/2.andP;  Instead, you create a new 1-2-3 object.andP;  Theobject is not a worksheet file, though it will be associated with a worksheetfile.andP;  The first thing that NewWave does is ask you for the name of a new orexisting file.andP;  When you give it a file name, an icon for a 1-2-3 objectappears on the screen.andP;  The object now exists, even though you may not haveentered a single keystroke in Lotus yet.andM;When you double click on that icon, 1-2-3 starts and opens the worksheet.andO;Not only does NewWave allow you to start programs by double clicking on adata file icon--it provides no other way to start a program.andP;  You never seean icon for an application in NewWave.andM;At first, it may be disconcerting not to see any applications lying about.andO;Of course, if you really feel you must see them, you can always bounce backinto Windows.andP;  After working in NewWave for a while, however, you may stopmissing your applications.andP;  After all, the only reason you use Lotus is towork on an existing spreadsheet or create a new one.andP;  Creating a new objectis no more work than starting an application and opening a file.andP;  Butstarting an application is busy work, while objects are useful.andP;  For example,they allow you to double click on an icon and have an application start andopen a file.andP;  With a little extra effort, you often can get a similar effectin Windows.andP;  In NewWave, you get it with no extra effort, every time.andM;Furthermore, because Windows imitates object orientation, while NewWavereally implements it, NewWave objects have far more potential than Windowsprogram icons.andP;  This shows up, for example, in the ways NewWave and Windowsimplement task automation and data interchange.andM;On AutomaticandM;DOS batch files are limited in that they can contain only commands that canbe executed from the DOS command line.andM;To offer task automation within applications, many programs offer a macrocapability.andP;  Typically, the program &quot;records&quot; keystrokes, creates a &quot;script,&quot;then plays the script back on command.andP;  Several utilities on the market offera generic macro ability, allowing you to automate tasks in programs thatdon't support macros.andM;Mouse movements and clicks can be recorded into scripts and played back justas keystrokes can.andP;  Windows 3.0, for instance, includes a Recorder utilitythat records both keystrokes and mouse events.andP;  The Windows 3.0 Recorder issomewhat sophisticated.andP;  For example, it allows you to record mouse eventseither relative to the entire screen or relative to the window that you'rein.andP;  That way, if you move the window to a new location on the screen, yourmacro will still work.andM;Recorder also gives you some control over which mouse events are recorded.andO;You can record no mouse events at all (record only keystrokes), just clicksand drags (record mouse events only while a mouse button is being pushed), oreverything (all mouse events).andP;  You can change the macro's hotkey or the nameof the macro, decide whether a macro can be used only within the applicationwhere it was created or in any application, and decide whether a macro caninclude other macros.andM;Nevertheless, Windows macros have limitations.andP;  Recorder is designed for usewith Windows applications only.andP;  When you play a macro back, you must beginwith the cursor in the same position as when you recorded the macro.andP;  If youmove icons or windows on the screen after you record a macro, the mousemovements you recorded may not work correctly anymore.andP;  Keystrokes are lesslikely to become obsolete as the environment changes, but it can happen.andO;Recorder is sensitive to screen resolution, so a macro created on a machinewith one type of graphics adapter won't work properly on a machine with adifferent adapter.andM;Because of all these dependencies, Windows macros are a bit dangerous: Theymay perform unintended actions when played back in an environment that isdifferent from the one in which they were recorded.andP;  As a result, Microsoftrecommends that you use the mouse sparingly in macros.andM;NewWave overcomes these limitations by recording events as they relate toobjects, not as they relate to the screen, the keyboard, or the mouse.andP;  Forinstance, NewWave records the fact that you went into the spreadsheet folderand opened a particular 1-2-3 object, not the fact that you moved the mouseto a certain screen position, double clicked, then moved to another positionand double-clicked again.andP;  Even if you later move the spreadsheet folder to adifferent screen location, or move the Lotus 1-2-3 object to a differentlocation in the spreadsheet folder, the NewWave script will work correctly.andO;NewWave makes it much easier to create complex scripts that work correctly,independent of the cursor's starting position, changes in positioning ofobjects within windows, and the type of graphics adapter.andM;The NewWave approach also lends itself to the creation of scripts that can beedited and enhanced manually.andP;  It's relatively easy to edit a script thattells NewWave, in effect, &quot;Select and open the tickler folder, then selectand open the September folder.&quot;andP;  The script is easy to understand, because itdescribes what you want to do, not the minutiae of how to move the mouse orenter keystrokes.andP;  By editing scripts, you also can add prompts andconditional statements.andP;  In contrast, perhaps because of the difficulty ofediting mouse events, Windows 3.0 does not give users the ability to editscripts.andP;  All you can do is record them and play them back.andM;NewWave also allows you to create agent tasks, which are essentially scriptobjects.andP;  To perform an agent task, you just drag the task icon to an agenticon.andP;  Agent tasks can also be scheduled, either once or repetitively.andM;With NewWave, users can commit errors with its scripts, but the errors relateto objects rather than the positioning of windows or icons.andP;  For instance, ifyou create a NewWave script that opens a window and makes a selection fromit, you will receive an error message if you run the script when the windowis already open simple because it's not possible to open a window that'salready open.andM;Data ExchangeandM;On the Macintosh, you can cut data out of one application window, store it inthe &quot;clipboard,&quot; then paste it into another application window.andP;  Windows 3.0duplicates this function and goes one giant step beyond it, allowing programsto exchange information automatically through Dynamic Data Exchange (DDE).andM;Windows DDE requires that both applications be active at the same time.andP;  Ifthe word processing program isn't active when a change to the Lotusspreadsheet is made, for example, it can't find out about the change.andM;A typical use of DDE is to create &quot;hot links&quot; from one file to another.andO;Suppose, for example, that a portion of a Lotus worksheet is hotlinked into aword processing document.andP;  Later the Lotus worksheet is changed.andP;  Lotus willautomatically notify the word processing program of the change.andP;  The wordprocessing program can then update document with the new information from theworksheet.andM;Windows DDE is implemented in an extremely flexible fashion.andP;  A user whowants information can request it on a one-time basis or whenever theinformation changes.andP;  Information is identified by application, topic, anditem.andP;  Topics and items can be anything two applications agree on.andP;  A userdoesn't have to request information from a particular application about aparticular topic but can ask all active applications to tell it what topicsthey support.andM;Because neither DOS nor Windows provides any other standard way to identifyinformation, the topic almost always is a file name.andP;  (For applications thatdon't operate on files, the topic is usually application-specific.)andP;  Thismeans that to establish a DDE link, the client must know the path and filename of the file it wants to link to.andP;  If the source file is moved orrenamed, Dynamic Data Exchange becomes Data Don't Exchange.andM;OS/2 Presentation Manager also offers a DDE mechanism similar to Windows.andO;However, OS/2 processes have a wide variety of other interprocesscommunication techniques available as well, including mail slots, pipes (orNamed Pipes when the communication takes place over a network), and sharedmemory.andP;  None of these OS/2 mechanisms, however, eliminates the need for bothapplications to be active simultaneously.andP;  Nor do they provide a standard wayof identifying information without using paths and file names.andM;NewWave's object orientation overcomes these shortcomings.andP;  In NewWave, acompound document is created by dragging one object into another object.andP;  Forinstance, you could drag a Lotus 1-2-3 object into a NewWave Write object.andM;If a file is moved or renamed but remains associated with the same object,NewWave still will be able to find it.andP;  This means that a source file can bemoved or renamed without killing the link.andP;  Further, when the source documentis required to form the compound document, NewWave will open the applicationassociated with the source document.andM;NewWave compound documents have three important limitations.andP;  First, onlyNewWave applications can form compound documents.andP;  Not many NewWaveapplications exist at this point, though vendors such as Lotus andWordPerfect have promised NewWave versions of their programs.andP;  The objectsused to form compound documents, however, can be associated with a DOS,Windows, or NewWave application.andM;Second, only entire objects can be brought into a compound document.andP;  Nomechanism exists, for instance, to bring one or two cells from a spreadsheetinto a compound document.andP;  Programmers of NewWave applications can use thestandard Windows DDE if they want to import partial objects.andM;Finally, not all kinds of objects can be imported into all other kinds ofobjects.andP;  For instance, you can't currently import a WordPerfect object intoa NewWave Write object, but you can import a Lotus 1-2-3 object or an ASCIIfile into a NewWave Write object.andP;  As time goes on, NewWave will support dataexchange between more different types of objects.andM;Macintosh, OS/2, Windows, and NewWave all offer more attractive userinterfaces than DOS.andP;  On closer examination, they have more muscle than DOS,too, although you pay a price in memory, disk space, and perhaps performance.andO;Network administrators looking for an easier interface for novice users mayfind that one of these GUIs does the trick.andP;  Power users may also want totake a look at them--they may offer just the flexibility and capabilityyou've been looking for.andM;Features and Requirements of Windows 3.0andM;Supported network operating systems: NetWare 2.15; LAN ManagerandM;Required workstation operating system: MS-DOS or PC-DOS (version 3.1 orlater)andM;Memory requirements: For 386 enhanced mode--PC with Intel 80386 processor (orhigher); 2MB or more of memory (640KB conventional memory, 1024KB extendedmemory)andM;For standard mode--PC with intel 80286 processor (or higher); 1MB of memory(640KB conventional memory, 256KB extended memory)andM;For real mode--PC with intel 8086 or 8088 processor (or higher); 640KBconventional memoryandM;Disk requirements: 6MB to 8MB hard disk space; one floppy driveandM;Monitor requirements: EGA or VGAandM;Price: $149andM;Features and Requirements of NewWaveandM;Supported network operating systems: NetWare; LAN ManagerandM;Required workstation operating system: MS-DOS (3.2 or higher) or MS-Window3.0andM;Memory requirements: For 80286, 80386 real mode--640KB base; 3MB expandedmemory (EMS 4.0)andM;For 80286 standard mode, 80386 enhanced mode--640KB base; 2MB extended memoryandM;Disk requirements: 10MB to 13MB spaceandM;Monitor requirements: EGA or VGAandM;Price: $195andM;Features and Requirements of Macintosh GUIandM;Supported network operating systems: NetWare 2.15; AppleShare; TOPS; othersandM;Required workstation operating system: Macintosh system softwareandM;Memory requirements: Not applicable--all Macs use Mac GUIandM;Disk requirements: Not applicable--all Macs use Mac GUIandM;Monitor requirements: Not applicable--all Macs use Mac GUIandM;Price: Not sold separatelyandM;Features and Requirements of OS/2 Presentation ManagerandM;Supported network operating systems: NetWare 2.15 and 386; LAN Manager;othersandM;Required workstation operating system: OS/2andM;Memory requirements: 2.5MB minimumandM;Disk requirements: 4MB space; one floppy driveandM;Monitor requirements: Graphics display (varies with vendor)andM;Price: Varies with vendorandM;Mike Hurwicz is a consultant and freelance writer in Eastsound, Wash., whospecializes in networks.andO;</TEXT></DOC>
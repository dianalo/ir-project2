<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-447-407  </DOCNO><DOCID>09 447 407.andM;</DOCID><JOURNAL>Patricia Seybold's Office Computing Report  August 1990 v13 n8p1(13)* Full Text COPYRIGHT Patricia Seybold's Office Computing Group1990.andM;</JOURNAL><TITLE>Odesta's ODMS: the process of document management. (OdestaDocument Management Systems)</TITLE><AUTHOR>Marshak, Ronni T.andM;</AUTHOR><DESCRIPT>Company:   Odesta Corp. (products).andO;Product:   ODMS (Search software) (design and construction).andO;Topic:     Document Management SystemsPerformance SpecificationsOffice AutomationSoftware ArchitectureMarketing Strategy.andO;Feature:   illustrationcharttable.andO;Caption:   The data-based applications environment. (chart)The ODMS components. (table)Project management. (chart)andM;</DESCRIPT><TEXT>Odesta's ODMSandM;Years ago, office automation, word processing in particular, was sold withthe promise of a &quot;paperless office.&quot;andP;  Today, not only are we still drowningin paper, we are also submerged in the sludge of online documents and flies.andO;Rather than eliminating the problems of filing and retrieving information,computer systems compounded the difficulty.andP;  It's so easy to create a newdocument, revise it, send it, copy it, typeset it, etc.andP;  The problem iskeeping track of the piles of online paper.andM;To the rescue: document management systems.andP;  Oh, document management isn'tnew.andP;  The technology has always been around.andP;  Remember archiving away olddocuments on the Wang System 5 is 1979?andP;  That was document management.andP;  Theability to specify a long or short file directory in Unix?andP;  That was alsodocument management.andM;But document management has matured, adding database underpinnings, theability to manage all sorts of files, not just text, and expanding itscapabilities to manage documents across heterogeneous networks.andP;  DocumentManagement is now recognized as one of the hot workgroup technologies of thisera.andP;  One of the more exciting developments in document management ismanaging the flow of documents as they move from user to user and process toprocess.andP;  This new concept, document flow, is exemplified by the OdestaDocument Management Systems (ODMS).andM;Traditional Document ProcessingandM;Document management systems typically provide filing, retrieving, andnavigation among files in the network.andP;  This is by no means a small endeavor;consider the number of files we generate every day.andP;  And notice that we sayfiles rather than documents.andP;  The term &quot;document&quot; suggets to many of us atext file created in a word processor.andP;  We tend to use the word &quot;file&quot; toindicate spreadsheets, mail messages, data tables, graphics, etc.andP;  But theseare, indeed, also documents.andP;  Document management does not deal exclusivelywith word processing output but with all files in a multimedia environment.andO;Admittedly, we are arguing semantics, but too often we limit the creative useof technology simply by the name we give it.andM;Typical features of a document management system include the following:andM;* Version control.andP;  Maintaining and uniquely identifying the version of adocument after each editing session.andP;  Older versions may be retrieved andedited, starting new version paths.andM;* Document libraries with check in/check out systems.andP;  Check in/check outsystems prevent more than one user from editing the same version of adocument simultaneously.andP;  Typically, when a document is checked out, the fileis locked and is available to other users in read-only format.andP;  Usually, thelocked version can be copied, creating a new, editable version.andM;* Security.andP;  Access permissions can be assigned by file or directory(library).andP;  Each document management system offers a different level ofgranularity of security.andP;  Some allow you to restrict access by user; some byworkgroup.andP;  Some are restricted on the file level; some only by directory.andO;And types of access can differ.andP;  Some systems support only full access or noaccess.andP;  Some allow a read-only mode, etc.andM;* Archiving.andP;  Older or rarely accessed files can easily be filed to tape,floppy, or CD.andP;  Some systems can keep track of paper files by maintaining anonline index card with the information on the document (what it is, what filecabinet it's in, when it was written, and so on).andM;* Searching by field.andP;  Most systems provide both system-generated fields(e.g., date of last access) and user-customized fields (e.g., project number)which may be searched.andP;  Field searches are usually quicker and require lessmemory than full-content search features.andM;* Full-content searching.andP;  Until recently, full-content searching was calledfull-text searching, but, with multimedia compound documents becoming moreand more common, some systems are now able to search for a variety ofobjects, such as an image or graphic.andM;All these activities deal with finding and storing the correct document,especially when you don't know exactly where it is or what it is called.andP;  Buttraditional document management capabilities don't tell you what to do withthe document once it has been found, who needs to see it next, where itshould be sent, etc.andP;  Nor do they address the individual business needs ofeach customer.andM;ADDING PROCESS TO DOCUMENT MANAGEMENT.andP;  Enter ODMS from Odesta (Northbrook,Illinois).andP;  This innovative Macintosh-client, Mac- or VAX VMS-server productis designed to automate the flow of documents among members of a workgrouprather than simply the filing and retrieval of documents by individuals.andM;ODMS is actually a sort of hybrid application that combines many of thetypical document management features with elements of workflow automation.andO;The system, which has, as its core, a relational database (Odesta's Helix),includes such document management capabilities as version control, checkin/check out, and field search, while also providing the capability tospecify document flow--routing documents amongst users with instructions ofhow each is to be handled and what should happen when the individual hasfinished with the document.andP;  (See illustration 1.)andM;The flow of documents is completely customizable by the user to addressindividual business needs.andM;Odesta Product PhilosophyandM;Odesta, as a company, has certain design criteria upon which it builds allits products, including ODMS.andP;  The core criteria are that all Odesta productsaddress management issues that are data driven and that the design center isalways the individual end user.andP;  Using this philosophy, Odesta attempts tobring to market &quot;innovative products that let people do things themselvesthat they couldn't do before,&quot; explains Odesta president Daniel Cheifetz.andO;&quot;We want to get the users close to the data.andP;  To provide a context for actionand meaning, give the data dimensions that people don't ordinarily see, andmake the whole thing interactive.&quot;andM;Odesta, whose first business products were developed for the Macintosh,espouses a user-centric philosophy, similar to Apple's.andP;  Give power andflexibility to the user.andP;  Do not allow management to dictate to theindividual.andP;  This is a fine philosophy, but Odesta has to be careful.andP;  Thecompany seems to bend backwards to avoid offering features that might be usedby MIS to control the system too tightly.andP;  For example, ODMS does not countkeystrokes in an editing session nor does it keep track of how long it tookto edit a document.andP;  This type of information, the company maintains, is onlyused by corporate bureaucrats to &quot;check up&quot; on individual productivity.andP;  ODMSis designed for professionals, not assembly-line workers.andP;  But if that's whatthe customer wants...andP;  The problem is more a matter of positioning thanproduct design.andP;  Odesta has created a product that is flexible enough toenable tight controls if that is what the customer chooses; these controlsare just hidden.andM;THE GOAL OF ODMS.andP;  ODMS is designed with these criteria, but the product goesa step beyond other Odesta products (Double Helix, the RDBMS which underliesODMS; DataDesk, an exploratory data analysis and statistics package;GeoQuery, a decision support tool for manipulating database informationwithin a geographic context; and DecisionTree, jointly marketed with DigitalEquipment Corporation, which identifies patterns in large databases fortargeted marketing, risk assessment, etc.).andP;  ODMS specifically addresses themanagement issues of documents in a workgroup setting.andP;  ODMS is not designedas a standalone product.andP;  The heart of the application is facilitating thecollaborative process--adding structure and computer support to the ongoingor ad hoc processes every workgroup faces.andM;For example, we decided to create a document flow to support the process ofwriting a personnel policy manual.andP;  (For more information on that process,see &quot;Project Management&quot; below.)andP;  The individual activities that go into thefinal manual (e.g., reviewing the old manual, making modifications, sendingnew versions around for approval, etc.) are all part of a group effort thatcan be broken down into steps and managed by the system.andM;ODMS AS ENABLING APPLICATION.andP;  Create a document flow.andP;  This is a keystatement.andP;  Unlike most applications that create an end result, ODMS is aplatform for building customized applications.andP;  These document flowapplications may be very simplistic, or they can be quite complex,incorporating sophisticated programming statements written in Odesta's visualprogramming language (see below).andM;Odesta is preparing certain generic applications, such as a document routing,and tracking system, so that the product can be used right out of the box.andO;But its value is as an enabling application that helps end users--not onlyMIS types--rapidly develop customized document-flow applications.andM;A New Set of Problems.andP;  Offering an enabling application opens up a Pandora'sbox.andP;  Where mass-market software developers, those developing for the retailor horizontal markets, used to be concerned only with providing a bettertool--more functionality and friendlier interface--vendors of enablingapplications must also become familiar with the way businesses work.andP;  Theycannot focus in on a single task, such as word processing.andP;  They must addressissues such as:andM;* In which application does the user live (spend most of his or her time,feel most comfortable)?andP;  If a user spends all his or her time in aspreadsheet, can the vendor realistically expect the user to leave the coreapplication every time he or she needs to access the enabling application?andO;Or is there a way to facilitate this access from within the spreadsheet?andO;What role does the windowing environment play?andP;  And is that enough?andP;  Enablingapplications often need to be invisible after the customized application hasbeen built.andM;* How do you provide a product that can be modified for every corporateculture?andP;  Organizations operate in vastly different styles.andP;  Some wantcentralized control over every piece of data on any business sytem.andP;  Somepromote individual autonomy in the computing environment.andP;  Some considersecurity the most important aspect of a system.andP;  Some don't bother with anysecurity measures, allowing anyone to access anything at any time.andP;  And, ofcourse, most organizations fall somewhere in between.andM;* A full understanding of business problems in the targeting market.andP;  Notonly does the vendor have to be able to provide the features and capabilitiesthat truly address complex business scenarios, but the terminology must be inbusiness terms, not technical terms.andM;* Integration with other enabling and end-user applications.andP;  An enablingapplication must interoperate with all the applications used by a customer,including custom-design, mission-critical applications.andM;How Well Does ODMS Do?andP;  In general, ODMS does well in the areas ofinteroperability and in understanding its target market.andP;  The companyprovides a suite of vertical enhancements built wiht ODMS, including admanagement, correspondence management, image management, legal casemanagement, pagination management, procurement management, professionaloffice management, proposal management, publication management, and technicaldocument management.andP;  Most of these applications, you will notice, leanheavily to publishing activities.andM;The product is simply too visible at this time.andP;  While users do not live inODMS--the product does not include any personal productivity tools (e.g.,andO;word processing, spreadsheet, graphics)--they need to explicitly go into theproduct, and go several levels deep at that, far too often.andP;  These issueswill be more fully addressed as we discuss the ODMS product.andM;ODMS StructureandM;ODMS falls into many of the industry's hot categories.andP;  It is a workgroupproduct, it is object oriented (documents are stored in the database asobjects, including the infromation about the application with which they werecreated), it is designed as a networked client/server application, it has anunderlying RDBMS, and it runs in a graphical environment (the Mac).andP;  It alsoassumes a mixed bag of applications (any Mac or VMS application that createsa file) from other vendors; ODMS itself does not create documents.andM;ARCHITECTURE.andP;  In its current implementation, ODMS runs on both Macintosh(with 4 MB) and VAX hosts.andP;  Clients include Macs and VT100 terminals.andP;  Thecharacter-based terminal interface is, naturally, more limited than thegraphical interface, though it supports pull-down menus and windows.andM;ODMS supports Digital's Compound Document Architecture (CDA).andP;  DigitalDocument Interchange Format (DDIF) documents can be stored and retrieved innative format.andM;While there are a lot of Mac users out there, and even more VAX users, theoptions are still very limited when you look at the potential universe.andM;Next-Generation Platforms.andP;  Odesta is committed to moving ODMS to a broaderrange of clients and servers.andP;  Client support will soon include Motifworkstation (VMS and Ultirx) and X terminal support, available in early 1991.andO;A Windows 3.0 version is scheduled for mid '91, with an OS/2 client followingby the end of the year.andM;Server platforms will be determined based on support for underlyingdatabases.andP;  Odesta is committed to supporting SQL DBMSs which support BLOBtechnology (see &quot;Support for BLOBs&quot; below).andP;  The first DBMS to be supportedwill be Digital's Rdb.andP;  No other specific platforms have been announced, butwe speculate that Sybase will be next.andP;  It is a popular RDBMS which offersBLOB support.andM;SYSTEM DESIGN.andP;  ODMS is made up of three components (see Illustration 2):andM;* The ODMS Workflow Manager Clients, networked Mac or terminal processes forworking with ODMS workflow and document databasesandM;* The ODMS Document Database Server, the network workflow and documentserver--VAX or Macintosh--that provides &quot;off-the-shelf&quot; capabilities forstoring, retrieving, sharing, routing, and tracking electronic workandM;* The ODMS Design Station, for the customization of the ODMS DocumentDatabase Server applications and the creation of new applications.andM;VISUAL ORIENTATION.andP;  ODMS has been designed very visually, making extensiveuse of icons and the drag-and-drop paradigm.andP;  Documents can be opened and therelated applications launched directly from certain screen forms.andM;The final design of the forms to be included in the generic product are stillin progress, so we cannot give an accurate description of the look and feel.andO;But effective use of pgraphics in user interface has always been a priorityof Odesta, and that being the case, we have every reason to believe that thefinal forms will be highly graphical and attractive.andM;BUILT A TOP DATABSE TECHNOLOGY.andP;  The developers of ODMS determined that usinga database is the best method of keeping track of all the processes involvedin a collaborative environment to ensure consistency and control inmultiprocessor, multiuser environments.andP;  And, unlike some other documentmanagement systems which use the database only to store certain structuredfield information on each document, the ODMS database stores both thestructured information (file size, author's name, date of creation, etc.) andthe document itself as an unstructed field.andP;  The database acts as aclearinghouse or traffic controller for people and projects and the work thatis shared among them, keeping track of where it is, where it's been, andwhere it's going.andM;ODMS is built on top of Odesta's Helix RDBMS.andP;  Special extensions werewritten to support the storage and retrieval of documents and images.andP;  Helixis deployed on the server (VAX or Mac).andP;  ODMS client software, also based onHelix, handles the desktop display and the client side of the application(such as preprocessing queries), and manages all interaction with the servervia either DECnet or AppleTalk.andM;Support for BLOBs.andP;  In addition to the extensions for storage and retrieval,Helix has been extended to support binary large object (BLOB) fieldtypes--where the documents are stored.andP;  BLOB fields differ from traditionaldatabase fields in that they aren't given a specific structure, such as sizeof field or content type (e.g., text, numeric, date).andP;  Documents are storedin these fields as data with extended attributes--author, date of creation,application it was created with, etc.andP;  ODMS doesn't actually know what's inthe document.andP;  Its role is to map documents into Helix and retrieve them ondemand.andP;  Only the application creating the document needs to know itsstructure.andM;Odesta had to add support for BLOB field types to the DBMS to make ODMS work.andO;ODMS stores and manages BLOBs internally as well as externally.andP;  Basically,ODMS retrieves BLOBs from the DBMS, locks the relevant record, and displays acopy of the record on the client workstation.andP;  The system allows any numberof documents to be stored in a particular record (though most people preferto limit a record to include a single document).andP;  When the user finishesworking with the document(s) in the record, it is uploaded to ODMS, whichupdates the DBMS record.andM;This approach manages BLOBs within the structure of the database managementsystem.andP;  These internal BLOBs are subject to the DBMS's access control,security, and integrity features.andP;  An external BLOB is a pointer contained ina relational field to an external data structure, stored anywhere on thenetwork.andP;  This data structure doesn't even need to be online; the BLOB cankeep information on a paper file.andP;  External BLOBs, obviously, are notprotected by the DBMS.andM;The downside to storing documents as BLOBs is that the database knows nothingabout the contents of the document.andP;  The document is always treated as asingle unit.andP;  Therefore, even though document flows can operate based onconditional statements, ODMS cannot read any information from the documentitself to determine if a condition is met.andP;  The user needs to type the datainto a conditional field.andP;  (For more information, see &quot;Adding Intelligence toDocument flows&quot; below.)andM;ODMS will work with any RDBMS that supports internal BLOBs.andP;  Today, thismeans that the system works outside of SQL, the leading database querylanguage standard.andP;  As the RDBMS vendors implement support for BLOBs underSQL, Odesta plans to provide support for BLOBs within an SQL framework.andM;The ODMS ModulesandM;The basic out-of-the-box modules provided by ODMS consist of a number ofrelated modules:andM;* Personal document storage.andP;  An individual can store and retrieve a documentwithin the ODMS database, where attributes such as type of document, creator,pathname, and version number can be attached to the document record.andP;  Theseattributes can be used to facilitate the retrieval of a document (see&quot;Document Entry Form&quot; below).andM;* Project management.andP;  Individual projects with related activities andelements (steps and substeps) can be created to specify and give context tothe automated routing of documents (see &quot;Project Management&quot; below).andM;* Workflow.andP;  Workflows specify where a document is sent once specifiedcriteria is met (see &quot;Routing&quot; below).andM;* Distribution.andP;  Copies of a document can be sent to a distribution list forreview.andM;* Version control.andP;  Multiple uniquely identified versions of documents can bemaintained and accessed from the ODMS database.andP;  Version control allows usersto replace existing versions, create new versions, or make versions &quot;readonly.&quot;andP;  Odesta is planning to add a feature that limits the number ofversions of a document that can be created.andM;* Pagination.andP;  Documents that have been designated as parts of a givenactivity (i.e., chapters in a book) and are ready for consolidation and pagelayout can be moved to a single folder on the desktop.andM;* Database administration.andP;  Advanced users can be assigned access to theDesign Mode, which actually accesses the underlying DBMS, including thevisual programming language.andP;  This access allows users to override andcustomize projects, workflows, screens, etc.andM;* Archival storage and retrieval.andP;  Old documents can be archived outside ofthe database.andM;PROJECT MANAGEMENT.andP;  The exciting part of ODMS is document flows, whichOdesta calls workflow patterns.andP;  The actual flow is built by first defining aproject, then specifying the activities (steps) and elements (substeps) thatneed to happen to complete the project.andP;  Within the activities and elementsare document routings or automated workflows, which specify where a documentshould next go based on conditional criteria.andP;  (See Illustration 3.)andM;In database terms, a project would be a record, as would the activities andelements within the project.andP;  Documents associated with the project,activity, or element are (BLOB) fields within the record.andP;  ODMS uses RDBMStechnology to associate project records with the appropriate activity recordsand element records.andM;This relational structure makes it simple to reuse entire projects, whichOdesta supports.andP;  However, activities and elements are not easily reusedwithin other projects.andP;  The tools are available to do so in Design Mode (seebelow), but there is no simple way to say &quot;copy this activity.&quot;andP;  We wouldlike to see this capability added to ODMS.andP;  With its object-orientedphilosophy, the reuse of an object should be as easy as possible.andM;The automated workflows within the steps are reusable.andP;  These are calledstandard workflows, which can be modified to create new workflows.andM;Generic Forms Provided.andP;  Odesta plans to ship generic forms for building aproject with ODMS.andP;  The forms are currently being developed, so, while thestructure and methodology of creating a project will not change, the designof the forms we worked with may be radically different by the time they areultimately shipped.andM;Document Entry Form.andP;  As we mentioned earlier, the document entry form is abasic, &quot;right-out-of-the-box&quot; screen from that allows you to enter existingfiles into the ODMS database.andP;  Only files within the database can bemonitored or used in a project.andP;  But ODMS allows you to enter documents intothe database from a number of different forms in the document flow process.andO;The document entry form is required for entering documents to be monitoredbut which are not part of an existing project.andM;Files entered into ODMS may be copied from a local drive, copied from aserver drive, or moved from a local drive.andP;  Unfortunately, documents must beentered one at a time.andP;  You cannot, for example, highlight a group of filesyou wish to enter.andP;  You can, however, move an entire folder of documents intoODMS.andM;Once a file is put into the ODMS system, it is governed by the system'ssecurity and version control facilities.andP;  Files can be designated as publicor private.andP;  ODMS recognizes the nee to expand the granularity of permissionsto include groups or individuals, and the company promises that morecategories of permission will be available in the next release.andP;  For versioncontrol, each file can be set up to create a new version after each edit, tohave the new edits replace the old version after editing, or to make thedocument read-only.andP;  The system administrator can set up a default for allfiles entered; that way, all documents that are put into the system can beunder version control unless specifically indicated otherwise.andM;Project Entry Form.andP;  Each document flow is called a project.andP;  Project arecreated by simply filling in the Enter Projects form.andP;  The system assigns aproject identification number that is used by the system to tie together allelements and activities related to the project.andP;  The user assigns a projectname, which is generally used to access and manipulate the project.andP;  The IDnumber is only used occassionally.andP;  For example, if you wish to createactivities that are not related to a project and then relate them at a latertime, you would have to use the project number to initiate the relationship.andM;In addition to the project name, the Enter Projects form includes an optionaldescription, an instructions (comments) field, the project manager, and duedate.andP;  There is also a field for filling in the completion date.andM;Activity Entr Form.andP;  Once a project has been created, the activities--orsteps--must be designed.andP;  The Activity Entry Form (see Illustration 4) isaccessed from the Enter Projects form.andP;  (Existing activities can be accessedfrom several other screens as well.)andP;  The activity form is divided into threesections:andM;* Activity Entry, which describes the specific activity, such as schedule ameeting, create an agenda, compile a list, etc.andP;  An activity manager(different from the project manager if desired) and due date are assigned.andP;  Afield is available for any comments (e.g., &quot;be sure to check the status ofrelated projects&quot;), and a comments history is shown, displaying not only anyuser comments but also a record of who has worked on the activity, along witha date and time stamp.andM;* Attach Document, which allows you to specify which document is required forthis step of the project.andP;  If the document has not already been entered intothe ODMS database, it can be copied from the desktop at this point.andO;Documents already in ODMS can be accessed directly from this screen.andO;Accessing the document opens the file and loads the applications with whichit was created.andP;  At this point, you can see a history of the versions of thedocument, or you can create elements or substemps in your project.andM;* Activity Routing, which allows you to specify how a document should bemoved among users for this one step.andP;  Routing can be manual or automatic.andO;(For more information about routing, see &quot;Routing&quot; below.)andM;Interestingly, and fortuitously for most applications, each step does notneed to have a document involved.andM;For example, in our personnel policy manual project, the first activityrequired is setting up a meeting with the appropriate people.andP;  The projectleader assigns the task to her secretary, who uses an online schedulingsystem to schedule the meeting.andP;  When this is accomplished, the secretaryhands off the step, though without any attached document.andM;Element Entry Form.andP;  Any single activity can have multiple elements--orsubsteps.andP;  Usually, elements represent different small documents that arecombined to create the document in an activity.andP;  One of our activities was&quot;writing a new policy manual.&quot;andP;  Actually, several individuals would beinvolved in either editing old policy documents or writing new documents.andO;Then, after all the individual pieces of the manual were written or edited(each in a separate document), the pieces would be collected--the ODMS termis &quot;gather and transfer&quot;--into a new directory, where they are merged into asingle document using the word processor, page layout system, or compounddocument editor of choice.andP;  Remember, ODMS does not provide an editor.andP;  Itmerely gathers the documents so you can put them together in your applicationof choice.andM;The Element Entry Form is almost identical to the Activity Entry Form, addingonly an Element ID and Element name (see Illustration 4).andP;  Again, from thisscreen, documents can be entered into ODMS, and they can be opened and theirapplications launched.andM;ROUTING.andP;  Both the Activity Entry Form and the Element Entry Form allow youto specify the routing of the relevant document.andP;  This is where the automatedflow aspect of document management comes in.andP;  When the assigned person hasfinished working on a document, he or she must &quot;handoff&quot; to the next personon the route.andP;  The Activity Entry Form and the Element Entry Form include aHandoff field.andP;  You must type either yes or no in that field to send thedocument on its way.andM;There are two types of flows: manual and automatic.andM;Manual Routing.andP;  Manual routing allows each user to determine what user orgroup (which Odesta calls a stage--but we're working hard to convince them tochange that) should receive the document next.andP;  This information cannot befilled in until you are ready to handoff a file.andP;  If you wish to specify inadvance a single-step routing (to only one group or person without anyadditional steps), you have to create a single-step automatic workflow.andM;Automatic Routing.andP;  In a more complex document flow, automatic routing savestime and ensures that the right people are seeing the right information inthe right order.andM;In an automatic flow, you specify where a document is to go if it meetscertain criteria.andP;  The basic criterion is usually a yes or no answer to thequestion, &quot;Is it ready to move to the next step in the project?&quot;andP;  Butadditional intelligence can be added to workflows.andP;  (See &quot;Adding Intelligenceto Document Flows&quot; below.)andM;Back to our example.andP;  Each new policy written needs to go from the author toa reviewer.andP;  If the reviewer signs off on the document, it is then routed toa proofreader.andP;  When the proofreader signs off, the document goes to theproject leader.andP;  If either the reviewer or the proofreader doesn't give thethumbs up to the document, it is routed back to the author.andM;Standard automatic workflows are resusable throughout the system.andP;  Oncecreated, they may be used with any new activity or element.andM;Each step of a standard workflow is defined through the Enter StandardWorkflows form (see Illustration 5).andP;  You give the flow a name and indicatewhich step the document came from (each workflow always begin with step 0);next, you determine what the conditionals are (the If statement) and wherethe document should go (which group receives the document), depending on theanswers to the conditionals (yes or no are the most common criteria).andP;  Youcan specify whether a new version should begin at each step or if the sameversion goes through multiple steps.andP;  The system automatically assigns a stepnumber, and you must use this step number to modify a step.andM;There are three different types of automatic routing:andM;* Standard Workflow Routing, described above.andM;* Modified Workflow Routing, which is used when a standard workflow isapplicable, but minor changes need to be made--for example, a particulardocument may require an extra step to be inserted into a standard workflow.andM;* Customized Workflow, which creates a brand new workflow not based on anexisting workflow.andM;Adding Intelligence to Document Flows.andP;  Complex conditional statements can beincluded in the document flows.andP;  For example, yu could set up a conditionwhereby a spreadsheet document would go to loan approval if it were under$20,000 and the credit check were positive.andP;  If the amount were under $20,000but the credit check negative, it would go to a bank officer.andP;  If the amountwere above $20,000, it would go to a corporate loan department.andP;  And so on.andM;These conditions are built within the ODMS visual programming language,available through the product's Design Mode (see &quot;Design Mode&quot; below).andM;The problem, however, is that the system cannot read the relevant figure orthe credt check status from within the document.andP;  Remember, documents arestored as BLOBs.andP;  They are single objects.andP;  The user must type the relevantinformation into conditional fields on the activity or element form beforehanding off the document.andP;  Odesta plans to include four conditional fields oneach entry form to be used.andP;  If you wish to apply more requires.andP;  In our loanexample, two fields, one for amount and one for credit status, would be used.andO;If you wish to apply more than four conditionals, you can use thecustomization tools in the Design Mode to add more conditional fields to theforms.andM;Using a Document FlowandM;Once the project is built, you have to be in ODMS to use it.andP;  This may soundperfectly logical, but it can be problematic.andP;  ODMS is not a word processor,spreadsheet, etc.andP;  You cannot create documents in ODMS, though you can openexisting documents from within the product.andP;  Since ODMS works primarily ingraphical windowing environments--Macintosh and DECwindows--it is simpleenough to change applications using MultiFinder or switching windowsrespectively.andP;  But we would rather see some method of making ODMS moreinvisible by integrating it into the user's primary application environment.andO;That may mean the ability to open the application from within ODMS--perhapsthrough some encapsulation method--so that certain ODMS menu options arestill available when you are working on a document.andM;GROUP AND INDIVIDUAL ACTIVITY LISTS.andP;  The implementation of activity lists isparticularly well done.andP;  Each user has both an individual and a groupactivity (to do) list, indicating what steps of what projects are ready andwaiting to be done.andP;  If a user &quot;claims' an activity off the group list, itmoves into his or her personal list and is removed from the group listing.andM;We like the implementation so much because other, suppposedly moresophisticated, procedural automation products do not allow you to route astep to a category or group.andP;  Rather, you must specify an individual name.andO;there is no mechanism to handoff a step to, say, the next available agent.andM;On the negative side, ODMS requires the user to access more screens than seemnecessary.andP;  For example, the activities list includes a small icon of thedocument associated with each activity.andP;  But you cannot access the documentdirectly from the activities list.andP;  You must select the activity, go into theActivity Entry Form, and access the document from the icon there.andP;  Whileadditional information may well be available on the Activity Entry Form, mosttimes, the information presented on the activities list is sufficient for theuser to complete his or her task.andP;  Going to another screen in order to open adocument seems like a wasted effort.andM;When the user completes an activity (e.g., edits a document, runs a filethrough a grammar-checking program, or makes a phone call--remember,activities don't have to have documents attached), he or she is returned tothe Activity Entry Form or the Element Entry Form (whichever screen thedocument was accessed from) and hands off the step.andM;Again, we have a problem with this part of the process.andP;  A user doesn't wantto have to return to the entry form to do a handoff.andP;  We would like to seesome way of handing off a document by, say, saving the document--a save andhandoff option.andP;  Or by keeping open a permanent handoff window that knowswhat activity you are working on and understands that if you click on &quot;OK&quot;,the document goes to the next step.andP;  At very least, you need to be able tohandoff an activity from within your personal activity list.andM;Another problem is that ODMS does not include an electronic mail feature, nordoes it integrate with any existing mail packages.andP;  There is a natural fitbetween any workflow product and E-mail, with the mail system acting as thenotification or &quot;to do&quot; vehicle for the automated system.andP;  Currently, ODMSusers must explicitly request seeing their activity lists or reading statusreports (see below).andP;  There is no mechanism for notifying a user if there isa problem.andP;  Ideally, ODMS could be configured to integrate with a customer'sexisting mail system.andP;  Most of these now notify users that incoming mail hasbeen received; some even specify that the mail is urgent.andM;Odesta is adding a distribution feature where a copy of a document can besent to a pre-established group.andP;  Certain instructions, such as &quot;comment andreturn&quot; or FYI (for your information), can be specified.andP;  This is notelectronic mail, but it is a useful capability.andM;Odesta is currently working on providing an X.400 client system based onDigital's X.400 mail system (which, coincidentally, Odesta is developing forDigital).andP;  The company would not get very specific about plans to incorporateelectronic messaging into ODMS, stating that it is &quot;relying on operatingsystems, APIs, and standards to tie into existing E-mail systems.&quot;andP;  In otherwords, the customer does all the work.andP;  But our hunch is that Odesta hassomething up its sleeve.andP;  Developing an X.400 mail system gives the company alot of E-mail expertise that will, most likely, find its way into ODMS.andP;  Wewish we had more information.andP;  As soon as we do, we'll pass it on.andM;MONITORING STATUS.andP;  Any user with the proper permissions can check the statusof a project at any point.andP;  Reports can indicate the status of activities perproject, elements per activity, etc.andP;  You can look at a managementreport--what projects and activities do I manage?andP;  Status can be viewed bydate (the default) or by any field criteria in the screen forms (seeIllustration 6).andP;  You can check on what is late, imminent, hasn't beentouched for five years, etc.andP;  As with the activity lists, documents cannot beopened directly from the reports, but double-clicking on an entry brings upthe appropriate activity form for launching the application and document.andM;In addition to the status reports, users can also access a list of theirpersonal or public documents.andP;  Documents can be selected directly from theselists.andM;Design ModeandM;That, in a nutshell, is how ODMS works, at the highest--end-user--level.andP;  Gojust one step down to the level of a sophisticated user, and it's a whole newworld.andP;  ODMS offers a Design Mode which provides user access to all theunderlying functionality of the Helix RDBMS.andP;  It is not in the scope of thisarticle to provide a complete review of Helix, but we will discuss featuresof the RDBMS that directly impact using ODMS.andP;  (For a brief review of howDouble Helix stacks up as a visual programming language, see Vol.andP;  13, No.andO;2.)andM;CUTOMIZATION.andP;  Design Mode allows an ODMS user to customize menus,keystrokes, and permissions.andM;Customized Menus.andP;  Menus can be completely customized for an individual user.andO;Options can be removed from menus.andP;  So, for example, if user Susan doesn'thave access to Design Mode, instead of simply being grayed out, the optiondoesn't appear on her menus at all.andP;  The names of menus can be changed.andP;  Forexample, you could choose to rename the File menu to the Document menu.andP;  Newmenu options can be added.andP;  These new options are typically screen forms orviews built in Design Mode.andP;  Once added to the menus, they are available inall modes.andP;  Menu options can be moved from one menu to another.andP;  And,finally, completely new menus can be created.andM;Modifying menus is very visual and intuitive.andP;  To create a new menu, yousimply position the cursor on a blank space on the menu bar and type in a newname.andP;  Moving menu items is a process of dragging and dropping.andP;  Menu itemsto be deleted are similarly dragged and then dropped on the wastebasket.andM;Keystroke Accelerators.andP;  Assigning keystroke accelerators for common menuitems is also a very visual process.andP;  The user mode of Design Mode displays agraphical keyboard.andP;  To assign a menu pick to a key, you click on the desiredkey on the keyboard and drag it to the appropriate menu, dropping it on theappropriate item.andP;  The menu is rewritten to include the command keyequivalent next to the option name.andP;  When you have used a key for a menuchoice, it is grayed out on the keyboard graphic.andP;  To regain use of the key,you simply drag it from the menu and drop it back on the keyboard or into thetrashcan icon.andP;  The only problem is that you have to find which menu optionyou've assigned the desired key to.andP;  You can't just ask the system; you haveto manually search the menus.andM;There is one other, more significant problem.andP;  Keystroke accelerators can becustomized for each user.andP;  That's good.andP;  But not every user has access toDesign Mode.andP;  Typically, the system administrator and sophisticated users arethe only ones given Design Mode permissions.andP;  While we see the rationalebehind preventing all users from modifying their menus, we would like to seekeystroke accelerators available to all users so anyone can modify his or herown menu bypasses.andM;Security.andP;  Access permission can be assigned to every screen form.andP;  One usercould have the right to modify and delete a form, while another user couldonly print it.andP;  Unfortunately, as we stated earlier, document permissions arenot as granular.andP;  Documents are either private--available to the owneronly--or public--available to everyone.andM;Access to ODMS itself can be password protected, so no one could sign on as adifferent user.andM;VISUAL PROGRAMMING.andP;  The vissual programming language in the ODMS database isvery powerful, allowing customers to develop complex and flexibleapplications for document flow.andM;While the actual setting up of the conditional statements used in ODMSprojects isn't really difficult, you have to understand certain databaseconcepts and terminology.andP;  For example, you must understand the concept of a&quot;relation&quot; as it relates to databases in order to delve very deeply intovisual programming.andP;  The tool that allows you to define calculations,if/then/else logical statements, etc., is called an &quot;abacus.&quot;andM;Let's look at the conditional statement mentioned earlier: if a loan requestwas under $20,000 and the credit check positive, the loan would be approved.andO;If the amount was under $20,000 but the credit check was negative, it wouldbe referred to a bank officer.andP;  (See Illustration 7.)andM;ODMS provides tiles or icons to represent the standard logical statements.andO;We selected the title &quot;if/then/else.&quot;andP;  A graphic representing this statementdisplays on the screen with blanks into which you put the criteria.andP;  Thereare two different &quot;if&quot; criteria: loan amount and credit approval.andP;  Both mustbe met to fulfill the requirement.andP;  Therefore, we selected the &quot;and&quot; tile,indicating that two different criteria were to be met.andP;  In the first blank inthe &quot;and&quot; tile, we used the &quot;less than or equal to&quot; tile, indicating that twodifferent criteria were to be met.andP;  In the $20,000 figure.andP;  The second halfof the &quot;and&quot; statement was an &quot;equals&quot; tile, with the credit approval fieldequalling yes.andM;Each tile has an arrow that is dragged into the appropriate box.andP;  So youcreate your statements by virtually connecting the lines from tile to tile.andO;The resulting graphical representation of the statement is easy to understandand modify.andM;Creating the statement with the tiles is pretty easy.andP;  Figuring out how tocreate a valid conditional statement and putting it on the appropriate formin the appropriate project is not as simple.andP;  If you have a good grasp of thefunctioning of the underlying database, it can be done quickly.andP;  Butnonadventurous users will find themselves in deep water pretty quickly.andM;But, remember, most users will not have to access Design Mode at all, muchless enter the world of visual programming.andP;  And users who regularly createprojects with conditional statements can become quite adept by spending sometrainin time with the database.andM;TERMINOLOGY.andP;  The company has to be careful to hide the database routes fromthe end user.andP;  Too much of the terminology is specific to relational databasemanagement in general and Helix in particular (e.g., relations, abacus,tiles).andP;  Those advanced users who venture into Design Mode can be moreexposed to this orientation, but, even there, more generic terms would makethe product more universally accepted.andM;Marketing StrategyandM;Even though Odesta has provided vertical applications as well as genericproject forms, ODMS is not a product to be sold off the shelf.andP;  The pricealone, averaging $1,500 per seat, puts it out of that league.andP;  Retailchannels simply aren't equipped to provide the level of training andconsulting support ODMS requires of its resellers.andM;Odesta is marketing ODMS through direct sales to large customers throughDigital and Macintosh VARs and through other high-level distributors, such assystems integrators.andP;  Resellers must take a complete training program beforethey can sell ODMS.andM;THE DIGITAL CONNECTION.andP;  Odesta has goten a great deal of press latelybecause of its marketing agreement with Digital Equipment Corporation.andP;  ODMSis part of Digital's new enterprise-wide compound document managementprogram.andP;  The program consists of a number of Digital and third-partyproducts that address document routing and approval, intelligentcontent-based retrieval, hyperinformation webs, and structured documentdatabases.andP;  ODMS is the document routing facility.andP;  Under terms of theagreement, Digital and Odesta will jointly market ODMS.andM;This alliance with Digital should continue to put Odesta in the public'seye--always a good thing.andP;  And Digital plans to serve as the ODMS distributoroutside the United States.andM;But Odesta isn't putting all its eggs in the Digital basket.andP;  Future plansinclude support for Unix servers as well as certain SQL databases, DOSWindows 3.0, and OS/2 clients.andM;The Process of WorkflowandM;ODMS does not quite fit the mold of procedural automation.andP;  It does have muchin common with these types of products, most of which are available in theunix market (e.g., Staffware from FCMC, licensed by Unisys as OfisProcedures, and Workhorse, from Workhorse, licensed by ATandamp;T as Rhapsody).andO;The routing of documents or information based on conditionals is common toboth, as is the status-checking, list of assigned activities, and deadlines.andO;But ODMS is intentionally structured more loosely than most proceduralproducts.andP;  ODMS activities themselves do not need to be sequential; thedocument routing within the activities is the more traditional sequentialflow.andP;  In ODMS, only documents can be flowed in a predefined manner.andP;  Inother procedures, any sort of data, including screens designed specificallyfor entering data relevant to the process, can be part of the flow chart ofsteps.andP;  Most procedural automation products also provide more bureaucraticmonitoring capabilities.andP;  For example, if a user has not completed a certainstep by a certain date, that information automatically is sent to his or hersupervisor.andP;  With the programming capabilities of ODMS, this could beachieved, but the product is not designed to facilitate this sort of action.andM;This is not to say that ODMS is inferior to more traditional products (if atechnology as new as procedural automation can be considered as having atradition).andP;  It is just different.andP;  ODMS provides a more flexible environmentto the customer, with visual programming tools that can be mastered by areasonably sophisticated user.andP;  Workflows can be modified by anyone (withpermission).andP;  This is true for the other category of products, but theprocess of modification is too difficult for most end users.andP;  In addition,ODMS provides document management capabilities that are completely beyond thescope of other procedural products.andM;While ODMS can hold its own in supporting repetitive, highly structuredprocesses, it is much more suitable for ad hoc projects than are proceduralautomation systems.andP;  Building a project may take hours; building a formalprocedure often takes days.andP;  Odesta has done an excellent job of keeping theproduct simple for both workflow development and for using the applicationsdeveloped.andM;IDEAL PRODUCT ENHANCEMENTS.andP;  As much as we like the concept and design of theproduct, there are areas where we think enhancements should be made.andM;Add E-Mail.andP;  first and foremost, the product must integrate with some form ofelectronic mail.andP;  As we mentioned earlier, Odesta recognizes this need, andis working on the problem.andP;  (Though, as we stated, we aren't sure that thecompany will come up with.)andM;More Procedural Orientation.andP;  We would like to see some traditionalprocedural capabilities added to ODMS, maintaining the ease of developmentand use ODMS currently features.andM;Odesta also needs to make activities and elements reusable so that customerswill be able to create new projects by combining existing steps.andM;Additional Document Management Capabilities.andP;  In a similar vein, ODMS couldincrease in value by adding more traditional document managementcapabilities, such as full-context searching, archiving, etc.andP;  In the VAXenvironment, ODMS will take advantage of Digital's full-content searching NASservice.andP;  This is a good move.andP;  In the Mac environment, we recommendintegrating with existing document management technology rather thandeveloping new technology at Odesta.andM;Aids for Collaborative Editing.andP;  At present, ODMS does not provide anyspecific tools to support the collaborative editing process.andP;  Oh, yes, itsends the documents to the proper person with the appropriate instructions.andO;But there are no redlining capabilities or annotation abilities.andP;  ODMS wouldbenefit greatly by integrating with this type of application.andP;  Imagine thevalue of allowing a variety of ODMS users to annotate a document that isrouted throughout the company, especially using a multimedia annotation toolthat combines voice notes and handwritten (image) notes as well as textcomments.andP;  Again, we don't recommend that Odesta try to invent thattechnology, but rather that the company look to integrate with existingproducts on the market.andM;ConclusionandM;ODMS has a great deal of potential, especially when some of the missingpieces--such as electronic mail--are filled in.andP;  Odesta has the right ideaabout empowering the individual user within a group activity.andP;  And it haswisely recognized the necessary of allowing users to work with their existingapplications while ODMS takes care of moving the resulting documentsthroughout the organization.andP;  ODMS is well positioned as an enablingapplication upon which customized business solutions can be built.andM;The flexibility of the product is impressive, as are the customizationcapabilities available in the Design Mode.andP;  We would like to see some of themore common visual programming statements (e.g., if/then/else statements)made easier to use so that business users can create reasonably sophisticatedworkflows without having to access the Design Mode.andM;The product now needs to go further, offering more functionality on bothsides--document management and procedural automation.andP;  And it must movequickly onto new platforms--the PC and Unix--ensuring interoperability amongall clients and servers on the network.andM;All this aside, we maintain that the customized flow of information amongworkgroup members is one of the most empowering concepts of the '90s, and forflexibility of developing customized document flows, Odesta's ODMS would behard to match.andO;</TEXT></DOC>
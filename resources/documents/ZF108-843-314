<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-843-314  </DOCNO><DOCID>08 843 314.andO;</DOCID><JOURNAL>IEEE Transactions on Software Engineering  Sept 1990 v16 n9p949(16).andM;</JOURNAL><TITLE>Specification and verification using dependent types. (technical)</TITLE><AUTHOR>Hanna, F. Keith; Daeche, Neil; Longley, Mark.andM;</AUTHOR><TEXT><ABSTRACT>A designer of a specification language has a near infinity ofchoices such as the choice of type structure of the language andthe option of using dependent types.andP;  Using dependent types inspecification languages has a number of advantages, includingexpressiveness, generality, and natural form of specifications,which can be implemented easily.andP;  Specification logic is aspecification language coupled with an associated inferentialcalculus.andP;  The ideal specification logic should have a broadspectrum, be natural, be powerful, have soundness, and beefficient.andP;  VERITAS is a typed, higher-order predicate languagedesigned to meet that criteria.andP;  Its most distinctive features arehow it uses dependent types and subtypes of the intuitive logicssuch as ITT.andP;  Using VERITAS results in specifications that areclearer and more concise.andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     LanguageSoftware EngineeringSpecificationsIEEE.andO;Feature:   illustrationchart.andO;Caption:   The abstract specification of a comparator. (chart)The Level I concrete specification of a comparator. (chart)The Level II concrete specification of a comparator. (chart)andM;</DESCRIPT></DOC>
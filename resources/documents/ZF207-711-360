<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-711-360  </DOCNO><DOCID>07 711 360.andM;</DOCID><JOURNAL>PC Magazine  Oct 31 1989 v8 n18 p187(23)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>BASIC, yes, feeble, no. (Software Review) (overview of 10 BASIClanguage evaluations) (evaluation)</TITLE><AUTHOR>Winer, Ethan.andM;</AUTHOR><SUMMARY>The BASIC programming language has been the target of much unfaircriticism from partisans of other languages, who claim that BASICencourages poor programming habits.andP;  BASIC has evolved from aslow, limited interpreter used as a teaching tool into a powerfulcompiled language.andP;  Today's BASIC compilers are serious tools thatexploit all of the capacity of modern microcomputers, and thelanguage has many advantages.andP;  It is very logical, uses easilyunderstandable commands, and supports variable-length strings andmany graphics applications.andP;  Background information on BASIC isdiscusses, and 10 BASIC-language interpreters and compilers arereviewed.andM;</SUMMARY><DESCRIPT>Company:   Microsoft Corp. (products)Basis International Ltd. (products)International Business Machines Corp. (products)Hedge Systems (products)Concept Omega Corp. (products)True BASIC Inc. (products)Borland International Inc. (products).andO;Ticker:    MSFT.andO;Product:   QuickBASIC (Compiler)BB/x Progression/3 (Compiler)GW-Basic (Interpreter)PopBASIC (Program development software)QuickBASIC 4.5 (Compiler)Microsoft BASIC 6.0 (Compiler)Thoroughbred BASIC (Computer program language)387BASIC (Program development software)True BASIC (Computer program language)Turbo BASIC 1.1 (Computer program language)WATCOM BASIC (Compiler).andO;Topic:     Programming LanguagesBASICEvaluationCompilers.andO;Feature:   illustrationgraph.andO;Caption:   Performance tests: BASIC languages (running under an editor orinterpreter.) (graph)BASIC languages (running under an editor or interpreter):composite view. (graph)Performance tests: BASIC languages (runtime module). (graph)andM;</DESCRIPT><TEXT>For many people, the first exposure to progamming is with the BASICinterpreter that comes bundled with DOS.andP;  Because it is included at no extracost, BASIC (Beginner's All-purpose Symbolic Instruction Code) is known andused by more people than any other programming language for personalcomputers.andP;  And no other PC language has grown as much as BASIC in recentyears, both in popularity and capabilities.andM;With the introdiction of sophisticated compilers from Microsoft and severalother companies, BASIC in many ways is now more powerful than even C orPascal.andP;  It offers, for example, more built-in commands than any otherlanguage, including powerful graphics, music and sound, and complete supportfor interrupt-driven communications-while remaining much easier to learn.andM;Nonetheless, BASIC has been the target of much unfair and abusive criticismin recent years, with partisans of other languages claiming that it is a&quot;toy&quot; language that encourages poor programming habits.andP;  Such ageneralization is unfortunate, because the current generation of BASICcompilers are very serious products that fully exploit die capabilities ofdie PC.andP;  Many commercial packages are written in compiled BASIC, among them anumber of communication programs.andM;HUMBLE BEGINNINGSandM;BASIC was developed at Dartmouth College in 1964 by John G.andP;  Kemeny andThomas E.andP;  Kurtz.andP;  From die start it was designed to introduced beginners toprograming concepts but shield them from the intricacies of the computer'sinternal operation.andP;  What made BASIC so revolutionary for its time, however,was that it interpreted each instruction while a program ran.andM;The purpose of any computer language is to translate a program's source codeinto commands the computer's microprocessor can actually execute.andP;  With acompiled language, the source text is generally created with an editor, savedto disk, and then processed-that is, completely translatedby the compilerbefore it is run.andP;  If the compiler detects any errors (for example, insyntax), the progrmmer must restart the editor, load the source program, andgo through the process all over again.andM;Contrast this with the original BASIC interpreter, in which programs may becreated and run directly from within die editor.andP;  Syntax errors are detectedas each BASIC statement is entered, and runtime errors (such as an attempt wdivide a value by zero) are reported while the program is still in theeditor.andP;  This immediate feedback-coupled with simple, English-likecommands-quickly helped to establish BASIC as the easiest language to learnand use.andM;Interpreted BASIC, however, is not without failings.andP;  To begin with, eachinstruction must be deciphered at the time the BASIC program runs, whichtakes a fair amount of time.andP;  If a given BASIC instruction is executed, say,20 times, the interpreter will have to am slate it that many times.andP;  Twoother important limitations are that each program statement must besequentially numbered, and there is no way to establish program variables asprivate to a given procedure.andM;Of course, in many situations it doesn't ready maner if a program runs at thehighest possible speed.andP;  Who cares, after all, if it takes 1 millisecond or50 to print the message &quot;Press any key&quot; to the screen? And programs thatfrequently access a disk are often limited more by the speed of die diskdrive hardware than by that of the language.andP;  Furthermore, careful planningcan minimize the need for private procedures and local variables (featurespreviously available only in C and Pascal) in all but die largest programs.andM;THE BASICS OF BASICandM;All programming languages embody two important elements.andP;  The first is theprogram itself, which consists of statements and instructions that tell thePC what actions it is to perfom.andP;  A program, for example, might print amessage on-screen that asks the operator to enter a customer's name.andP;  Oncesuch a message has been displayed, another instruction might be to acceptuser input from the keyboard until the Enter key has been pressed.andP;  Oflierinstructions could then create a disk file and store the name that wasentered in that file.andM;The second element in a computer program is the data that is to be actedupon.andP;  This data can consist of either numeric values or text.andP;  Examples ofnumeric data are dollar amounts, the number of records in a file, or atemperature measurement.andP;  In BASIC, text data is referred to as strings,which consist of information such as names, addresses, and other alphanumericcharacters.andM;Most versions of BASIC support several types of numeric and string data.andO;Microsoft's QuickBASIC 4.5, for example, offers integer and long integerwhole numbers, as well as two types of floatingpoint numbers.andP;  An integer canhold any value between -32,768 and +32,767, while a long integer can rangefrom -2,147,483,648 to +2,147,483,647.andP;  The two types of floating-pointnumbers are referred to as single-precision and double-precision, and theirvalues can range between approximately plus or minus 3.37E+38 (in otherwords, 3.37 x 10[.sup.38]) and plus or minus 1.67E + 308 .andP;  String data underQuickBASIC 4.5 can be of either fixed or varying length, and any singlestring can have a length of up to 32,767 characters.andM;There we two primary reasons for offering more than one type of numeric data.andO;One consideration is die amount of computer memory required to hold eachvalue.andP;  In many programming situations, very large (or very small) numbersare not necessary, and integers occupying only 2 bytes of memory will besufficient.andP;  Integers are also the offly numeric type native to the8088/80286 series of microprocessors, thus allowing calculations to beperformed extremely quickty,andM;Long integers require 4 bytes each, as do single-precision values.andP;  For eachdouble-precision number used in a program, 8 bytes of memory will be needed.andO;However, to obtain die wide range of values supported by single- anddouble-precision numbers, a complicated system is employed.andP;  Therefore, diesecond reason that BASIC offers more than one numeric data type is because ofthe time required to manipulate floating-point values.andM;VARIABLE VERSATILITYandM;Before we look at some sample BASIC programs, there is one more importantconcept to understand: variables.andP;  Unlike the simple memory feature of afourfunction pocket calculator, a BASIC program can remember nearly anynumber of text or numeric entities.andP;  The programmer simply makes up a namefor each variable, whose contents may then be stored and re trieved whenneeded.andM;Now let's take a look at a simple BASIC program that first asks you to enteryour age, andthen tells you how old you will be in the year 2000:andM;CLSandM;PRINT 'Please enter your age';andM;INPUT AgeandM;NewAge = Age + 11andM;PRINT 'In the year 2000 you willandM;be&quot;; NewAge; 'Years old.'andM;Even though this is obviously a very fundamental calculation, the conceptsemployed here can be extended to programs of nearly any complexity.andP;  As youcan see by examining the program listing, only five instructions arerequired.andM;The fist command is CLS, which tells BASIC to clear the screen.andP;  This isexactly the same as DOS's own CLS command, and it is used merely to ensurethat any messages or extraneous information from an earlier program iserased.andP;  CLS also locates the cursor at the upper-left comer of the screen.andM;The second instruction prints the messag&quot;Please enter your age&quot; on thescreen, so the person running the progam knows what he is supposed to do.andO;The third command instructs BASIC to accept numbers as input from thekeyboard until Enter is pressed.andP;  After the number has been entered, itsvalue will be stored by BASIC in the variable named Age.andP;  Again, nearly anyvariable name may be used, although it makes sense to use one that isdescriptive and thus easy to remember.andM;Once a number has been entered and stored in the variable Age, the fourthinstruction is used to add the value 11 to it and place the result of thisaddition into another variable named NewAge.andP;  The final BASIC command printsboth a text message arid the answer in one operation.andM;Because it is so common to preface an INPUT command with a prompting message,BASIC also offers a way to combine both operations into a single command.andO;This is shown in context below:andM;INPUT 'This is a prompt', VariableandM;In this case, the message &quot;This is a prompt&quot; is displayed; BASIC then waitsfor a number to be entered at the keyboard.andP;  As you can see, the instructionsin a BASIC prograrn are always performed in sequence, and variables may beassigned and retrieved as needed.andP;  FLOW CONTROLandM;In a program this simple, only a few instructions are being performed, andthe order in which they're executed is easy to establish.andP;  But this brings usto another important BASIC programming concept: flow control.andM;In some situations, you may want to perform different actions, based on theinformation that was entered.andP;  If someone claims to be 400 years old, forexample, you probably want to ask him to enter his age again, as shown here:andM;CLSandM;INPUT 'Please enter your age', AgeandM;IF Age andgt; 100 OR Age andless; 1 THENandM;BEEPandM;PRINT &quot;I don't believe you!&quot;andM;ELSEandM;NewAge = Age + 11andM;PRINT 'In the year 2000 youandM;will be'; Age + 11andM;END IFandM;In this example, the IF command is used to test whether the age that wasentered is greater than 100 or less than 1.andP;  If either of diese is true, theprograrn will first beep die speaker, and then print &quot;I don't believe you!&quot;andO;Otherwise, the statements that follow the ELSE statement will be executed.andO;The END IF clause merely identifies die group of instructions that are beingcontrolled by the IF and ELSE tests.andP;  Notice that besides combining theeffects of PRINT and INPUT, this example includes the numerical calculationwithin the PRINT statement.andM;Of course, BASIC also allows very complex expressions to be tested.andP;  Besidesthe IF test shown in die second example, BASIC supports a number of otherflowcontrol constructs.andP;  Two of these are DO WHILE and LOOP, and FOR andNEXT.andP;  DO WHILE tells BASIC to continue to execute a group of instructionswhile a given condition is true, and FOR lets you specify that something isto be done a certain number of times.andP;  These are shown in context here:andM;DO WHILE TIME$ andless; '11:00:00'andM;PRINT 'It's not 11 AM yet.' LOOPandM;FOR X = 1 TO 10andM;PRINT XandM;NEXTandM;In the first example, while the current PC system time remains less than11:00:00, the message &quot;It's not 11 AM yet.&quot; will be continuously printed.andO;The second example shows a FOR/NEXT loop that tells BASIC to print die countheld in the variable X ten times.andP;  That is, all of the values between 1 and10 inclusive will be printed on the screen.andP;  The words FOR and TO along withthe variable X are really shorthand for the expression &quot;FOR every value thatX EQUALS within the range from 1 TO 10 do the following.&quot;andM;BASICALLY SUPERIORandM;BASIC is very logical, as you can see from these few short examples .andP;  Itsuse of easily understandable commands, in fact, allows anyone with theinterest and the time to start writing real programs that perform usefultasks.andM;Where BASIC really shines, however, is in its wealth of powerful features;just because BASIC is easy to use does not mean that it lacks capability.andO;BASIC, for instance, can read and write to any memory location, directlyaccess the processor's PO ports, and manipulate network data files.andM;Among the more important advantages BASIC holds over languages like C andPascal is variable-length strings.andP;  Where other languages force you to setaside a fixed amount of memory for each text string at the time a program iswritten, BASIC allows the length of a string to be established when theprogram runs.andP;  Furthermore, any string may be reduced or extended as needed,to accommodate any length required.andM;Equally important are BASIC's powerful graphics commands.andP;  Modem BASICcompilers like Microsoft's QuickBASIC and Turbo Basic support all the PC'svideo modes, and commands are provided to draw lines and boxes or circles andarcs, with manual or automatic scaling.andP;  The PC Lab Notes column &quot;AdvancedGraphics in BASIC&quot; (PC Magazine, June 14, 1988) shows how to write elaboratethree-dimensional business graphs in BASIC, along with a discussion of tilingand animation techniques.andM;Other BASIC advantages include dynamic arrays, access to the PC's timer,interrupt-driven event handling, and full support for communications.andP;  Forexample, to open a communications port at 1,200 bits per second with noparity, 8 data bits, and 1 stop bit is as simple as typing OPEN&quot;COM1:1200,N,8,1&quot;.andP;  To create the equivalent of this one BASIC statementusing C would require hundreds of lines of code or die purchase of an add-onlibrary.andM;ENHANCING BASICandM;As with any high-level language, the performance and code size of a BASICprogram can always be improved with the addition of external routines writtenin assembly language.andP;  It's no secret that die best way to produce fastscreen updates is by using an assembler routine that writes directly to videomemory.andP;  Moreover, programs to perform such common operations as sorting andsearching data will be much faster when they are written in the processor'snative language.andP;  Therefore, BASIC provides wi easy way to interfaceassembler routines with the CALL command.andM;Because assembly language is admittedly the most difficult language to writein, many BASIC programmers turn to third-party suppliers for add-on librariesand toolboxes.andP;  A number of vendors also offer prewritten BASIC routines thatwould be difficult or time-consuming for most programmers to create bythemselves.andP;  A sampling of assembler and other toolbox products is listed inthe sidebar &quot;Building on the BASIC Foundation.&quot; Besides providing ready-madesolutions to common programming problems, a wellwritten toolbox package canalso be an excellent way to learn about programming in assembler.andM;TESTING BASIC LANGUAGESandM;There are a number of factors to consider in choosing BASIC as yourprogramming language, and the pros and cons no longer rest on the structuralinflexibility and dogged perfoffnance that plagued the language through itsearly years.andM;With the introduction of compilers from Borland and Microsoft, BASIC canachieve respectable performance levels.andP;  The graphic enhancements toQuickBASIC 4.5 alone move this dialect out of the realm of faster GW-BASICclones and into a language segment all its own.andM;Of course, compilers aren't the only game in town.andP;  The pack is rounded outwith p-code (pseudocode) generators like True BASIC that compile your programwhen you want to run it, optimizers that examine your code and ignore linesthat have no impact on the process, and even slower interpreters that augmentor add to die list of existing GW-BASIC capabilities.andP;  Overall, any dialectof BASIC provides you with an easy access to program creation, in most casesusing commands you are likely to know already.andM;In an attempt to accommodate all types of BASIC language products, PC Labshas devised a series of perfoffnance tests that single out the speeders fromthe rest of the pack.andP;  These tests take a timed look at computation, screenupdating, file handling, and a few other operations that are common to allsystems tested.andP;  In all, PC Magazine reviews ten BASIC languages here thatrun under DOS; one system we considered, Theos BASIC, requires a proprietaryoperating system and therefore could not be included in a fair comparison.andM;Naturally, no timed test will tell the entire story; these are simplyrelative indicators.andP;  Pay careful attention also to the individual reviews,where each product's strengths and weaknesses are discussedas is its targetmarket, which should also factor in to your buying decision.andM;READY FOR TOMORROWandM;BASIC has evolved from a slow and limited language interpreter into a modemcompiled powerhouse that is also very easy to use.andP;  But where is BASICheaded, and how will it get there? Perhaps even more important, how wellsuited is BASIC for the applications of tomorrow?andM;As the cuffent leader in BASIC products, Microsoft has made clear itscommitment to the future of BASIC by continuing to improve the language and,most recently, by making it easier to learn than ever before.andP;  With theintroduction of QuickBASIC 4.5, Microsoft is attempting to woo thousands offrustrated Lotus 1-2-3 and dBASE programmers with the many benefits of a realprogramming language.andP;  Long-range goals include Microsoft's adding a databaseengine and embedded macro language capabilities for several popularapplications.andM;Progrmming in BASIC admittedly requires more effort than creating a macro in1-2-3 or writing a dBASE program.andP;  But your first realization that you havecomplete control over every aspect of a program's operation and appearance isan exhilarating experience.andP;  The future of BASIC is perhaps more a questionof how it will be used and by whom than merely a list of new features to beadded.andM;Nonetheless, BASIC is continuing to grow, and a compiler for OS/2 programs isMicrosoft BASIC 6.0 includes examples, declarations, and TYPE definitions forcalling OS/2 kernel routines, plus the ability to open pipes and performinterprocess communication.andP;  In addition, dynamic arrays under 0S/2 can benearly any size , limited only by available disk space.andM;Obviously, the BASIC language will continue to be enhanced and improved.andP;  Inkeeping with other evolving programming trends, future versions of QuickBASICwill have object-oriented extensions, as well as specific support forgraphical user interfaces like IBM's OS/2 Presentation Manager.andP;  And for eachnew improvement Microsoft adds to its line of BASIC compilers, you can besure that oflier products under review will counter with a few tricks oftheir own.andO;</TEXT></DOC>
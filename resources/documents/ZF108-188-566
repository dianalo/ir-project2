<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-188-566  </DOCNO><DOCID>08 188 566.andM;</DOCID><JOURNAL>AI Expert  March 1990 v5 n3 p38(10)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Intelligent databases.andO;</TITLE><AUTHOR>Parsaye, Kamran; Chignell, Mark; Khoshafian, Setrag; Wong, Harry.andM;</AUTHOR><SUMMARY>Data bases become more difficult to use and more error-prone astheir size increases and as users become more dependent on them.andO;Intelligent databases can handle information rather than simpledata and consist of high-level tools, a high-level user interface,and an intelligent database engine.andP;  The three main categories ofintelligent database tools are automatic discovery programs, whichapproximate the scientific method of inquiry and use statisticaltechniques; automatic error detection via rules that findanomalous data items and enforce constraints; and flexible queryprocessing, which can solve queries involving inexact values.andO;Hypertext provide an intelligent user interface with multiplelinked nodes.andP;  The intelligent database engine supports objectorientation and features global query optimization while closelyintegrating data access and inference.andM;</SUMMARY><DESCRIPT>Topic:     Data Base Management SystemsArtificial IntelligenceQuery ProcessingExpert SystemsObject-Oriented Data BasesError Checking.andM;</DESCRIPT><TEXT>They can enable what had not been consideredandM;and enhance possibilitiesandM;for business, science, and educationandM;Intelligent databases handle information, not just data.andP;  We can use them toperform tasks involving large amounts of information that otherwise could notbe performed; they make possible what we had not even considered and providenew viewpoints for business, science, and education.andP;  Throughout history, wehave conducted science by gathering data by observation, analyzing theseobservations, and making &quot;discoveries.&quot; Intelligent databases can help usmake discoveries automatically.andM;Intelligent databases represent the evolution and merger of severaltechnologies, including automatic discovery, hypermedia, object orientation,expert systems, and traditional databases.andP;  These technologies are uniformlyintegrated within the framework of intelligent databases to provide theintelligent information technologies for the 1990s (Figure 1).andP;  Ourdiscussion, however, is not purely hypothetical or theoretical.andP;  Thesetechnologies are commercially available.andP;  In this article we focus on whatintelligent databases are, the technologies they use, how they work, and howthey can affect business, science, and knowledge.andM;INTELLIGENT DATABASESandM;The top-level architecture of the intelligent database has three levels:high-level tools, high-level user interface, and intelligent database engine.andO;As shown in Figure 2, this architecture is staircase-layered: users anddevelopers may access different layers at different times independently.andM;The high-level tools in the first level provide the user with facilities suchas automated discovery, data quality and integrity control, and intelligentsearch.andP;  The high-level user interface is the level at which users directlyinteract; it creates the model of the task and database environment.andP;  Thesystem's base level is the intelligent database engine, which incorporates amodel for a deductive object-oriented representation of multimediainformation that can be expressed and operated in several ways.andM;To demonstrate the importance of intelligent databases on an intuitive level,we'll compare traditional databases with human memory.andP;  Database systems ofthe 1970s and 1980s could store many more facts (in text form) than humanmemory, but could not access information flexibly.andP;  In contrast, our mindshandle a very small amount of information much more powerfully.andP;  We noticeboth usual and unusual patterns; we don't need a specific pattern to searchfor but automatically establish criteria for judging norms and anomalies.andP;  Wecan manage partial and inexact information and make educated guesses based onwhat we have seen before.andP;  We can recall someone called Johnson or Jacksonwho is about 30 years old and has a yellow- or orange-colored car.andP;  We canunderstand images and sounds as well as purely textual data.andP;  Furthermore, wecan combine information in image, text, or sound forms.andM;We can not only access data but reason with it based on its structure.andP;  Wehave categories of inheritance among objects such as vehicles, cars, andFords.andP;  We can associate information in linear form and based on associativelinks.andP;  For example, we can associate &quot;IBM&quot; with mainframes, then withcorporate structure, then with a direct sales force, and so on.andM;It's obvious that our memory is far more flexible and powerful than atraditional database, but it manages far less data.andP;  Suppose your mind couldhandle only exact information.andP;  How useful would it be? You could hardlyfunction.andP;  By making databases manage information as flexibly and powerfullyas human minds do, we can initiate a new era in science, technology, andbusiness.andM;An intelligent database can be more precisely defined by using the threelevels of database intelligence discussed earlier- high-level tools,user-interface level, and database-engine level.andP;  These layers form the basisfor intelligence in a database system.andM;HIGH-LEVEL INTELLIGENT TOOLSandM;As the amount of data in databases continues to multiply at an unprecedentedpace, so do problems and opportunities.andP;  Intelligent database tools help ussolve the problems and, perhaps more importantly, capitalize on the uniqueopportunities.andM;The growing size of databases means that as our dependence on them increases,it becomes harder to find information, see patterns, and know what thedatabase contains and the chance for errors increases.andP;  Intelligent databasetools help because they automatically discover patterns, rules, andunexpected knowledge in the database; identify suspicious and anomalous dataitems and guard against errors; and permit flexible access to the data byproviding inexact queries, partial matches, and best guesses.andM;Thus, intelligent database tools impose order on and extract knowledge fromthe sea of data that surrounds us all.andP;  Three categories of intelligentdatabase tools (automatic discovery, automatic error detection, and flexiblequery processing) are integrated within a uniform environment consisting ofthree components (Figure 3):andM;* Data dictionary: holds information about data (metadata)andM;* Concept dictionary: defines virtual fieldsandM;* Data analysis and discovery: finds patterns, detects errors, and processesqueries.andM;These components may be used together; you may discover some unusual patternsand ask some inexact queries to pursue the matter.andM;The data dictionary defines the structure of the database by managingmetadata.andP;  As you might expect from a data dictionary, it allows one todefine database schemas by defining fields, their lengths, and types.andO;However, an intelligent data dictionary does much more: it summarizesinformation about the database so you can get a feeling for the data'sstructure quickly.andM;The concept dictionary allows definition of virtual fields on the database.andO;For instance, you can define data types (size = {large, medium, small}) andconcepts based on existing information (define young to be less than 30 yearsold).andP;  Defining fields and types corresponding to concepts allows thediscovery of rules in a more natural form and facilitates the expression ofconstraints in more intuitive terms.andM;AUTOMATIC DISCOVERYandM;Most databases contain implicitly defined relationships, patterns, andcorrelations.andP;  There will never be enough analysts and time to find thisknowledge.andP;  Rather than a database crystal ball, we need tools that generatethis information automatically.andM;Fortunately, the amount of data in the world's databases continuallyincreases.andP;  With the widespread use of databases, no shortage of data orexamples can exist; if anything, many organizations have more data than theyknow how to use.andP;  This data represents an almost bottomless well from whichknowledge can be extracted.andM;The typical workstation stores data that requires analysis.andP;  However, theworkstation is usually switched off for about 16 hours a day-nearly 70% ofits lifetime.andP;  Thus, most professionals possess two commodities in excess:data that requires analysis and unused processing power.andP;  Discovery programsallow us to apply the power to the data to produce interesting results byintelligent data analysis.andP;  So workstations can be left on to analyze dataand discover useful information.andM;Managing a database has three levels:andM;* Data collection: for example, records on clients, products, or salesandM;* Data query.andP;  For example, we ask: &quot;Which products had increasing sales lastmonth?&quot;andM;* Data comprehension.andP;  For example, we ask: &quot;What makes a productsuccessful?&quot; When using a query language on our database, we need to knowwhat to ask.andP;  If we ask a relevant question, we will get an interestinganswer.andP;  However, often so much data exists we may not know what the relevantquestions are.andP;  In contrast, in a machine-learning system, the programdiscovers the relevant questions by analyzing the data.andP;  Often this analysispoints out totally unexpected relationships that may be pursued queries.andM;In other words, a query language can handle queries but it can'tautomatically form hypotheses since it doesn't know what to ask for.andP;  Todiscover knowledge we must:andM;* Form hypothesesandM;* Make some queriesandM;* View the results and perhaps modify the hypothesesandM;* Repeat this cycle until a pattern emerges.andM;This series of tasks is automated with a machine-learning program, whichrepeatedly queries the database until knowledge is discovered.andP;  Thus, adiscovery program is not a query language; instead, it discovers what queriesshould be asked and builds the mechanisms to do so, providing an intelligentlayer on top of a database and its query language.andP;  Commercial discoveryprograms have helped people in many fields: finding production errors inmanufacturing, identifying crime patterns for law enforcement, relatinginsecticide effectiveness in agriculture, performing geological studies inthe oil industry, analyzing toxicity in medicine, and identifying claimpatterns in insurance.andM;The technology for extracting knowledge from large databases may be viewed asa merger of statistics and AI.andP;  It's the next step in the evolution of thosefields applied to large databases with intelligent programs.andM;However, although discovery programs utilize statistics heavily, their outputis not in purely statistical form.andP;  This characteristic is advantageousbecause most users do not know statistics well enough to interpret theresults, and there will never be enough human statisticians to analyze allthe data in every database.andP;  Statistical techniques almost always providetheir conclusions in terms of mathematical equations; to capture knowledge,we need to use machine-learning techniques to discover logical relationshipsexpressed as rules rather than equations.andP;  Rules are more readable thanmathematical equations-statistical programs generally need interpretationafter they have been executed since they use the language of polynomials.andO;They produce curves, equations, and matrices instead of logical relationshipssuch as rules, which use the language of logic.andP;  Users may be unfamiliar withstatistics but can read through a set of rules easily.andM;Using statistical techniques to gain insight into the underlying trends indata is possible.andP;  However, while statistical techniques are useful,conventional statistics should not be viewed as the only available tool fordata analysis.andP;  To date, statistical techniques have been used bystatisticians rather than average users since their use requires anunderstanding of statistics and results require interpretation by astatistician.andP;  To make statistics widely available, we need to have an expertstatistician built into a data-discovery program-statistical techniques arenow evolving and merging with AI in the framework of intelligent databases.andM;To show how a discovery program works and how it differs from statistics,suppose you are a disk-drive manufacturer and you have sporadic defectproblems you can't solve.andP;  (This, incidentally, is a true story.) A samplefrom a list of your data (3,354 total records) looks like Listing 1.andP;  Usingthis data, you can try forming your own hypotheses, or you can have adiscovery program find the improperly trained operator causing the problem(which is what happened in this case).andP;  The rule produced by the discoveryprogram (in less than five minutes) to identify the problem's source lookedlike this:andM;% Rule 10andM;CF = 72andM;&quot;ERROR CODE&quot; = &quot;932&quot;andM;IFandM;&quot;OPER&quot; =  &quot;213272&quot;andM;ANDandM;&quot;PROD&quot; =  &quot;X418172&quot;andM;;% Margin of Error: 4.7 %andM;% Applicable percentage of sample: 11.3 %andM;% Applicable number of records: 379andM;It would have taken a lot longer to find the source of the problem in anotherway.andP;  Furthermore, this form of rule is better understood by most users thana statistical correlation matrix.andM;We can conclude that without a discovery program we are only partiallyutilizing our databases.andP;  Leaving this untapped knowledge in the world'sdatabases is, to say the least, irresponsible.andM;AUTOMATIC ERROR DETECTIONandM;Databases are growing in size and number.andP;  As a result, we're becoming verydependent on data stored in them, and an increasing number of errors areappearing.andP;  As the size of a database grows, it becomes harder to identifyerrors.andP;  Undetected errors leave a trail of disaster-we need to detect errorsand ensure data quality automatically.andM;Traditionally database systems have enforced simple integrity constraintssuch as range checking.andP;  An intelligent database allows comprehensiveintegrity constraints to be expressed much more easily in terms ofpattern-matching rules.andP;  This capability allows the user to change theintegrity constraints without changing the application program.andP;  The systemautomatically checks for anomalies and deviations in values based on a set ofcriteria provided by the user.andM;In most applications, integrity is encoded in procedural programs when theapplication is developed.andP;  Often integrity constraints are &quot;spread over&quot; aprogram with each constraint coded as a specific set of instructions.andP;  As theconstraints (inevitably) change, the program must be reopened for furthermodification.andM;Although most constraints take the form of should not be allowed rules, theirimplementation is often obscure since the rules have to be coded intoprocedures.andP;  Sometimes the constraints are not those that you want sincetheir meaning is lost in the translation to procedures.andM;In an intelligent database, constraints are expressed as a set of rulesseparate from the program.andP;  As the constraints change, the rules are changedwithout reopening the program.andP;  This technique has two advantages: theconstraints are accurate more often and the ability to change the constraintsimproves.andM;Integrating databases and expert systems is one method of capitalizing on theinformation available in databases.andP;  Machine learning and discovery representa second method and rely on induction rather than deduction and inference.andM;The system also provides a set of statistical features for measuring dataquality.andP;  For instance, deviation from the standard deviation and deviationfrom typical correlations are detected.andP;  These feature should be particularlyuseful for users and developers with large databases.andM;A data quality-control system thus has two components: it finds anomalousdata items and unusual patterns by itself and enforces integrity constraintsmaintained separately from databases and application programs by usingeasy-to-read rules.andP;  The first feature is powerful because to find anomalousdata requires statistical expertise and performing many queries.andP;  The secondfeature is a great advantage because usually integrity constraints areincluded within an application program-each time the constraints are changedthe program must be recoded.andP;  Such programs become increasingly complex andprone to error, eventually causing more errors themselves.andP;  An automaticsystem does the opposite: it finds suspicious entries and errors by itself.andM;Suspicious entries are uncommon data items that can be uncovered by using AI.andM;In a database of employee records, for example, we may find a male with awife listed as 40 years older.andP;  Such an uncommon data item may or may not bean error in the database, but in any event,the user should be informed.andM;Consider this example.andP;  Suppose items are missing from your inventory orunauthorized actions happen; an automatic system can alert you to suchproblems.andP;  Or suppose you have a worker whose signature threshold is lowissuing an unusual number of small purchase orders to buy an unauthorizedlarge-ticket item piece by piece.andP;  This anomalous use of purchase orders canbe detected and signaled to the user.andM;To illustrate how error detection differs from automatic discovery, supposewe have a database containing demographic and clinical information aboutpeople.andP;  If we run a discovery program on this database, it will find a rulestating that people who have red hair are more likely to have freckles,especially if they live in sunny climates-it finds and expresses the typicalpatterns in terms of rules.andP;  In contrast, a data quality-control programlooks for unusual entries, not typical patterns.andP;  (It will signal redheadswho live in Florida but don't have freckles.)andM;Constraints and anomalies can be better expressed with inexact concepts.andP;  Theconcept dictionary allows us to define concepts in terms of which patternsare discovered.andP;  Concepts include young or old, large or small.andP;  (Forexample, &quot;New employees with low salaries are usually younger than existingemployees with high salaries.&quot;) An automatic knowledge acquisition system [1]can identify and express some of these concepts and constraints.andM;Furthermore, by using object orientation we can specify an object model interms of which constraints are enforced: inheritance, attached predicates,and the full power of an object-oriented system is used for error detection.andO;By using a data quality-control system, we can avoid errors and save time andmoney.andP;  In most cases, an automatic system will pay for itself many timesover.andM;FLEXIBLE QUERY PROCESSINGandM;When searching for information, partial match is often better than noresponse.andP;  In traditional query systems, a database record either matches aquery or it doesn't.andP;  For example, a person is either young or isn't.andP;  But aflexible query system manages information the way our mind handles inexactqueries and provides best guesses and a degree of confidence for how well arecord matches a query.andM;For example, suppose you are a detective and you have a description for asuspect: he is tall, in his 30s, and drives a yellow car.andP;  However, the caris listed as orange and the suspect is 37 and six-foot-four.andP;  Your mind canmatch these descriptions (you don't have to know the suspect's exact height),but a database query can't.andP;  A flexible query system can solve queriesinvolving inexact numeric values (for example, someone is almost 18 yearsold) and inexact words Jansen or Jensen) and other types of inexact data.andM;You can specify conceptual terms the system will base its queries on: adultmight mean people older than 21, young might mean those people less than 30,and bright color might mean the colors red, yellow, green, blue, orange, andwhite.andP;  Thus, the system will find partial matches and inexact answers suchas close string matches (Rogers and Dodgers), inexact concepts (young ortall), and educated or best guesses (&quot;I think the age is about 30.&quot;).andP;  Thiscapability helps you to gather potentially useful, solid information, despitethe inexact queries you started out with.andM;Although a neural component may be used in such a system, previous experiencewith neural networks is not required to use the system.andP;  In a traditionalneural-network programming system, you have to define, program, and train thenetwork before it's used.andP;  A flexible query system is programmed to installitself automatically on the database; it's not even necessary to know what aneural network is.andM;Inexact queries can help another way.andP;  Consider a customer-support person.andO;Customer queries are very often partially specified or imprecise queries, asinformation-desk and order-desk personnel well know.andP;  Wouldn't it be nice ifyour database could support this type of query and identify best matchesdespite ambiguous descriptions? As a perfect complement for a discoveryprogram that produces logical rules, a flexible query system produces partialpattern matches, which can be used as inexact queries to your database.andM;The set of conditions have been two-valued: given a record R and a set ofconditions C, either R satisfies C or it doesn't.andP;  In a flexible querysystem, a degree of confidence is used to reflect how well R satisfies C. Howwell R matches C depends on three factors: how well each field of R matchesthe conditions, how well the fields of R match the interfield criteria, andhow important each field is to the query.andP;  An inexact query has this formatin SQL notation:andM;SELECT Name, Age, TelephoneandM;FROM PERSONNELandM;WHEREandM;Name = Dovid Smth andandM;Age IS-CLOSE-TO 18 ;andM;The name Dovid Smth is misspelled, but the system matches it to David Smith.andO;The condition Age IS-CLOSE-TO 18 is similar to &quot;age is around 20,&quot; or &quot;age isabout 20.&quot; (Inexact ranges and concepts for fields are defined in the conceptdictionary.) The system can also provide a guess, a hypothetical answer notrecorded in the database.andP;  For instance, if you know someone's ZIP code, thesystem can guess the make of that person's car.andP;  As another example, supposeyou have a database about the U.S.andP;  population.andP;  To obtain information, youmight simply pose a set of queries.andP;  For example, to know where older peoplelive may ask the following question:andM;SELECT GUESS(CITY)andM;FROM USA-DATAandM;WHEREandM;Age IS-CLOSE-TO 80 ;andM;In this case, the answer might be Miami.andP;  Furthermore, a query may have adegree of importance (or weight) associated with each condition.andP;  The weightis a number between one and 100 showing the importance of the condition:andM;SELECT Name, Age, TelephoneandM;FROM PERSONNELandM;WHEREandM;Name = Dovid Smth, weight = 70 andandM;Age IS-CLOSE-TO 18, weight = 50 ;andM;Here the Name is more important than the Age condition.andP;  A query also has aquery output threshold to filter all the records in the relation that have acombined query confidence factor less than the threshold.andM;Near is a system-provided inexact comparator.andP;  To use it, a closeness value Cthat is a percentage on the field must be specified first.andP;  Field values willbe compared with the value in the subcondition according to C. For example, auser might specify closeness on field Age of relation Person to be 10%.andP;  Inthis case, a subcondition Age 30 will have the following values: !!!BeginTableandM;Age Value  Confidence FactorsandM;33  100%andM;36  90%andM;39  81%andM;42  73%andM;...  ...  !!!End TableandM;To  apply Near on a nonscalar field (with data type Characters or String), anonnumeric algorithm is used.andM;A similarity matrix can be used to define a user-defined comparator, and aset of values can be defined in a similarity matrix by specifying the levelof similarity between them.andP;  For example, a user-defined operationsimilar-color can be defined on a set of values {Yellow, Orange, Red, Green}by the following similarity matrix: !!!Begin TableandM;Yellow  Red  Orange  GreenandM;Yellow  ---  30  70  10andM;Red  30  ---  60  0andM;Orange  70  60  ---  5andM;Green  10  0  5  --!!!End TableandM;This matrix suggests that yellow is more similar to red than green.andP;  (Thematrix need not be symmetrical.) We can use an automaticknowledge-acquisition system to obtain such matrices easily.andP;  [1] Thus, if wedon't use inexact queries, we're not using the full information available inour databases.andM;INTELLIGENT USER INTERFACESandM;The user interface is critical to any application or environment.andP;  Earlyinterfaces appeared to confuse intelligent with esoteric.andP;  You not only hadto be smart to use early interfaces, you also had to learn a complex andsomewhat arbitrary syntax.andP;  The solution was (and is) to make interfaces lessesoteric and more forgiving.andP;  If a user can sit down at the computer toperform a task, and at each stage of the program the next one is obvious(within the context of the task), the interface is satisfactory.andM;The human mind is inherently associative.andP;  The many sources of evidence forthis associativity range from the richly interconnected structure of thebrain to the patterns of associative memory and thinking frequently observedin human behavior.andP;  Associative structuring is provided to users byhypertext.andP;  Hypertext can be defined as the creation and representation oflinks between discrete pieces of information.andP;  When this information can bein the medium of graphics or sound as well as text or numbers, the resultingstructure is referred to as hypermedia.andM;For intelligent databases, hypertext serves two purposes.andP;  First, it is aninformation-structuring technique supplementing traditional text andrecord-oriented databases.andP;  Second, it structures the interface that addsassociative links to the hierarchical ones found in menus.andM;Links are between nodes.andP;  Some link types that provide the basicfunctionality required for intelligent databases are:andM;* Pan links move to a related node.andP;  They allow one to move around ornavigate through hypermedia.andM;* Zoom-in links expand the current node into a more detailed account of theinformation.andP;  Zoom-out links return to a higher-level view of the currentobject.andP;  (These links are particularly useful in browsing facilities.)andM;* Hierarchy links allow the user to view any hierarchies in which the currentobject is embedded.andP;  If more than one hierarchy is involved, the user choosesthe appropriate context.andM;* Broaden links display the parents of the current object for the hierarchiesit is embedded within.andP;  Specialize links display the children of the currentobject as defined by the hierarchies in which it is embedded.andM;* Conditional links.andP;  The availability or activation of these links dependson the stated interests or purposes of the user.andP;  Conditional links arehidden unless of interest or a particular user has access to them.andM;* Index links move the user from an indexed node to the corresponding indexentry for that node.andP;  The index can be used to enter the relational databaseor to find documents sharing a particular index term.andP;  Indexing hypertext isa good way of controlling the proliferation of links between nodes.andM;Links are important in hypertext, but nodes are also needed for storing anddisplaying information.andP;  Basic node types include:andM;* Text nodes, which consist of text fragments.andP;  The text itself may be adocument, define the object represented by the node, or represent base-levelinformation, such as that provided in a document.andM;* Picture nodes.andP;  Pictures may be embedded within text nodes, or they may benodes in their own right.andP;  A picture and text may be mutually documenting, aswhen you use a painting to illustrate a biography of Leonardo da Vinci orpursue biographic details of the artist after viewing a picture.andM;* Sound nodes.andP;  Like pictures, sounds may be embedded within text or exist asnodes in their own right.andP;  Sounds may be treated in a way similar to picturesbut are less likely to be zoomed.andP;  Sounds represent uninterpreted informationas well.andM;* Mixed-media nodes.andP;  These nodes contain some combination of text, pictures,and sounds.andP;  In many cases the same information may be represented in acombination of linked nodes or as a single mixed-media node.andM;* Buttoned text or mixed-media.andP;  The distinction between buttons and links isthat a link connects a pair of nodes, whereas a button executes a procedure.andM;Links and nodes may be combined with the object-oriented features of anintelligent database for more power.andP;  An object comprises a name and set ofattributes.andP;  An object belongs to a class and has one or more methodsassociated with it either directly or through the class to which it belongs.andO;Objects and classes may be linked to other objects and classes.andP;  The usersees the interface in terms of these objects connected by links into anetwork.andM;Consider an information-retrieval workstation on which this text isdisplayed: The main competitor to Ford is General Motors.andP;  To seek moreinformation, users must first select an object or enter information about anobject.andP;  Users are provided with several choices about how to find moreinformation about the object or related objects.andP;  Some of the choices will bestatic or fixed and generally available whenever the object is displayed.andO;Other choices will be context-sensitive or determined at run-time.andM;To get more information, the user selects the word General Motors byhighlighting it.andP;  (The user may at other times type the words and ask aboutrelated information.) The system displays a set of possible choices forinformation about the object General Motors: Annual Report, Subsidiaries,Summary of Business Activities, Stock Analysis, and Investment Outlook.andP;  Theuser selects Subsidiaries, and a list of the company's subsidiaries willappear.andP;  The user may then select a subsidiary such as Hughes Aircraft andget an annual report for that company.andP;  The information in the annual reportmight be displayed in several forms: pie chart, table, and so on.andP;  The listof the subsidiaries can change dynamically in the underlying database.andM;The user might also get the information by typing General Motors and readinga set of contexts in which the object might be interpreted (company,dealerships, and so on).andP;  The same information can be retrieved either byunstructured browsing or structured (query-based) searches.andM;The interface's browsing capabilities are supplemented by allowing a seriesof operations to be performed on an object.andP;  These operations are determinedwith a set of rules based on context, the user, data available, and others.andO;These inferentially controlled choices are determined by rules:andM;X' is a choice for operator, 'Object'andM;IfandM;'Object' is-a 'Parent' andandM;X' is a choice for operator, 'Parent' ;andM;or,andM;Stock is a choice for operator, 'Object'andM;IfandM;'Object' is-a Company andandM;(Status of 'Object') = Public ;andM;In the second rule, Stock will be a choice if the company is public.andO;Similarly, the information displayed will change according to the user'sinterests.andM;The equation Hypertext = Pre-packaged text clearly does not apply in thescenario above.andP;  By combining rule-based reasoning and object orientation, anintelligent database constructs links and displays the most relevantinformation.andM;INTELLIGENT DATABASE ENGINEandM;The intelligent database engine supports the high-level features of theintelligent database system.andP;  A knowledge-based and object-oriented datamodel allows the representation of information in a form readily reflectingthe user's perception of the real world.andP;  The key features of thearchitecture of the intelligent database engine are:andM;* Native support for object orientation and multimedia data through complexobject storage support and optimization of complex object accessesandM;* Close integration of data access and inference within the same integratedengineandM;* Global optimization of queries and programs resulting in efficientperformance.andM;The major components of the integrated intelligent database engine are the:andM;* Compiler-optimizer, which accepts an intelligent-database program andgenerates optimized internal code using metadata information on the physicaldatabase structures and rule manager to perform optimization.andM;* Rule manager, which encapsulates the algorithms used in performing forwardand backward chaining on the rules.andP;  It invokes the access module forperforming matches and searches on the persistent object space.andM;* Explanation manager.andP;  The rule manager tells the explanation manager aboutits searches and the explanation manager records them in data structurespassed to the user, who requests explanations on goals that succeed or fail.andM;* Transaction manager, which encapsulates all the algorithms needed toperform concurrency control and recovery, ensuring atomicity of transactions.andM;* Metadata manager, which contains all the metadata information associatedwith the persistent database, including schemata, inheritance hierarchies forthe classes of the persistent objects, methods and operators associated withthe classes, and access method information also associated with classinstances.andM;* Access module, which contains clustering algorithms for complex objects andall the access method codes for performing efficient searches onrecords-image data and long text data.andP;  It incorporates single andmultidimensional index structures such as B-trees.andM;* Multimedia manager, which incorporates routines to handle peripherals (suchas scanners and digitizers) and efficient management of multimedia devicessuch as write-once optical disks or cd-roms.andM;The integrated database and inference engine permits deductive retrieval inan environment where multimedia information search and object-orientedinference are integrated.andM;THE COMMERCIAL PERSPECTIVEandM;Can we estimate how much a crystal ball is worth? Are there inherent limitsto the value of information? With the increasing complexity of today'ssociety, can we afford not to build a digital crystal ball? The answer tothese questions is &quot;no.&quot; In the right hands, information can be exponentiallymore valuable than any other asset.andP;  Almost every aspect of science,technology, and business will benefit from intelligent databases.andM;The risk-benefit ratio for automatic discovery is very attractive.andP;  Adiscovery system has to discover just a few unexpected relationships to payfor itself.andP;  And since the discoveries may always be rechecked with queries,little chance of error and great potential for gain exists, in contrast toexpert systems that mimic human experts.andP;  If an expert system errs, theconsequences might be serious.andM;In many corporations, multiuser VAXs are idle almost every night.andP;  Theinformation discovered by using these processors during their off-hours canhelp significantly in decision making.andP;  Corporations that use intelligenttools to understand their data will make more effective decisions.andM;With intelligent databases, data glut should be viewed as an opportunity, nota problem.andP;  The payoffs from intelligent databases are significant.andP;  Even ifwe manage to provide a fraction of database users with hidden knowledge fromtheir databases, we will achieve a substantial level of productivity increasein society as a whole.andM;Our society increasingly depends on information.andP;  Most large organizationsare totally dependent upon their centralized databases.andP;  Today, it is takenfor granted that to compete in any business requires database-managementsystems.andP;  As the size of the average database grows, intelligent databasetools are as much a necessity as the databases themselves.andM;REFERENCESandM;1.andP;  Parsaye, K., M. Chignell, S. Khoshaf-ian, and  H. Wong.andP;  IntelligentDatabases.andP;  New, York, N.Y.: John Wiley and Sons, 1989.andM;2.andP;  Parsaye, K. &quot;Acquiring and Verifying Knowledge Automatically,&quot; AI EXPERT,May 1988.andM;Listing 1.andP;  !!!Begin TableandM;Code  ProductandM;Serial No.andP;  Stop  Code  Lot No.andP;  Oper.andP;  No.andM;N181400800  FSI  MB-19  24  176613andM;MI81130796  MA1  MI14  24  32787andM;932andM;MI81809313  FSI  MI14  24  213272andM;NI8400875  CB2  X418172  37  213272andM;NI61201054  CM  X418172  44  32797andM;NI61000878  FSI  A418172  37  51512andM;NI81201022  FSI  X418172  43  213272andM;MI81400817  MA1  XMI14  24  38978andM;931 !!!End Table</TEXT></DOC>
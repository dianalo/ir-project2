<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> ZF32-115-035 </DOCNO><DOCID>11 008 712</DOCID><JOURNAL>DBMS  July 1991 v4 n8 p93(3)* Full Text COPYRIGHT Mandamp;T Publishing 1991.andM;</JOURNAL><TITLE>Maximum force. (Set Expert On)</TITLE><AUTHOR>Olympia, P.L.andM;</AUTHOR><SUMMARY>Users who use Sophco's Force can still have windowing functions byusing a windows library in Force applications.andP;  SequiterSoftware's Code Base is a C library that permits users to accessXbase file from C programs.andP;  It is necessary to recompile thesource code to use Code Base's windowing functions in Forceprograms.andP;  The Jeff Davis Library (JDL) is of interest to Forceusers.andP;  JDL can be used to manipulate arrays, binary data, bits,strings, date, time, mouse, file data, directory data, financialdata, numerica data, interrupts, pointers, memory addresses,screen, keyboard, and printer.andP;  JDL includes two data bases: onethat has state counties and one that has zip codes.andP;  The JeffDavis Communications Library (JDC) is a separate program andrequires Force but not JDL.andP;  JDC has a full set of communicationsfunctions.andM;</SUMMARY><DESCRIPT>Company:   Sophco Inc. (Products)Sequiter Software Inc. (Products)Jeff Davis and Associates (Products).andO;Product:   Force (Compiler) (Usage)Jeff Davis Library (Data base management system) (Usage)Code Base 4 (File management software) (Usage)Jeff Davis Communications Library (Communications software)(Usage).andO;Topic:     CompilersWindowingData BasesData Base Management SystemsC Programming LanguageFile ManagementCommunications Software.andO;Feature:   illustrationprogram.andO;Caption:   WinCB.Prg. (program)Cdir.Prg. (program)andM;</DESCRIPT><TEXT>Last month I expounded the merits of Sophco's Force, including itsextensibility, its robust set of system-level functions, and of course, thesmall, fast.exe files it generates.andP;  This month I will show several ways tohelp you maximize your investment in Force.andM;Windows in Your Force ProgramsandM;As I noted before, Force currently does not have any windowing functions.andO;However, if you already have a windows library, you may be able to use thatlibrary in your Force applications.andP;  One case in point is Sequiter Software'spopular Code Base, a C library that lets you access Xbase files (includingClipper index and DBASE TV memo files) from C programs.andP;  Because it also hasscreen management routines, including data entry, menu and windowingfunctions, you can use it to code Xbase-like applications in C.andM;To use Code Base's windowing functions in your Force programs, you'll need torecompile the source code for the large model of your compiler using Forceconventions.andP;  In my case, I regenerated T4.LIB from the Code Base source codeusing Borland's Turbo C compiler.andP;  Next, you need to define the Code Basefunction prototypes in your program to let Force know what types ofparameters each function needs and what variable type it should return.andO;Naturally, you also need to invoke Force's SETUP_TURBO function (orSETUP_MICRO, if you are using Microsoft C) to handle the interface with TurboC.andM;Listing 1 shows a sample program that uses several Code Base window functionswhich are declared in the program as procedures.andP;  First, I define thecoordinates of the window, and then its attributes and border.andP;  Next, Iinvoke W4Popup() so that the underlying text will be restored when the windowis closed.andP;  Then, I activate the window, write some string on it wait for akeypress, and deactivate and close the window.andP;  To link the compiled program,I use Turbo C's Emu.Lib, MathL.Lib and, of course, Cl.Lib.andP;  The link commandis shown in the listing.andM;The Jeff Davis LibraryandM;Most serious Force users would probably want to have the Jeff Davis library(JDL) in their toolbox.andP;  This is an extensive library of functions formanipulating arrays, binary data, bits, strings, date/time, mouse,file/directory data, financial and numeric data, interrupts and pointers,memory addresses, the screen, keyboard, and printer.andP;  Although Force itselfhas evolved to incorporate some functions provided by this library (forinstance the binary file I/0 functions), there are so many functions in theset that you can easily justify purchasing it Of course, if you are intodeveloping Force applications that support the use of a mouse, you would befoolish not to get this library.andM;Memory functions in the package include those that tell you if EMS is present(including EMS emulation via software), and the amount of base memory,extended memory, and expanded memory.andP;  Common financial functions such asloan payment figures, annuity, present value, and sinking fund functions areincluded in the library.andM;Because I favor using Force for coding software installation and hardwarediagnostics programs, some of my favorite functions in JDL are the DOS andfile/directory functions.andP;  For instance, FINDAUDIR() reads an entiredirectory tree and creates a.dbf file out of that.andP;  MAKEDIRPIC() createsa.dbf file with the same set of subdirectories, except that each recordcontains the appropriate graphic symbol, allowing you to display a graphicaldirectory tree if you list the records in sequence.andM;A practical example of how you might use some of these functions in the Cdirprogram is shown in Listing 2.andP;  Cdir prompts a user for a directory, thenshows the directory tree in graphic form inside a scrollable box.andP;  Theprogram then changes the default drive/path to the entry selected by theuser.andP;  listing 2 shows other useful functions including ISDRM(), whichreturns.T.andP;  if a specified drive letter exists in the user's PC, andDRIVESTR(), which returns all the valid drives in the system.andP;  SETDRIVE()changes the logged drive to the specified drive, and SETDIR() changes thedefault subdirectory.andP;  In place of the latter, I used Force's equivalentCHDIR() function.andM;JDL lets you save a screen image to memory or to a file, then display thesaved screen with fancy opening of a vertical or horizontal drape or blind.andO;You may save an entire screen or just a portion of it.andM;The geographic functions in the library should be of interest to many users.andO;Among these are STATEOFZIP(), which returns the state given a zip code, andGETCOUNTY() which shows a window of counties for any given state, and letsthe user pick a county name.andP;  JDL can do functions like these easily becauseit comes with two databases: County.dbf and StateZip.dbf.andP;  The latter is lessthan 2K long, and contains the state name and the lowest and highest zip codefor each state.andP;  With a similar file you should have no trouble validatingstate abbreviation or zip codes in an application written in any Xbasedialect.andM;JDL comes with an install program that takes care of decompressing the filessupplied on the distribution disk and placing them in the appropriatedirectories.andP;  You really need just JD.LIB (which is a whopping 660K file) andthe set of header files.andP;  In compiling programs with JDL functions I normallyincrease the available variable space with the /V60000 switch.andP;  I have notbeen able to use TLink 2.0 to link any of the programs compiled with JDLfunctions.andP;  Instead, I use Microsoft's Link (usually with the /SE:200 switchto increase the number of segments) or Blink's Blinker.andM;You will notice that your.exe files will put on some weight if the Forceprograms from which they came contain JDL functions.andP;  However, these exefiles are still a lot smaller than equivalent programs coded in Clipper.andO;Whereas I am used to generating 10 -20K programs in Force  provided I don'tuse database or fancy screen functions), the best I can do with JDL functionsis a 45K.exe file.andM;What don't I like about JDL? Primarily, the perfect bound manual whichdisintegrates easily and could use more examples, and better code in them.andP;  Ihave great difficulty reading the sample programs provided with the packagebecause keywords are not capitalized (not my preference), and the codeindentation is either nonexistent, or is so extreme that I need a virtualwindow 120 columns wide to see portions of the code.andP;  I also wish the librarycontained windowing functions.andP;  I understand that window functions will beavailable soon.) JD Communications Library If you like JDL, you will bethrilled with its new sister library called the Jeff Davis CommunicationsLibrary (JDC).andP;  The combination of Force and JDC ranks very high with me interms of bang for the buck value.andP;  Twice this year I discussed the merits ofa communication program in an Xbase language, and JDC gives me almosteverything I want in such a program.andM;The JDC is a separate package and requires Force only, not JDL.andP;  It has acomplete set of communications functions in a library that is only 21K insize.andP;  To help you get up to speed in learning the functions, the packagecomes with an excellent and fairly complete communication program.andP;  I didn'teven need the reference manual - a quick look at the sample communicationprogram was all I needed to create one of my own.andM;The package comes with Forsberg's DSZ program to handle all file transferprotocols including Xmodem, Ymodem, and Zmodem.andP;  a believe you still need toregister DSZ with Forsberg.) The communication program I created with JDCworked flawlessly with all bulletin boards and timesharing services Iconnected with.andP;  If you are a reasonably accomplished Xbase programmer, youwill have no trouble creating a communication program of your own, even ifyou know very little about electronic communications.andP;  I expect Sophco toreplace their Opus based BBS with one written entirely in Force and JDC.andO;Lastly, you'll be happy to know that the JDC documentation is slim, complete,and is wire-bound.andM;Taking Over the I/0 HandierandM;One of my major interests in Force is the prospect of being able to replaceits I/O handler with my own.andP;  Why? I have clients with applications thatmassage massive amounts of data that eventually will get into the gigabyterange.andP;  I am interested in a replacement I/O handler that compressesdatabase, index and memo files, and decompresses them on the fly.andP;  Thebenefits are twofold - the savings in disk space will be substantial, and thedata encoding resulting from the compression will add a significant level ofsecurity, disallowing data tampering outside of the application.andM;While that project is not yet complete, many of you may be interested in aprogram that I have used in a few small applications.andP;  Last year, I wroteabout Bellard's free LZEXE program that compresses exe files while leavingthem executable.andP;  Anyone who uses this program sooner or later wishes that itcould compress overlay files also.andP;  The good news is that there is now aprogram called Diet that compresses not only exe files and their overlays(leaving them executable), but data files as well.andP;  Diet, written by TeddyMatsumoto, decompresses data on the fly when an application calls for it andcan leave the data compressed after you exit the application.andP;  With thisprogram, your database, index, and memo files can remain on disk ininscrutable compressed form, safe from tampering by most users.andP;  Diet is afitting name to a program that makes your data appear slim, and one thatoriginated in a country whose legislature bears the same name.andM;How does Diet work? First, you use it to compress your overlay and datafiles, then you load it as aSP, When your application issues a call to usethe files, Diet springs into action, determines that it had compressed thefiles, and decompresses them for your application.andP;  When your program exits,Diet can automatically recompresses the data files if you so choose.andM;I consider Diet to be work in progress at this point.andP;  It has some problemswith FoxPro 2.0, which performs a great deal of data buffering.andP;  Diet is notexactly a speed demon either, so it should not be used with very largedatabases.andP;  Still, if you want to see it in action for yourself you can getthe latest version from the DBMS Telepath BBS (see the Letters page for logoninformation).andM;* Jeff Davis andamp; Associates inc., 650 Mountain Meadows Road, Boulder, CO 80302;800369-7001.andP;  Circle 301 on the reader service card.andP;  9 Sequiter Softwareln(., P.O. Box 5659, Staflon k Edmonton, Alberta, Canada, T6C 4GI;403-448-0313.andP;  Circle 302 on the reader service card.andM;Sophco inc., P.O. Box 7430, Boulder, CO 80306; 303-444-1542.andP;  Circle 303 onthe reader service card.andO;</TEXT></DOC>
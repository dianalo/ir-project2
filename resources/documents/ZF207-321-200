<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-321-200  </DOCNO><DOCID>07 321 200.andM;</DOCID><JOURNAL>Data Based Advisor  June 1989 v7 n6 p35(4)* Full Text COPYRIGHT Data Based Solutions 1989.andM;</JOURNAL><TITLE>Shirtsleeve SQL. (beginning instruction in Structured QueryLanguage) (Hands-on SQL) (column)</TITLE><AUTHOR>Sayles, Jonathan S.andM;</AUTHOR><SUMMARY>The first in a series explaining the basics of Structured QueryLanguage (SQL) for users of relational database management systems(RDBMS) such as Oracle, Ingres, SQLBase or XDB.andP;  The dialect ofSQL discussed conforms to IBM's OS-2 Database Manager languagestandard.andP;  Basic terms and concepts required for understandingRDBMSs are defined.andP;  SQL capabilities and drawbacks areelucidated.andP;  A PC parts database, the case study used in theseries, is introduced.andM;</SUMMARY><DESCRIPT>Topic:     Structured Query LanguageProgramming InstructionQuery LanguagesCase Study.andM;</DESCRIPT><TEXT>Shirtsleeve SQLandM;LEt's see now...you're either (select any from the following list where theyapply): ( ) too busy ( ) too old ( ) too young ( ) overextended ( ) alreadyway over budget ( ) not convinced of the need to overcome the inertia andlearn Structured Query Language (SQL) for relational database managementsystems.andP;  After all, the law of &quot;diminishing amusement&quot; (a little knownsoftware syndrome) takes a sizable amount of octane out of everyone'sprofessional enthusiasm over the years.andP;  It doesn't take long before theprospect of learning a new product rates right up there with doing incometaxes, desk checking a C program, or running a desktop publishing system onan XT.andM;But learning SQL is different.andP;  It's:andM;* Easy to learn--Did you know that you've already begun to matriculate inSQL.andP;  By reading the opening sentence of this article, you were exposed tofour SQL words, SELECT, ANY, FROM, and WHERE.andP;  They mean the same thing toSQL as they do to you.andM;* Easy to use--Whether you're running a query written in SQL or writing aprogram with embedded SQL statements, the language s intuitive, logical, andstraightforward.andM;* Necessary--SQL is IBM's strategic direction in relational databaselanguages and the ANSI standard for relational languages.andP;  SQL-basedrelational systems and application development tools are proliferating likerabbits, in micro, mini, and mainframe products like Ingres, Oracle,Informix, DB2, Rdb, SYBASE, dBASE IV, OS/2 Database Manager, Focus, SQLBase,and XDB, just to name a few.andM;Here's your chanceandM;So, here's your chance to find out more about SQL in a series tailored for PCrelational database users.andP;  You'll we'll cover the heart of SQL instructionmaterial.andP;  You'll learn what you can do with SQL, how it's useD, and wherethe industry is going with it.andM;What's in it for you?andM;This will be a &quot;how to program in SQL&quot; series, not a &quot;What's SQL about?&quot; or&quot;Is SQL any good?&quot; series.andP;  Using SQL, you'll learn how to define and load arelational database.andP;  Once the database is set up, you'll learn how to queryit and produce and hoc, administrative, and statistical reports.andP;  All thetables in our examples and illustrations will be yours to copy, enter into asystem, and use.andM;What do you need?andM;To follow the examples in this series, you'll need to have an SQL-basedrelational DBMS like Oracle, Ingres, SQLBase or XDB.andM;You may also need help getting started on the system.andP;  Each relationaldatabase product has a unique user interface, and addressing the differentprogramming procedures falls beyond the scope of this series.andP;  So, if theproduct documentation leaves you scratching your head or pounding on your PC,you may have to contact a hotline or technical support for help doing thingslike: setting up your I.D.andP;  and password, entering and editing statements,and so on.andM;Finally, you'll need to generate the database by creating and loading tableswith SQL statements.andP;  The correct statements for doing that appear nextmonth.andM;Will the real SQL please stand up?andM;It probably comes as no surprise to learn that there are as many slightlydifferent versions of the SQL language as there are vendor offerings.andP;  We'lltake the path of least resistance by learning a mainstream dialect ofSQL--one that conforms to the language standard in IBM's OS/2 DatabaseManager.andM;IBM SQL may turn out to be a subset of the language your relational databaseunderstands if you're runing ORACLE, Informix, Ingres, Sybase or SQLBase.andO;Each month I'll try to cover extensions to the SQL language from one or moreof these products.andM;What if you don't have SQL?andM;I think you'll find the SQL explanations and example clear, straightforward,and illustrative enough, so that you'll get plenty out of just reading thearticles.andM;Relational terms and conceptsandM;We'll start by defining four important terms:andM;* Database Management System (DBMS)andM;* DatabaseandM;* Query LanguageandM;* Relational Database Management System (RDBMS)andM;Database management systemandM;The term &quot;database management system&quot; or DBMS refers to the entirecomputerized, information management product.andP;  DBMSs make data a shareable,manageable resource.andP;  Some DBMSs are OS/2 Database Manager, FoxBASE+, dBASEIII PLUS and dBASE IV, Paradox, XDB, Focus, DataEase, Ingres, Oracle.andP;  Andthere are hundreds more.andP;  DBMSs preserve and protect the integrity of theinformation in databases.andP;  They come with interactive user interfaces.andM;DatabaseandM;A database is simply the accumulation and organization of storedinformation--a disciplined file that stores two things:andM;* The data--each individual fact or piece of informationandM;* The relationships among the data--how separate facts are related.andM;Query languageandM;You request services from the DBMS through a query language.andP;  This issometimes called the data access language.andP;  Query languages let you:andM;* Define and redefine databasesandM;* Store and update database informationandM;* Retrieve and manipulate database information.andP;  Some even allow you youcontrol access to databases, create reports, manage transaction processing,and produce statistical information.andM;In this series, we'll learn IBM's query language SQL.andP;  Fig.andP;  1 describes therelationship of the DBMS, the database, and the query language.andM;Relational database management systems orandM;RDBMSsandM;DBMSs come in several types.andP;  The main difference between them lies in thestructure or model of the database (how the data is presented to users).andO;Older database models organize information as records in inverted trees orlinked-lists.andP;  These databases are less flxible than RDBMSs because:andM;* The data model favors a specific view of the stored informationandM;* They're pointer-based--their infra-structure is &quot;hard-wired&quot; when defined.andM;RDBMSs present data as a collection of simple tables (as shown in Fig.andP;  2).andO;Relational systems:andM;* Are symmetrical--All columns and rows of the table are evenly accessibleandM;* Aren't pointer-based--The DBMS access information in the tables based ondata element values (i.e.andP;  you access information on GRAY parts stored in SANFRANCISCO or Projects, 1, 2 and 3)andM;* Support a mathematical, set-level, data access language, which allows youto: access table rows, access table columns and JOIN or MERGE informationstored in separate tables.andM;The mathematical, set-level operators let you address:andM;* Each specific item of informationandM;* Information in a columnandM;* Information in a tableandM;* Information in multiple tablesandM;Relational tablesandM;RDBMSs present information as tables.andP;  There are three basic table types:andM;* Base tableandM;* Results tableandM;* ViewandM;Base tables hold your data.andP;  They're made up of:andM;* Unordered rows-the rows have no guaranteed position in the tableandM;* Columns (usually less than 300)--representing the different kinds ofinformation stored in the tableandM;You can define, delete, query and update base tables.andM;Results tablesandM;When you execute an SQL retrieval query against a base table, use results ofyour query will be rows and columns of information, presented in tableformat.andP;  These tables are called results tables.andP;  They're undefined,temporary images of the data in your base tables.andM;ViewsandM;Most relational products let you customize user perceptions of theinformation stored in a table by defining a &quot;View&quot; of that table.andP;  A Viewbecomes the user's window into the table, and users can only accessinformation according to the definition of the view.andP;  Vews represent storeddefinitions of what's accessible in a table--not actual data--and you may notbe able to update them (it depends on how they're defined).andM;SQL isandM;SQL (pronounced and originally spelled SEQUEL) is a set-oriented,non-procedural data access language, created to manipulate information storedin relational databases.andM;With SQL you can:andM;* Define data storage structures by creating tables, databases, indexes, andother structuresandM;* Retrieve and manipulate data by querying the databaseandM;* Update data and maintain informationandM;* Control access to data by defining authorization and security for thesystemandM;In addition:andM;* SQL is English-like.andP;  It's easily read and understood, by both technicaland non-technical usersandM;* SQL is &quot;non-navigational.&quot;andP;  It allows you to specify what you want done.andO;The DBMS figures out how to do it.andM;* SQL execution is dynamic.andP;  In relational DBMSs, SQL statements can beexecuted any time the system is running-including statements that modify adatabase, define new databases, or change the system security andauthorization scheme.andM;SQL is notandM;* SQL isn't a procedural programming language like COBOL, PL/I, BASIC orFORTRAN.andP;  It ha snone of the procedural features you've come to know andlove.andM;* SQL has no screen-handling facilities.andP;  It relies on data communicationssoftware or DBMS interface products to communication with you.andM;* SQL has only primitive output formatting.andP;  For snazzy reports you have topurchase separate report writing products (such as IBM's QMF, Oracle'sSQL*Report, Ingres/Report-Writer, and so on).andM;The PC parts databaseandM;Our case study for this series centers around a PC parts database.andP;  Thedatabase and its selected information is shown in Figs.andP;  2 and 3.andM;Fig.andP;  2 outlines the database, showing the tables it contains.andP;  The table andcolumn names have been abbreviated to make them faster and easier to enter.andO;I'll discuss each of them in detail next month.andP;  It also shows therelationships and interdpendencies between the different tables in thedatabase.andP;  Lines that connect columns establish logical interdependencies.andO;I'll discuss these &quot;linking&quot; or &quot;joining&quot; columns next month.andP;  Fig.andP;  3 showsthe information contained in all four tables.andM;What's ahead?andM;Next month we'll continue the series by explaining how to define your copy ofthe PC parts database.andP;  In following months, we'll look at queries--how touse SELECT, BETWEEN, IN, and LIKE; joining tables; SQL functions and summeryinformation; subqueries; correlated subqueries and subqueries using EXISTSand HAVING; update statements (INSERT, DELETE, and UPDATE); indexes; views;system authorization statements; and SQL performance techniques.andM;Jonathan Sayles is Director of Educational Services for the Systems Group,Inc., a technical training and consulting company located in Glastonbury,Conn.andP;  He's the developer of the CAI course &quot;SQL as a Second Language&quot; andthe author of three SQL books.andP;  These are published by QED InformationSciences, Inc. of Wellesley, Mass.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-732-791  </DOCNO><DOCID>09 732 791.andM;</DOCID><JOURNAL>The Seybold Report on Publishing Systems  Dec 24 1990 v20 n7p3(14)* Full Text COPYRIGHT Seybold Publications Inc. 1990.andM;</JOURNAL><TITLE>A fresh look at SGML: the conventional wisdom changes. ( overviewof the Standard Generalized Markup Language)(includes relatedarticles on handling of tabular data in SGML, reference materials)</TITLE><AUTHOR>Alexander, George; Walter, Mark.andM;</AUTHOR><DESCRIPT>Topic:     StandardsDocument PreparationDesktop PublishingSystem DevelopmentSpecificationsProgramming LanguagesMetalanguageDefinitionsApplicationsStandard Generalized Markup Language.andO;Feature:   illustrationchart.andO;Caption:   Tying a database to documents. (chart)andM;</DESCRIPT><TEXT>A Fresh Look at SGML: The Conventional Wisdom ChangesandM;FOR THE PAST TWO YEARS, conventional market wisdom has been that the militaryis the driving force behind the general use of the Standard GeneralizedMarkup Language (SGML).andP;  The reasoning: with SGML mandated for all new weaponsystem documentation (as a component of the CALS [Computer-Aided Acqiusitionand Logistics Support] initiative), SMGL-related products and services gearedtoward that industry would become generally available for use by otherindustries.andM;The SMGL '90 conference held last month in Philadelphia was an interestingillustration of how the conventional wisdom has changed.andP;  Without question,CALS was a catalyst in the use of SGML, but now nonmilitary applications arethe hotbed of SGML activity.andP;  The reason: users are slowly discovering thatSGML's power lies not in applying the U.S.andP;  Department of Defense'sapplication to their own problems but in using the ISO standard to developcoding schemes that describe their particular needs.andM;Going beyond CALS.andP;  Early work in SGML came primarily from two entitiesd theU.S.andP;  Department of Defense (DoD) and the Association of American Publisher(AAP).andP;  These groups separately developed document definitions and tagsetsthat fit their applications--technical manuals on the one hand, journal andbooks on the other.andM;Throughout the 1980s, several firms that were committed to the SGML conceptsdeveloped software to work with native SGML file.andP;  A few firms, such asDatalogics, Software Exoterica and SoftQuad, served a niche market.andM;Two years ago, the momentum of the DoD's CALS initiative served as a catalystfor SGML-related software products.andP;  The DoD said it would requiredocumentation for all new weapons systmes to be in SGML, and since there wereso few products available to do the job, vendors spied an opportunity, hopingthat most defense contractors would begin installing SGML systems.andM;Unfortunately, many vendors (and users) equated SGML with CALS.andP;  Vendorstreated the CALS application as if it were the only one that mattered, oftendoing no more than providing filters that converted documents in theirinternal formats to the one defined by the CALS specifications.andP;  This leftusers confused about how they could make use of these so-called SGML productsif their own application was documentation but not of the type described byCALS.andM;At SGML '90, Unisys spoke of its experiment applying the CALS document typedefinition (DTD) and CALS publishing products to military manuals other thanthose that conform to Mil-Spec 38784B (the one specified in Cals).andP;  Unisysused three products--from Datalogics, US Lynx/Venture and Interleaf--and theCALS document definition to try to put one of its manuals into SGML.andP;  Notonly did it find functional differences in the products (ranging from minorto severe), but there were also problems associated with using a documentdefinition designed for another application.andP;  (The page numbering scheme inthe Unisys document, for example, different from that in 38784B manuals.)andO;Unisys did see some benefit in moving over to generic markup, but it wasconstrained by trying to work with a DTD products designed for someone else'sdocuments.andM;This example illustrates the self-educational process that has been going onin the past few years.andP;  Gradually, as users and vendors have learned moreabout the SGML standard, it has become clear to them that SGML will provequite useful in a variety of applications, not just the military manualsspecified in CALS.andP;  It has also become clear that although the DoDimplementation of SGML (CALS) is a dominant one, the CALS tagset will notserve everyone's needs.andP;  Users will adapt the DoD tagset or other public onesto their own needs and still make use of the ISO 8879 standard (see below).andM;Clearing misconceptions.andP;  SGML is much maligned and often misunderstood.andO;Published as an official standard in 1986 (ISO 8879), SGML evolved frompublishers' efforts in the 1970s to develop generic tagging schemes fordescribing structured documents.andP;  The standard that emerged in 1986, however,is a general-purpose language for describing the structure of data, of whichdocuments are one example.andM;SMGL is used for describing text-based structures.andP;  It is a metalanguage--alanguage for creating other languages.andP;  Most often, the languages createdfrom it are not usually thought of as languages; they are known more commonlyas document type declarations, also called document type definitions, or justDTDs.andP;  A DTD is an ASCIT text file that describes the structure of a class ofdocuments--what elements they must or may contain and the order and frequencyof their occurence in a document.andP;  A DTD is often thought of as a structuraloutline of a document, but it may be also be thought of as a language--a setof tokens (tags) and a set of rules that govern how those tokens may be usedtogether in a document.andM;In addition to handling DTDs, the SGML standard provides a notation mechanismfor creating other languages that describe structured information.andP;  Forexample, the Hypermedia Time-based Structuring Language (HyTime) is alanguage created with SGML that describes time-dependent information, such asmusic scores of operas.andP;  As a metalanguage, SGML may be thought of as acounterpart to Backus-Naur Form (BNF), the metalanguage notation used tocreate programming languages, such as Pascal or C. SGML is the metalanguagenotation used to create languages that describe documents, databases andother types of structured information.andM;Applications and documents represented in SGML need not share the samecontent model; they need not even have their data represented in the samesyntax.andP;  but the notation for describing the data, if it conforms to the SGMLstandard, will be one that can be parsed (intercepted) by an SGML parser suchthat that information could be made understandable to virtually any othersystem.andM;Take, for example, headings in several diferrent documents,  They might beidentified with the tag andless;H1andgt; or [head1] or /headline/ or /partno/ indifferent documents.andP;  All of these names and delimiters are valid in SGML.andO;In order for the parser to interpret the document correctly, it must firstread and interpret the DTD, which specifies the syntax, character sets andtagsets in use and the structure of the document.andP;  (The DTD also specifiesany special features of SGMl and defines all of the internal and externalentities--abbreviations and references to external files.eandM;The point is that SGML allows information to be described in many differentways.andP;  The users decides how to structure information and how to describe thestructure.andP;  SGML is the framework for encoding the data so that theinformation is reprsented in a way that other computer systems canunderstand.andM;There are many misconceptions about SGML.andP;  Here are a few examples ofconcepts often confused:andM;* SGML is not a set of tags.andP;  SGML provides a framework for describing thestructure of the document, but the tags, or generic identifiers, that areused to describe elements in a document are not part of the standard.andP;  Thetagset is established in the DTD.andP;  The document analst is free to createwhatever tags are needed in the DTD.andP;  The restriction is that each tag mustbe a single word of no more than eight letters.andM;* SGML is used to describe content, but it may describe format.andP;  It is oftensaid that SGML describes content, not format.andP;  In fact,  SGML may be used todescribe format, content of both.andP;  The ASCIL version of revisable formatteddocuments in ODA (Office Document Architecture) is written in SGML syntax,for example.andP;  The ISO forn standard uses SGML to describe font information,and the forthcoming Document Style, Semantics and Specification Language(DSSSL) uses SGML to describe formatting information.andM;The SGML language is a metalanguage for creating other languages (DTDs) thatdescribe structured information.andP;  If formatting information is wellstructured, it may be represented in SGML notation.andP;  It is also possible toembed formatting instructions within as SGML-encoded document.andP;  The standardallows formatting instructions to be attached to every element in thedocument if desired.andP;  But to do so goes against the grain of the intent ofSGML, which is to make documents portable.andP;  Embedding specific formattinginstructions within documents makes them less portable.andP;  But the authors osSGML were publishing professionals who recognized that sometimes you want toput processing instructions into a file--even if you are trying to separateform and content.andP;  Thus, the standard makes provisions for doing so.andM;* SGML is not a military specification.andP;  The U.S.andP;  Department of Defense wasan early adopter of SGML, but the ISO standard is not affiliated with themilitary at all.andP;  AT SGML '90, the range of applications represented wasquite diverse, covering areas such as chemistry, math, legal publishing,commercial book publishing, financial publishing, tables, in-house manuals,financial reports and hypermedia databases.andP;  At previous conferences, such asMarkup, there have been case studies from such nonmilitary sources as thebanking industry.andM;* SGML can go hand-in-hand with WYSIWYG.andP;  SGML says nothing about the userinterface of software written to process documents.andP;  There are now severalcommercial systems that demonstrate how the user interface may be tailored tothe user's preference, whether it be a structural view with tags, an explodedview with all markup or a WYSIWYG formatted view with all markup hidden.andO;ArborText's The Publisher, IBM's TextWrite, SoftQuad's Author/Editor and thenew Xerox DocuBuild are examples.andP;  In all cases, however, the internal dataformat (the way the program stores information) is markedup ASCII text files,along with any associated graphics, nontextual data or style sheets.andM;Readers following the subject can no doubt point to other myths andmisconceptions that have cluoded understanding of SGML.andP;  We used these few toillustrate that SGML has the reputation os somehow being a standard for&quot;other people, not me,&quot; and that the foggy notions many people have about thestandard have hindered its adoption.andP;  As users clear away theirmisconceptions and uncover the truth, the standard's value can be placed inthe context of what it can do for them and their documents of products.andM;As we said above, users are now reaching such an understanding.andP;  They arebeginning to see h ow SGML, not necessarily CALS, will benefit them.andP;  in manycases, the motivation for using SGML has more to do with how their owndocuments and document-processing requirements have changed than it does withan outside mandate, such as CALS.andM;Why SGML is becoming importantandM;As we stated above, SGML is not tied to any one definition of a document.andP;  itis a generalized language that may be used to describe virtually anystructured document.andP;  (Structured documents tend to be content-driven,meaning that the appearance of the document--its length, style and layout--issecondary to its content.andP;  Layout-driven documents, such as display ads, inwhich the layout determines to some extent the content, either have nocontent structure of have one that does not lend itself to a hierarchicaldescription.)andM;One reason SGML is gaining recognition is the spread of heterogeneouscomputer environments.andP;  AS the number and type of computers and softwarewithin an organization multiples, the need for a standard form of interchangeincreases.andP;  SGML provides the means of developing a notation that is machine-and application-independent.andP;  Documents stored with generic content markupmay be interchanged among a variety of computers and software.andM;Another motivation is the desire of some publishers to get electronicmanuscript form their authors.andP;  if the electronic manuscript relies ongeneric markup, then the publisher is not tied to any oney formatter.andP;  Thedocument may be copyedited and composed by outside contractors whose choiceof systems the publisher does not control.andM;The transition to electronic information.andP;  But the real motivation for usingSGML is the growth in electronic documents.andP;  In the 1980s, many in-housepublishers concentrated on automating the page makeup process tn theirproduction departments through electronic pagination systems.andP;  Traditionalpaste-up artists were trained to do page-oriented layout on computers(PageMaker, Xpress, etc.); some paste-up artists found their jobs shifting aspagination became automated (Ventura, Xyvision, etc.).andM;By the end of the decade, the automatic pagination problem had been solved atmost in-house publishers, at least to the extent that they produced fullpages of text with holes for artwork.andP;  Those that didn't have it (or stilldon't) at least knew that they could get it.andP;  A variety of tools automate theprocess to various degrees, and even products that do less automaticallyusually have electronic toos for fixing pages by hand.andM;To many users who come from a product ion department, SGML is aboutinterchange.andP;  Having produced an electronic page, they can now go back andstrip out the typographic coding, retaining the element tagging (assumingtheir formatter supports it), and then deliver their &quot;portable content&quot; inSGML form.andP;  This is the approach taken by the DoD, except that it will bereceiving information in that form, rather than delivering it.andM;Now, as we enter the 1990s, the focus of in-house publishers is changing.andO;Having figured out h ow to produce pages electronically, many firms arefacing a question in archiving published information that will be revised.andO;Do they store the information as pages, with the markup of the finalproduction system, or do they store the information in a format that willmake it easier for writers and editors to revise it without having to worryabout page makeup?andM;The decision is especially difficult because in many cases the informationmay last longer than the computer or the software used to produced the lastedition.andP;  it therefore becomes desirable to store the information in a waythat enables it to migrate easily from machine to machine over time.andM;SGML is the natural choice in this situation.andP;  Documents stored in SGML aretagged ASCII files that can be read by virtually any formatter on the market(although some formatters, particularly word processors, may have difficultywith advanced features such as automatic references).andP;  The ASCII files may bestored on any computer and processed by any number of applications.andM;There is a downside, of course.andP;  Implementing SGML can require considerableoverhead.andP;  And if existing documents must be converted into generic form, themore complex the documents, the more difficult and costly the conversionprocess becomes.andP;  Formatting instructions inserted to improve the aestheticsof the composition may be lost.andP;  Users must weigh such potential lossesagainst the advantages of generic markup when evaluating whether and how tomake use of SGML.andM;The competitive advantage.andP;  The most compelling argument of all is thatputting information into SGML helps prepare for doing things with thatinformation other than just putting out pages.andP;  As publishers begin to buildlibraries of electronically produced books, journals or manuals, they arenaturally contemplating alternative products, such as electronic books oronline services, derived from the s ame material.andP;  Keeping a library ofdocuments in the form of a page-oriented formatter may considerablycomplicate the development of such new products.andP;  The alternative--storingthe files with generic markup--imposes an initial burden of coversion, but inthe long run it may be the most economically soud route.andM;In other words, SGML may be used strategically, both as an intermediateformat for filtering information and as a native file format.andP;  The nativeformat approach is particularly appealing, because it offers advantages topublishers that own volumes of data that may be reused, revised andrepublished in years to come.andP;  It is this strategic advantage of SGML,coupled with the near-term advantages cited above, that has captured theattention of publishers worldwide.andM;Applications of SGMLandM;Conceptual uses.andP;  If we take a theoretical view, the use of the concepts andconstructs of SGML may be grouped according to the types of markup applied tothe document sets:andM;1.andP;  Generic markup, replacing proprietary or procedural markup.andP;  in thiscase, SGML is used to write a DTD, but the DTD is written to describe data,not the other way around.andP;  The procedural commands in the source documentsare stripped, leaving generic codes that typically identify elements thathave formats, of styles.andP;  The documents were not necessarily rigorouslyencoded with their structure in mind; instead, a loose DTD is written thatallows documents that vary in structure to be considered part ot the databaseste.andM;2.andP;  Structural markup.andP;  In this method, the data is marked up in SGMLaccording to the structure of a DTD.andP;  The markup identifies the structure ofthe data, not its content.andP;  In many cases, structural markup parallels thephysical appearance of a document.andP;  For example, in a parts catalog, elementsmay be identified according to the level of heading.andP;  In a journal article,elements are identified as title, section, subsection, heads (first, secondand third level) and so forth.andM;3.andP;  Content markup.andP;  Here, too, the DTD and the data are in SGML, but in thiscase the markup identifies the content of the data.andP;  Using the parts catalogexample, elements would be identified by name--part number, part name,classification code, etc.--rather than by their appearance.andP;  This type ofmarkup is the most difficult to create, but where applicable (especially intables, catalogs and databases) it offers the most potential for electronicprocessing, because the user can query the database based on its content.andO;This aspect is explored below under &quot;Tables.&quot;andM;A fourth use of SGML is as a metalanguage for creating languages, such as theOffice Document Language (ODL), the Hypermedia Time-based StructuringLanguage (HyTime) and the standard page description language (SPDL).andP;  Theseare examples of using SGML to create a language that does not require a DTD.andO;Every DTD may also be considered a language, just as code-driven compositionsystems have a language; typesetters have a language; and even SYSIWYGprograms have a language, such as Microsoft's RTF.andP;  The metalanguage aspectof SGML is explored further in the article on Ohio State's Chameleon projectthat follows in this issue.andM;Practical view.andP;  Another, more practical, way to view the use of SGML is fromthe point of view of the problems to which it is applied.andP;  It is well knownthat SGML can be used effectively to describe manuals and other books.andP;  Inaddition to the military, the commercial airline and telecommunicationsindustries are developing DTDs for catalogs and manuals in their respectivebusinesses.andM;The SGML '90 conference illustrated several other, lesser-known uses of SGML,and it explored some of the more difficult problems, such as tables, that arecommon across many applications.andP;  The next section discusses some of thoseefforts.andM;Tables: Structural vs.andP;  content taggingandM;Critics of SGML often cite tabular information as an area where the standardbreaks down.andP;  The common complaint is that it requires too much coding fortoo little benefit.andP;  Yet closer examination reveals that the issue is notthat clear-cut.andP;  There are different types of tables and different types ofmarkup.andP;  Depending on the type of table and type of markup applied, there maybe little benefit to using SGML, or the benefit may be substantial.andM;Tables may be loosely grouped into two types: typographic ones and databasereports.andP;  Database reports extract the records of selected fields intotabular form.andP;  The objective is usually to capture the information soughtfrom the query; physical appearance is required but is not something withwhich to fuss.andP;  Typographic tables may or may not have come from a database,but they are characterized by their appearance, which is aesthetically morepleasing than those generated by database report-generators and, as a result,often more complex, with straddle heads and entries, special alignments andjustification within fields.andM;There are also two general approaches to tabular markup: structural andcontent.andP;  The structural approach creates object classes that identifyelements according to their relative position within the table--for example,column heads and subheads, row heads and cells (or paragraphs).andP;  In contrast,the content approach creates object classes that are more like databasefields: they identify an element according to its subject matter.andP;  Forexample, in a table comparing the price of gasoline in different countries,one object class is country, another is the price.andM;Most current DTDs for tables take a structural approach, which is often lessefficient than the composition language markup used to format the table forpublication.andP;  Straddle elements in the middle of tables and other knottyproblems tend to complicate markup.andP;  The DTD, which must accommodate the mostcomplex table in the document, may be large or complex and thereforedifficult to read.andP;  And the benefits of such markup are limited tointerchange--no advancements in automatic processing are gained, and some maybe lost by not making use of a composition language designed for composingtabular matter.andM;At SGML '90, a strong case was made for content-based markup of tables.andP;  DaleWaldt, editor of the andless;TAGandgt; newsletter, compared the two approaches.andP;  Hisposition is well stated in a recent article in andless;TAGandgt;, which is excerpted inthe box on pages 7-8.andP;  As Waldt points out, if you ever want to show thetabular data in another form, the content (or intellectual) definition isnecessary.andP;  To use our own gasoline example, encoding the information ascolumns and rows would make it impossible to show the information as a bargraph.andM;Waldt's analysis also raises the question of why tabular data ought to beencoded within the document at all.andP;  It might be more practical to storefield-delimited data in a standard relational database.andP;  The document wouldcontain only the query to the database asking for the desired fields andrecords.andP;  A style sheet attached to the extracted table would do theformatting.andM;This approach greatly facilitates your query, search and retrievalcapabilities, but it adds a whole new dimension to author responsibility!andP;  Ifthe author has access to the database, then compound document editors thatallowed links between different programs might present an interface thatauthors could use to link queries to a document.andP;  Products such as Xerox'sDocuTeam (discussed in our November 12 issue), which simplify the task ofquerying a database, point in this direction.andP;  But if the author does nothave access to the database (as in the case of articles submitted to ajournal), obviously someone else will be responsible for getting the tableinto the database one way or another.andM;Tables and SGMLandM;This article originally appeared in issue 16 of the andless;TAGandgt; newsletter.andP;  DaleWaldt is cofounder and editor of andless;TAGandgt; and a business analyst with ThomsonProfessional Publishing Co., a large legal publisher.andM;I would like to open a discussion for readers who are interested in tables.andO;Many people have found it difficult to decide how to handle tabular data whenwriting a Document Type Definition (DTD).andP;  The relationship of elements ofinformation to other elements that is based on their proximity or location inrelation to each other must be expressed somehow.andP;  A &quot;3&quot; standing all aloneon a line does not give you very much information.andP;  But the fact that thenumber &quot;3&quot; occurs in a column with a heading of &quot;Big Things&quot; tells you thatthere are 3 Big Things.andP;  This intellectual relationship is more importantthan the physical representation--that is unless you have to compose thetable for typesetting.andM;I found at least current approaches to defining tables in SGML terms:andM;1.andP;  retaining proprietary codingandM;2.andP;  creating a generic table DTD, andandM;3.andP;  defining content-oriented tables.andM;As I explain these three approaches, you will see that I am not able to offersolutions, only more questions.andP;  I don't even discuss those tables which arephotographically reproduced and pasted into space left for them in composedpages.andP;  Hopefully, this discussion will stimulate suggestions from youreaders.andM;Proprietary CodingandM;This approach involves defining as much of your data as possible now givencurrent software functionality and compatibility and waiting for the answersto the really rough issues to become apparent.andP;  For example, you might chooseto define your entire document using a rich content-oriented markup foreverything except tables and other presentation elements (which may behandles as tables right now but could have more content-oriented names suchas &quot;forms&quot; or &quot;ballots&quot;).andP;  For the tabular matter you can define the elementtable as follows:andM;andless;!ELEMENT table - - CDATAandgt;andM;Elements defined as containing CDATA, or character data, can contain anyproprietary notation you support.andP;  When a parser encounters a CDATA elementit will only look for and process the end tag for that element (or a null endtag andless;/andgt;).andP;  Obviously you will need to require start and end tags.andP;  If youplan on interchanging your document you should also provide NOTATIONdeclarations for each form of proprietary coding.andM;Of course, your data will still be dependent on a proprietary notation andhte difficulties associated with it such as incompatibility with othersystems, possible limitations of reuse or byproducting, and a lack ofverifiability.andP;  You may develop utilities that could alleviate thesedifficulties somewhat, but it seems to me that it is inevitable that you willend up having to upgrad your tabular data to yet another proprietary notationsomeday.andP;  Therefore, this is only an interim solution.andM;You could also handle your tables as subdocuments (SUBDOCs) and store thetables as separate files to be pulled into the appropriate place in thedocument on the fly.andP;  This requires more organization and technology butallows tables to be created and maintained in different software than therest of the document.andP;  A limitation to this approach is that automaticreferencing is not allowed into or out of SUBDOCs.andM;Another problem with the proprietary notation approach is that authors mighthave difficulty using your current coding, especially for more complextables.andP;  Also, how do you design the workflow so that you do not createbottlenecks in the production of documents?andP;  If your authors and editors arenot coding the tables then a separate group of coders must perform this workand have access to the data during the production cycle.andP;  Having this extrastep in the process could force the production flow into a more linear orsequential form where work progresses from one depatment to another until itcomes out the end in the form of a book.andP;  The production line works well inmanufacturing things like cars and even books, but we should examine whetherour information is really captured this way and whether or not we couldbenefit from separating the capture of information from the process ofdisseminating it.andM;For instance, if I use bits and pieces of my data captured during therequirements, acquisition, an development phases of bringing a product tomarket, I might be able to extract information from one or more networkeddata bases to assemble a table of parts, rather than have it keyed in (again)later in a proprietary format when I get around to writing a repair manual.andM;Generic Table DefinitionandM;I have seen many DTDs with table elements in them, such as different levelsof column heads, stubs, and cells.andP;  I have found that when designing an SGMLtable definition which is based heavily on the presentational appearance ofthe table that what we are really doing is emulating a composition system andcreating a generic typesetting language.andP;  Therefore we would then have to tryto emulate all of the associated sophistication of the composition system.andO;For instance, we might choose to use atributes to denote inforamtion about acell such as that it is decimal aligned, or that it is flush right.andM;Even if we are really good at designing this generic tabular language, wewill always run into anomalies that do not fit our model.andP;  We could defineseveral boilerplate models but we still will encounter exceptions.andP;  We createcoding schemes that are too complex for our authors and have to provide acoding support function just as we did using the proprietary codes.andP;  In theend, we end up with two classes of tables, ones we can do in our genericlanguage and ones we cannot do.andP;  So we are back to allowing CDATA tables forthe really tough ones.andP;  Or we will need a separate coding group to handle andmaintain these complex tables.andP;  I wonder if we ever really accomplishedanything by spending all the money to develop and convert our data to thegeneric tabular coding in the first place.andM;Coding-Oriented TablesandM;Some people argue, myself included, that a table is just an abbreviated orsuccinct representation of data that could be expressed in non-tabular form.andO;In other words, if I take a st of information records, categorize them,organize then under headings based on their similarities, lop off theredundant information, maybe throw in a few bold rules to improvereadability, I can call these records a table.andP;  This is waht data processingdoes when they extract data, sort it, summarize it, and present it neatly incolumns and rows.andP;  (Writers and editors have been doing this for hundreds ofyears without the aid of a computer but they usually get less consistentresults.)andM;You could attempt to capture your data in such a way that it retains therelational information, or the stuff that we summarize when we insert it intoa table.andP;  You would in effect create data bases of information that youextract each table from.andP;  For instance, the following table:andM;1.andP;  Average Daily Pet Food Expenditures ($)andM;could be expressed as the following paragraph:andM;&quot;Regarding the amount of dollars spent on food for pets it was found that inthe class of Furry Animals an average of $2.10 was spent on dogs and $1.20 oncats in the state of New York, and that in California the averages were $2.60for dogs and $1.10 for cats, while all birds required only an average of $.40in New York and $.50 in California.&quot;andM;You could retain the relation information with the cells:andM;andless;tableandgt; andless;cellandgt;andless;classandgt;Furry Animals andless;speciesandgt;Dogandless;stateandgt;NYandless;costandgt;2.1andless;cell/andgt;andless;cellandgt;andless;classandgt;Furry Animals andless;speciesandgt;Dogandless;stateandgt;CAandless;costandgt;2.6andless;/cellandgt;andless;cellandgt;andless;classandgt;Furry Animals andless;speciesandgt;Dogandless;stateandgt;NYandless;costandgt;1.2andless;/cellandgt;andless;cellandgt;andless;classandgt;Furry Animals andless;speciesandgt;Catandless;stateandgt;CAandless;costandgt;1.1andless;/cellandgt;andless;cellandgt;andless;classandgt;Birds andless;stateandgt;NYandless;costandgt;.4andless;/cellandgt; andless;cellandgt;andless;classandgt;birdsandless;stateandgt;CAandless;costandgt;.5andless;/cellandgt; andless;/tableandgt;andM;These cells might easily be records extracted from a data base orspreadsheet.andP;  Unfortunately, we would probably need a different data basedefinition for each table unless we had total control of the contents of ourtables.andP;  We could make classes of tables that were specific to particularuses, but this is still limiting our flexibility.andP;  We would also be dependenton software to preprocess these tables into a form that our compositionsystem can compose, and we might have to develop it from scratch.andM;This simple example is only the tip of the iceberg in terms of complexity ofmost tables.andP;  Marking up data in this form would be very confusing to anauthor and we would require powerful software to edit and compose this table.andO;I think there could be a cultural learning curve to overcome as well in thatwe don't think of writing in this way and would have to develop new methodsfor capturing and manipulating data in general.andM;We faced with questions like is the table the thing we are after or is itreally just one snapshot, or instance, of that thing, that information?andP;  Ifthe same information is broken into two subsets are they different things?andO;Or, it I flip the matrix or summarize the table differently (see below), isit a new table or a different view of hte same information?andM;2.andP;  Average Daily Pet Food Expenditures ($)andM;Although I do not attempt to answer these questions here, I do encourage yourparticipation in what I hope will become an ongoing discussion.andM;Applying the concept outside of tables.andP;  Waldt's concept of intellectual datadefinition may be applied to other applications.andP;  For example, the AirlineTransport Association is looking at applying SGML to an illustrated partscatalog, as well as to the maintenance manuals that aircraft manufacturerssupply to airlines.andP;  In these applications, information is tagged accordingto its meaning (such as a part name or number), which facilitates storing itas a database.andP;  Manuals or catalogs may be printed from the database, but theinformation would also be available in many other ways because of the way itwas encoded.andP;  An SGML application for patient medical records is anotherexample of data that might be letter encoded for its meaning, rather than itsappearance.andM;Math and chemistryandM;Generic markup of mathematical formulae is a good example of how thestructural approach can in some instances convey content meaning.andP;  The DTDfor math developed by the AAP takes a structural approach whose syntaxresembles that of eqn, the Unix math preprocessor for the troff formatter.andO;Anders Berglund, the ISO Central Secretariar, provided an example:andM;[Mathematical Expression Omitted]andM;may be expressed as:andM;andless;sumandgt;andless;fromandgt;i=landless;toandgt;10andless;ofandgt;aandless;sub/i/andgt;andless;/sumandgt;andM;In this example, we are representing the structure of the summation, but inso doing we are also conveying the meaning of the equation.andM;In addition to declaring how structures are represented a math DTD mustdefine how to represent special characters that fall outside of the defaultcharacter set.andP;  In SGML, such definitions are made in entity references,which map a shorthand notation to its equivalent character code or string.andM;Annex D of the SGML standard contains entity sets that include definitionsfor common math symbols.andP;  Berglund described his effort to develop atechnical report that will dramatically expand these entity sets to includemore general and publishing symbols, mathematics and science symbols andexpressions, ideograms and special characters in both Latin-based andnon-Latin-based alphabets.andP;  The math section is undergoing final review; ithas nearly 1,500 symbols, several hundred more than what most technicalpublishers would ever use.andP;  Berglund said he expects it to be published earlyin the second quarter of 1991.andM;Berglund also described an SGML, chemistry application that is currently inembryonic form.andP;  His examples showed a conten-based approach that wouldnonetheless allow the structure of the chemistry to be derived.andP;  For example,a molecule of water, commonly represented as [H.sub.2O', might be representedas: andless;aandgt;Handless;nandgt;2andless;aandgt;OandM;Such a description (in which hydrogen and oxygen are identified as atoms bythe tag andless;aandgt; and the number of hydrogen atoms in the molecule is indicated bythe tag andless;nandgt;) is primarily based on the content of the molecule.andP;  How thatstructure is represented on paper is left up to a formatter that can handlechemistry.andM;Berglund noted that many chemical problems might be better describedgraphically, rather then in SGML.andP;  But doing so means that you give up thepossibility of search and retrieval of those structures.andP;  Both the AmericanChemical Society and Science Typographers have developed schemes for encodingcomplex chemical structures.andM;Berglund welcomed participation in both the math and chemistry efforts.andP;  Hecan be reached at 1 rue de Varembe, Geneva, Switzerland; phone {41} 22 734 1026.andM;SGML vs.andP;  TeX.andP;  At the time that the AAP DTD for math was developed, the useof TeX for setting math was not yet well standardized, and many authors andpublishers inserted procedural commands to tweak the spacing inside equationsand formulas.andP;  The frequent use of nonstructural expressions in the TeXcommunity led the AAP committee to adopt a different notation that did notallow for such &quot;tweaks.&quot;andM;Since that time, two dialects of TeX, LaTeX (*) and RevTeX, have become wellstandardized and are used by a majority of authors that use TeX for keyingmath into manuscripts.andP;  LaTeX, developed at UCLA, provides a shell ofstandard formats around TeX that simplify the use of the language.andP;  As longas you accept the basic La TeX formats (and most users do), you can use thefull power of TeX, including math formatting, with a minimum of hassle.andO;LaTeX users now far outnumber plain TeX users on many compuses.andM;RevTeX was developed by the American Institute of Physics for use by authorssubmitting articles to its Physical Reviews journal series.andP;  Its coding isnearly identical to that of LaTeX.andP;  The American Mathematics Society is alsomoving toward a LaTeX-like scheme for article submissions.andM;Manuscripts written in LaTeX or RevTeX are usually free of proceduralinformation.andP;  Thus, it may be time to consider an SGML DTD for math based onLaTeX or RevTeX.andM;The advantage to a TeX-based DTD is that TeX is well known and often used byauthors who submit technical papers to journals for publication.andP;  If thepublisher is interested in retaining the article in electronic for, thenusing an encoding scheme that is not much different from that of the sourcefile alleviates the translation burden.andM;The drawback to a TeX-based approach, notes Berglund, is that in TeX thestructure of an element may not be apparent until you are in the middle ofthe element.andP;  In SGML, elements are always identified (or their identityimplied if minimization is used) at the start of the element.andP;  Thus, currentSGML parsers would probably have difficulty properly digesting TeX files.andO;The publisher saves time and effort in the conversion process but must investin finding (or funding the development of) new parsing technology.andM;The alternative is to convert the TeX file into an SGML encoding.andP;  Thisplaces a translation burden on the publisher--there are no commerciallyavailable TeX-to-eqn or -SGML converters (of which we're aware), which meansthe publisher must invest in finding (or funding) translation software.andP;  Onthe other hand, if such a translator were written, the publisher would be ina position to utilize off-the-shelf SGML tools for manipulating data afterconversion, and eventually there will be many more commercial SGMLtranslation tools than there will be ones for TeX.andM;The differences in the way TeX, its derivatives, eqn and SGML handle math areby no means insurmountable.andP;  All take a structural approach to describingformulas and equations; they just differ in the way they describe certainpossibilities.andP;  Because of the volume of work produced with TeX and theburgeoning desire of publisher to retain manuscripts in electronic form, wehope there will be efforts to reconcile these approaches in the near future.andM;Financial data: Electronic SEC filingsandM;Firms that offer stock to the public through American stock exchanges have tofile annual (and in many cases quarterly) statements with the U.S.andO;Securities and Exchange Commission.andP;  Firms that want to go public or acquireother firms also have to file with the SEC.andP;  All of these transactions arenow handled on paper, and the amount of paper can be substantial.andP;  Forexample, the SEC gets annual filings from 15,000 public firms.andO;Three-quarters of these firms use the calendar year as their accounting year,all facing the same March deadline for their annual statements.andP;  Eachstatement can be 40 pages on more.andP;  The result is an annual deluge of paperin March, and the Cimmission has a hard time dealing with it in a timelyfashion.andM;Edgar.andP;  The EDGAR system, which has been in the works for several years, isdesigned to let all these SEC filings be delivered electronically.andP;  They canbe sent on floppy disk or tape, but most are expected to be sent inelectronically.andP;  EDGAR also allows for the rapid dissemination of the publicportion of the data, again electronically.andP;  The system, which is beingdeveloped by a contractor, BDM Corp., is nearing completion.andM;EDGAR filings must be submitted in SGML-tagged form.andP;  The DTD describing thestructure of th submission is very simple compared to most DTDs.andM;A submission consists of several documents.andP;  Each document has a header, andso does the submission as a whole.andP;  These headers, and the fields theycontain, are defined in the DTD.andP;  The internal structure of each document isnearly codefree, at least in the initial version of EDGAR.andP;  (Later, tags todelimit specific sections, such as &quot;Management's Discussion of Risk,&quot; will beintroduced.)andM;Submissions will be fed into a &quot;receipt and acceptance subsystem,&quot; which willparse the documents and convert them into a storage format in the SECinternal database.andP;  From there, SEC analysts can retrieve them and work withthem.andP;  The database is also the source for a public online database to be runby Mead and for magnetic tapes that are sent out on a subscription basis.andM;To help with submission, filers will get a free copy of a DOS softwarepackage called &quot;EDGAR Link.&quot;andP;  It provides a menu facility for inserting thecorrect header tags, an autodial capability for connecting to the SEC, and anerror-correcting protocol to compensate for communications problems.andM;In case a document fails to parse correctly, messages will automatically bereturned to the filer via an electronic bulletin board.andP;  A &quot;correctioneditor&quot; in the EDGAR Link package can be used to correct the problem andresubmit only the changes.andM;EDGAR is a relatively isolated application, one in which SGML was notmandated by the need to exchange data with other applications.andP;  But EDGARderives other benefits from SGML: the scheme provides a conveniet way to makesure that all the necessary fields of information are provided along with thesubmissions, and SGML makes it possible to use standard parsing software andother AGML-related aids.andM;Creating document databasesandM;Some publishers are now examining the role of database management software inconjunction with a archive of documetns encoded in SGML.andP;  Journal publishers,in particular, deal with a high volume of structured material that is oftenused as a reference for a long time; the nature of their material lendsitself quite well to SGML, yet a database might be useful for trackingclassification references and aiding in selective queries of the documentdatabase.andP;  At SGML '90, one such publisher offered a case study of itsefforts in this area.andM;Publishing from a database at ACM.andP;  The Association for Computing Machinery(ACM) is a major publisher of journals in the computer science field.andP;  Theorganization publishes 30,000 pages a year, mostly using traditionalproduction techniques.andP;  But innovative approaches are now being explored, asBernard Rous and Carol Meyer explained at SGML '90.andP;  In particular, thecombination of a database package and an SGML editing package is paying bigdividends.andM;The ACM publishing efforts has objectives that go beyond the provision ofconventional journals on paper.andP;  These goals, which are not supported by thetraditional process, include:andM;* building electronic archives of published materialandM;* supporting an article reprint businessandM;* providing electronic formats, including CD-ROM, diskette and anE-mail-based &quot;alert service&quot;andM;* supporting administrative functions, including the tracking of work inprogress.andP;  Many administrative functions relate to the refereeing process:collecting the comments of referees, keeping track of potential referees'fields of expertise, automatic notification of referees who have notresponded on time and so on.andM;The presentation at SGML '90 centered on two publications: Computing Reviewsand the ACM Annual Index and Bibliography.andP;  Both publications depend on anumerical scheme that the ACM developed for classifying areas of research incomputer science.andP;  Computing Reviews is composed of reviews (abstracts) ofcomputer books and articles, and the reviews appear in the order specified bythe ACM classification numbering scheme.andP;  The tree-like hierarchical schemehas more than 1,500 nodes so far.andM;This environment is a natural for a database, and that is what ACM is using.andO;A relational database (built with Sybase) contains the text of the reviews aswell as all the bibliographic and management information (authors' names,publication, reviewer's name, etc.).andP;  An extract from this data can beautomatically converted into SGML form at any time for publication.andO;ArborText's The Publisher is the Publisher is the software vehicle for thepublishing process; it is also the environment in which the text of reviewscan be entered into the system or edited.andM;Information about the review (other than the text itsef) is entered directlyinto the Sybase database, not the SGML file.andP;  Working in two environments isnot a serious inconvenience, since Sybase and The Publisher can run inadjacent windows on the Sun workstations used at ACM.andP;  The system, includingthe linkages between The Publisher and Sybase, was provided by ArborText.andM;The text is output according to a DTD that uses a readily understood set oftags.andP;  For example, the andless;authinfoandgt; tag begins the author-information section,which can contain any number of andless;authorandgt; entries.andP;  They, in turn, holdandless;authlastandgt; and andless;authfirstandgt; entries for the authors' last and first names.andO;There is a corresponding termination tag for each beginning tag (andless;/authinfoandgt;,andless;/authorandgt;, andless;/authlastandgt; and andless;/authfistandgt;).andM;ArborText's John Gourley, who also spoke at SGML '90, described theadvantages of this database/SGML combination.andP;  The scheme provides for alarge database of many publications.andP;  Queries, which can invoke almost anyset of criteria, are flexible and fast.andP;  Different database structures can beused to satisfy different publishing problems, and management data can beheld along with the publishable material.andP;  These are all database advantagesthat normal text files don't have.andM;Being able to convert the same data into SGML form confers additionaladvantages.andP;  The hierarchical numbering scheme, implicit in the database,becomes explicit in the SGML text file.andP;  Editing is easy (much easier formultiline texts then in the database environment).andP;  The document structure isenforced by the ArborText software, and this structure facilitates subsequentformatting steps.andP;  The SGML structure is also a good, neutral basis fordistributing the text in various electronic forms.andM;Hypertext and multimediaandM;The SGML standard already supports multimedia documents.andP;  The standard allowsdata of any content type to be included as part of a document by referencingit as an external data object.andP;  In the current CALS DTDs for militarymanuals, for example, scanned images and computer graphics are part of thedocument, though they reside in separate files on the disk.andP;  Because SGML iscontent-independent, any data type may be considered part of a document aslong as it is declared in the DTD.andM;Not only does SGML provide the mechanism for including data of virtually anycontent type, it also allows nonhierarchical links to be associated with datastored in a hierarchical structure.andP;  Although some proponents of hypertextcontent that no hierarchical view of data is needed, it seems more reasonableto us to develop a model that supports both hierarchical and nonhierarchicalviews of the same database.andP;  In the long run, SGML may have to be updated tosupport hypertext databases fully.andP;  But the present standard is already beingused for that purpose by some organizations, largely because no reasonablealternative standard exists.andM;A very interesting application of SGML currently under development is HyTime.andO;This language uses the reference syntax provided by the SGML standard tocreate a notation for describing time-based events, such as operas, shuttlelaunches or television broadcasts.andM;Until now, there has been no way to represent digitally the relatively ofinstructions in music scores (decrease volume, increase tempo, etc.) withouttrying the notation to a particular software system or making theinstructions explicit (e.g., set tempo at two beats per second).andM;We plan to explore HyTime and multimedia applications of SGML in more detailin upcoming issues of this Report and our Report on Desktop Publishing.andM;Using SGMLandM;In the previous section, we discussed some potential benefits of applyingSGML to various applications.andP;  Yet many potential users of SGML are put offby the standard's inaccessibility and the barriers to its use.andP;  Untilrecently, it has been hard to see a good demo of what SGML can do for you.andO;But it is even harder to get a feel for how easy or difficult it might be toapply SGML to your own publishing needs.andP;  Fortunately, help in on the way.andM;The outline of this section follows in general terms the process of adoptingSGML for your own use: identification of content message and objectives;document analysis; preparation of DTDs; and conversion of existing databases.andO;All of these topics have been examined in greater depth in books and otherpublications.andP;  Our intent here is to offer readers an overview of the stepsinvolved, to summarize relevant software products and to pinpoint sources offurther information.andM;SGML '90 did not have a vendor exhibition, so we do not have a section on ewproduct developments.andP;  However, we did see a videotape from a researchproject at Ohio State University concerning translation and writing DTDs.andP;  Welater investigated this project, resulting in the article that follows thisone (page 17).andM;Identifying your message and objectivesandM;Before you begin to use SGML, it is critical to establish the message of yourcontent and your objectives for the information.andP;  The message, of course, isthe meaning of the information--is it entertainment, news, a maintenanceguide or an instruction manua?andP;  But it also has much to do with theaudience--is it home consumers, physicians, teenager or nuclear physicists?andO;Once you have answered questions such as &quot;what do customers use thisinformation for?&quot; and &quot;How do they use it?&quot;, you are in a much betterposition to ask &quot;What might they want to use it for?&quot; and &quot;How might theywant to use it?&quot;andM;By establishing your objectives first, you lay the groundwork for thedecision on whether or not to use SGML and, if you do, then when and how.andP;  Toa certain extent, the objectives will determine how information is encoded inyour database.andP;  For example, the content of a parts manual might be used fordealer purchases as well as for reference by maintenance people.andP;  Dealerinformation might have to be incorporated into the master database, eventhough it would be omiitted from the development the maintenance personssees.andP;  If you are building a vault of electronic documents, you want to makesure, as much as possible, that your encoding scheme will support all of thedocuments in the vault and all of the purposes to which the documents mightbe applied.andP;  Other encoding schemes might be less work, but they might offerless return in the long run.andM;Confusing barriers with objectives.andP;  The SGML standard is often critized astoo difficult and cumbersome for laypeople to understand and utilize.andP;  Weconcur that this standard is not east to grasp ir make use of.andP;  As with anymeta-language, proper use of it requires knowledge of both the application athand and programming tachniques.andM;There is almost always a tradeoff in computer science between complexity andcapability--as a language or product becomes more powerful, it also gets morecomplex and harder for newcomers to learn and use.andP;  In this continuum, SGMLfavors capability over simplicity.andP;  Thus, it is rightly critized as complex.andO;But the answer, we belive,  is not stripping away funcionality, but making itmore accessible.andM;For example, critics of SGML frequently point to their WYSIWYG documentprocessors and say this is the interface they want.andP;  As we've decribed inthis article, SGML does not preclude WYSIWYG interfaces.andP;  The issue is theunderlying data format.andP;  If your underlying data format is designed for pagepresentation, then how do you reprocess the information for alternativedisplays?andM;A case in point in PostScript.andP;  Some users feel PostScript, which is nearlyuniversally supported by today's publishing programs, should be sufficient asa document modeling language.andP;  Why, they argue, should I bother with SGMLwhen I have PostScript?andM;PostScript is fine if you want a document database of page image that may berendered on a wide variety of devices, both screen and hard copy.andP;  It mayalso evolve into a standrard file format for some graphics-based applications{of which Adobe Illustrators is the first).andP;  But PostScript is a page imagingmodel, not a content data model.andP;  It does not lend itself to databaseapplications, and it doesn not support th ekind ot concur--based markup wediscussed under tables.andP;  Saving documents in PostScript also complicates anylater decision to deliver documents in alternative formats, uch as HyperCard.andM;The long-term payback.andP;  The key criterion for whether or not to use SGML iswhat you intend to do with the information.andP;  If you want to save pages orgraphics subdocuments (such as ads), then PostScript makes sense.andP;  If youwant to build a database, a library of electronic documents that is portableover time, or just a set of information that may be produced in a variety offorms (including pages)), then you need something else.andM;If SGML seems hard or costly, consider the objectives and the alternatives toreaching them.andP;  When you consider the cost of converting a set of documentsinto a new form every time you want to deliver a new product or replace anaging composition system, or figure the cost in competitive advantage of notbeing ablt to create a new product because of the format of your data, thenSGML's initial entry cost starts looking pretty reasonable.andM;(Bear in mind, too, that SGML documents may still be formatted andrepresented in PostScript.andP;  The two standards are complementary in that SGMLwas designed for representing the document in a manipulate form andPostScript was designed for representing the document in a renderable form.andO;Publishers going ahead with SGML will mostly likely still use PostScriptoutput devices.)andM;Because of the initial cost, SGML is often impractical for page-basedapplications, although some book publishers are using it for that purpose.andO;(Margaret Atwood's Cat's Eye was encoded in SGML, which facilitatedpublishing it in several formats very quickly.)andP;  Where SGML usually pays offis in new capability (such as online search and retrieval) or down the roadwhen your data is in a format that is sufficiently flexible to support newmedia or products, whatever they might be.andP;  It is then that you see thereturn on the initial investment.andM;Document analysisandM;The hardest part of making use of SGML is analyzing the content of your setof documents.andP;  One reason this part is so hard is that all of the work isdone with your head--there aren't software programs that clever yet.andM;Given the objectives, the analyst must establish how the information shouldbe encoded--the set of tags, their attributes and the overall structure ofthe documents.andP;  The analyst must be an expert in the content being discussedand must be able to envision how information will be used and to figure outhow the information should be identified.andP;  As documents become lone orcomplex, the analyst's task can also become quite complex.andM;Although there are thousands of &quot;system analysts&quot; who examine the structureof data, software and hardware in companies around the globe, there are veryfew people who currently call themselves &quot;document analysts.&quot;andP;  The field isnew, and few organizations offer training in it.andP;  (The Graphic CommunicationsAssociation covers analysis in its week-long SGML course, as do other vendorsof SGML-related products.)andP;  Thus, finding a good independent analyst may beas hard as learning to do it yourself.andP;  By doing it in-house, you will be inmuch better shape for the next step, writing the DTD.andM;Writing the DTDsandM;Once the document analysis is complete, it must be transferred to SGML, whichmeans describing the document class in a document type definition.andP;  In SGL,it is the document type declaration (also called document type definitions,or DTDs) that form the heart of your application.andP;  The DTD explains thestructure of a given class of documents and specifies the character sets,syntax, optional features of SGML, entity references and so forth that areused in this class of documents.andP;  Because SGML is not an architecture thatkays out all of the ground rules, it relies on the DTD to inform the parserof the ground rules for the document being read.andM;Power and weakness.andP;  The DTD is both a strength and a weakness of the SGMLstandard.andP;  Its strength is that it allows a variety of documents to beinterchanged using a single parser.andP;  It also ensures that newapplications--with new content models, new syntaxes, new character sets,etc.--can be interpreted by old SGML parsers.andP;  Assumming that you have a fullSGML parser, you don't have to ensure that all application software packageswill have the same architecture.andP;  In this way, the standard ensures thatit--and your information--will not be out of date for years to come.andM;The downside is that full SGML parsers are difficult to write.andP;  In fact, somepeople argue that there are as few as two legitimate ones in the world; atmost, there are several dozen.andP;  Software developers, loath to tackle writingtheir own or to license someone else's for what is still a small market, haveopted instead to support compound document architectures (e.g., Digital's CDAor the ISO ODA) that do not require as sophisticated parsing technology.andP;  Orthe vendor punts on the standard issue altogether and just writes its ownproprietary data format or follows the grab-bag of formats found in the Macand PC environments.andP;  The result is that few commercial products are able tosupport fully any type of SGML application.andP;  Most support s subset of SGML'scapabilities and only a fixed set of DTDs.andM;Even if you have a good parser, developing a new DTD requires writing aprogramming language, and there is no getting around the fact that this is noeasy.andP;  The best approach is to start with a public DTD that has been testedand proven valid, and then to modify it as necessary to meet yourrequirements.andP;  But even making use of a public DTD or altering a public DTDto meet specific needs may pose difficulties to many users.andM;Fortunately, pioneering users are beginning to share thier experience tooffer those who follow them advice on the pitfalls to avoid.andM;Overcoming the difficulties.andP;  The task of writing down the document analysisin a form acceptable to SGML (a DTD) requires a specialist.andP;  Just as desktopcolor experts are few, so are DTD writers.andP;  Like their desktop colorcounterparts, SGML users are educating themselves in order to make use of thenew technology.andP;  But it takes time and patience.andP;  The DTD for a textbook migtbe four pages long!andM;A few resources on SGML that may be helpful in this area are presented onpage 16.andP;  Conferences such as SGML '90 are also an excellent way for users toshare experiences.andM;More is needed than just advice, though.andP;  There was a clear call for morepublic DTDs at the conference--individual users do not want to be burdenedwith having to start from scratch.andP;  Public DTDs are by necessity somewhatgeneric, but the two that are out there (from the AAP and DoD) cover only afraction of the potential applications.andP;  More publicly available DTDs areneeded to help users get running more quickly.andM;Beyond advice and new DTDs, what are most needed are software tools that helpusers more quickly take advantage of the language's power.andP;  Syntax-directed(also called context-sensitive or structured) editors are now readilyavailable for the most common desktop platforms.andP;  these programs typicallywill prompt and/or constrain the writer to stay within the bounds defined bya DTD.andP;  Some editors support arbitrary DTDs; others are limited to a fixedset the vendor has chosen to support (usually the result of not working withnative SGML data and the lack of a full parser).andP;  Examples of such productsare ArborText's The Publisher, Context's editor, Datalogics' WriterStation,Software Exoterica's CheckMark, IBM's text-Writer, Interleaf's TPS,SoftQuad's Author/Editor and Yard's Mark-It.andM;In addition, Exoterica, Sobemap, IBM, Datalogics and SoftQuad offer tools,often sold in conjunction with the editors, for checking DTDs.andP;  What ismissing from these programs is an interface for constructing the DTD.andP;  Theyassume you know how to write the DTD; they compile it, parse it and give youfeedback about how you did (kind of like a CASE toolset for SGML).andM;The research in grammar development in the article that follows this one isan example of the type of softare that we believe will help users cope withwriting DTDs.andP;  At this time, it works with only a subset of SGML features,but in its factor, it considerably lessens the burden of writingsyntactically correct files.andM;The conversion headacheandM;Few organization have data in SGML form or even in a form that is easilytranslated to SGML.andP;  Thus, even after a DTD is established, there is often aconversion process required to move existing documents into the new form.andO;Some people term this process &quot;retrofitting.&quot; (*1)andM;There are few products on the market that are designed for this conversionprocess.andP;  Avalanche Development's FastTag and Zandar's TagWrite are both&quot;autotagging&quot; programs that generate ASCII files with generic markup from thesource files of word processors such as WordPerfect of Microsoft Word or fromthe ASCII output of other products.andP;  Thet are designed to map layout offormatting instructions to generic identifiers.andM;FastTag reads visual clues of the output file, which means that it may beused for electronic files or, in conjunction with OCR, to convert paper-baseddocuments.andP;  TagWrite, on the other hand, interprets the formatting commandsof the source program; it may also be used as a program for writingstring-for-string translations.andP;  Neither program containes any built-in SGMLtechnology, such as parser, and in both cases the success of the automatictagging depends to agreat extent on the document's consistency.andP;  (Variationson the standard document may confuse the program or may not be converted orflagged properly.)andM;Software Exoterica's XGML Translator is a powerful fourt-generation languagedesigned for writing translation programs.andP;  Unlike other such programs,Exoterica's includes a full SGML parser.andP;  Having a parser built into thetranslator provides greater functionality: because the program knows thestructure of documents, it is possible to do more than just replace stringswith other strings.andM;A built-in parser also greatly enhances the user's ability to validatedocuments that have been converted, and Exoterica offers a $295 companionproduct.andP;  The XGML Validator, for doing just that.andM;US Lynx and Shaffstall, the two leading firms in media and data conversion,have also introduced tools for converting to and from SGML.andP;  Shaffstall'stool is a much more robust translator than Zandar's, in that Shaffstallsupports hundreds more formatters, but its &quot;SGML&quot; support is little more thanbeing able to write an ASCII file with tags delimited.andP;  US Lynx has added anSGML parser through an OEM agreement with Datalogics.andP;  As a result, its SGMLsupport is much more sophisticated, a point borne out by the experiences ofat least one user who spoke at the conference.andP;  (US Lynx provided theconversion component of the Xerox 50-S contract, a multi-million-dollar AirForce project to get old documents into SGML.)andM;Reference Materials on SGMLandM;Martin Bryan's SGML: An Author's Guide to the Standard Generalized MarkupLanguage (1988, Addison Wesley) is the closest thing we've found to abeginner's introduction to SGML.andP;  It does not presume any prior experiencewith SGML, or even with computerized publishing equipment, though it doesexpect the reader to have some experience with the process of writing reportsor books.andM;The book begins by explaining how manuscripst have been coded in the past forelectronic hadling and how SGML differs from traditinal typesetting markup.andO;It then shows how one might analyze the structure of documents in preparationfor looking at the actual declaration and definition of the structure in theSGML document.andP;  There are then three chapters on the heart of SGML--entities,elements and attributes--followed by chapters on specialized features, suchas minimization, declarations, multilingual documents and altering thereference syntax provided by the standard.andP;  The appendices declared entitiesfor special characters and a sample document type definition nsuitable forpublishing many textbooks.andM;Bryan's book reminded us of Knuth's text on TeX--it does not presume anyprior knoloedge of the subject, but it provides a great deal of detail forthose who master the concepts.andP;  (Bryan unfortunately did not make use ofKnuth's clever &quot; Dangerous curve&quot; signs, which warm the reader of difficultmaterial in The TEXbook.)andP;  The style, while not engaging, is thankfullystraightforward: Bryan gets quickly to the point and is generous withillustrative examples.andP;  This text is recommended for anyone looking for anintroduction to the standard, and even for those who have had an introductionbut wanti a plain-English reference guide.andM;Practical SGML by Eric van Herwijnen (1990, Kluwer Academic Publishers) is auseful follow-on to Bryan's book.andP;  It, too, provides background on theorigins and intent of SGML and explanation of the standard's features.andP;  But aprimary focus throughout the book is how a publisher or programmer uses SGML,based in part on van Herwijnen's experiences at CERN in Switzerland.andO;Although authors might benefit from the initial chaters, the book is aimedmore at document analysts, database managers and software engineers(programmers) trying to figure out what can be done with SGML, why and how.andM;In his &quot;Getting Started&quot; chapters, van Herwijnen explains the parts of a DTDand suggests a method (and offers tips) for adapting or creating DTDs foryour own application.andP;  although we found his style less straightforward thanBryan's, van Herwijnen does have his own insight, and his examples providedadditional illustrations of confusing points.andP;  whereas Bryan supplies a largeDTD suitable for college texts, van Herwijnen examines in his opening sectiona much shorter on that may be used for a yellow pages directory and then, inthe advanced chapters and appendices, provides DTDs for letters, memos andbibliographies and the one used for his book (which was written and producedusing SGML).andM;It is in these later chapters that Practical SGML is most successful.andP;  Theauthor's hands-on approach to creating a variety of SGML documents anddatabases and translating and formating with contemporary software productsserves as a case study from which others may benefit.andP;  In addition to tellinghow he produced hos own book, van Herwijnen also discusses his experiences ingoing from SGML into TeX and examines the potential use of SGML in ElectronicData Interchange (EDI).andM;The User's Guide to ISO 8879 Joan Smith And Robert Stutely (1988, EllisHorwood) is the SGML techie's companion guide, an aid to programmers writingparsers and to document analysts using SGML.andP;  The standard itself can be veryfrustrating as a reference because so many definitions are nested.andP;  Forexaple, you look up a definition and all it tells you is that this variable'sdefinition depends on three other variables, with no clue as to where to findthe difinitions of other variables.andP;  This book offers help for this problem:it provides an index and an alphabetical list of variables with theirdefinitions.andM;The following SGNL Handbook by Charles Goldfarb (1990, University of OxfordPress), the editor of the SGML standard, promises to be the most definitivetexton the standard to date.andP;  We have not yet seen it, but the 670-page workincludes the full text of ISO 8879, &quot;extensively annotated, cross-referencedand indexed,&quot; with a &quot;unique push-button access system that provideshypertext links between the standard, annotations, overviews and tutorials.&quot;andM;In addition to books, there are several ISO technical reports of interest tothose pursuing SGML:andM;* Guidelines for SGML Syntax-Directed Editors.andP;  written by Mike Cowlishaw,the author of Rexx, a scripting language for IBM mainframes, this papercontains useful guidelines for vendors developing SGML editors.andP;  The paperlacks concrete examples of many of its points, but its guidelines may helpvendors refine products against user requirements.andM;* Techniques for Using SGML.andP;  This tutorial on writing DTDs is intended fordocument designers already familiar with the concepts of SGML.andP;  In additionto body copy of various types, the tutorial covers front and back matter,tables, mathematics, spreadsheets, floating elements and a variety ofnon-Roman language applications, including both Arabic and Japanese.andM;For those with an ongoing interest in SGML, there is andless;TAGandgt;.andP;  The monthlynewsletter (annual subscription $150 U.S.andP;  and Canada; $200 foreign) is aforum for discussions and editorials on SGML-related topics.andP;  It also offersbrief news bites on new products, conferences and other events.andM;All of these publications are available through the Graphic CommunicationsAssociation bookstore.andP;  (See the Seybold Vendor Directory for contactinformation.)andM;In addition to translation products, some vendors of composition systemsprovide SGML translators to and/or from their own native coding schemes.andM;ConclusionandM;Earlier in this article, we posttulated that the 1980s focused on electronicpage production and that the 1990s will be the time when most corporationsbegin doing true electronic publishing (meaning delivery of information inelectronic form).andP;  To do so cost-effectively will require close examinationof the way we store the information--the content data model and the encodingstructure.andP;  If it is based on pages, chances are that we will be limited toalternative page presentations.andP;  If it is based on the content, many moreoptions become economically feasible.andM;We tried to point out in this article why publishers would have embraced SGMLwhether or not the DoD had.andP;  the SGML standard fits the market requirementfor an encoding scheme that fulfills the unique requirements of publishers invarious industries.andP;  It is unlikely that a single data model or documentarchitecture will meet the needs of all publishers, or even of a majority ofpublishers.andP;  For example, there is common ground among the insurance,pharmaceutical, medical and automotive industries, but there are far moredifferences than similarities.andM;Rather than try to force an architecture onto applications, SGML provides ametalanguage for developing architectures.andP;  It does not supply a content datamodel; it is a standard notation for representing multiple content datamodels.andM;Despite the differences in encoding among different applications, all AGMLapplications are unified in their adherence to the standard.andP;  As some of thepioneering users share their experiences with others, and as vendors continueto introduce products that debunk the myths surrounding the standard, weexpect to see a growing acceptance of SGML in the publishing market.andM;(*1) SGML does not require that documents be marked up in the default syntaxsupplied in the standard (the reference concrete syntax).andP;  If you usesemicolons or periods as delimeters instead of angle brackets, that's OK.andP;  Aslong as your documents are rigorously structured, a document definition couldbe written that would describe them, without convert-ing the data.andP;  However,most have documents marked up with formats calls and embedded formattinginstructions as well as generic identities.andP;  Such instructions may be allowedin a DTD, depending on how they are applied, but usually it is better toavoid formatting markup in a content database of possible.andP;  Thus, the need totranslate composition formats when moving to SGML.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF208-548-784  </DOCNO><DOCID>08 548 784.andM;</DOCID><JOURNAL>LAN Magazine  Nov 1989 v4 n11 p25(2)* Full Text COPYRIGHT Telecon Library Inc. 1989.andM;</JOURNAL><TITLE>The LAN tutorial series: part 16: database servers. (tutorial)andM;</TITLE><SUMMARY>Database servers are a great improvement over other databasemanagement systems because they are faster, more powerful, moresecure, more reliable, and easier to use.andP;  Structured QueryLanguage (SQL) is IBM's English-like database query language thatprovides a simple method to enter, retrieve, and change data in adatabase.andP;  But SQL is not a programming language; it cannot doeverything that must be done with data in a database.andP;  A databaseserver is software that updates, deletes, adds, changes, andprotects data in a database.andP;  The database server is usuallystored on a hard disk, permitting many users on a network toaccess it.andP;  But the database server software does not have thepieces needed for the user interface, report writing, orapplications generators; this is done by the front-end software.andO;Front-end software has many different forms because data can bemanipulated in many different ways.andP;  The front-end software entersand displays data as determined by the user; the database servermanipulates, manages, and protects data; SQL functions as themechanism for communications between the two.andP;  The database serverhas a number of advantages: it cuts down on network traffic;executes faster; and permits front-end programs to be different.andM;</SUMMARY><DESCRIPT>Topic:     Data Base Management SystemsLocal Area NetworksStructured Query LanguageData Base ServersTutorial.andO;Feature:   illustrationchart.andO;Caption:   Front-ends and back ends of database servers. (chart)andM;</DESCRIPT><TEXT>THE LAN TUTORIAL SERIESandM;DefinitionandM;Structured Query Language (SQL) is IBM's English-like database querylanguage.andP;  It was developed to provide a relatively simple method forentering, retrieving, and changing data in an IBM database.andP;  Because IBM usedit, SQL quickly became a standard other database vendors wanted to aim tosupport.andP;  The vendors agreed to create programs that use SQL whenmanipulating data.andM;The advantage of SQL was that it supposedly created a common database querylanguage that would make the development of network database applicationseasier.andP;  As it turned out, this is only partially true, but more on thislater.andP;  for now, remember that SQL is not a programming language.andP;  Therefore,it cannot accommodate everything that needs to be done with data in adatabase.andM;A database server is a piece of software managing data in a database.andP;  Itupdates, deletes, adds, changes, and protects data, which is usually storedon a hard disk to which many users on a network have access.andP;  This data isstored in some type of structured form, usually in a table made up of columnsand rows.andP;  The columns are the table's fields, such as name, address, andtelephone.andP;  The rows are the records, or entries, in the table, such asPatricia Schnaidt, 400 Howard St., (415) 397-1181.andP;  By keeping information inrows and columns, information can be manipulated easily.andM;Database server software not only manipulates and stores data, it protectsit.andP;  Since this data is on a network and can be accessed by many people, itmust be protected from several potential problems.andM;First, when two or more people work on the same record (row) at a time, theymight overwrite each other's changes and cause data to be lost.andP;  Databaseserver software must provide rules to regulate multiple simultaneous users.andO;These rules are called concurrency control.andM;Second, the wrong person might be able to access the data, exposing corporatesecrets to the competition.andP;  Therefore, a database server must also providerules to regulate access, including passwords and data encryption.andP;  Theserules are called security control.andM;Database servers may contain many other pieces.andP;  But before we get to those,let's look at the other part of a database server, the front end.andM;Front EndandM;Database server software is the bare bones.andP;  It does not contain the piecesneeded for the user interface, report writing, applications generators, andother software associated with application generators.andP;  It only manipulatesdata.andP;  Presenting, entering, and updating data is done by another program,the front end.andM;The front-end software of a database server usually runs on a differentmachine from the database server software.andP;  Thus, database servers are&quot;LAN-intrinsic&quot; applications, requiring the presence of a LAN to work.andM;Front-end software can take many forms because data can be manipulated andused in different ways.andP;  for example, when you use an address book, you use adatabase, as when you use a ledger, a telephone book, a spreadsheet, andsometimes even a word processor.andP;  Data can take many forms and it is best tohave the appropriate tool for entering, updating, and displaying that data,which is the job of the front-end software of a database server.andM;Three PiecesandM;So far, we have two pieces and something to connect them.andP;  We have thedatabase server to manage data and front-end software to enter and displaydata.andP;  And we have SQL for getting data between the two pieces.andP;  Here's howthe three fit together.andM;The front-end software enters the data into the database server using SQL.andO;That is, SQL is a set of commands to put data into tables.andP;  Of course, othermethods can get data into a database server, but they are usually proprietaryto each company.andP;  SQL has the advantage of being a standard.andM;When data is in tables at the database server, the front-end softwaremanipulates the data using SQL commands.andP;  But suppose the front-end softwarewants to retrieve data from a table on the database server?andP;  The databaseserver &quot;speaks&quot; and &quot;reads&quot; SQL.andP;  Thus, when front-end software asks for arecord using SQL commands, the database server responds using SQL commands.andM;It seems simple, doesn't it&quot;  Each side talks SQL so talking is inefficienteasy.andP;  Unfortunately, SQL is inefficient for end users.andP;  It makes no sense tosit at a computer and type SQL commands.andP;  Computers should simplify, notcomplicate.andP;  Thus, more must be added to the front-end software than SQLcommands.andM;There are literally hundreds of possibilities for front-end software.andP;  Forexample, we could use a spreadsheet to manipulate data in a database server.andO;The spreadsheet, of course, must speak SQL or a program must be able totranslate from the spreadsheet's language to SQL.andM;Another option is to use a simple Query-By-Example (QBE) program.andP;  This asksusers to provide an example of the type of data that they want to get moreof.andP;  Still another option is to create your own front-end software byprogramming it with a programming language.andP;  As in the spreadsheet, you onlyneed to make sure that you speak SQL when talking to the database server.andM;The database server manipulates, manages, and protects data.andP;  The front endsoftware enters and displays data according to users' desires.andP;  SQL is themechanism for communication between the two.andM;AdvantagesandM;The structure of the database server has number of advantages.andP;  To understandthem, we must compare the database server with the traditionalfile-server-based database.andP;  The traditional file server database has onlyone program.andP;  Though this program is stored on the file server, it runs inthe workstation and does all the work of both the database server and thefront-end software.andP;  When it searches for a record, for example, it must goto the file server to get the database, look through the database, find therequested records, and then display them on the screen.andP;  The whole databasetravels across the network from the file server to the workstation so theprogram may perform the search.andM;In the database server, tasks are divided.andP;  The request for data is made bythe front-end software, translated in SQL, and sent across the network to thedatabase server.andP;  The database server then executes the search on the machinewhere the data exists.andP;  Only the requested records are sent back to thefront-end software using SQL and a network transport mechanism.andP;  This cutsdown on network traffic and makes for faster execution, especially when manypeople are using the same data.andM;But data is not the only traffic that is eliminated.andP;  In the traditional fileserver, concurrency control must be run by the front-end software.andP;  Thus, allcommands to protect data and keep users from bumping into each other mustcross the network.andP;  With a database server, most of these commands can behandled by the database server software, eliminating even more LAN traffic.andM;Another advantage of a database server is that front-end programs can bedifferent.andP;  We saw the examples of spreadsheets, QBE programs, and customapplications.andP;  All three front-end software can use a database server at thesame time.andP;  This is not possible with traditional file server databaseprograms.andM;Now that we have a general idea of how database servers work, we need tounderstand in detail what happens during the communication between the frontend and database server.andP;  This depends almost entirely on the applicationused.andP;  Consider the communication between an application written in dBASE IIIPlus and the SQL Server from Ashton-Tate and Microsoft.andM;dBASE III Plus uses the dBASE language to manipulate data.andP;  This is afourth-generation programming language.andP;  It differs from SQL because it has aseries of commands that allow for not only data manipulation, but its entry,formatting, and display.andP;  Thus, a dBASE III application is a collection ofdBASE commands strung together.andM;When a dBASE application is run with a database server, something is neededto translate from dBASE to SQL.andP;  Remember, database servers speak only SQL orsome variation thereof.andP;  In this case, the translation piece is included inthe newest dBASE version (which was not shipping at the time of this writing,although it has been demonstrated).andM;When data is translated from dBASE into SQL, it is packaged by the networktransport protocol and shipped to the database server.andP;  When the SQL commandsarrive at the file server, they are &quot;parsed,&quot; or broken into their parts, andexecuted.andP;  After the execution is completed, results are ready to return tothe front-end software.andP;  Again, SQL commands get the results back, followingthe same process, only backwards.andM;Despite the presence of SQL, no standard method exists by which front-endsoftware can talk to a database server.andP;  Every database server has its ownaccess methods that front-end software must use.andP;  The reason for this is notonly differences in the type of SQL used by the database server; differencesin SQL-transport protocol links makes it difficult for database servers towork the same way.andP;  The end result is that applications written to work onone database server will not work on another.andM;This is not as bad as it sounds.andP;  When users pick a database managementproduct, like dBASE or Paradox, they pick a set of unique programmingenvironments.andP;  The same is true when choosing a database server.andP;  The onlydisappointment is that SQL should facilitate database creation independentapplications.andP;  It does not.andM;The ServerandM;Because a database server is intelligent, it can do many things to makeapplication development easier and application execution faster.andP;  One iscalled stored procedures.andP;  Stored procedures are programs that sit on theserver waiting to be executed.andP;  Any piece of front-end software can call theprograms.andP;  This saves programmers from including the code in everyapplication they write.andP;  It also saves on memory in the workstation.andM;Just as a database server may contain stored procedures, it may also storerules dictating how data will be stored.andP;  A simple example is a rulerequiring all numbers to be entered with commas where appropriate.andP;  Again,because of this, the application does not need to worry about such problems.andM;Take Advantage of itandM;Database servers are an enormous improvement over other database managementsystems.andP;  They are faster, more powerful, more secure, more reliable, andeasier to use.andP;  Their ability to accommodate a myriad of front-end programswill make data sharing much easier.andP;  Their split design will speedapplication development and execution for many more people than before, sinceit is not just programmers who can take advantage of their sophisticatedfeatures.andP;  The next step in the development of LAN databases will be thespread of distributed databases, databases in which data resides in severalplaces but appears to reside in one.andO;</TEXT></DOC>
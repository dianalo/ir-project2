<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-435-167  </DOCNO><DOCID>09 435 167.andM;</DOCID><JOURNAL>Government Computer News  Sept 17 1990 v9 n20 p62(2)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>Ada always ends up in the thick of a fight. (Open File) (column)</TITLE><AUTHOR>Taft, Darryl K.andM;</AUTHOR><SUMMARY>The Ada programming language always seems to be in the middle of atussle, which would appear to be the case with rumored changesplanned by the US Defense Department comptroller's office of theDOD Directive 3405.1, which promotes use of Ada in MISapplications.andP;  The DOD comptroller proposes changes that involveadding the C language to the list of languages approved fordeveloping DOD MIS systems, which would dilute the strength of Adain MIS applications, according to a source at the Pentagon.andP;  Thecomptroller's office is trying to make the change quickly andquietly, but DOD Directive 3405.1 only recommends Ada, whereas DODDirective 3405.2 mandates use of Ada.andP;  The Navy is changing itsTactical Digital Standard (TADSTAND) to make the Ada LanguageSystem/Navy (ALS/N) a requirement on any applications usingstandard Navy computers, but some in the Navy are losing faith inALS/N.andM;</SUMMARY><DESCRIPT>Topic:     MilitaryGovernment AgencyNational GovernmentADASoftware SelectionProgram Development ToolsApplications ProgrammingIndustry Analysis.andM;</DESCRIPT><TEXT>Ada Always Ends Up in the Thick of a FightandM;What's going on with Ada?andP;  That's the question I tend to ask myself wheneverI come up for air between assignments.andP;  I ask it because there is alwayssomething shaking in the Ada community.andM;It seems like Ada is always in a fight, and right now she's ducking andparrying blows on at least two fronts.andP;  A source at the Pentagon has told methe Defense Department comptroller's office is moving to change DOD Directive3405.1, which is the part of the Ada directive that pushes for Ada use in MISapplications.andM;The DOD comptroller's proposed change to the directive involves adding the Clanguage to the list of languages approved for developing DOD's MIS systems.andO;Although this seems like an innocent change, my source called it aggressiveand an attempt to &quot;dilute the strength of Ada&quot; in MIS applications.andM;My source viewed this action as negative partly because &quot;they're doing it inthe dark, and they're doing it quickly, hoping no one will notice.&quot;andM;Yet, whether or not the comptroller's office's actions should be consideredhostile to Ada, DOD Directive 3405.1 left room for this type of modification.andO;Unlike DOD Directive 3405.2, which goes so far as to mandate the use of Adafor mission-critical systems, 3405.1 only recommends Ada in MIS systems.andP;  Sothere was an opportunity for this kind of action.andM;I can see the push for C with all the talk of open systems, which typicallymeans Unix.andP;  The Defense Department seems to be taking open systems and Unixpretty seriously.andP;  And C is the language most comfortable on the Unixoperating system.andM;But what will this change mean if it goes into effect?andP;  Will we see a bunchof MIS systems written in C?andP;  Could such a change leave an opening for aCobo! comeback -- after all, is C any better for MIS than Ada?andP;  And whatcould this mean for successful Ada MIS programs like the Army's StandardFinancial System Redesign, also known as STANFINS-R.andP;  Finally, what couldthis mean for companies and contractors developing Ada products andapplications for MIS?andM;It could mean nothing at all, partly because Ada has reached a state ofmaturity, where it can hold its own against other languages.andP;  In addition,the services are free to set their own policies.andP;  For instance, Lloyd K.andO;Mosemann II, the Air Force deputy assistant secretary for communications,computers and logistics, developed a directive to use Ada for all Air ForceMIS systems.andM;I can't say that I blame them, but sometimes members of the Ada community canbe as reactionary as the tobacco industry or the National Rifle Association.andM;It would be a shame if this proposed change actually would slow Ada down inMIS, especially with successes like STANFINS-R and products like the PromptPayMaster.andM;The Prompt PayMaster from Genesis Software Inc. of Kansas City, Mo., is aprompt payment MIS system developed in Ada.andP;  I've seen the product at workand found it interesting, not because it's written in Ada but because it's acomplete bill paying system and handles the entire process.andM;It includes Ada software engineering along with advanced office automationtechnology such as optical character recognition, imaging, voice recognitionand electronic data interchange support.andM;A team of eight Genesis people designed and wrote the 250,000-lines-of-codepackage in eight months.andP;  The system runs on Wang Laboratories Inc. Wang VSsystems and soon will run on VAX machines.andM;The Prompt PayMaster performs key financial system functions such as:computing due dates, discounts, interest, balances, foreign currency andmore; tracking payments; paying interest and generating checks and electronicfunds transfers.andP;  The system satisfies the government's Prompt Payment Actrequirements and includes on-line source document images, electronicsignature certification, on-line management reports and contractadministration.andP;  The Prompt PayMaster administers contracts from the contractline item level.andM;Ada or not, a system like this really could benefit the government,especially during its push for more efficient financial systems.andM;Meanwhile, in the mission-critical arena, the Navy is changing its TacticalDigital Standard (TADSTAND) to make the Ada Language System/Navy (ALS/N) arequirement on any applications using standard Navy computers.andP;  These consistof the AN/UYK-43, the AN/UYK-44 and the AN/AYK-14 embedded computers for seavessels and planes.andM;Current Navy policy mandates Ada, though not specifically ALS/N, for Navystandard computers.andP;  However, the proposed change to the standard, known asTADSTAND C, says that with ALS/N now available, &quot;Any applications using theAN/UYK-43, -44 or AN/AYK-14 must use ALS/N,&quot; unless the developers obtain awaiver.andM;My source says this action also is being done &quot;in the dark&quot; and also hingeson a semantic interpretation of the policy -- which left room for such achange.andP;  However, most of the complaints involve the AN/AYK-14, the airbornesystems.andM;Losing FaithandM;Several sources, including Navy personnel, have said they are losing faith inALS/N and have said the Navy should not exclude field-proven Ada technologyfrom its embedded systems.andP;  The Navy should have an alternative to ALS/N.andO;But the system has cost too much to scrap, observers say.andM;The ALS/N program already has cost about $50 million and is running at about$8 million a year.andP;  Still, some vendors claim that in less than a year andfor only $1 million they could offer the Navy an alternative to ALS/N.andM;Citing ALS/N problems such as the current version not meeting its own systemrequirements, and with problems relating to multitasking, the computercontrol unit, the symbolic debugger and the ALS/N run-time executive, oneNavy source said: &quot;It is our opinion that the ALS/N is not currently matureenough to be used in a real-time airborne environment and therefore shouldnot be mandated for AN/AYK-14.&quot;andM;The source added that &quot;to mandate the use of ALS/N specifically for the useof the Navy standard computers is an undesirable method for promoting the useof Ada within the Navy.&quot;andM;Like I said, there is always something shaking.andM;Darryl K. Taft is GCN's senior editor for microcomputing.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-900-780  </DOCNO><DOCID>07 900 780.andM;</DOCID><JOURNAL>Software Magazine  Nov 1989 v9 n13 p39(6)* Full Text COPYRIGHT Sentry Publishing Corp. 1989.andM;</JOURNAL><TITLE>CASE focus shifting to concern for quality. (computer-aidedsoftware engineering)</TITLE><AUTHOR>Hannah, Mary Alice.andM;</AUTHOR><SUMMARY>Many large businesses have horror stories to tell about softwarebugs that brought company activity to a standstill until they wereresolved.andP;  The problems are becoming more serious as theinformation infrastructure of modern society depends more and moreon global networks run by software.andP;  Computer-aided softwareengineering (CASE) vendors are bringing out more tools thatsupport testing and maintenance as a result.andP;  CASE programs arenow being issued in several categories, including: code navigatorsto help in tracing possible control flows too tedious to followotherwise; restructuring tools to convert spaghetti code tostructured code, and source code control systems to keep programmodules synchronized.andP;  Compuware Corp, ViaSoft Inc, XA SystemsCorp and Borland International Inc are among the CASE vendorsfocusing on this market.andM;</SUMMARY><DESCRIPT>Topic:     Computer-Aided Software EngineeringProgram Testing ToolsDebuggingQuality ControlProgram Development ToolsSoftware Maintenance.andO;Feature:   illustrationtable.andO;Caption:   Representative test and debug tools. (table)andM;</DESCRIPT><TEXT>CASE FOCUS SHIFTING TO CONCERN FOR QUALITYandM;In early spring of 1989, the American Airlines reservation system, Sabre, hadto be shut down for several hours at a huge cost to the airline.andO;Modifications had garbled disk pointers, causing the system to book flightswith phantom passengers.andM;One afternoon in November 1985, the Bank of New York's securities clearingconnection with the Federal Reserve was severed, causing a pileup of over $20billion worth of securities because of errors in an inadequately testedsystem.andM;In an effort to speed up the implementation of a system for the New JerseyDepartment of Motor Vehicles, a Big Eight consulting firm used afourth-generation language that turned out to be bug-infested.andP;  The resultwas a monumental backlog of transactions caused by slow response time.andP;  Thefirm responsible for the system's development had to rewrite the transactionprocessing portions of the system in Cobol.andM;These horror stories are not unique.andP;  Any experienced MIS manager has hadnightmares about having to explain to the president of his company how thebug that slipped through testing caused all that highly visible trouble forthe business it is supposed to be supporting.andM;It is bad enough when the impact of these errors is limited to a singlebusiness enterprise.andP;  But computer systems are rapidly becoming theinformation infrastructure of modern society.andP;  Sophisticated militaryaircraft literally cannot stay in the air without their embedded flightcontrol systems.andP;  Global networks help run the world's banks, stockexchanges, hospitals and hotels.andP;  When these systems experience errors, truedisaster can strike.andM;Even without bugs, systems require maintenance--re-engineering to prolongtheir useful life, adaptations to accommodate new business requirements,interfaces to other systems and new technology.andP;  Some estimates place thecost of maintenance as high as 90% of all MIS resources for the 1990s.andM;These &quot;facts of life cycle&quot; are becoming issues visible to management insideand outside of MIS, to the decision-makers who control the budget and createthe market for Case software  Not surprisingly, Case vendors are respondingwith more tools that support testing and maintenance--a few phases down thelife cycle from development.andM;CASE AND DEVELOPMENT LIFE CYCLEandM;The traditional life cycle of an application development project is typicallydescribed as:andM;* requirements definition and analysis;andM;* system design;andM;* program development;andM;* system testing; andandM;* implementation and maintenance.andM;Early Case products focused on the development phases of this life cycle.andP;  Asthe market evolved and experience began to feed back to the productdesigners, other candidates for automation became apparent.andM;Tools developers focused on the detailed activities of the post-developmentprogrammer, and new categories of Case tools came into being.andP;  The categoriesinclude: code navigators to assist in tracing possible control flows that areordinarily too tedious to follow; restructuring tools to convert spaghetticode into functionally equivalent structured code; and source code controlsystems to keep program modules synchronized.andM;The Case software vendors focusing on this new market include:andM;* Compuware Corp., Farmington Hills, Mich., which markets a variety oftesting utilities along with classics such as Abend-Aid and File-Aid;andM;* ViaSoft, Inc. of Phoenix, Ariz., which concentrates on integratedre-engineering software;andM;* XA Systems Corp., Los Gatos, Calif., which supplies tools for all phases ofthe life cycle; andandM;* Borland International Inc., Scotts Valley, Calif., with a debugger forPC-based applications.andM;A major difference in the development of software today is that since thecode is more complex, it can no longer be efficiently tested by theprogrammer.andP;  The logic can follow too many paths; automated testing is farmore effective in checking out the code.andP;  Simple systems could be verifiedusing simple testing techniques; complex systems require complex testingtechniques--in other words, automated testing.andM;HIGH-QUALITY TESTINGandM;According to Kent Petzold, president of ViaSoft, there has been a shift intesting from a hit or miss approach to one requiring high quality.andM;&quot;Testing methodologies are becoming more formalized and have to be married tothe new technology available in software testing,&quot; Petzold says.andP;  &quot;It is nolonger acceptable in either development or enhancement mode for software tobe implemented without rigorous and thorough testing--testing that cannot besuccessfully performed without the assistance of Case tools.&quot;andM;One of the most time-consuming and labor-intensive tasks of the life cycle isthe preparation of test data.andP;  IBM provides data manipulation utilities butthey are rudimentary and do not provide the flexibility needed to create goodtest data.andP;  Even TSO/SPF has limits in this area.andM;In answer to this problem, Compuware's File-AID provides access to anystandard IBM file, including those whose access methods are Vsam, Bdam orIsam.andP;  The programmer, with very little training, can fully modify therecords in a file, even increasing their lengths.andP;  The result is a flexibleand easily prepared set of test data, which is easy to maintain.andM;Execution of tests in the CICS environment is eased by Compuware'sCICS/Playback.andP;  This product can capture, modify and replay transactions asper a small script.andP;  This can then be used to create a larger transactionfile which can be executed against the system at a high rate of speed,simulating a high-volume or stress test.andM;In the past, systems were mainly a means of improving the efficiency of theaccounting departments.andP;  Payroll, accounts receivable, accounts payable,general ledger and the like were the major applications.andP;  And most businessesfound it reasonable to manually check the work done by the software.andM;MORE COMPLEX SYSTEMSandM;But systems today are growing more and more complex, and more often than notthey cannot be easily verified by the systems' users.andP;  And companies are alsogrowing more and more dependent on their software.andP;  Errors are becoming lessand less acceptable.andM;Another complexity in the scenario is the fact that in the past, most systemswere run in batch mode.andP;  Error recovery was usually only a matter of goingback to a prior version of the master file and reapplying the transactions.andO;Today's systems are mainly online and the recovery of these systems istypically more complicated.andP;  System outages are far more noticeable to theusers of the system.andM;When a program terminates abnormally under IBM's MVS, a dump of all thememory in use is produced.andP;  This is a voluminous printout containing a lot ofinformation that is not particularly pertinent to the bug which caused theabend.andP;  In response to this problem, Compuware's Abend-AID was developed.andO;This product translates the cause of the termination into language easilyunderstood by the programmer.andP;  And Abend-AID provides a printout of the datarelating to the bug.andM;As a result, a greatly shortened printout is produced, saving wear and tearon both the printer and the programmer.andP;  According to Jeffrey Malcolm, aprogrammer analyst with UniRoyal Chemical Company, Middlebury, Conn.,andO;&quot;Another benefit of Abend-AID is that it decreases the number of errormanuals that an installation has to keep on hand, since in most casesAbend-AID provides an explanation of what went wrong.&quot;andP;  Abend-AID isavailable for several database management systems as well as for CICS, and isused in over 50% of IBM MVS installations, according to Compuware.andM;CASE: TEST ANDandM;DEBUGGING TOOLSandM;In the CICS environment, debugging is more difficult because the bug canaffect the entire network.andP;  Compuware's dBUG-AID provides interactive supportto the programmer, assisting in the detection and resolution of programerrors.andP;  Source code can be accessed and CICS files and temporary storageareas edited.andM;Programmers of application systems frequently develop &quot;wish lists&quot; ofproductivity aids.andP;  For example, Peter Vicinanza, an independent consultantat UniRoyal Chemical Company, is interested in the ability to have his CRTmirror what was being displayed on another CRT.andM;Compuware's CICS/Simulcast performs this function in the CICS environment.andO;Simulcast is useful not only for user support but also for user training.andO;Training can be conducted from the trainer's terminal.andM;MAINTENANCE AND RE-ENGINEERINGandM;Until recently, the end phase of the system life cycle has been if notneglected, then at least denigrated by the development team in a company.andM;As mentioned earlier, it is becoming apparent to the decision-makers intoday's businesses that maintenance, or re-engineering, is requiring more ofMIS's resources.andP;  It remains that errors in software continue, despitetesting prior to implementaion; business requirements change over time; andnew hardware or system software often requires that existing applicationsystems can modified.andM;As the importance of re-engineering becomes more visible, there is asharpened focus on what it takes to perform maintenance well.andP;  The consensusis that it takes someone who knows how the program works.andP;  This &quot;guru&quot; isgenerally an experienced programmer who quickly becomes disenchanted with hislot as he realizes that modifying the same old system is all he can lookforward to.andM;Many maintenance sections in an MIS department are run only because ofpersonal loyalty to the project leader; and in the modern world of dataprocessing, that ground can shift too quickly for company management to feelvery comfortable.andM;Another growing problem with maintaining software is that the systems are toocomplex to be fully understood.andP;  Once the development team has packed up andmoved on to other projects, no one else has the background to understand andcope with the complicated systems left behind.andM;Modifications made to these systems are often too complex to be testedthroughly.andP;  And the user base that was readily available to the developmentteam most likely has moved on to different projects within their owndepartments.andP;  The result is the maintenance team is left out in the cold alltoo often.andM;There is software that helps the programmer figure out what the program isdoing.andP;  This task, usually the most difficult for a maintenance programmer toperform, is done through ViaSoft's Analytical Engine, which decompilesprograms and then develops an online repository of information about theprogram.andP;  It builds and stores knowledge of how the program works: how thedata drives the program and how control is passed from module to module.andM;Used in conjunction with the Analytical Engine, VIA/SmartTest is aninteractive tester/debugger.andP;  It assists the programmer in determining thedefects in the program by accessing the information kept in the Engine'srepository.andM;The programmer faced with debugging program an use SmartTest to find out whatlogic paths were executed to bring the program to the source of the error.andM;The software can also work on programs as they are executing, insert Cobolcode or break points into the program and automatically update the sourcecode with the modifications made during the test session.andM;Also included in this set of products, marketed as VIA/Center, isVIA/InSight, an interctive code analyzer.andP;  When an instruction is executedthat has caused an error, InSight traces back all the paths in the programthat could have led to that instruction.andM;FULL LIFE CYCLE TOOLSandM;XA Systems has approached the Case market with different sets of products foreach stage of the project life cycle.andP;  For the early stages, XA offers two&quot;forward engineering&quot; products, formerly owned by Peat Marwick, calledSilverrun and Goldrun.andM;The PC-based Silverrun has a powerful graphics capability along with a fullyintegrated data dictionary.andP;  Logical data models and entity relationships canbe designed along with layouts of screens and reports.andM;Goldrun runs on the IBM PC, DEC VAX/VMS, or Unix-based environments.andP;  Itcontains project support assistance along with development center andmigration tools.andP;  These tools generally support system specification anddesign.andP;  The data specified at this stage of the project is stored in arelational repository which can be used to analyze the specifications forcompleteness.andP;  The repository also aids in prototyping.andM;After the development of the software has been completed, the system entersthe re-engineering phase, where changes are made to the existing software.andO;XA's Pathvu is available for the analysis of Cobol programs.andP;  It develops twomeasures of the source code -- complexity and architecture.andP;  These enable theproject team to asses the overall quality and maintainability fo the system.andM;Retrofit is XA's answer to old, unstructured Cobol code.andP;  It will restructureexisting code to conform to structured programming concepts, such as singleentry/single exit, PERFORM/UNTIL, IF-THEN-ELSE, and so on.andM;XA's Datatec is a Case tool that analyzes the software environment andmaintains the information in a repository, which can be used to determine ifalterations to the software will affect that particular system.andM;Datatec carries data from JCL job streams and the process, load, macro andsource libraries.andP;  It is also used to standardize data elements and recorddefinitions when a system has undocumented or inconsistent Cobol datadefinitions.andM;XA's React converts assembly language programs into Cobol code.andP;  The outputof this product can be subsequently fed into Pathvu, Retrofit and Datatec toproduce well-structured, documented Cobol source.andM;The final phase of the life cycle, maintenance, is supported by XA's Xpertseries of data manipulators.andP;  Interactive tools are provided which allow theprogrammer to select, edit and modify any size data, record or table needed.andO;This facilitates the creation and maintenance of test data.andP;  Xpert providesaccess to Vsam, IMS and DB2 files.andM;FUTURE DIRECTIONS FOR CASEandM;If there was any doubt that Case tools are assuming paramount importance inthe data processing world, the recent IBM stamp of approval should beconvincing.andP;  IBM last month formally said it is joining the fray withAD/Cycle, an application development offering for SAA.andM;Observers are already saying that the IBM Repository will likely change howsystems are developed once it begins shipping into the marketplace.andM;IBM now says the AD/Cycle products will be commercially available bymid-1990.andP;  The long-expected offering is a sophisticated data dictionary thatwill enable project developers to keep data maps consistent across an entiresystem, and provide a common interface between hardware and software.andM;AD/Cyle will be marketed for the PS/2 using OS/2 extended.andP;  The product willspan all phases of the life cycle from requirements through maintenance.andP;  IBMsays that AD/Cycle will be based on open architecture, and has already signedup several Case vendors pledging to supply tools that can operate upon theRepository.andM;A final consideration is the need for an integrated set of tools that canoperate horizontally, across the full system life cycle, and vertically, frommicros on through mainframes.andM;IBM is among the many vendors attempting to provide this full Case toolset.andO;</TEXT></DOC>
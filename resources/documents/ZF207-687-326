<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-687-326  </DOCNO><DOCID>07 687 326.andM;</DOCID><JOURNAL>Data Based Advisor  Sept 1989 v7 n9 p28(3)* Full Text COPYRIGHT Data Based Solutions 1989.andM;</JOURNAL><TITLE>SELECTed Ways. (Hands-on SQL)(steps to quickly extract specificinformation with the basic SQL SELECT statement; Structured QueryLanguage) (column)</TITLE><AUTHOR>Sayles, Jonathan S.andM;</AUTHOR><SUMMARY>SQL SELECT uses several basic clauses in a statement, althoughSELECT and FROM are the only required clauses.andP;  The power of arelational data-access language like SQL, however, lies in itsability to precisely extract desired information; a feature of theWHERE clause keywords such as BETWEEN, IN and LIKE.andP;  The BETWEENoperator allows row and column retrieval when columns containvalues within specified limits.andP;  Using BETWEEN is often moreconvenient than using WHERE, particularly for queries that involveinclusive search logic.andP;  The IN comparison operator allows rowretrieval when search columns match values defined in a list.andP;  TheLIKE comparison permits retrieval of rows that contain valuesresembling, but not necessarily matching, a partially definedsearch string.andM;</SUMMARY><DESCRIPT>Topic:     Query LanguagesData Base LanguagesSoftwareRelational Data BasesStructured Query LanguageTutorial.andO;Feature:   illustrationtable.andO;Caption:   A sample SELECT using the BETWEEN clause, IN and NOT IN. (table)An example of using NOT BETWEEN. (table)Examples of LIKE using the percent wildcard and the underscorewildcard. (table)andM;</DESCRIPT><TEXT>SELECTed WaysandM;Last month we learned how to use the basic SELECT statement to query adatabase and extract information.andP;  As you should recall, the basic SQL SELECTstatement is made up of the following parts:andM;* SELECT--The operation and a list of columns to &quot;select from.&quot;andM;* FROM--The table the SELECTion is performed on.andM;* WHERE--The search condition used to SELECT The rows you want.andM;* ORDER BY--The final arrangement (sorting) of the rows in the results table.andM;SELECT and FROM are the only required clauses in a SELECT statement.andP;  But ifall you could do was unconditionally retrieve columns from your relationaltables, SQL would have died long ago.andM;The key to the power of a relational data-access language like SQL, is itsability to precisely extract the information you need from the database.andP;  TheWHERE clause lets you do just that, and, as we discussed last month, SQL isrife with WHERE clause phrases and keywords.andP;  That's what we'll learn moreabout this month:andM;* BETWEEN--Allows you to retrieve rows that contain values within a specifiedrange.andM;* IN--Allows you to retrieve rows that contain the values you specify in alist.andM;* LIKE--Allows you to retrieve rows that contain the values you specify in alist.andM;* LIKE--Allows you to retrieve rows containing values that &quot;resemble&quot; apartial search string.andM;For this month's lesson, refer once again to the PC Parts database from theAugust issue.andP;  (The SQL statements to create and load the PC Parts databaseare available on the monthly Program Disk for August and the Data BasedAdvisor Readers Exchange bulletin board system--(619) 270-2042.)andM;Now, before we begin with the WHERE clause, let's go over the homework I leftyou with last month.andP;  The assignment was to:andM;* List all Project names for projects not going up in San Francisco.andM;* List all information on shipments for part number 2, in desending order.andM;* List all supplier names for suppliers whose performance evaluations (PERFs)are greater than 4, and suppliers whose last names begin with a letter higherthan the letter &quot;M.&quot;andM;You can check your answers (along with all the examples in this article)against the PC Parts database in Fig.andP;  1.andM;Now, on to the subjects of this month's column.andM;BETWEENandM;The BETWEEN operator lets you retrieve the rows WHERE the columns containvalues within limits you specify.andP;  For example, if you want to see all theparts that weigh more than seven ounces but less than 32 ounces, you couldwrite a query like this:andM;SELECT * FROM PARTS WHERE WEIGHT =andgt; 8 AND WEIGHT andless;= 31;andM;Or you could use the BETWEEN operator, as shown in Fig.andP;  2.andM;I think you'll agree that using BETWEEN is both more understandable and moreconvenient.andP;  For queries that involve inclusive search logic (greater than orequal to a low value and less than or equal to a high value) I suggest youuse BETWEEN.andM;How to use BETWEENandM;BETWEEN is part of the WHERE clause.andP;  The structure is:andM;WHERE andless;column nameandgt; BETWEEN x AND yandM;You must follow a few rules when using BETWEEN.andP;  The lower value (x) must becoded first, the reserved word AND must be next, and the higher value (y)must be coded last.andP;  The scope of the BETWEEN clause is inclusive (equivalentto &quot;greater than or equal to a low value, and less than or equal to a highvalue&quot;).andM;BETWEEN can be used with character, numeric, and date data types.andP;  (You mustenclose character and date x and y values with single quotes when you usethem with BETWEEN.)andM;You can search for rows outside a range of values by combining NOT withBETWEEN (for example, list all parts information for parts weighing less thaneight ounces and greater than 30 ounces), as illustrated in Fig.andP;  3.andM;INandM;The IN comparison operator lets you retrieve rows WHERE the search columnscontain values matching those defined in a list.andP;  For example, if you want tosee all the shipment information from suppliers 1, 3, and 4, you could writea query like:andM;SELECT * FROM SHIPMENTS WHERE SUPPNO = 1 OR SUPPNO = 3 OR SUPPNO = 4;andM;Or you could use the IN operator, as in Fig.andP;  4.andM;IN simplifies the query and makes the logic less clumsy and error prone.andP;  Youcan use it as a substitute for coding multiple OR queries.andM;Using INandM;IN is part of the WHERE clause.andP;  The structure is:andM;WHERE andless;column nameandgt; IN (andless;list of valuesandgt;)andM;The andless;list of valuesandgt; is enclosed in parenthesis and can be numbers,characters, or dates.andP;  Individual values in the list are separated by commas,for example, WHERE PROJNO IN (1, 2, 4).andP;  Individual values in the list can bein any order, and you can search for rows containing values NOT in a list bycombining NOT and IN.andP;  For example, you can derive a list of suppliers WHERESUPPNAME isn't IN Bartok, Berg, or Britten, as shown in Fig.andP;  5.andM;LIKEandM;The LIKE comparison operator lets you retrieve rows containing values thatresemble a partially defined search string.andP;  For example, if you want to seeall the projects that are &quot;turbo,&quot; you could write a query like the one inFig.andP;  6.andM;O  Or, if you want a list of all the parts that were the colorGR-something-Y, you could write a query as shown in Fig.andP;  7.andM;LIKE allows you to be less exact in specifying your WHERE clause.andP;  It'suseful for selecting rows whose columns have approximate but not exactvalues, values you aren't sure of, or values that would be time consuming toidentify more specifically.andM;Using LIKEandM;LIKE is part of the WHERE clause, and can only be used with charactercolumns.andP;  Its structure is:andM;WHERE andless;column nameandgt; LIKE 'andless;search stringandgt;)andM;where the search string can be any combination of letters, numbers, specialcharacters (!, @, #, $, andamp;, *,  , +, =), and SQL wildcard characters (% and andM;).The percent sign stands for &quot;any sequence and number of characters or nocharacters at all.&quot;andP;  In the example above, we searched for the word &quot;TURBO&quot;in our Projects table using the search string &quot;% TURBO%&quot;.andP;  The percent signstell SQL to retrieve rows where the characters &quot;TURBO&quot; appear anywhere in thetitle.andM;The underscore means &quot;any single character at that particular position in thecolumn&quot;--one and only one character.andP;  In the previous example we searched theParts table for any colors that had a GR in positions one and two, any othercharacter in position three, and a Y in position four.andM;SELECT * FROM PARTS WHERE COLOR LIKE 'GR Y';andM;The underscore tells SQL that any character in position three of the colorcolumn is allowed in the search.andM;Besides the wildcard characters, all the other characters in the searchstring stand for themselves.andP;  You can mix the underscore and percent sign ina search string.andP;  The search_string must be enclosed in single quotes.andO;Wildcard characters can be positioned anywhere in the search string in anycombination.andM;You can also search for rows containing values NOT in the search string bycombining NOT and LIKE (e.g., LIST all parts WHERE the color is NOT LIKEGR-something-Y), as shown in Fig.andP;  8.andM;Now it's time for you to use BETWEEN, IN, and LIKE.andP;  (In other words, morehomework.)andP;  Our new director is hot on the trail of wasy to cut costs andboost revenues.andP;  She needs some new reports to present to the board tomorrownight.andP;  Use BETWEEN, IN, and LIKE to create them, and I'll see you nextmonth.andM;Your assignment for next time:andM;* List all suppliers whose performance evaluations (PERFs) are not 4s and 5s(hint: use IN).andM;* List all parts that weigh between 15 and 50 ounces, and that aren'twarehoused in San Francisco (another hint: use BETWEEN).andM;* And there's a new company policy.andP;  From now on we'll announce all projectsin alpha or beta test.andP;  List these products (try LIKE).andM;Jonathan Sayles is Director of Educational Services for the Systems Group,Inc., a technical training and consulting company located in Glastonbury,Conn.andP;  He is the developer of the CAI course, &quot;SQL as a Second Language,&quot; andthe author of three SQL books.andP;  These are published by QED InformationSciences, Inc. of Wellesley, Mass.andO;</TEXT></DOC>
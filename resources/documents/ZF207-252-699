<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-252-699  </DOCNO><DOCID>07 252 699.andM;</DOCID><JOURNAL>PC Week  Jan 9 1989 v6 n1 p75(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>Application, language or interface? (NeXT Inc.'s NextStep userinterface)</TITLE><AUTHOR>Ziff, Robert.andM;</AUTHOR><SUMMARY>The delineation between what is considered an application, aninterface or a programming language has been blurred with theintroduction of NextStep, the 'interface' to Steve Jobs' NeXTcomputer.andP;  NextStep is actually both an interface and a language.andO;The need for more complex, specialized and friendly applicationshas driven this trend of applications or interfaces entering thedomain of the programming language.andP;  These new developmentenvironments do have drawbacks such as: constraints are imposed bythe limits of the tools provided; and the code that is written isnot highly optimized and will take more memory and run moreslowly.andP;  These new tools will continue to improve over time andwill benefit the PC industry because, as hardware costs decrease,the major cost of the computer system will be the software.andM;</SUMMARY><DESCRIPT>Company:   NeXT Inc. (products).andO;Product:   NeXTstep (Operating system) (design and construction).andO;Topic:     User InterfaceProgramming LanguagesNew TechniqueProgram Development Tools.andM;</DESCRIPT><TEXT>Application, Language or Interface?andM;In the past, it was easy to tell an application from a language from aninterface.andP;  The Macintosh, for instance, had an interface that could becalled using Pascal, a language, and on which you could write applications,such as Excel.andM;The clarity of those lines, however, is being badly blurred by the mostrecent rounds of software development.andP;  A case in point is NextStep, the&quot;interface&quot; to Steve Jobs' NeXt computer.andM;During a demonstration several weeks ago in Boston, Jobs created a front endfor a physics program in less than 10 minutes.andP;  He did it so fast because hedid not &quot;write&quot; a single line of code.andP;  He merely manipulated the interfacewith a mouse, and created graphical relationships.andP;  Yet he made a workingfront end, ready for end users.andM;So, is NextStep an interface or a language?andP;  Paradoxically, it's both.andM;A similar merging of roles is occurring elsewhere in the industry, as bothinterfaces and applications take on ther characteristics of languages.andO;dBASE, for instance, started out as an application, and is now a language.andM;The force driving this trend is the need for more complex, specialized andfriendly applications.andP;  Writing such an application in a developmentenvironment such as HyperCard or NextStep is far easier than writing in alow-level language such as C.andP;  Further, applications written in Informix orOracle can be ported in a matter of days, while writing a C program for adifferent platform can take months.andM;With these development environments, programmers are no longer working fromscratch.andP;  Instead, they are adapting prefabricated applications' andinterfaces' language capabilities to their own needs.andM;Development environments, however, do not come without a cost.andP;  First, thereis the constraint imposed by the limits of the tools provided.andP;  A programmercannot, for instance, write a HyperCard program that uses more than one cardat a time, or uses a different-sized card.andP;  However, for most corporateapplications, some development environments can be found that will suit thetask at hard.andM;More important, the code that is written will not be highly optimized, so itwill both take more memory and run more slowly.andP;  This was the reason thatsuch tools have not existed in the past, when computer time was so expensivethat every program had to be highly optimized.andM;Now, however, for the cost of a $30,000-a-year programmer, an organizationcan buy five '386-based machines.andP;  Most desk-top computers today run at aminimum of 8MHz and have at least 512K bytes of memory.andP;  With these liberalconstraints, only the most complex applications have to be optimized inlow-level languages.andM;As time goes on, we can expect these tools to continue to improve, asNextStep improved over earlier interface-writing tools.andP;  The PC industryneeds this improvement, because as hardware costs come down, the dominantcost of computer systems becomes software-driven.andP;  Whether it is reflected inthe extra time of workers using unfriendly interfaces or in development time,the costs will show up either in salaries for an on-site programming staff orin exorbitant software prices.andO;</TEXT></DOC>
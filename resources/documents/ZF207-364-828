<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-364-828  </DOCNO><DOCID>07 364 828.andM;</DOCID><JOURNAL>The Seybold Report on Publishing Systems  April 17 1989 v18 n13p5(8)* Full Text COPYRIGHT Seybold Publications Inc. 1989.andM;</JOURNAL><TITLE>Who sets the standards? (desktop publishing) (Systems for the'90s)andM;</TITLE><DESCRIPT>Topic:     StandardizationDesktop PublishingModulesIntegrated SystemsTechnologySoftware MigrationSoftware EngineeringApplicationsProgrammingMarketingFourth GenerationFunctional Capabilities.andM;</DESCRIPT><TEXT>Who sets the standards? This year's Seminars were remarkable in one respect:no one took issue with the Fourth Wave proposition that future publishingsystems of all sizes and shapes will be built on mainstream computingplatforms rather than on proprietary, turnkey systems.andP;  Even the long-termholdouts such as Atex, SII, and Crosfield were singing a new tune this year.andO;They have come to accept the premise that their roles are evoling from beingturnkey system suppliers to becoming systems integrators and value-addedresellers.andM;In fact, in one of the most remarkable (and most important) presentations ofthe Seminars, Agnes Imregh of Atex agreed with Darryl Tjaden of CText thatsystems vendors of the future will no longer even write all of their ownapplication software.andP;  When possible, they will buy or license softwaremodules or subsystems developed by specialist vendors (Xy-Quest, Archetype,Deucalion, etc.) and incorporate these into their systems.andP;  Increasingly,people are talking about systems that are built up in layers:andM;* Standard hardware.andP;  At the base is, of course, standard, mass-producedcomputer hardware: workstations, networks, file servers, printers, peripheraldevice interfaces, etc.andP;  Very little of this is specialized for graphic artsapplications except for things such as high-resolution input scanners andoutput recorders.andP;  Even these, however, will be built to conform to industrystandards.andM;* System software.andP;  On top of the standard hardware sits on increasingly richlayer of system software: the operating system (MS-DOS, OS/2, Mac, Unix,etc.), networking software, and one of the emerging graphic operatingenvironments (Mac, Micorsoft Presentation Manager, Next'x Next-Step, SunOpenLook, OSF Motif.andP;  etc.).andP;  the concept (not always perfectly realized) isthat all application software written for a particular environment willfollow consistent user interface guidelines and can be used together in arelatively transparent fashion.andM;* Industry data standards.andP;  De facto standards are emerging for howinstructions and data should be exhanged between programs and devices.andP;  Thesestandards now include such diverse things as PostScript for page output, TIFF(Tag Image File Format) for scanned picture images and the SQL database querylanguage for standardized connections between &quot;front end&quot; programs running ina user's PC and &quot;back end&quot; databases.andM;* Mass-market (&quot;shrink-wrap&quot;) software.andP;  Increasingly rich, powerful andsophisticated software is available at amazingly low cost through mass-marketchannels.andP;  By any objective measure, much of this software is incrediblygood, incredibly bug-free, and surprisingly well documented.andP;  It is alsoincredibly diverse.andP;  As the personal computer indu stry moves toward standardgraphic operating environments (see &quot;System software&quot;, above), and asmass-market software gets increasingly sophisticated, it will become easierto assemble increasingly sophisticated publishing systems by combining theright off-the-shelf modules.andM;* &quot;User-programmable&quot; software engines.andP;  Personal computer database programshave traditionally supported programming languages and/or procedures thatallow the user (or, more often, a freelancer who specializes in such things)to use the general capabilities provided to develop his own applicationsolutions.andP;  This concept is now being extended by such products as Apple'sHyperCard.andP;  One of the most remarkable developments at this year's Seminarswas a tremendous increase in interest in the &quot;user-programmable&quot; or&quot;user-customizable&quot; software.andP;  The XyWrite word processing program is a primeexample of this approach.andP;  A clever XyWrite user can tailor keyboard andcommand procedures to suit the particular needs of his application--even tothe extent of having XyWrite invoke other programs, then return to XyWritewhen the other program is finished.andM;*Software modules and subsystems.andP;  This is a relatively new but veryimportant development.andP;  Increasingly, software developers are viewing theirproducts as &quot;modules&quot; that other developers can use as building blocks forspecialized  vertical-market systems.andP;  Personal computer software developerspackage sophisticated programs as modules that can be invoked by otherprograms.andP;  Shrink-wrap software developers such as Quark and Ventura build in&quot;hooks&quot; that allow others to build their programs into larger systems.andP;  And,as mentioned above, developers such as XyQuest (XyWrite), Archetype anddeucalion offer programs and sub-systems that are being purchased by othervendors and incorporated into their systems.andP;  We see this as a very importanttrend.andP;  Why should everyone who wants to put together a publishing system towrite his own editor, his own handamp;j program, his own database program?andP;  Thereis certainly some logic in letting people who have expertise in particularareas specialize in these areas.andM;* System integration.andP;  On top of all of this, we have what for most people inthis industry remains the crucial issue: system integration, support, serviceand training.andP;  Much of the discussion through the week returned again andagain to these topics.andP;  The major question is how much of the responsibilityfor conceiving and implementing a comprehensive publishing system must beborn by the user, and how much can be provided by a system integrator whospecializes in the application at hand.andP;  We ended the week convinced thatthere will probably be different answers for different customers in differentmarkets.andP;  On one hand, newspapers (who represent a comparatively specializedand comparatively homogeneous market) will continue to find system suppliersanxious (for a price) to provide them with cradle-to-grave turnkey systemssolutions.andP;  Some newspapers will welcome this.andP;  Others will assume moresystems responsibilities on their own.andP;  In the in-plant market, by contrast,the sheet variety of situations coupled with the heterogeneous mix ofcomputers and computer systems means that even the most ambitious &quot;systemvendor&quot; is really much more likely to be selling subsystems that performspecific tasks within a broader framework defined by the customer.andM;Core technologies.andP;  Publishing has become as much a part of mainstreamcomputing's core technologies as has mainstream computing become the linchpinin graphic arts vendors' and users' integration strategies.andP;  The time is longpast when we could afford to remain disinterested observers of the goings-ondepicted in InfoWorld, ComputerWorld, and MacWeek.andP;  To emerge on top as theFourth Wave crests, it is imperative for both vendors and users to stay ontop of what's happening in the mainstream computing industry.andM;In previous Seminars, presentations from Apple, Microsoft, and Sun weresometimes greeted with questions of &quot;What possible relevance can this havefor me?&quot;andP;  In contrast, this year's talks by Steve Ballmer of Microsoft, ScottMcNealy of Sun, and Keith Phillips of Apple were looked upon more as reportcards on the state of our industry's base technologies than as aconfrontational theater.andP;  (The most passion displayed during this year'sclassic matchup was from McNealy, when he assailed the unnamed market forcesthat made him feel like a &quot;clay pigeon at a skeet shoot&quot;--an obviousreference to OSF--and from McNealy and Ballmer, who gave each other thehigh-five when Phillips said Apple might get to multitasking before Microsoftdoes.)andM;But this is not to say that computer industry issues do not stircontroversies.andP;  Although everyone accepts that publishing is now a computerapplication, not everyone agrees on what this implies.andP;  Cal Bauer of BauerEnterprises turned out to be one of the most controversial speakers of theweek (see page 31).andP;  As noted earlier, Cal argued that we as an industry havebecome totally dependent on those standards defined at the desktop level.andO;The graphics arts industry is no longer entirely in control of its owndestiny.andP;  About half the seminar attendees treated this pronouncement as astatement of an obvious fact.andP;  The other half regarded it as totally offbase.andM;Bill Givens of ECRM was one of the supporters.andP;  He contended that we aretotally dependent on page description language interpreters for theintegration of text and graphics--yet, as we will discuss when we get to thePostScript sessions, &quot;the opportunity to make PostScript the standard wasmissed last September.&quot;andP;  PostScript, which itself was defined to address amarket requ irement much broader and more general than the professionalgraphic arts niche (witness the shortcomings in PostScript color and halftonedot shaping to date), is being challenged by a number of other imaging modelsthat are even less beholden than PostScript to graphic arts roots.andM;Both the Apple/Sun/Microsoft exchange and the discussion of PostScript vs.andO;Microsoft GPI (see page 32) made it painfully clear that Apple and Sun areboth paying attention to publishing while Microsoft really is not (at leastnot yet).andP;  Both Apple and Sun understand that most of the computers they sellare used at least in part for &quot;publishing&quot; applications.andP;  Further, bothrecognize that publishing may be their most important &quot;leading edge&quot;application.andP;  All of the things publishers are demanding today (fromnetworking to complete font character sets) are the things the broader officemarket will be demanding in a few years.andP;  Publishers are pushing the state ofthe art further and run into the problems sooner.andM;Microsoft lives in a different world.andP;  It does not even understand some ofthe questions publishers are asking.andP;  This is sobering when you consider thateveryone agrees that for better or worse Microsoft systems (MS-DOS and OS/2)will continue to be the dominant desktop computing environment in the comingdecade.andM;There is hope, however.andP;  At this year's Seminars, we saw the first signs thatMicrosoft is waking up to the fact that publishers are raising some realissues that Microsoft needs to address before it finds itself with a mess onits hands.andM;The importance of standards.andP;  Fortunately--or unfortunately, depending uponyour point of view--the graphic arts and computer industries are convergingright at a time when the computer industry itself is in a period of profound technological change.andP;  Fortunately, we have the opportunity to help shapethat change.andP;  Unfortunately, we are going to have to live through the chaosthat usually accompanies rapid change.andM;In his talk in the Publishing vs.andP;  Computer Technologies session, SteuartDewar of DISC noted the huge increases in computational power promised by theemerging RISC architecture, and went on to mention the potential inherent inparallel processing and graphics coprocessor architectures.andP;  He asked, &quot;Willwe end up abandoning existing standards?&quot;andP;  and observed that &quot;Standards arebecoming so important and people are recognizing that the standardization hasmerits that often overpower performance considerations (Microsoft Window is agood example).&quot;andM;Dewar concluded by stating that &quot;standardization is vitally important forsoftware.andP;  Software can hide the nonstandardization of hardware.andP;  We need tobe able to write one program that runs in all environments.andP;  How much moneyhas been spent in the last 35 years porting software to different hardwarearchitectures?andP;  $ 100 billion?&quot;andM;MIRV'ed standards.andP;  Dewar's comment about the high cost of portingapplication code was strongly seconded by Dave Boucher, president ofInterleaf.andP;  He systematically itemized the various standards that a developerneeds to consider if it is committed--as Interleaf is--to running itsapplications on a variety of platform environments.andP;  Describing thisphenomenon as the &quot;MIRV'ing of standards,&quot; he recited the litany of thosethat Interleaf has to address:andM;&quot;First there are operating systems--all the varieties of Unix, then DOS, theMacintosh OS, VMS, Aegis, VM, MVS and OS/2.andP;  Output standards--PostScript,PCL, ImPress, Interpress, and typesetter languages.andP;  There are standards ofdata exchange, which include ASCII, DDIF, DCA, EBCDIC, SGML, IGES, HPGL, ODA,ODIF and many more.andP;  User interface toolkits--Open Look, NextStep, Mac,Presentation Manager, Apollo Dialog, DECWindows, Motif.andP;  Networks--Ethernet,PC/NFS, Novell, Token Ring, DECnet, apollo Domain, IBM SNA.andP;  There are fonttoolkits--Mac font manager, Bitstream, and now Folio.andP;  Chips--68020, 80386,and RISC chips: SPARC, ROMP, MIPS, Motorola's 88000, and the Intel i860.andO;There are a variety of media standards--9 track tape, 5/1/4-inch disks,3/1/2-inch disks, CD-ROM, cartridge tape.andP;  And there are windowingenvironments--SunWindows, Presentation Manager, X Window, DECwindows, Apollowindowing, Mac windows, Quarterdeck Desqview windows, Microsoft Windowwindows.&quot;andM;What's worse, according to Boucher, hardware manufacturers have gone &quot;beyondMIRV'ing&quot; to add &quot;layer after layer of tools and windowing environments andso forth which really add very little value.&quot;andP;  The reason for these layershas little to do with technical requirements, Boucher said.andP;  Rather, it is aresult of the various hardware manufacturers seeking to differentiatethemselves from each other in an increasingly homogeneous environment, aswell as an attempt to clone the Macintosh's success and &quot;make history repeatitself.&quot;andM;In response to this phenomenon, Boucher quoted Marx: &quot;Historical phenomenaalways happen twice.andP;  The first time as tragedy, the second as farce.&quot;andO;Boucher went on to explain that &quot;one of the reasons that hardwaremanufacturers believe what they're doing is good for us software developersand will result in a proliferation of new software products is that they'reseduced by the history of the PC business, where typically hundreds andhundreds of different products come and go each year--products with shortdevelopment cycles.andP;  That was not the way it was in the old days of mainframecomputers, and it won't be that way in the future.&quot;andM;Boucher concluded by saying that maintaining Interleaf's software on all thedifferent platforms is a major, if not the major, drain on its resources.andO;Nevertheless, Interleaf has been able to impose order on this near-chaos bydesigning its software to be &quot;highly portable by creating our own toolboxes,our own windowing environments, and interface, and graphics library.&quot;andM;Natural selection.andP;  Certainly this is one response a vendor could make tothis situation.andP;  Interleaf is well known for maintaining its own look andfeel in all the environments it has run in the past.andP;  But we believe thatthis stance has caused Interleaf's Mac product not to sell as well asexpected.andP;  In the long run, we believe, vendors have to adopt the userinterface  conventions of the environment in which they are running; userswill demand consistency between applications, especially in a multitaskingenvironment.andM;The advantage of &quot;owning&quot; the look and feel to which everyone will want toconform hasn't been lost on the hardware and software vendors--which isBoucher's point.andP;  However, we are much more confident than he that this willsort itself out within the next year or two.andP;  For all of the reasons hecites, application software developers will support only a few operatingenvironments.andP;  Each of the major vendors (Microsoft, Sun, OSF, etc.)andO;understands this and is competing furiously to make its environment one ofthe winners.andM;What is going on now is a giant confidence game: the vendors are all tryingdesperately to convince the world that huge numbers of software developershave committed to their environments.andM;Perception becames reality.andP;  The environments that can attract the best newsoftware will be the winners in the marketplace because users will buy theseenvironments to have access to the great new application software.andP;  Softwaredevelopers want to focus their effort on the environments that will be themost popular in the market--which means that they will want to focus theirefforts on the environments that all the other software developers arefavoring.andM;Further, developers cannot wait too long.andP;  The most likely applicationsoftware winners are those that are available in a new environment relativelyearly in the game.andP;  But it takes time to develop the next generation ofsoftware.andP;  This is why software developers feel so pressured to decidequickly which environment to support.andM;In short, Boucher thinks that the commercial interests of the hardware andsoftware systems vendors will lead to a continuing fragmentation ofstandards.andP;  We think that it will soon became clear that software developersare committing to certain environments and not to others.andP;  As this happens,the &quot;winning&quot; environments will rapidly gain momentum, and the &quot;losing&quot; oneswill lose adherents.andM;Desktoppers vs.andP;  MISers.andP;  In the end, the debate comes down to the questionof who drives the computing (and therefore publishing) market.andP;  Boucher'scomments are an accurate reflection of what is happening in the traditionalUnix market populated by engineering/scientific and MIS types.andM;Here the major vendors (and their customers) do really believe that we willhave base level standards (e.g., OSF Unix), with proprietary DEC- or IBM- orApollo-specific &quot;value add&quot; layered on top of this.andM;The desktop market, as Steuart Dewar points out, depends upon standards andcommonality to create a broad market for application software.andP;  If the marketis driven by the high-end guys (who think &quot;proprietary&quot;) coming down, Boucheris right.andP;  If, as Cal Bauer contends, it is driven from the desktop, then weare right.andM;Who will be the developer?andM;One of the myths that prevailed early in the transition to the fourth wavewas that most publishing applications would eventually be available inlow-cost, shrink-wrapped packages for PC and Mac Platforms.andP;  Although thishas been true in certain cases (text editors like XyWrite and page layoutproducts like Ventura Publisher come to mind), for many other applicationareas we have yet to see the shrink-wrapped equivalent.andP;  Productionmanagement and process color packages are only just beginning to emerge, andeven simple copy routing remains beyond the ken of most off-the-shelfsolutions.andM;The impact of this shortfall in developing fourth-wave tools to replacethird-wave ones has been felt throughout the industry, and it has beenfurther exacerbated by the influx of neophyte desktop publishers, who havebeen drawn up market as their application packages have increased insophistication to include many up-market capabilities.andP;  They are hitting awall: the limits of their own expertise, as well as the limitations of theapplication packages.andM;The promise of OS/2 and Unix is that we will see a new generation ofsophisticated applications for the publishing industry that were not possibleon the Macintosh or MS-DOS-based PCs.andP;  Certainly the picture painted byApple, Microsoft and Sun is a rosy one, with sophisticated multitasking anddistributed computing tools just waiting for developers to exploit theirpromise.andM;But many of these tools are not yet available, particularly for fontmanagement.andP;  And with the exception of Apple, a mature and consistent userinterface metaphor is still lacking.andP;   Even if these tools were to be madeimmediately available, the cost of developing these applications might proveprohibitive for all but the largest software developers.andM;Paving the cowpath.andP;  Why is this?andP;  According to Dave Liddle, CEO of Metaphor,we should look beyond the &quot;fabulous charm of the emerging new technologies&quot;to see what progress we are really making.andP;  Liddle argued that the softwareindustry makes a bad partner when it comes to pioneering new applications ordevising new metaphors for the emerging technologies.andM;The software industry is geared toward doing the same old things better andfaster, Liddle said, which is inherently an imitative rather than aninnovative stance.andP;  This tendency toward fighting yesterday's battles hesummed up as &quot;paving the cowpath,&quot; since it breaks no new ground.andM;The last great metaphor devised for (and largely responsible for the successof) desktop computing was the electronic spreadsheet, which &quot;changed the waywe do business.&quot;andP;  Since then, we have been mired on a &quot;cost/price sandbar,&quot;churning the same basic user population (&quot;we've sold all the standalone toolsfor self-reliant users that we can--all we're doing now is trading them up tothis year's models&quot;) and generating no new users in the process.andM;Comparing PC software to a Swiss army knife, Liddle observed that you &quot;don'tuse PC software instead of real tools&quot;; instead, you use it only whenconvenience outweighs its shortcomings.andP;  Three basic needs remainunfulfilled:andM;1.andP;  Access to data, wherever it is.andM;2.andP;  Tools that can be used by everyone.andM;3.andP;  End-user application development.andM;The problem is that, at current shrink-wrapped application prices, mostvendors can't sell enough copies to enough PC market segments to make enoughmoney to pay for the ever-escalating cost of development.andP;  As theseapplications grow in complexity and sophistication, the cost of bringing themto market increases even further to the point where only the largest softwaredevelopers can afford to fund their  development.andM;End-user programming.andP;  Liddle said that most merchant software developers areunwilling to take the risks necessary to provide solutions to these needs,particularly 1 and 2 above.andP;  Increasingly, the burden of development andinnovation is shifting toward end users--number 3 above.andM;End-user programming tools such as HyperCard from Apple, Interface Builderfrom Next, and the Metaphor capsule (which represents a nesting of a numberof procedures that can be linked together graphically on a user's screen)promise to change the end user's role in the development process.andO;Increasingly, the conceptualization work is moving from the specialist, whoonly knows how to build the tools, to the end user, who understand theapplication.andM;Jean-Luis Gassee, Apple's ranking visionary, said much the same thing in histalk when he described Apple's future object-oriented programming directionsfor HyperCard and its successors as a means of providing &quot;programming forindividuals rather than temple priests.&quot;andP;  According to Gassee, the key tosolving the application complexity conundrum is to provide a developmentframework that attracts people who have the application knowledge to addvalue to them.andM;Anyone doubting the efficacy of end-user development would have had hisskepticism severely challenged by the HyperPath project demonstrated byDaniel Alonso of the Cornell Medical School.andP;  HyperPath is a system forteaching pathology.andP;  Alonso also discussed the ABC multimedia teachingprogramming on the '88 election, which uses a HyperCard stack.andP;  Bothrepresent application development innovation that rivals or surpasses much ofwhat is available commercially today.andM;Dispersion of technology.andP;  Let's look at this issue from another angle--thatof the graphic arts supplier or system integrator.andM;Dave Dinin, president of Linotype USA, quoting an article in the HarvardBusiness Review, calls this trend the dispersion of technology.andP;  Accordinglyto Dinin, what this means is that the &quot;number of people and the number ofsites with technological capability--and technological compatibility--willcontinue to climb....Specialists--including graphic designers, retouchers,illustrators, and writers--will tie in electronically to a central system,which will serve as the manager and integrator of the entire job.&quot;andM;Presumably, then, the role of the system integrator--whether it be the vendoror VAR, service bureau, or the publisher himself--is to address needs 1 and 2above as part of the value he adds.andP;  As Dinan said, &quot;today, when a customerdouble-clicks on a file and opens it, he or she has no idea and no need toknow what went on inside the computer&quot; or where the data resides in thenetwork; &quot;if we don't do the same for issues like the determination of dotsize and shape, and imagesetter  calibration, then desktop color won't everbe a big hit.&quot;andM;To do this, developers, will need to take steps to build those skills intothe technology.andP;  Clearly, the benefits of knowledge-based programming,whether it be from the developer side or the end-user side, are that itenables generic tools to be transformed into application-specific solutionsthat can address well-defined problems that go well beyond the understanding(or care) of the tools' developers.andP;  If what was hinted at by the Cornell andABC demos at the Seminar is any indication of what we can expect to find moreof in the future, the &quot;dilemman&quot; posed by the lack of shrink-wrappedapplication solutions will prove to be a boon to the resourcefulness ofvendors, VARs and publishers alike.andM;Who will be the integrator?andM;One issue that was virtually guaranteed to get the sparks flying at pastseminars was how publishing systems will be built and distributed.andP;  In thepast we'd see companies such as Atex, SII, and Crosfield aligned on one sideof no man's land, arguing that only a graphic arts turnkey system supplierwas in the position to sell, service, and support &quot;total publishingsolutions.&quot;andP;  On the other side of no man's land were the upstart PC-basedsystem suppliers (like CText and Morris), VARs (e.g., the Gang of Ten), andeven the odd maverick user (Eddie Shah) who argued just as persuasively thatthey could assemble more than 80% of the total solution using completelyoff-the-shelf components at a fraction of the cost of the large systemvendors.andM;Caught in the middle of no man's land, of course, were the rest of us--thevery publishers these competing interest groups were trying to serve.andM;Selling Fourth Wave systems.andP;  Consequently it was surprising to find aconsensus on the subject at this year's seminar.andP;  The watershed at thisyear's event was the presentation given by Agnes Imregh, VP of marketing atAtex.andM;Stating up front that customers in the future will be &quot;buying varioustechnologies when buying from Atex,&quot; Imregh went on to itemize the &quot;cost ofdoing business in the Fourth Wave&quot; for vendors and publishers alike.andP;  Afteritemizing the advantages provided by third-wave solutions (which, by andlarge, the end users themselves acknowledge), such as simplified purchasingand support (everything was supplied by a single vendor), with the latterusually being expected for &quot;free and forever,&quot; Imregh moved on to paint asobering picture of what happens when fourth-wave systems encounterthird-wave customer expectations.andM;According to Imregh, users can expect to see:andM;* specialized vendors disappear or transform themselves into value-addedresellers;andM;* off-th-shelf products that were developed for other markets, notpublishing;andM;* support and delivery that is not geared to the deadline pressures of thepublishing industry;andM;* the shifting of the burden for integration and support costs from thespecialized vendor to the end user.andM;On the other hand, Imregh admits that third-wave vendors have no choice butto join the fourth wave.andP;  The alternative is to generate &quot;lots od red ink&quot;while attempting to live with dramatically reduced margins from hardwaresales, escalating support costs, and pressure to match hardware vendordiscounts.andM;The model Imregh proposed as workable for selling fourth-wave publishingsystems--and one that Atex evidently intends to follow--is to:andM;* Sell softwareandM;* Sell hardware optionally at list priceandM;* Charge for hardware purchase and integrationandM;* Charge for any service you deliverandM;* Cover costs where they are incurredandM;* Rigorously separate standard systems and customer specialsandM;The irony in this prescription, of course, is that this is essentially themessage we have been hearing from CText and other PC system vendors and VARsfor a number of years.andP;  It echoes Jim Lennane's famous speech some years agoin which he argued that publishers had better get used to paying for theservices they want.andP;  Darryl Tjaden of CText, who followed Imregh on thepanel, delivered much the same message, adding &quot;Never build what can bebought or licensed.&quot;andM;Industry structure.andP;  Remarkably, the entire panel that addressed sale andsupport issues agreed that in the future there will be a three-tieredpublishing systems industry:andM;1.andP;  Retail distribution, where it's every publisher for himself when it comesto integration, service and support;andM;2.andP;  Value-added resellers and custom integrators, who are today largelyproviding the role models that everyone else is seeking to emulate;andM;3.andP;  System companies who assemble systems, making extensive use of softwaremodules purchased from a variety of sources.andP;  This is the strategy that Atexis aggressively pursuing.andM;With each of these distribution models, there is a prima facie assumptionthat the customer--the publisher--must get involved in the process.andP;  Indeed,with the first solution, he largely owns the process.andM;Regardless of the model one wishes to pursue, there is at least oneunresolved issue that results from the unfamiliar  territory on which we nowall find ourselves.andP;  In the past there was always the safety net of the&quot;system supplier&quot; to fall back upon if a publisher's experiments withself-integration fell apart.andM;Now, however, all three distribution channels are drawing from the same wellfor much of the application technology each markets.andP;  As we indicatedearlier, XyWrite has become the virtual industry-standard editor regardlessof which vendor or VAR you go to.andP;  (The only way to assure yourself of agreater variety of choice is to build your own system around Microsoft Wordor WordPerfeect or whatever.)andM;Many high-end vendors are working with PageMaker and Quark Xpress for thepage makeup component of their systems.andP;  And a number of VARs are buildingcost-effective networked publishing systems using XyWrite and VenturaPublisher on Novell networks.andM;What this means is that it becomes increasingly more difficult todifferentiate product offerings from a variety of vendors when all are usingmore or less the same building blocks.andM;Buying fourth-wave systems.andP;  As we have seen from our earlier discussions,the narrowing of choices is a mixed blessing for the end user.andP;  On the onehand, he is for the first time in a position where he can assess thetradeoffs between building his own integrated system and paying someone elseto do it for him--either way, the building blocks will be largely the same.andM;On the other hand, Steve Conaway of The Independent in the UK--which is inthe midst of an ambitious project to build its own integrated paginationsolution from industry building blocks as diverse as Atex, Scitex, QuarkXpress, Hyphen, and XyWrite--observed at the end of his talk: &quot;If all of thisPC stuff is so standard and so easy to use, why are we queuing up to paysomeone else to integrate and install it for us?&quot;andM;Making fourth-wave systems work.andP;  Perhaps the most constructive position totake on this confusing situation is to recognize that everyone's roles are ina period of transition.andP;  As Paul Brainerd, Aldus's CEO, titled hispresentation, &quot;Let's Talk.&quot;andM;Brainerd advised publishers to be flexible: &quot;Feel threatened? Create anopportunity.andP;  No total solution?andP;  Use what there is.andP;  Can't do it your way?andO;Try another way.&quot;andP;  His advice to the computer industry--by which he means thehardware, operating system and application software suppliers (includingdesktop publishing software vendors, whom he significantly places in thecomputer rather than the graphic arts industry mainstream)--is to &quot;learn yourcustomer's business, visit a customer's shop, borrow your customer's expert,work with trade associations, and provide complete solutions.&quot;andP;  The key,according to Brainerd, is to realize you are dealing with people, nottechnology.andM;Tom Hagan, CEO of Camex, had a similar message when he observed that the&quot;system integrator's role is very different&quot; today: system Randamp;D is open,hardware has to be unbundled from software, four or five platforms have to besupported, and customers have to be treated as your collaborators, not justas passive recipients of your expertise and solutions.andP;  This approach is madeall the more necessary because of the increased ability publishers have to doit themselves.andP;  As Conaway's presentation underscored, an enterprising userwith deep pockets and willingness to learn can build his own integratedsolution over time.andM;Ultimately, the tradeoff may well come down to time and money.andP;  As LarryLiebson, CEO of Xyvision, noted, the &quot;individual user can do anything himselfif he has infinite time, skill, talent.&quot;andP;  But this, he said, isn't the realworld.andP;  In the end, publishers have to make the build/buy tradeoff based onless tangible issues than cost (everyone agreed that in the fourth wave, costends up being roughly equal regardless of which route you take), such as theamount of control you want to have over the shape of the system you end upwith.andP;  If they are to stay in business in the long run, clever vendors andVARs will, as Hagan and Tjaden both said, work closely with their customersto ensure that they achieve the same &quot;warm and fuzzy feeling&quot; that they getfrom doing it entirely on their own.andM;Composition enginesandM;One of the most interesting developments of the exhibition was the movetoward the use of modular composition engines as building blocks for systems.andO;Two vendors showed engines of this type, and both appeared capable ofproviding quality composition.andP;  Although it remains to the discretion of thesystem integrator how the engines will be used--and how much of thecapability will be made available to the end user--this is still an importantstep in the right direction.andM;It is no secret that many of the new systems introduced in recent years havesuffered from poor typographic capabilities.andP;   These new engines could have asubstantial impact, both in improving the quality of typography and inspeeding the development of new systems.andP;  We expect that a lot of theexisting systems in the market would benefit greatly from replacing theircurrent composition modules with one of these new ones.andM;The two vendors exhibiting these engines at the Seminars were DeucalionResources Group (DRG), which showed its Tomahawk product in the CTextexhibit, and Stonehand, which demonstrated its Composition Toolbox in spaceshared with Circle Noetic Services.andP;  CText, one of the first Tomahawkcustomers, will be using it initially as the composition portion of itsSystem 10 product line.andP;  Circle Noetic's function at the Seminars was toprovide the hyphenation routine that was incorporated into the Stonehandcomposition engine.andP;  Circle also demonstrated its Dashes hyphenation program,which is available for incorporation into other vendors' products.andM;In some ways, the DRG and Stonehand products appeared to be in sharpcontrast.andP;  DRG's Tomahawk was running on a PC under OS/2, while Stonehandused a Macintosh.andP;  DRG said, though, that Tomahawk is currently running alsounder SCO Xenix and that work is in process to port it to both Ultrix andTandem, while ports to Sun and macintosh platforms will be started soon.andM;Stonehand emphasized that its Composition Toolbox can be ported to anyplatform, not only 68000-based ones.andM;The two companies took different approaches toward presenting their productsto the public.andP;  DRG demonstrated its capabilities in the form of intricatelines of commands and messages on a PC screen, while Stonehand worked up anattractive Macintosh user interface and demonstrated composing fancyrunarounds interactively, which reflected the fact that Stonehand designedits product as an interactive SYSIWYG engine from the start.andP;  DRG commentedthat, although it didn't demonstrate an interactive capability, Tomahawk wasdesigned to be interactive.andM;There are also differences in their basic capabilities, such as in thejustification routines, pagination, aesthetic typographic features, and soon.andM;But in spite of these differences, we think it is important to emphasize thesimilarities.andP;  Both of these programs are aimed at providing qualitycomposition as a modular building block.andP;  And both of them should be able tosurpass in composition quality even many of the better commercial systems onthe market today.andM;Justification.andP;  Both programs provide a justification routine to which can beadded hyphenation points determined by another module obtained from a thirdparty.andM;Tomahawk has an intriguing justification routine with some nice features notfound on most programs.andP;  It sets up an ideal zone, bounded by user-definedvariations from the optimum (or ideal) word space.andP;  It also sets up anadditional zone on each side of the ideal zone, which will be used only ifthe ideal zone can't be accommodated.andM;The system first attempts to break the line on a word space within thejustification zone, choosing first the space nearest to the optimum.andP;  If itdoesn't find a word space to break on, it next attempts letterspacing, firstpositive and then negative.andP;  Interestingly, it enables the user to set updifferent letterspacing parameters for ideal zone and the broader zonesadjacent to the ideal zone, which gives the user a little more control overthe final appearance than a single value would give.andP;  (We'd have toexperiment to figure out what values to set, and how much difference it islikely to make.)andM;Another nice aspect of this routine is that it adjusts letterspacing and wordspacing proportionally with respect to each other, rather than using all ofone before attempting the other.andP;  This calculation is based on the user'sspecifications.andP;  If letterspacing fails to provide a good break, the systemattempts to hyphenate.andM;Stonehand takes a somewhat different approach, although it, too, bases itscalculation on the optimum word space, looking for the closest word space oneither side of the optimum value.andP;  Stonehand's second priority ishyphenation, in preference to letterspacing, which is attempted only as alast resort.andP;  Both negative and positive letterspacing adjustments aresupported.andM;Both programs allow controls over the size of a hyphenatable word, the numberof consecutive lines that may be hyphenated, and the number of charactersthat must precede and follow a hyphen.andP;  tomahawk also supports specificationof six user-definable word delimiters (slash, em dash, en dash, fixed spaces,etc.), a nonbreaking space, and the ability to prevent either of the wordsmaking a compound word to be hyphenated.andM;Stonehand allows prohibition of hyphenation of proper nouns and acronyms.andP;  Italso supports a set of application-defined word delimiters, of which thedefaults are the word space, hard hyphen, slash, en dash, em dash and fixedspaces.andP;  The application may define any number it desires.andM;Other aesthetic features.andP;  Both programs support most of the key aestheticfeatures of commercial systems, including kerning, tracking and hungpunctuation, although they differ somewhat in implementation.andM;In tracking features, tomahawk supports 10 tracks and Stonehand five.andM;Stonehand has the edge in hung punctuation, allowing any characters to behung in either margin b y any amount.andP;  This is achieved by taking advantageof the kerning feature, using a character plus the &quot;end line&quot; code to triggeran ajustment into the margin.andP;  (This wasn't demonstrated, but Stonehandassured us that it works.)andP;  Stonehand also has a hung punctuation featurethat could be used without employing the kerning routine, but is is based onthe use of a default set of characters hung on both margins.andM;As demonstrated at the Seminars, Tomahawk gives the user control over whichcharacters are hung, but not over the amount they hand (100% of the charactermust be hung) and it doesn4t provide independent consideration for the leftand right margins.andP;  DRG said, however, that it is adding the ability tospecify the number of relative units a character can hang on the right orleft.andM;Stonehand didn't demonstrate an algorithm for setting ragged text, but wewere told that it has a routine that is based on choosing patterns of longand short lines, with facilities for specifying the size of the ragged zoneand the amount that adjacent lines must vary.andP;  We'll look at this at the nextopportunity.andM;DRG hasn't implemented a pattern-based ragged program, stating that such anapproach doesn't provide much improvement over a basic routine.andP;  Instead itprovides for a ragged zone and lets lines end within the zone.andM;Tabular composition.andP;  For tabular work, DRG already has an extensive programthat automates most table-generation functions.andP;  It calculates automaticallythe width of each column by sorting the entire table looking for the longestentry in each column; it supports straddle heads; it aligns characters takinginto account punctuation; it generates gutter rules; etc.andM;Stonehand is working on a table editor that is scheduled to be introduced inthe fourth quarter.andM;Pagination.andP;  Tomahawk contains automatic pagination features, includingplacement of footnotes, widow and orphan controls, and verticaljustification.andP;  The footnote features look extensive, supporting a variety ofnumbering schemes, splitting footnotes if needed over two pages, andplacement according to user-specified criteria.andM;Stonehand hasn't viewed its role as the provider of pagination functions, butrather offers a means of flowing text into containers.andP;  But it says it willprovide widow/orphan controls and vertical justification in a future release.andM;Speed.andP;  Until we see these programs implemented by a system vendor, we won'tcomment on speed, except to say that both companies claim their routines willrun fast.andP;  Both are striving to maximize speed by using shortcuts, such aspreventing recomposition of text that hasn't changed.andM;Programmability.andP;  One distinction we noted that could be important for somepeople was that Tomahawk is designed to have the system integrator pass on tothe end user the ability to do some creative things on his own.andP;  Tomahawk isbasically a programming language, quite similar to C, that gives the end useraccess to system variables and facilities for incorporating features such asconditional statements to be interpreted by the composition program.andM;Thus, it is possible, for example, to have the system check the current depthof the file, compare it with a target depth, and, based on the results of thecomparison, perform one action or another (access a stored format, insertadditional lines of text, etc.).andP;  We like this capability, which is availableon some quality commercial systems but not on any low-end systems that weknow of.andP;  And it isn't part of the Stonehand offering.andM;In perspective.andP;  As we said earlier, we think it is important to emphasizethe roles that both of these engines can play in future system development.andO;Much in the way that XyWrite has upgraded the editing capabilities oftypesetting systems and, in many cases, increased the public awareness ofwhat good editing features are, the DRG and Stonehand engines can raise theindustry's composition standard as well as save system developers a largeamount of trouble.andM;That depends, of course, on getting the engines into use.andP;  That should startto happen soon.andP;  DRG has signed some deals to supply its product todevelopers, the best known of which may be CText, which is expected to havesomething ready to demonstrate this fall.andP;  We don't expect any hitches in theschedule; DRG established a reputation for itself in this business a longtime ago, having provided the composition portion of the Varityper Epicssystem, in both batch and interactive implementations.andP;  The company'sprincipals have a lot of additional experience as well, and their performanceat the Seminars reaffirmed the conclusion that they are on top of thesituation.andM;Stonehand also is likely to hit the market soon, having signed a deal withCrosfield to supply its Composition Toolbox as the engine in the Lightspeedcolor design system.andP;  We haven't seen that product yet, but we don't have anyreason to believe that it won't fulfill our expectations regarding the futureof this new development.andM;Hyphenation modulesandM;System vendors have been relying on suppliers of hyphenation algorithms andexception dictionaries for a long time, so the appearance of Circle NoeticServices' Dashes algorithm didn't break new ground in that respect.andP;  But thecompany had an interesting demonstration.andP;  It set up a Macintosh running thenew German program as well as its English language routines and challengedvisitors to stump the algorithm.andP;  Although we didn't feel qualified to judgethe German, we fed it a few tricky English words and encountered only onepossible bug: standalone, which circle said was an invalid test, since theword should have a hard hyphen between stand and alone.andP;  We won't argue thepoint.andP;  Dashes was impressive.andM;This was the first showing of the German program, but Dutch has beencompleted already.andP;  Circle said it next will add Swedish, Danish andNorwegian.andP;  Its English program will provide the hyphenation points for theLightspeed product using the Stonehand Composition Toolbox.andO;</TEXT></DOC>
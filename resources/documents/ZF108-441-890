<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-441-890  </DOCNO><DOCID>08 441 890.andM;</DOCID><JOURNAL>UNIX Review  May 1990 v8 n5 p87(6)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Software configuration management tools. (Software Maintenance andDevelopment Systems Inc Aide-De-Camp; Softool Corp CCC) (Off theShelf) (evaluation)</TITLE><AUTHOR>Richartz, John.andM;</AUTHOR><SUMMARY>Two software configuration management (SCM) programs for the UNIXenvironment are reviewed and compared: Software Maintenance andDevelopment Systems' Aide-de-Camp (ADC) and Softool Corp's CCC.andO;The SCM process is designed to ensure control of the content of aproduct undergoing testing, that its released version is the sameas the one tested and that documentation is up to date.andP;  CCC iseasier to install than Aide-de-Camp and is better documented.andO;Each program is built around a database model; CCC builds'systems' from 'configurations' and is a complete solution insituations where control and authorization are important, whileADC is geared toward small groups of well-disciplined developers.andO;Both products separate their operational environments from theusers' shell environments.andP;  CCC follows a more structured SCMmodel than ADC.andM;</SUMMARY><DESCRIPT>Company:   Softool Corp. (products)Software Maintenance and Development Systems Inc. (products).andO;Product:   Aide-de-Camp (Project management software)CCC (Computer program).andO;Topic:     ConfigurationSoftware MaintenanceManagement of EDPSoftware PackagesEvaluationComparison.andO;Feature:   illustrationtable.andO;Caption:   Report card. (table)Profile. (table)andM;</DESCRIPT><TEXT>SOFTWARE CONFIGURATION MANAGEMENT TOOLSandM;Software-configuration management (SCM) usually brings a mixture of fear andloathing to those who concern themselves with the subject.andP;  As anintellectual study, SCM offers some interesting problems, but as a practicalmatter it becomes extremely challenging.andP;  The need to deal with change in asoftware product has been recognized from the earliest days of softwaredevelopment, but means have advanced far beyond hauling card decks around inshopping carts.andM;Since the need for software-development project management was recognized,there has been dispute as to which methods should be used.andP;  One school placesemphasis on the tools that assist those charged with manipulating sourcematerial.andP;  Such tools make software development convenient and address theinitial stages of the software-development cycle.andM;Another camp views the problem from a product-management perspective, whereensuring the integrity of an organization's investment is of paramountimportance.andP;  While the development of a product's code is important, so isthe degree of certainty about the actual content of the product and themanagement of change to that content.andP;  Factors other than source-code controlbecome significant, and the development process must ensure that:andM;* the content of a product being tested is well controlled so that changesare testable;andM;* the released version of the product is the same as the one tested;andM;* product maintenance is performed on the same source material that wasreleased;andM;* derivative and parallel product development can occur and that sourcematerial can be migrated between the different development paths;andM;* that the product's documentation is altered to reflect changes in thedesign of the product.andM;This second product-management approach demands significantly more structureand rigor in the product-development process.andM;The significance of SCM becomes clear when viewed in the context of the lifeof a software product.andP;  After the relatively simple first release of aproduct, bug fixes and bug reports usually have to be tracked.andP;  PerhapsVersion 2 of a product is in development while maintenance and updatereleases are prepared for Version 1, but the bug fixes for Version 1 stillhave to be incorporated into Version 2.andP;  A customer may want a custommodification to Version 1, resulting in a new product release; and themodification must be maintained for Version 2, as well.andM;Simply put, SCM starts with the need to manage the investment in a productthroughout its life and adds the requirement that software engineers be ableto make modifications to its content conveniently.andP;  SCM is aninformation-management activity; software modules and documentation representthe information and the actions on these modules demand a database.andO;Configuration managers require a collection of tools to manage and track thecollection of entities that comprise each instance of a product--derivativeversions, site- and customer-specific variants, bug fixes, test anddevelopment, and documentation.andM;Configuration management requires tools providing more than the file-revisiontracking of SCCS or RCS.andP;  While either is often extended to deal with changeacross the set of files comprising a product revision, both lack a means ofactually managing that change without a significant investment instructure-definition and change-management tools by engineers that are bothtechnically skilled and knowledgeable in SCM requirements.andM;The ProductsandM;In this review I will compare two commercial SCM packages that go far beyondthe capabilities of our friends SCCS and RCS and that are available for theUNIX environment--CCC from Softool Corp. (Goleta, CA) and Aide-de-Camp (ADC)from Software Maintenance and Development Systems (SMDS, Concord MA).andP;  CCC isavailable for a range of systems--from micros to mainframes--and under avariety of operating systems such as UNIX, VMS, VM, and MVS.andP;  For reviewpurposes I used Release 3.0.3.0.andM;ADC is also available for a range of platforms and operating systems,including UNIX, Primos, VMS, and VM.andP;  The version reviewed was 7.16; version7.17 should be available by the time this review is in print.andM;Both packages contain powerful and complex tools that focus on tasksspecifically associated with software-product management.andP;  Each product wasdesigned with a different underlying philosophy, but neither forces aspecific development process or development environment.andP;  Configuring thesystem to best accommodate a particular product-development scheme is left asa non-trivial exercise for the user.andP;  For a company that has a clearlydefined development process, this involves learning how to use an SCM productand establishing the interfaces appropriate for software-development,testing, and release-management procedures.andP;  If a clearly defined process isnot already in place, it must be defined before SCM products can provide thegreatest benefit.andP;  Both Softool and SMDS estimate an investment of three tofive months to establish a well-functioning SCM system.andM;Both Softool and SMDS offer assistance in making their products part of acompany's software-development process, and provide customer training.andO;Training for products of this scale is critical; the few people in theorganization charged with supporting the SCM system for other users mustunderstand the product and its capabilities fully.andM;InstallationandM;Both products were reviewed on a Sun-3/260 running SunOS 4.0.3.andP;  A terminalwas attached to one of the Sun tty ports.andP;  Each product was installedaccording to its installation instructions.andP;  Both products must be installedas root in order to create the necessary directories and make file-modechanges.andM;CCC was quite easy to install, requiring about 12 minutes.andP;  I merely had tofollow the instructions, check to see if there was enough disk space, andload from the cpioformatted tape.andP;  CCC creates a single directory tree inwhich the executable and macro directories reside.andP;  A change to the PATHvariable to search the macros directory, and addition of an environmentvariable pointing to the root of the Softool directory tree were all that wasnecessary.andP;  An automatic installation-verification process, in which adatabase is set up and automatically tested, verifies the success (orfailure) of the installation procedures.andM;Installing ADC was not quite so trouble free.andP;  A tar archive is loaded fromtape into an ADC directory.andP;  A user entry is created in/et/passwd for afictitious user adc, then the ownerships of the files in the ADC directorytree are transferred to the fictitious adc user.andP;  The manual is not expliciton this point; I used the find command to change the ownerships.andP;  Theinstallation process is verified through manual invocation ofdatabase-initialization and ADC commands.andP;  This was frustrating for me, sinceADC's help facility wasn't functional (the help directory definition wasmissing), nor was the necessary editor defined.andP;  These problems were resolvedeasily with a call to SMDS, but should not have been encountered immediatelyafter the product was installed.andP;  The product would benefit from aninstallation script that manages the installation process.andM;ADC provides recommendations for disk-space requirements and physical memoryas a final section in its product overview.andP;  I could find no such informationfor CCC.andP;  Both companies should make these requirements more obvious, perhapsincluding them in the installation manual.andP;  Because of CCC's apparent hungerfor temporary storage, the documentation should include recommendations forprocess virtual-memory limits, swap space, and free disk space.andM;DocumentationandM;Both companies provide a complete set of manuals, installation procedures,and technical notes and reports.andP;  ADC's documentation takes up one inch ofshelf space, while CCC's occupies about nine inches.andP;  It should also bepointed out that the manuals alone are not sufficient to make the best use ofthese products.andP;  Softool specifically notes that the manuals are primarilyfor reference and that training courses are a recommended introduction to theCCC package.andM;Softool and SMDS both provide very good introductions to using their productsto handle both simple and complex software-configuration management tasks.andO;Either manual set is a good reference for common problems encountered in SCMactivities and both include some suggested solutions.andM;Softool provides five full-sized, three-ring binders of documentation forCCC, as well as a stapled installation/verification manual and aquick-reference manual for CCC commands.andP;  The manuals are clearly written,with detailed descriptions and examples, and a good introduction to softool'shighly structured and controlled C/M model.andM;SMDS provides five plastic-bound volumes containing manuals and technicalreports.andP;  A large part of the documentation is devoted to descriptions of thecapabilities of some of ADC's supporting programs.andP;  It is sometimes unclearwhich manual should be consulted for a desired piece of information, and thelack of a detailed table of contents or index in some manuals does not help.andM;SupportandM;Recognizing the potential impact of problems with products so intimate toyour business, both companies provide ready customer support.andP;  SMDS was veryresponsive to my calls and was very interested in ensuring that the productwas performing properly and I often found myself talking to theproduct-development engineers.andP;  Since I work on the west coast and SMDS islocated in the east, problems occasionally arose at hours inconvenient forSMDS, but these were addressed with no less a desire for customersatisfaction.andM;Softool has a well-staffed, more formally operated support organization, andcan either answer questions immediately or after consulting with itsengineers.andP;  The company's &quot;no patch&quot; policy sometimes demands that customerswait for a scheduled update release to fix bugs, but Softool is willing toturn out a release if a bug seriously affects a customer's activities.andM;It should be pointed out that Softool also supports a national user's groupthat has regular meetings and a periodic newsletter.andP;  This can be a valuableproblem-solving resource.andM;Configuration-ManagementandM;PerspectivesandM;Softool and SMDS have different perspectives on the problem of managingsource code, and as a result, their products take different approaches.andP;  CCCuses a very structured SCM model that clearly separates the responsibilityfor managing product changes from the activities associated with creatingchanges.andM;Three hierarchical levels of authorization (administrator, manager, anddeveloper) grant various access or modification rights to those at lowerlevels of authority.andP;  For example, the database administrator may grant adevelopment manager the authority to make a set of changes to specific fileswithin a product configuration.andP;  The manager may then authorize developmentengineers to perform the desired changes.andM;CCC is built around a database designed specifically for managing productconfigurations in which systems are composed of various configurations.andO;Configurations subsequently consist of hierarchies of modules and textentities; the latter are version-controlled and contain information such assource code, object modules, archive libraries, or documentation.andM;Configurations represent specific release versions or fixed product instancesand are the primary units of product management.andP;  A configuration may be&quot;frozen&quot;, typically when the product is released, to capture the state of theproduct at the time of release.andP;  Derivative configurations identical tofrozen configurations can be created for use in product maintenance orsubsequent development.andP;  These derived configurations can then be modified asthe product is maintained or as successive versions are developed.andP;  CCC hasfacilities to port changes between configurations, as is necessary if bugfixes in the maintenance configuration are to be duplicated in thedevelopment configuration.andM;ADC uses a database model and means for manipulating its contentssignificantly different from CCC's.andP;  ADC contains no inherent notion ofconfigurations and versions, but instead provides a database in which storedentities may be tagged to associate them as a related set.andP;  This set mayrepresent anything from a product version to a set of changes.andP;  The termchange set (Cset) is used to refer to the collection of changes made to aproduct to achieve some result.andP;  Csets may be manipulated with list equationsin which a product revision is defined as a base version plus some collectionof Csets.andP;  Csets not yet finalized are considered plastic and may continue tobe changed until specifically fixed, when they become unchangeable in thedatabase.andM;Csets can be used to transport units of change between product versions byincluding a single Cset in multiple list equations or can be switched on oroff in a product by modifying the list equation that describes the productversion.andM;Not only can list manipulation be used for specifying specific instances of aproduct, but it can readily be applied to well-designed products for makingchanges in elements of functionality, such as a user or I/O interface, simplyby including a different Cset in the list equation.andP;  It must be pointed out,though, that not all Cset combinations make sense together, since the contextin which a change is made remains important and, without a close couplingbetween architectural boundaries and Csets, lines of change through theproduct may start to weave a tangled web.andM;On a smaller scale, list manipulation may be used to remove a change by notincluding a particular Cset in the list equation describing the product.andO;Debugging output, for example, can be turned on and off by inclusion orexclusion of the debug Cset from the list, then rebuilding.andM;In contrast to ADC, CCC's method of incorporating changes into a product ismore structured, in keeping with the rigor of its approach.andP;  CCC allows unitsof change to be moved between product configurations, but a specific commandthat is used to control the process indicates the likely success of thechange through warnings and success/fail indications.andP;  With its strictlylinear version mechanism, CCC has no mechanism similar to ADC's for disablingintermediate changes.andM;EnvironmentandM;Both CCC and ADC provide operational environments separate from the users'shell environments.andP;  Users must log in to the operational environment to gainaccess to ADC's 50 or CCC's 80 commands.andP;  The interfaces of the operationalenvironments of both products present command-line models with helpfacilities and an escape to the host UNIX environment.andP;  Certainly this is outof keeping with the expectations of users familiar with the SunViewinterface, but is a lowest-common-denominator approach to supporting avariety of platforms and operating systems.andM;CCC provides an editor, a build facility, and a macro command-language.andP;  Thiscomplete environment allows software-configuration managers to make use ofthe same tools and macros in any environment for which CCC is available, withminimal dependence on host facilities.andP;  CCC's build facility is essentially amake tool that is able to test dependencies in either the database or thehost filesystem, or between the database and host filesystem.andP;  CCC retainsthe host-filesystem time-stamps on files in the database, allowingtime-stamp-dependent operations (such as make) in the host environment toperform reliably on exported sets of files.andM;Converting from Makefiles to CCC's build macros may be painful, but it isunnecessary if the Makefiles are maintained by developers as part of theproduct source material.andP;  Configuration managers may then use CCC's buildfacility to control operations in the database and to direct Makefiles.andP;  Thebuild facility includes a nice extension to the build process by providing aprolog section that is always run prior to performing other build commands,and an epilog section that is run last.andP;  These two sections can be used toexport files into the host environment, direct the host environment toperform some action (such as make), and then re-import the build results(object files or archives).andM;It is worth noting that the build dependencies defined in a product'sMakefiles may not be available to the CCC build macros.andP;  This can be quite athorny problem when a product is brought into CCC and its existing Makefilescannot be used or when both the build macros and Makefiles must be maintainedwhile managing dependency analyses in both.andM;Instead of providing a set of proprietary tools, ADC makes use of editors andthe make tool available on the host system.andP;  The user's desired host editoris defined in ADC and is invoked when ADC's edit command is run.andP;  The buildprocess expects a version-controlled Makefile to be part of the productconfiguration and is facilitated by a set of program-analysis tools providedwith ADC that supports both C and FORTRAN source.andP;  These programs providecalling-dependency analysis, and file-inclusion analysis, and are able toestablish a procedure name-filename relationship.andP;  Each of these analyses isassociated with the Cset in which the analysis is performed.andP;  Integrationwith make is facilitated by a command that generates a Makefile for thedeveloper based on the above analyses.andP;  While this Makefile may not be ideal,it does provide a good starting point.andM;Managing incremental builds is best handled using archive libraries in whichupdated object modules are stored and from which link editing is performed.andM;The recommended means of performing builds in ADC is first to determine theset of files that require updating through taking the difference of listequations.andP;  Once this list is generated, it must be submitted to the Makefilefor resolution.andP;  Then, the newly created object files or library arere-imported into the ADC environment.andM;I encountered a problem with ADC's dependency analysis when header filesdefined functions that were encountered later in a source file, whencomma-separated function-name definitions were encountered, or when variablenames collided with function names.andP;  Despite ADC's inadequacies in this area,however, dependency analysis is a valuable and useful facility--one notprovided by CCC.andM;Host System InterfaceandM;Interacting with CCC or ADC from the host environment is an important part ofestablishing or extending the functional interface.andP;  Both products acceptcommands from the host environment by similar means.andP;  ADC is invoked by stdinbeing redirected from a command file.andP;  For CCC, a set of commands issubmitted through an asynchronous command interface that is given the commandfile's name.andM;Neither product provided a direct indication of successful completion ofdatabase activity.andP;  Both require the use of completion flag-files orresults-files that the scanned for status information.andP;  CCC's asynchronousinterface demands a largely batch-oriented interface and makes coordinationbetween shell scripts and CCC operations difficult.andM;ADC and CCC provide similar host interfaces to their command levels and macrolanguages through which UNIX host commands can be invoked.andP;  ADC is moreintimate with the host environment in that its editing facility is providedby a user-definable host editor.andM;Both products provide a means, in their macro-languages, of exporting andimporting files from the host environment, as well as invoking host commands.andO;ADC supports SCCS keywords embedded in source files as a convenience fordevelopers.andM;ImplementationandM;ADC is essentially a single-threaded database program that locks the databasewhile it's executing.andP;  A small project team may intereact with ADC directly,and may occasionally find that one user must retry an access attempt ifanother has the database in use.andP;  To provide for multiple access you caneither employ a software librarian to manage the database, or establish afront-end senver process that interacts with each user and the queuingfacility.andP;  The ADC process then satisfies queued requests sequentially.andP;  Thiscould result in performance degradation in large shops where many users areusing a common database.andM;CC provides one server process per user.andP;  These contend for access to thedatabase only when a database record is actually read or written.andP;  Thisscheme should result in better heavy-use performance.andP;  CCC also allows thedatabase to reside on a machine separate from the one on which the user'sprocess resides, making use of sockets to establish database connections andfurther isolating the user from database accesses by other users.andM;ADC has better file-retrieval performance than CCC, slowing less as thedatabase fills.andP;  CCC consumes a significant amount of virtual memory duringproduct builds.andP;  It will consume all the real memory it can, then startswapping to a temporary file to acquire more space.andP;  This can slow CCC'sperformance significantly in systems with limited physical memory.andM;CCC's database is of fixed size, determined at initialization.andP;  If it isoutgrown, the database contents must be unloaded (to either tape or disk), anew database initialized, and the previous contents re-loaded.andP;  ADC'sdatabase grows as more space is needed.andP;  This is very convenient fordevelopers and configuration managers, since there's no need to monitordatabase consumption.andP;  From a system-management perspective, a fixed-sizedatabase is a good choice; you're limited otherwise only by disk partition ordisk-file size.andP;  I did not try to discover what happens when you reach thelimits of growth.andM;An organization's SCM needs are heavily influenced by the way it manages itsproducts and the software-development process it has chosen.andP;  Most companiesare best served by packages built to meet their specific needs, rather thantrying to conform to the models provided by turnkey systems.andM;Both CCC and ADC are extremely powerful and complex systems, but they do notprovide, in themselves, a complete solution to the problem of SCM.andP;  CCC andADC provide a set of tools to form the functional core of a process that mustbe established within an organization.andM;CCC follows a structured model of SCM that fits the traditional separation ofresponsibilities for product development, with SCM being a product-managementfunction separate from product development.andP;  This structure and itsmechanisms for delegation of authority and change control do not have to beemployed, but are always there to remind you of the responsibility associatedwith managing a valuable resource.andM;ADC is a very flexible system on which CCC's model may be imposed, or not, asfits the organization.andP;  Its information-management tools seem to fit best ina group of well-discriplined, experienced developers who understand the valueand requirements of configuration management.andM;CCC is a more complete solution for SCM where authorization and controlissues are important.andP;  These concerns can certainly be addressed using ADC,but at an added cost to development.andM;In addition to the products reviewed, both Softool and SMDS provide turnkeyimplementations of these products to bring the power of the tools to userswho may not desire to make the investment in time to implement a system totheir custom requirements, or who may choose an incremental approach toestablishing an effective SCM system.andP;  In the case of these turnkey systems,a configuration-management model with authorization and change tracking ispresented, and it may not meet the way you do business.andP;  But the nativesystems, as reviewed, underlie them, allowing you to create a system thatmatches how you need or want to do business.andM;John Richartz, this month's reviewer, is product-validation manager for ATandamp;ELaboratories in Portland, Oregon, with responsibility for software test,UNIX-systems administration, software-problem tracking, andsoftware-configuration management.andP;  He has been involved with softwaredevelopment under UNIX releases, V7, 2.9BSD, 4.andP;  1-4.3BSD, and System V since1982.andP;  Richartz's electronic-mail address is!uunet!reed!tirnan!john, and hewould like to hear from you.andM;Richard Morin, column editor, operates Canta Forda Computer Laboratory, aconsulting firm in San Bruno, CA, specializing in the application of UNIX toengineering and science.andP;  A former director of the Independent ComputerConsultants Association, Morin is currently on the board of the SunMicrosystems User Group.andP;  His electronic-mail address is {hoptoad,pacbell}!cfcl!rdm.andO;</TEXT></DOC>
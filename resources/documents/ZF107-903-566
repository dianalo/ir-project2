<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF107-903-566  </DOCNO><DOCID>07 903 566.andO;</DOCID><JOURNAL>Byte  Dec 1989 v14 n13 p133(3).andM;</JOURNAL><TITLE>OS/2 multitasking revisited. (Expert advice: OS/2 notebook.)andO;</TITLE><AUTHOR>Minsi, Mark J.andM;</AUTHOR><TEXT><ABSTRACT>OS/2 handles multitasking via a two-level priority system of'classes' and 'deltas.' A simple program demonstrating how OS/2allocates CPU time to processes is presented.andP;  The 'PARENT'program takes itself, two classes, two deltas, and 'time' asparameters; each class has a corresponding delta and resides at adifferent priority level.andP;  The 'CHILD' routines iterate a sequenceand report the number of iterations completed.andP;  They also look for'semaphore' flags created by the PARENT program.andP;  Child programscount how much CPU time they receive after the 'start' flag hasbeen cleared until the 'stop' flag is clear.andP;  The code for theprograms and sample output are given.andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     Operating SystemsOS-2MultitaskingProgramming InstructionType-In ProgramsPriority.andO;Feature:   illustrationprogramtable.andO;Caption:   PARENT.C, the main program. (program)CHILD.C, the subsidiary program. (program)Sample output form PARENT.EXE. (table)andM;</DESCRIPT></DOC>
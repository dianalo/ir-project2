<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-800-116  </DOCNO><DOCID>07 800 116.andM;</DOCID><JOURNAL>PC Week  Oct 23 1989 v6 n42 p91(2)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>Ambition concept, fair results: Wordtech Systems Inc., Quicksilver1.3, $695.andO;</TITLE><AUTHOR>Mirecki, Ted; Erickson, Michelle.andM;</AUTHOR><SUMMARY>Wordtech Systems' $695 Quicksilver 1.3 data base management systemprovides both a compiler and a pseudocompiler, although bothdevelopment and execution time are slow.andP;  Buyers have foundQuicksilver most useful in small projects.andP;  The program createsfiles which take up a great deal of RAM, much too large for mostapplications.andP;  Users do like the speed of Quicksilver's dataretrieval functions.andM;</SUMMARY><DESCRIPT>Company:   Wordtech Systems Inc. (products).andO;Topic:     EvaluationSoftware packagesData base management systems.andM;</DESCRIPT><TEXT>WORDTECH SYSTEMS INC., QUICKSILVERandM;1.3, $695andM;This ambitious product comes with two language processors: one that convertssource programs into pseudo-code, and one that converts pseudo-code intocompiled native code.andM;Ideally, Quicksilver should provide quick turnaround during development,while producing fast finished applications.andP;  In practice, however, bothdevelopment time and the finished applications are slow compared to the otherreviewed products.andM;Producing a pseudo-code program using Quicksilver requires two steps: sourcetranslation and linking.andP;  The time required to do this is about the same asit is for compiling and linking with Clipper.andP;  Creating the final native-code.EXE file involves compiling the pseudo-code and linking, yet the performanceis closer to dBASE IV than to Clipper.andM;Wordtech Systems Inc., of Orinda, Calif., can be reached at (415) 254-0900.andM;----------Buyers say: Fine for small applicationsandM;&quot;We're not using Quicksilver in large applications because of its [slow]speed and the large size of the program's .EXE files,&quot; said Dave Bennett,owner of Bytewise Consulting, a software developer in El Cajon, Calif.andM;&quot;They put everything the language can do into every file, so a base file sizeis a minimum of 140K,&quot; he said.andP;  &quot;We don't need all that availability offeatures, but need the space in RAM.andM;&quot;But for smaller projects, when time isn't critical, it works fine,&quot; headded.andP;  &quot;It's a quick way [to program], sometimes quicker and easier than C.&quot;andM;Bennett can create overlays with Quicksilver, &quot;but it's not worth the time todo a multistep process.andP;  In C, the compiler will automatically do ouroverlays for us,&quot; he explained.andM;&quot;If Quicksilver does not improve, we will probably quit using it alltogether.andP;  We need an optimizing compiler,&quot; he added.andM;&quot;Quicksilver's screen refresh is extremely fast and it's quite good with dataretrieval as well,&quot; said Bruce Skogen, consultant at Enigma Software, a SanFrancisco database development and consulting firm.andP;  &quot;Finding a file isalmost instantaneous.&quot;andM;&quot;Quicksilver's ability to create pop-up windows and scroll through lists wasthe primary reason for getting it in the first place,&quot; said Skogen.andM;&quot;There are text windows that you can implement with one or two commands.andO;From a developer's standpoint, the ability to develop attractive userinterfaces is very important.&quot;andM;Skogen found Quicksilver to be &quot;a very good performer, much better than dBASEIII+, but not as quick as FoxBASE.andP;  Quicksilver does macro expansion veryquickly.andP;  It offers very commendable performance,&quot; he said.andM;----------Reviews by Ted Mirecki; interviews by Michelle Erickson; edited by JeffreyFrentzenandM;To test the dBASE language-extension products' performance, PC Week timedoperations on two databases.andM;The first was a flat-file mailing list of 8,900 records -- each 128 byteslong.andP;  In the test, this database was created from an input text file; therecords were indexed on two fields, sorted on two other fields and scanned inindexed order; then one field in each of 500 records was replaced.andP;  Finally,the entire database was exported, in indexed order, to a text file.andM;The second test database was smaller but more complex, consisting of sevenfiles with intricate relationships.andP;  The files ranged in size from 100 to1,000 records, and record lengths ranged from 20 to 200 bytes.andM;The Lookup test accepted the user's input of a key value, looked up that keyin a master file, found all related keys in the other files and displayed thefound records on-screen.andP;  The Report test repeated the above procedure forevery record in the master file, but wrote the output to a print-image outputfile instead of to the screen.andM;The Reorg test rearranged the database by packing out deleted records,rebuilding indexes, and checking the referential integrity of the database.andO;-- Ted Mirecki</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-723-280  </DOCNO><DOCID>08 723 280.andM;</DOCID><JOURNAL>Soft-Letter  July 16 1990 v7 n24 p4(3)* Full Text COPYRIGHT The Mercury Group 1990.andM;</JOURNAL><TITLE>Lotus vs. Paperback: drawing the line. (copyright case)andM;</TITLE><DESCRIPT>Company:   Lotus Development Corp. (cases)Paperback Software International (cases).andO;Ticker:    LOTS.andO;Topic:     CopyrightLaw SuitLegal IssuesSoftware Publishers.andM;</DESCRIPT><TEXT>First, full disclosure: Earlier this year we played a small role in the Lotusvs.andP;  Paperback lawsuit as an expert witness for Lotus, which perhaps shoulddisqualify us from commenting on the decision itself.andP;  (Actually, our realdifficulty with the case wasn't journalistic objectivity as much asperspective.andP;  After poring through hundreds of pages of documents andlistening to hours of legal hair-splitting, it was extraordinarily hard tofocus on simple, basic issues.) But the Lotus case really does help resolvemany of the most troublesome questions of the ongoing 'look and feel&quot; debate.andO;Not everyone loves the outcome (especially because Lotus promptly used thedecision as grounds to sue two more competitors, Borland and the Santa CruzOperation).andP;  But this case is clearly destined to become a landmark insoftware case law, and we think it's important to look at what U.S.andP;  DistrictJudge Robert Keeton actually said.andP;  The bottom line, of course, is that thecourt once again affirmed the principle that software interfaces are creativeworks and deserve the same copyright protection as the underlying code.andP;  Themenu structure, taken as a whole--including the choice of command terms, thestructure and order of these terms, their presentation on the screen, and thelong prompts--is an aspect of 1-2-3 that is not present in every expressionof an electronic spreadsheet [and therefore) meets the requirements of thelegal test of copyrightability,&quot; Judge Keeton said.andP;  Paperback'scounter-arguments, he added, were mostly 'strained analogies and word games.&quot;andO;That's been the overall thrust of copyright law for several years now, butJudge Keeton broke new ground in this case by dealing explicitly with aquestion that has worried even the most creative developers: Is it legal toborrow individual interface concepts and conventions from 1-2-3 and otherpopular products? Keeton's answer is that the courts won't pursue developerswho incorporate such Lotus-like conventions as the slash key or the two-linemenu, in part because keyboard and screen display constraints providesoftware designers with 'very few practical options&quot; in these areas.andP;  Ineffect, these piecemeal elements may be used as freely as individual Englishwords and phrases are used by writers.andP;  But even if individual interfaceideas are unprotectable, Judge Keeton explained, Lotus still has explicitownership of the way these ideas have been organized as an original andcoherent design.andP;  If particular characteristics not distinctive individuallyhave been brought together in a way that makes the 'whole' a distinctiveexpression of an idea--one of many possible ways of expressing it--then the'whole' may be copyrightable,&quot; the judge ruled.andP;  To us, this seems like agood common-sense rule, one that can protect creative interface designswithout inhibiting innovation.andP;  Relying on the Lotus precedent, developersare now free to use 1-2-3 (and, by implication, other software products) as asource of ideas and conventions, and they're free to use a reasonableselection of these conventions to give their own products a Lotus-like lookand feel.andP;  A warning flag should go up, however, once a developer decides tocopy substantially all of the Lotus interface, especially to produce a 1-2-3clone.andP;  (Current copyright law, Judge Keeton noted, already prohibits authorsfrom plagiarizing a protected work and then making cosmetic changes todisguise the copying.andP;  And he also pointed out that even a substantiallyoriginal, non-cloned work may violate copyright law.andP;  If one publishes a1,000-page book of which only a 10-page segment is an unauthorizedreproduction of copyrighted material,&quot; said the judge, &quot;it is not a defensethat the book is 99% different.&quot;) Again, this seems like a prettystraightforward principle for separating the sheep from the goats.andP;  Ingeneral, programmers now know that they should follow roughly the same rulesthat apply to writers, musicians, and graphic artists.andP;  As the relativescarcity of plagiarism suits in these areas suggests, creative professionalsseem to have a clear grasp of where the boundaries fall.andP;  But will JudgeKeeton's guidelines put an end to the industry's plague of look-and-feelcases? Probably not.andP;  In other creative professions, plagiarism offers noparticular commercial reward; copying merely saves a writer or artist alittle sweat.andP;  But software is different: There's a widespread belief that a&quot;compatible&quot; interface lowers the barriers against a new product's acceptancein the marketplace.andP;  That was certainly the logic behind Borland'sdecision--despite the probability that Lotus would win the Paperback case--tohang on to an optional 1-2-3 menu structure in the latest version of Quattro.andO;That optional interface wasn't required for reasons of innovation or datacompatibility, and it wasn't the result of lazy programming.andP;  Rather,Quatro's 1-2-3 interface was preserved simply as an extra selling feature fora product that was already a respectable challenger in the spreadsheetmarketplace.andP;  Sadly, this faith in the magical power of a look-alikeinterface is probably misguided.andP;  Users may like to discover some familiarinterface conventions in a new product, but what counts more--as the lukewarmsales history of VP-Planner suggests--is whether buyers believe a new productoffers dramatic advances in power and performance.andP;  Great products don't haveto copy a rival's exact screen layout and menu structure to win acceptance;and no clone interface is likely to rescue a lackluster product fromoblivion.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-423-415  </DOCNO><DOCID>09 423 415.andM;</DOCID><JOURNAL>EXE  August 1990 v5 n3 p39(3)* Full Text COPYRIGHT Process Communications Ltd. (England) 1990.andM;</JOURNAL><TITLE>It's not pronounced Squirrel. (Structured Query Language fastbecoming the data base standard)</TITLE><AUTHOR>Williams, Jim.andM;</AUTHOR><SUMMARY>Structured Query Language (SQL) uses commands that mirror anoperation in relational calculus.andP;  With this theoretical basis, itis possible to gain complex extractions of information from a database using a sparse vocabulary.andP;  Several concepts from relationalalgebra and calculus apply also to SQL: Set Operation, Union,Selection, Projection, Cartesian Product and Natural Join.andP;  Theimportance of a relational model and of SQL lies in the idea thatdata independent from the hardware environment is essential todevelopment of tools for fast data manipulation.andM;</SUMMARY><DESCRIPT>Topic:     Structured Query LanguageRelational DBMSStandardizationAnalysisData Base Management SystemsComparison.andM;</DESCRIPT><TEXT>SOL is fast becoming the database standard.andP;  If you don't yet know bow therelational model works, you will soon be dead meat.- so you'd better read Jim Williams I explanation.andM;The 1980s was the hardware decade.andP;  in 1980, I started with 32 KB of RAM and0.72 MB of disk storage in a Z80 North Star Horizon.andP;  By 1989, I had a 386 PCCompatible with 4 MB of RAM and 106 MB of disk storage, capable of runningsix jobs at once under DESQview.andP;  But as a developer of commercialapplications, I am still writing the same programs: accounts, stock control,mailing lists and other business users.andM;In this new decade, the continuing evolution of PC standards and the growthof networks emphasises the importance of connectivity of softwareapplications.andP;  During the last few years commercial applications programmershave increasingly adopted proprietary database and 4GL products.andP;  Theadvantage of this approach is that reliable programs can be produced morecheaply than with the earlier 3GLs (such as BASIC and COBOL).andP;  Thedisadvantage is that applications become closed off to other softwareenvironments.andP;  A Sales Ledger written in DBASE would not easily combine witha stock control system written in Dataflex, except through the clumsy mediumof import/export ASCII text files.andP;  When hardware dictated that applicationswere singleuser, this drawback was not apparent.andP;  Now that PCs are being usedas components of large networks, where the files of, say, the stock controldepartment are required by accounts, this drawback becomes a serious problem.andM;Recognising this, the leading manufacturers are configuring their products toconform to the ANSI-defined standards of SQL (Structured Query Language,generally pronounced 'sequel' not 'squirrel') and the look and feel ofrelational database architecture as defined by Ted Codd in 1970-72.andM;Database primerandM;There are three formally defined database models - Relational, Network andHierarchical.andP;  The Hierarchical model is mostly of historic interest.andP;  Itassumes that data may be organised in the classical directory/subdirectorystructure and, if strictly followed, there can only be one forward linkbetween a higher level of records and a lower level of records.andP;  This is nota good model of real world data.andP;  In practice, the hierarchical model tendsto be compromised by duplication of data, plus some extra linkages betweengroups of records, to short-cut the normal search paths.andM;The Network model conforms better to the typical intuitive file structuresthat evolve i the real world.andP;  A group of invoice records may have multiplelinks - perhaps to the customer file and stock file - and in turn thecustomer file could link to the salesman/rep file.andP;  Each record type is anode, and the relationships are referred to as directed and non-directedarcs, depending on whether the linkage is one-to-one or one-to-many.andP;  Theessence of the Network model is that only these two types of linkage areallowed 1-andgt;1 and 1-andgt;N.andM;Relational ModelandM;The most abstract model of database is the Relational model.andP;  The termrelational is derived from the mathematical theory of relations which givesrise to 'relational algebra' and 'relational calculus'.andP;  The relationalalgebra covers the mathematical notation used to express the logic ofrelationships, calculus is the process of manipulating the expressions toderive more formal results.andM;As is usual with specialist disciplines, various terms often used in everyday language have been poached and given precise meanings.andP;  An entity is anobject with attributes.andP;  For example, an invoice is an entity, and its valueis one of its attributes.andP;  Another attribute is the customer, which in turnitself has a set of attributes - name, address, credit limit and so forth.andO;Where an attribute is an entity, then a relationship is said to exist.andP;  Thereare three types of relationship: one-to-one (1-andgt;1), one-to-many (1-andgt;N) andmany-to-many (m-andgt;n).andM;A relation is depicted as a table, and each column of the table is anattribute:andM;Relation CUSTOMER: NAME,ADDRESS,PHONE,BALANCE,SALES MANandM;This relation is often written as: CUSTOMER (C#, NAME, ADDRESS, PHONE, BALANCE,SALESMAN).andM;The C # item is necessary because each row or tuple must be distinct, andmust carry a unique identity which is the primary key this is a stipulationof the relational model.andP;  The primary key may be artificial (such as aninvoice's serial number) or natural - like a name that is known not toreplicate.andP;  In a table of car models, the term RENAULT 5 CAMPUS describes aparticular model of car, and is unique to that make of car.andP;  Most primarykeys are abbreviations derived from the name, such as RE5C.andM;DesignandM;There are four stages of database design: requirements analysis, entityrelationships modelling, transformation to relations and normalisation ofrelations.andP;  Requirements analysis covers the stages of definition through tobusiness systems design.andP;  In the customer sales example, at the end ofrequirements analysis one would expect to have identified the purpose of thesystem, its information content and its inputs and outputs.andP;  Entityrelationship modelling is taking the results of RA and defining the basicentities and relationships.andP;  In this case, our entities are CUSTOMER, STOCK,INVOICE, ITEMS-SOLD and SALESMEN.andP;  This is a crucial stage, as sounddefinition of entities determines how easy it is to produce a normalisedfinal design (explained below).andM;Transformation to relations involves establishing the links between the newlydefined entities.andP;  We want to end up with a structure whose properties aredependent on the relationships.andP;  One property of the system is that it mustprint out invoices, which implies the following relationship:andM;INVOICES-andgt;CUSTOMERandM;-andgt;ITEMS SOLD We also need to report which invoices are outstanding for eachcustomer, and what each customer has purchased: CUSTOMER -andgt; INVOICESandM;-andgt; ITEMS_SOLDandM;Each property of the system must be tested against the relationships, toestablish whether the model supports the user requirements.andM;The above three stages may be repeated until the designers are satisfied thatthe model meets the functional requirement.andM;We are normalandM;Normalisation removes ambiguities from the model.andP;  There are various levelsof stringency of normalisation, known as normal forms.andM;First Normal Form is achieved when all entities cannot be decomposed further- all attributes within a relationship are single atomic items'.andP;  This woulddebar a structure where the details of goods sold (invoice lines) and theoverall accounting information such as total, due date, and salesman code areheld in the same 'invoice' table.andP;  Because the sales may be decomposed toinvoice lines, the invoice lines must reside in a separate table.andP;  SecondNormal Form demands First Normal Form (1NF) as a prerequisite.andP;  2NF isreached when non-prime attributes are decomposed to key fields.andP;  In our salesaccounts example, the invoice might store delivery addresses.andP;  However, thesedelivery addresses could repeat in a sequence of invoices to the samecustomer.andP;  In Second Normal Form, a new table for delivery addresses isestablished, and the invoice table will have a field defined as the key forthe delivery address.andM;There are up to five normal forms for relational decomposition, but inpractice we need only concern ourselves with one more.andP;  Third Normal Form isthe elimination of secondary dependencies with a relationship.andP;  If we storeddetails about the customer's credit limit and current balance in the invoiceheader relationship, we have a secondary dependency.andP;  This is because creditlimit belongs to the customer, and is not generally related to invoice.andP;  Thecredit limit must be moved to a customer file (or a new table could be setup, storing the credit information for each customer).andM;The Relational Model andamp; SOL The Relational Model is based on precise notation.andO;and definition, which is also applied to the syntax of SQL.andP;  Each command inSQL mirrors an operation in relational calculus.andP;  It is this theoreticalunderpinning that makes possible complex extractions of information from adatabase using a sparse vocabulary.andP;  The following concepts from relationalalgebra and calculus are applicable is SQL.andP;  Set Operation@ Given tables  'A'and  B') with similar attributes, the following set operations apply: Union:All members of A and B eliminating duplicates.andP;  Intersection: Members of bothtables.andM;Minus: A - B = Members of A not in B. Selection: Select from a table thoserows which satisfy one or more criteria.andM;on: Extract a set of columns from a table eliminating duplicate rows.andP;  In oursales example, the projection of customers from invoices would provide acolumn of customers with duplicates.andP;  The final result would not includesecond and subsequent occurrences of a customer ID.andM;Cartcsian Product- The result of A x B  'A times B') would be a table showingall possible combinations of tuples.andM;Natural join- Two tables are linked by a common attribute.andP;  A list of allinvoices and customer details may be produced by a join between the customerfile and invoice file, using the attribute 'customer code' as the commonattribute.andM;SQL has the syntax for all the above five operations of relational algebra.andO;As a result, sophisticated queries can be formulated in a surprisinglysuccinct manner.andP;  We shall consider the case of our sales system analysingsales data.andP;  We have two main tables, CUST and ITEMS, illustrated in Figure1.andP;  Note these are not 2NF, as DESCRIPTION should live in a STOCK CODES file.andO;It is included here for 'readability'.andP;  We also have a third, auxiliary filecalled NEW_CUST, also shown in Figure 1.andM;The core of SQL is based on the command SELECT, which displays attributesfrom a table.andP;  it takes two modifiers: FROM (which defines the tables to use)and WHERE (specifies the conditions of.andP;  selection).andP;  The results of eachSELECT query are displayed in tabular format.andP;  SELECT displays allattributes.andP;  ThusandM;SELECT * FROM ITEMS;andM;displays all the records in ITEMS, and SELECT ITEM.DESCRIPTION,andM;ITEM.C KEYandM;FROM ITEMSandM;WHERE ITEMS.C KEY = &quot;A1&quot;andM;displays a table of-all item descriptions and customer code where thecustomer key is Al.andP;  The syntax TABLENAME.ATTRIBUTENAME is common to mostrelational syntax.andP;  Suppose we wish to have a  join' to the customer table,to obtain the name of the customer, instead of just the key.andP;  SELECTITEM.DESCRIPTION,andM;ITEM.C KEY,andM;CUST.NAMEandM;FROM ITEMS , CUSTandM;WHERE ITEMS.C-KEY = &quot;A1&quot;andM;AND ITEMS.C-KEY = CUST.C KEY;andM;One of the underlying mechanisms of SQL is the production of tables.andP;  Queriescan be nested:andM;SELECTandM;FROM CUSTandM;WHERE C KEY NOT INandM;SELECT C_KEYandM;FROM ITEMSandM;WHEREandM;ITEMS.STOCK CODE = &quot;CN&quot;);andM;The result of The above query will list all Customers who have not boughtcopper nails (Figure 2).andP;  Note the use of NOT IN in this query.andP;  The scriptstarts with the inner loop, creating a list of C KEYs in the ITEMS file ofpurchases of copper nails.andP;  The WHERE C_KEY NOT IN scans this list, printingall CUST tuples which are not included in the list.andM;QualifiersandM;If we wished to list all products sold at least once, then SELECT DISTINCTSTOCK_CODEandM;FROM ITEMS; would produce the following table: STOCK_CODEandM;WP1andM;BP1andM;CNandM;FBandM;The DI STINCT qualifier eliminates duplicate occurrences from the table.andP;  TheGROUP modifier aggregates numeric fields, based on the attribute chosen forthe GROUP clause.andM;SELECT STOCK-CODE SUM (PRICE) FROM ITEMS GROUP BY STOCK  CODE; produces thefollowing result:andM;STOCK CODE              SUM(PRICE)andM;BP1                     5.76andM;CN                      15.00andM;FB                      16.20andM;WP1                     7.17andM;ORDER BY sorts a particular column.andP;  SELECT NAME PHONE FROM CUST ORDER BYNAME DESCENDING; produces:andM;NAME                   PHONEandM;CRICKLEWOOD STORES     890-5467andM;CARTER AND SON         889 1256andM;BARNES SUPPLIES        888-1234andM;ANDERSON TRADING       994-5124andM;4 rows selectedandM;Note how the descending modifier reverses the order.andM;An important feature of relational theory is the ability to join two tablesto produce a secondary table.andP;  This derived table is described as a view, andgiven its own distinct name.andP;  Further selections may be made from the view toproduce a report which combines information from two or more base tables.andO;Figure 3 illustrates this approach, to obtain the names and phone numbers ofall the customers who have bought paint.andM;Miscellaneous SQLandM;WHERE clauses may be constructed using the following operators: =, andless;andgt;, ! =,andO;andgt;, andless;, andgt;=, andless;=, IS NULL, IS NOT NULL and LIKE.andM;The right hand side of the operator may be either a constant or column name.andO;Operations may be combined by means of AND and OR statements.andM;Figure 4 shows some other operations which can be carried out on (generallynumeric-only) columns.andM;Naturally, SQL provides the means to create and update tables (although forsome reason, this fundamental operation always appears towards the end of SQLtutorials).andP;  To create a table:andM;CREATE CUST (andM;CODE char 2andM;NAME char 20andM;ADDRESS char 40andM;TOWN char 20andM;PHONE char 8andM;) 20;andM;where the figure following the closing bracket stipulates the number of rowsto create.andM;The STRUCT command, used: STRUCT CUST;andM;lists out the format established by CREATE.andP;  DELETE is used to delete eitherwhole tables, or just selected rows specified by aandM;WHERE clause.andP;  SoandM;DELETE ITEMS;andM;deletes the whole ITEMS table, but DELETE ITEMSandM;WHEREandM;ITEMS.STOCK_CODE =  &quot;BP1&quot;;andM;selectively deletes all rows with sales of black paint, leaving a smallertable.andM;INSERT adds extra rows to a table, and UPDATE changes selected rows andcolumns:andM;UPDATE CUST.PHONE FROM CUST WHERE CUST.TOWN = &quot;ACTON&quot;;andM;affects all fields defined by the intersection of PHONE and CUST.andP;  TOWN =&quot;ACTON&quot; in table CUST.andP;  These are displayed in turn and replaced by keyboardentries.andP;  Note that the facilities for modifying tables vary slightly betweenimplementations of SQL.andP;  Versions designed for the end user, who may not beauthorised to access, say, a corporate database, may not offer any updatefacilities at all.andM;ConclusionandM;It is hard to understate importance of the relational model and SQL.andP;  Theconceptualisation of data as tables and the notion of data as an entityindependent from the hardware environment are essential in developing toolsfor rapid data manipulation.andP;  As my comments at the beginning of this articleshow, as equipment costs fall and performance increases, it is essential thatsoftware vendors keep pace.andP;  For example, one of my clients, the MD of amedium sized company, regularly downloads his whole company database - 2,000customers, two years sales ledger, three years back sales history and a 1000item stock file - onto his PC.andP;  He uses this data to prepare various reportsand analyses that enable him to construct his business plans from home, oreven while travelling abroad.andP;  With a suitable SQL system - I use Dataflex'sFLEX-QL, because I program with that company's proprietary database languageproducts - he can treat his corporate database as a massive spreadsheet whichupdated once a week.andP;  He uses a copy of the same database that is directlyupdated as orders are entered, goods sold and new customers acquired.andP;  Thereis no intermediary between the real facts of his business and his need forinformation to control the future.andO;</TEXT></DOC>
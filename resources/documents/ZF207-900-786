<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-900-786  </DOCNO><DOCID>07 900 786.andM;</DOCID><JOURNAL>Software Magazine  Nov 1989 v9 n13 p70(10)* Full Text COPYRIGHT Sentry Publishing Corp. 1989.andM;</JOURNAL><TITLE>Coercing DBMSs to cooperate. (DBMS: Distributed Databases)(includes related articles titled 'IBM's distributed databasedirection,' military's Cals provides distributed DBMS model,' and'importance of optimization')</TITLE><AUTHOR>Bochenski, Barbara; Bucken, Mike.andM;</AUTHOR><SUMMARY>By 1999 everyone will be using distributed database managementsystems (DBMSs), according to one university researcher.andO;Databases that are limited to one site will become curiosityitems.andP;  The development of sophisticated networking software wasan integral step in the maturation of the distributed databaseenvironment.andP;  Other important advances that helped it alonginclude more powerful workstations and the increased use ofrelational DBMSs and SQL.andP;  Analysts are divided, however, on howready the industry is to implement commercial distributed DBMSs.andO;The effect IBM's DB2 Distributed Database version 2.2 will have onthe industry is discussed.andM;</SUMMARY><DESCRIPT>Topic:     Distributed Data BasesImplementationFuture of ComputingNetwork DBMSData Base DesignTrendsMarket Analysis.andO;Feature:   illustrationchartphotograph.andO;Caption:   DB2 Distributed Database version 2.2. (chart)andM;</DESCRIPT><TEXT>COERCING DBMSs TO COOPERATEandM;Single-site DBMSs will be an antique curiosity within 10 years, predictsMichael Stonebraker of the University of California in Berkeley.andM;&quot;In my opinion, distributed database systems will have a profound impact onDBMS clients over the next decade.andP;  In short, I expect everybody will beusing a distributed DBMS within the next 10 years.&quot;andM;Stonebraker was involved with one of the earliest and most well-knowndistributed database (DDB) prototypes: Distributed Ingres.andP;  He says thesuccess of that project--started in 1977--was constrained by the lack ofavailable networking software.andM;Networking software is an important part of a distributed databaseenvironment.andP;  Charles Bontempo, a consulting staff member with IBM SystemsResearch, Shornwood, N.Y., defines a distributed database as a systeminvolving multiple computer sites connected with a communications network.andM;Each site has its own database processed by its own DBMS, its own CPU and itsown terminals.andP;  Each site also performs its own recovery management andlogging.andM;Bontempo, speaking at a recent DB2 Users Group meeting, said each site ishighly autonomous and independent, but cooperative.andM;The last 10 years have brought much progress to the distributed databasescene.andP;  Increased networking capabilities have contributed significantly tothe potential of distributed databases.andP;  Software solutions for majorproblems like crash recovery are increasingly available in the marketplace.andM;The increased intelligence and power of workstations, and the growing use ofrelational database management systems (RDBMS) and SQL have also contributedto the impetus.andP;  Relational databases and SQL have unique qualities thatfacilitate the use of distributed architectures.andM;Has the progress been enough?andP;  Are the commercial distributed databasemanagement systems (DDBMS) of industrial strength?andP;  Or are they just forsmall, specialized applications that can run on a local area network?andP;  Candistributed DBMS meet a multinational corporation's high performance needs ona wide area network?andP;  Do they fill a real need or is it just too soon formany enterprises to move toward distributed DBMSs?andM;Analysts differ about how ready industry is (and how ready the vendors are).andO;Some say that enterprises cannot manage the network problems of a distributeddatabase if a wide area network (WAN) is involved.andP;  Others thinks think manycompanies are ready to tackle the problems, but that vendor offerings oftwo-phase commit are not yet adequate.andM;Some believe that as IBM provides distributed DBMS capabilities with theupcoming shipments of DB2 version 2.2, many companies will implement thetechnology.andM;UNRESOLVED PROBLEMSandM;&quot;The state of the technology today,&quot; says Kent Laver, a senior marketingspecialist with Cognos in Toronto, &quot;is such that we can very efficientlyhandle distributed transactions on a LAN.andP;  However, the problems ofdistributed DBMSs on WANs have largely been unsolved.&quot;andM;Cognos markets StarBase, a distributed database for LAN implementations onDEC, Hewlett-Packard and Data General systems.andP;  The database engine forStarBase is licensed from Interbase Software Corp., Bedford, Mass.andP;  Cognos'StarNet accesses databases via DECnet, HP's AdvanceNet and TCP/IP.andM;&quot;The problem of distributed databases on LANs vs.andP;  WANs is one ofmanagement--system management in particular,&quot; says Laver.andP;  &quot;Many corporationsare in a position where they can manage a local area network.andP;  They have beendoing it for mail systems for a while.andM;&quot;But I think the problems involved in wide area networking--where you'reinterested in response times--have largely been unsolved.andP;  If they have beensolved, they have probably been dealt with by individual corporations whohave been able to put their own structure in place as opposed to buyingsomething commercial.&quot;andM;Gordon Smith, senior product manager with Oracle Corporation, Belmont,Calif., basically agrees, though he looks at it a little differently.andM;&quot;The actual technology is basically the same,&quot; says Smith, &quot;whether it's onLANs or WANs.andP;  The database doesn't necessarily do things terriblydifferently.andP;  It would do some optimization perhaps differently in the twoenvironments.andM;&quot;It's more of a performance issue.andP;  There are many situations where you needto join lots of tables between two distributed sites.andP;  That will just take alot longer on a WAN than a LAN.andP;  It's a cost-performance issue,&quot; Smith said.andM;ANTICIPATING NEW VERSION OF DB2andM;Roman Rozenberg, director of database research at Knauer Consulting in NewYork, believes that industry is definitely ready for distributed databases.andO;&quot;Some companies are just waiting for DB2 version 2.2 to be shipped,&quot; saysRozenberg.andM;A large bank with worldwide offices has started to implement an internationalnetwork in anticipation of the shipment of DB2 version 2.2, says Rozenberg.andO;When the product is shipped, they plan to install it and build theirdistributed architecture.andM;Several large companies with similar plans did not want to be identified orprovide details because they believe their distributed database plans are ofstrategic importance.andM;&quot;When Oracle first introduced distributed database capabilities a number ofyears ago,&quot; says Smith, &quot;people weren't ready for it.andP;  But lately, in thelast year or so, we're seeing an upturn in commitment.&quot;andM;According to Rozenberg, &quot;Ten years ago, nothing much happened withdistributed databases because the relational model hand't really 'happened'yet.andP;  It was the relational model and Codd's work that gave a big push todistributed database processing.andP;  The relational model permitted developersto make their first steps toward a distributed database design.andM;&quot;The relational model provided the capability to finally implement adistributed database,&quot; he continued.andP;  &quot;The model itself gives you a lot offlexibility to handle location transparency for example.andM;&quot;Using SQL, programmers do not have to know exactly where the dataresides--on which pack and which cylinder--and what the paths are to thedata, The optimizer does it for them.andP;  It chooses access paths and goes andgets data.andP;  So this is a first step,&quot; Rozenberg said.andM;SINGLE-SITE IMAGEandM;Location transparency is a major objective of a distributed database system.andO;It is just one of several transparencies that create a single-site image--animportant quality of a distributed database system.andM;A single-site image gives the user the illusion that there is only onedatabase site--their own.andP;  With location transparency, users do not need toknow at which site a particular piece of data is stored.andM;&quot;The whole idea of tabularity of data also gives you a lot of flexibility anda lot f independence,&quot; Rozenberg said.andP;  &quot;You don't have to worry aboutpointers anymore.andP;  There are no pointers between the tables.andP;  So if tablesare located on the same physical machine or located on two differentmachines, it doesn't really make any difference, as long as you have adeliberate mechanism that allows you to address both tables.&quot;andM;With the relational model, data can be split up (fragmented) and distributedin a variety of ways.andP;  When data is stored as tables (relations), differentfragmentations among the sites (vertical, horizontal or combinations of both)are possible.andM;Fragmentation transparency--another of the transparencies contributing to asingle-site image--lets the user behaves as though relations are notfragmented at all.andP;  Users are presented with a view of the data in which allfragments are combined.andM;C.J.andP;  Date, in his classic, An Introduction to Database Systems, Volume I,says the twin objectives of data fragmentation and fragmentation transparencytogether constitute two of the reasons why distributed database systems arealmost invariably relational.andM;While relations are easy to fragment and the fragments are easy to recombine,Date points out, consider what would be involved in performing the analogousfunctions in IMS or IDMS.andM;TRANSPARENCY MANEUVERSandM;Replication transparency is another objective of distributed databases.andP;  Datareplication means that a given data object may have several storedrepresentatives at several different sites.andP;  This provides improvedperformance and availability.andP;  If one site is down, a user can still accessthe required data from another site.andM;Replication brings problems with it.andP;  Retrieval operations should be directedto the copy closest to the user.andM;Update operations, however, need to be directed to all copies.andP;  Specialprovision must be made for copies that are not immediately available due tosite or network failures.andP;  Replication transparency means that all detailsinvolved with locating and maintaining replicas are supported by the system,not by the user.andM;Stonebraker says there are additional transparencies--including schema changetransparency, performance transparency and transaction transparency--that areimportant objectives and design issues for distributed databases.andM;Schema change transparency means that when a database object is added ordeleted from a distributed database, the change is made only once--to thedistributed dictionary or catalog.andP;  The change does not have to be made toall sites in the distributed architecture.andM;Performance transparency means that a distributed query optimizer exists tofind an optimized plan to execute any distributed command.andM;Stonebraker says, &quot;If one has 1 million objects in New York and 10 objects inBerkeley, one wants to perform the join by moving the 10 objects to New Yorkand not the reverse.&quot;andM;With performance transparency, a query will run with comparable performanceno matter what node it is submitted from.andM;SQL query optimization can be a critical factor in the performance of anon-distributed relational database.andP;  It becomes even more critical in adistributed relational database.andP;  The same query can take one second or itcan take a couple days, depending on how it is executed.andP;  (See relatedsidebar on this page.)andM;Many analysts point out that while optimization is critical, it is acompelling argument for the use of a relational system: relational operationsare capable of being optimized while record-at-a-time operations are not.andM;Another transparency that Stonebraker mentions is transaction transparency.andO;This means that a user can run a transaction that updates data at any numberof sites, and the transaction either commits or aborts at all sites.andP;  Nointermediate states are possible.andM;Updates have always presented the biggest challenge for the distributeddatabase environment.andP;  Some of the biggest problems are update propagation,concurrency control and recovery management.andM;An update to any local data item must be propagated to all copies of thatitem.andP;  A problem occurs if one site is unavailable (network or site failure)at the time of the update.andM;To solve this, one copy of the data item may be designated as the primarycopy.andP;  It is then that copy's responsibility to apply the update to any dataitems that were not available during the update process.andM;Concurrency problems can occur in a shared, multiuser system, whereconcurrently executing transactions can interfere with each other, producingresults that are incorrect.andM;Concurrency control is often based on locking in distributed DBMSs.andP;  Amechanism must be provided to detect global deadlock.andM;Global deadlock occurs when, for example, transaction T1 has a lock on objectA in Chicago and requests a lock on object B in New York, and transaction T2has a lock on object B in New York and requests a lock on object A inChicago.andP;  In this situation, transactions T1 and T2 will both go into waitstates.andM;RECOVERY MANAGEMENTandM;Recovery management has always been another challenge for distributed DBMSs.andO;Correct recovery must be made in the event of failure at one of the sitesduring the course of a multi-site update.andM;While two-phase commit protocols are intended to solve this problem,different vendors may mean different things when they say &quot;we have two-phasecommit.&quot;andM;In essence, two-phase commit should ensure that all the resource managers &quot;gothe same way&quot; on a particular transaction.andP;  Either they all accept it(commit) or they all reject it (rollback).andM;Vendors are claiming so-called &quot;two-phase commit&quot; offerings of somecompetitors could cause inconsistent update results.andP;  These vendors also warnthat application developers might have to code some of the recoverymanagement procedures into the &quot;two-phase commit&quot; offerings.andM;&quot;Some companies have what we would call a partial implementation of two-phasecommit,&quot; says Oracle's Smith.andP;  &quot;Two-phase commit is a complex, verysophisticated thing.&quot;andM;Eric Wasiolek, manager of distributed Ingres for Relational Technology,Alameda, Calif., says, &quot;Two-phase commit alone is not enough.andP;  You have tohave sufficient recovery management procedures along with two-phase commit.andO;No database vendor has solved all or even most of the technological problemsfor distributed database and that includes two-phase commit.&quot;andM;Vendors get excited when they talk about two-phase commit--especially whendiscussing the products of their competitors.andP;  Referring to a competitor'soffering, one database vendor said, &quot;Their two-phase commit is a sham.&quot;andM;Wasiolek warns that two-phase commit should be provided by the DBMS itselfand not by the client application, as he feels is happening in some vendors'implementation of two-phase commit.andM;Smith seems to agree.andP;  &quot;Some companies are beginning to offer a verybare-bones two-phase commit facility, which puts a great burden on theapplication developer to provide a lot of the functionality.andP;  The developerhas to deal with the sophistication themselves.andM;&quot;What we see as a full two-phase commit offering,&quot; continues Smith, &quot;is whereapplication programs are able to submit SQL statements that manipulate tablesin diverse locations--in a transparent way.andP;  They shouldn't have to doanything differently in a distributed database environment than they do in anon-distributed database environment.&quot;andM;The atomicity of transactions in SQL--or the concept of a transaction as anatomic unit of work--is involved in two-phase commit.andM;&quot;In SQL,&quot; explains Smith, &quot;there is the concept of a transaction.andP;  You grouptogether your SQL statements in a transaction and the system needs to eitherprocess all of those statements together as one atomic unit, or none of them.andO;If you did just some of them, you would leave the database in an inconsistentstate.andP;  It has to be either you do the transaction or you don't.&quot;andM;James Gray, a distributed database expert, refers to this with a succinctanalogy: &quot;You get the ticket and I get the money or the deal is off.&quot;andM;As far as recovery, Gray has another description: &quot;Transactions aresusceptible to murder [abort] as well as suicide [rollback].&quot;andM;Smith said, &quot;It's called a two-phase commit because there are two main stepsto it.andP;  There is an intermediate step--a 'prepare to commit' step.andP;  That is asignal to all the servers that they have to get their act together.andP;  Ifanything happens from that time forward, they have enough information aboutthe operation to recover in case of failure.andP;  For example, they haveinformation about that transaction on a disk--a durable medium.andM;&quot;We feel that this intermediate 'prepare to commit' step should betransparent to the application developer,&quot; Smith said.andM;&quot;No one has two-phase commit to the full extent that you want for a fullydeveloped distributed database,&quot; says Knauer's Rozenberg.andM;LIMITATIONS SLOW DEVELOPMENTandM;Regarding current two-phase commits, he warns, &quot;There are a lot oflimitations to them.andP;  One side has to be the referee in a two-phase commit,and I don't believe that capability has been fully developer yet.&quot;andM;There are other problems.andP;  If vendors are strong in one area, they seem to beweak in others.andM;&quot;Tandem has something very, very close to real distributed database,&quot; saysRozenberg, &quot;it has a lot of issues solved, but it doesn't have a globaloptimizer.andP;  No one has a global optimizer.&quot;andM;&quot;None of the currently available solutions is close to the full promise ofdistributed database systems,&quot; says Richard Winter, vice president oftechnology at Computer Corporation of America (CCA), Cambridge, Mass.andP;  &quot;Theydo not have industrial strength robustness or the required performance.&quot;andP;  Thesolutions are for special cases or relatively small installations, he adds.andM;&quot;In terms of distributed technology,&quot; he stated, &quot;there's been a lot ofprogress made since the laboratory days of 1976.andP;  A lot of the distributeddatabase problems have been solved in the laboratories.&quot;andM;Winter says &quot;the promitive capabilities for distributed database are inplace.andP;  But it's just now that we're seeing products becoming available tohelp people.&quot;andM;In May, Computer Corporation of America introduced Horizon, a 4GL.andO;&quot;Horizon,&quot; says Winter, &quot;lets you write distributed applications easily.andO;What is unique about Horizon is the integration of LU 6.i with a 4GL.&quot;andM;CCA was involved in some of the earliest laboratory work on distributeddatabase systems.andP;  It worked on the System for Distributed Database (SDD-1)under a DOD-funded contract from about 1976 to 1980.andP;  It was designed to runon a group of digital PDP-10's interconnected with Arpanet.andM;Stonebraker's group worked on Distributed Ingres starting in 1977 at theUniversity of California at Berkeley.andP;  The project's biggest handicap was thelack of communications software at that time.andP;  Distributed Ingres consists ofmultiple copies of University Ingres, and was designed to run on DigitalPDP-11s.andM;IBM's R* (pronounced &quot;RStar&quot;) project was the best known prototype of adistributed DBMS.andP;  Stonebraker says the R* benefitted from insight to themistakes of earlier prototypes, as well as from the availability of Vtamsoftware for communication.andP;  It was developed at IBM Research in San Jose,Calif.andM;R* consists of multiple, cooperating copies of System R, IBM's earlierresearch database system.andP;  R* is designed to run on a group of IBM mainframesthat communicate with the InterSystems Communication facility (ISC) of CICS(CICS/ISC.)andM;TAKING &quot;SNAPSHOTS&quot;andM;All of these research prototypes made valuable contributions to thestate-of-the-art of distributed database technology.andP;  Many of the techniquesdeveloped in the laboratories are appearing in commercial products today.andM;One of the specific features of R* that is expected to make an appearance inDB2 is support for &quot;snapshots.&quot;andP;  A snapshot is a named, derived table.andM;Creating a snapshot is similar to executing an SQL query.andP;  The value isstored in the database under the snapshot's name.andP;  The definition of thesnapshot and the time of its creation are stored in the system catalog.andP;  Thesnapshot is &quot;refreshed,&quot; or recreated, according to the interval specified inthe snapshot's definition.andM;Snapshots provide a way of creating multiple copies of data and allow thosecopies to be stored at multiple sites.andP;  Retrieval requests can be directed tothe nearest snapshot, instead of to the &quot;master&quot; copy.andM;But the data is only as current as the most recent refresh operation.andP;  Formany applications, however, this is acceptable.andM;When thinking about the advantages of distributed database systems, one needsto be wary.andP;  For its many advantages, there are corresponding disadvantages.andO;The problems must be overcome or the distributed system loses strength.andM;CCA's Winter says that while much of the recent work involving distributedsystems has centered around SQL, people will soon need to handle text andgraphics-oriented objects.andM;Often, distributed databases are justified for business reasons.andP;  AsStonebraker points out, many companies are fundamentally distributed.andP;  Forexample, Relational Technology, Inc. (RTI) has its headquarters and U.S.andO;customer base stored in Alameda, Calif.andP;  But it also has a British customerbase in London, Frankfurt, West Germany and Paris.andM;Generally, only the local customer base is accessed by RTI users.andP;  Butsometimes users need cross database access.andP;  If a salesman wants to know allthe RTI sites within a multinational corporation, access to all of the RTIcustomer databases is required.andM;Using Ingres, the RTI user can access that information with a simple query.andO;While the system will access numerous, geographically dispersed systems forthe data to the end user, it will appear that there is only one system--thelocal one.andM;Using Ingres as a focal point, the geographically dispersed systems couldeven consist of DBMSs from different vendors, comprising a heterogeneoussystem.andP;  If the database management systems at different sites are the same,the system is a homogeneous distributed database system.andM;&quot;Relational Technology,&quot; says Wasiolek, &quot;has put a great deal work intoheterogeneous distributed database technology--meaning the ability to definea distributed database system, which includes databases from differentvendors.andP;  So, in a single distributed database you could refer to data inIBM's DB2, SQL/DS, DEC's RDB, RMS file system and in Ingres.&quot;andM;Ingres/Star, RTI's distributed data manager, provides transparent access todata in multiple databases simultaneously through gateways.andM;&quot;It's a real world, industry problem,&quot; says Wasiolek.andP;  &quot;People have data indifferent vendor's databases which they want to combine.&quot;andM;Certainly, the Department of Defense (DOD) would agree with that.andP;  Data aboutweapons systems probably resides on virtually every database on the market.andO;DOD has an increasing need to cross-communicate data--including text andgraphics--from diverse sources.andM;The Department of Defense has initiated one of the most far-reaching,aggressive and visionary programs to interrelate heterogeneous distributeddatabases.andM;Michael McGrath, who heads the DOD Computer-aided Acquisition and LogisticSupport (Cals) program, said Phase I of Cals will focus on record transfersand data interchange.andP;  Phase II focuses on the integration of databases andsystems.andM;&quot;We see a trend in industry toward distributed heterogeneous databasesystems,&quot; McGrath said.andP;  &quot;So in that area, Cals is interested in acceleratingthe development of standards and we're anxious to see commercial productsevolve to support those standards.&quot;andM;McGrath said that David Jefferson of the National Institute of Standards andTechnology is overseeing the effort to establish the heterogeneousdistributed database requirements for Cals.andM;A major part of Phase II will be development of the Integrated Weapon SystemData Base (IWSDB).andM;The heterogeneous distributed databases and systems the IWSDB is tointerrelate include: design; design analysis; manufacturing process planning;automated manufacturing; spare part ordering; online provisioning;supportability analysis; procurement; maintenance; and technical manuals,training and authoring systems.andM;From the list of systems, it is clear that the distributed databases involvedwith Cals will incorporate more than just numeric data.andP;  Plans call for theprogram to include much text, graphics and document management information aswell.andM;The MediaScribe software products from Cogent Software in Framingham, Mass.,andO;combine expert systems technology with text and document managementcapabilities for Cals support.andP;  Founder Alan Littleford says the Cogentproducts have aroused the interest of James Martin, writer andhigh-technology consultant.andM;&quot;Jim and I will be forming a new company to further develop and marketMediaScribe and a slew of follow-on products,&quot; Littleford said.andP;  &quot;We aretargeting large, non-homogeneous documents and mixed media documents.andO;Initially, we'll capture text, static and animated graphics, and later voice,interactive video and expert systems.&quot;andM;Handling simple numeric data in distributed databases is fairly complex.andO;Adding text, graphics, voice and video databases increases the technologicalchallenge immensely.andM;&quot;The people who have engineered to the relational model are now addingextensions to handle more complex objects,&quot; Winter said.andP;  &quot;As we move intothe 1990s, this need to handle more complex objects will certainly grow.&quot;andM;&quot;There are still a lot of unanswered questions,&quot; he notes.andO;</TEXT></DOC>
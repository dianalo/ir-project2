<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-648-194  </DOCNO><DOCID>08 648 194.andM;</DOCID><JOURNAL>Computer Language  July 1990 v7 n7 p17(5)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>What meets the eye. (the production of images by computer)(Programming on Purpose) (column)</TITLE><AUTHOR>Plauger, P.J.andM;</AUTHOR><SUMMARY>Users are beginning to demand more in terms of computer-generatedimages and are less satisfied with character-oriented images.andP;  Therise of graphical user interfaces and bit-mapped images makesprogramming more complex.andP;  Unix was the first operating system tostandardize on an internal representation for a stream ofcharacters, defining a mini-language for placing characters withina succession of page images.andP;  Device independence is an importantaspect of graphical user interfaces, but this requires a price bepaid in terms of system performance.andP;  Current proposed solutionsto the problem of image display and generation do not consider thehuman aspect of image quality.andP;  The human eye considers angularresolution as well as resolutions that can be measured in dots perinch because distance from the image plays an important role indetermining its quality.andP;  Approaches to improved image display andgeneration are discussed.andM;</SUMMARY><DESCRIPT>Topic:     Image ProcessingImage GenerationHigh ResolutionCharacter GraphicsTechnologyPerceptionGraphical User InterfaceEnhancementsUser Needs.andM;</DESCRIPT><TEXT>Last month I celebrated my fourth anniversary of writing Programming onPurpose.andP;  I described my evolution from physicist to programmer.andP;  It seemsonly natural to begin my fifth year by taking the opposite perspective.andP;  Iwant to talk about the times when a programmer should think like a physicist.andM;Most of the time you don't have to bother; your assignments are sufficientlyclear-cut or your latitude is sufficiently constrained that you just do whatyou must.andP;  But every once in awhile you should take a look at how the outsideworld might affect your next program.andM;For example, I have long been concerned with the production of images bycomputer.andP;  Interactive displays deal with one class of imaging problems.andO;Printers deal with another.andP;  It would be nice if the two classes were not sodisjoint, but right now they are.andP;  I'm happy to see so many people working tomake displays and printed output look more alike.andM;Not long ago, character-oriented images were considered acceptable for mostapplications.andP;  They are simple enough to deal with since you only have 100 or200 distinct little pictures to generate.andP;  (They're called &quot;glyphs&quot; in thetrade.) You only have to display them at a couple of thousand distinct placeswithin a page image.andP;  That makes it much easier to ensure that what you seeon an interactive display resembles what you get on the printed page.andP;  Italso creates less traffic on serial communication lines to transmit pageimages.andP;  And it greatly simplifies text processing with multiple-filterprograms, as in a UNIX-style pipeline, or cutting and pasting text betweenwindows.andM;But the world did not stand still at that level of technology.andP;  Too manypeople demand multiple fonts or colors.andP;  Too many programs benefit from beingable to display arbitrary graphics along with text.andP;  Too many newapplications need gray scale or color images as well.andM;We are well into the era of the graphical user interface (GUI) and thebit-mapped image.andP;  Both have introduced a complexity into programming thatoften dominates the writing of new applications.andP;  A typical GUI has aninterface defined by nearly a thousand functions.andP;  A serious commercialapplication may have to produce bit-mapped images for dozens of differentdevices.andP;  This does not make for elegant programming.andM;One of the least appreciated successes of the UNIX operating system was theway it tamed character streams.andP;  In the late 1960s and early 1970s, when UNIXwas invented, displaying text was not so simple.andP;  Your program had to beprivy to various properties of the display device.andM;Is the first character of each line a FORTRAN-style carriage, a controlcharacter, or does it print? Do you provide a character count for each lineor an explicit terminator? If so, do you terminate a line with a carriagereturn, line feed, or both? And can the device handle horizontal tabs,vertical tabs, or form feeds? Write a program with one device in mind andexpect it to work horribly with another.andP;  Or be prepared to stuff the outputthrough some multipurpose reformatting program.andM;UNIX standardized on an internal representation for a stream of characters.andO;It defined a mini-language for placing characters within a succession of pageimages.andP;  The peculiarities of individual devices were isolated at the edgesof the system.andP;  A UNIX device driver translates to and from this internalcharacter-stream language as needed for each device.andP;  The need forreformatting programs is largely eliminated.andM;Most programmers now take that sort of device independence for granted.andP;  Theywould scoff at the arguments used against the UNIX approach in the early1970s.andP;  We can't afford the overhead of another layer of mapping softwarebetween the program and the device.andP;  Our minilanguage is superior andcontains features that many applications will need.andP;  You should know whatdevice you're driving anyway, so you can take maximum advantage of it.andM;Nevertheless, we now struggle through a similar process with GUIs.andP;  The needfor device independence is more widely accepted, but the preoccupation withperformance necessarily remains.andP;  Several candidates contend for the leadingrole as device-independent GUI.andP;  All trade performance for some semblance ofportability.andP;  And all still involve far more complexity than I am comfortablewith.andP;  We have yet to see the breakthrough we need in linguistics ofgraphical displays.andM;We cannot sit around and wait for the problem to be solved, however.andP;  Theneed is too great for solutions now.andP;  We probably need more experience withexisting GUIs before we learn how to isolate the complexity.andP;  So we live withWindows, PostScript, Motif, and all the other bold attempts to solve parts ofa very difficult problem.andM;None of this current technology should blind us to what we really want in theway of displayed images.andP;  That is a function of the human eye and the brainbehind it.andP;  It's not a question of whether Windows or Presentation Managermakes better use of an Intel 386 with 4MB of memory and a VGA display.andP;  Weshould look at character-oriented devices and current graphical displays asmere steps in the right direction.andP;  We want to draw prettier pictures, and wewant to draw them more elegantly.andM;That's where the physics come in.andP;  &quot;Pretty&quot; may be in the eye of thebeholder, but &quot;pretty enough&quot; is determined primarily by the physics (orphysiology) of human vision.andP;  For now I assume that the images we generate bycomputer are for human consumption.andP;  If our goal is to record more detailthan the eye can see, different criteria apply.andP;  I also assume for now thatdeveloping an elegant GUI language is a separable problem.andP;  Certainly thesolution will be shaped by the needs of the final imaging devices.andM;Let's begin by looking at spatial resolution.andP;  That's a common enoughpreoccupation these days.andP;  Usually, people talk in terms of dots per inch(DPI), but that tells only part of the story.andP;  What counts to the human eyeis angular resolution.andM;For example, it is widely accepted in the printer industry that 300 DPIproduces (barely) adequate fine detail for mimicking the typesetter's art.andO;That assumes you regard the output from a normal reading distance.andP;  Call thatdistance 18 inches and you're talking about an angular resolution of 200microradians or 1/100 of a degree.andM;Press your nose against the image and the angular resolution gets 10 timesworse.andP;  You also lose quality if you project the image on a large screen andstand too close.andP;  So whether you're generating slides, dartboards, orbillboards, you know what you need.andP;  If you want to get the same effectiveresolution as a 300-DPI laser printer on letterhead, you must provide atleast 100 dots per angular degree of vision.andP;  Now you know why the typicalterminal screen looks crummy at 30 dots per degree.andM;That value of 300 DPI is slightly misleading.andP;  Printers have known for yearsthat you can get away with much less spatial resolution when printingillustrations.andP;  Newspaper photographs are typically printed with a halftonescreen of 60 to 80 lines per inch.andP;  The screening process breaks up the imageinto a grid of dots much like the pixels on a computer-generated display.andO;The major difference is that the dots on a halftone screen can vary in size.andO;Hence, the dots can represent a number of different shades of gray.andP;  Alaser-printer pixel is usually just a black dot or a white space, period.andM;I won't pretend that newspaper quality is acceptable for reproducing imagesin arbitrary applications.andP;  On the contrary, I find it about the minimumtolerable.andP;  But even the glossiest magazines need nowhere near 300 lines perinch; high-grade paper stock can't support that much resolution.andP;  Ink fromadjacent dots begins to run together and smear once they get close enough.andO;Printers say the paper can't hold the ink.andP;  The finest screens top out ataround 150 lines per inch, and they do a fine job of reproducing the detailthe eye demands.andM;Those shades of gray really make a difference in the number of dots you need.andO;They are also very necessary if you want to display an image containinggrays.andP;  Once you get beyond type and line drawings, the world is seldom blackand white.andM;You can make shades of gray even if your display produces only black dots.andO;Halve the spatial resolution of a 300-DPI printer and you have four dots ateach printing position.andP;  Print differing numbers of dots in a given positionand you generate three shades of gray between black and white.andP;  That's notmany shades, so try halving the resolution again.andP;  Now you have newspaperresolution at 75 DPI and 16 dots to play with at each position.andP;  You now have15 intermediate shades of gray.andM;You have 16 different ways to display only a single dot at a given printingposition and even more ways to produce other intermediate shades.andP;  (Hint:think about Pascal's triangle and its role in combinatorics.) It would benice to do something useful with those 65,536 different ways to represent 17shades.andM;You can.andP;  If you always use the same pattern for each shade of gray, thehuman eye quickly detects your laziness.andP;  The repetitions stand out,particularly in a region of uniform shading.andP;  The pattern can distract.andO;Unless your goal is to add a touch of surrealism, you want to avoid this sortof thing.andM;The solution is to choose bit patterns at random for each shade of gray.andP;  Theeye sees only noise and filters it out without fuss.andP;  This technique is knownin the trade as &quot;dithering.&quot;andM;I haven't commented yet on whether our trusty 300-DPI printer can do a decentjob of reproducing photographs.andP;  Certainly, newspaper resolution is the bestyou can hope for.andP;  The question is, do 17 distinct shades suffice to simulatea halftone screen? Some people might think so, but I don't.andP;  The eye candetect far more than 16-odd shades of gray.andP;  Worse, it is not particularlypleased by the set of shades you get this way.andM;You must remember that the eye is tremendously adaptable to variations inlight.andP;  Those of us who were photographers before cameras became so automatichad to learn about shutter speeds and lens apertures.andP;  On a sunny day, youmight have to set your camera at 1/1000 second at f1 6.andP;  In a dimly lit room,you might try for a shot at 1/8 second at f1.4 to deliver the same amount oflight to the film.andP;  Those two exposures differ by a factor of 16,000.andP;  Yetyour eye can tolerate brighter sunlight and function in much darkersituations.andP;  The human eye can respond to individual photons, detecting onein 10 that hit the eye.andM;We are far from being able to produce computer images that span much of thistremendous range.andP;  Fortunately, we don't have to.andP;  Through severalmechanisms, the eye adjusts its sensitivity in response to ambient light.andP;  Atany given adaptation, it can distinguish only a limited range of intensities.andO;Any light that is too dark looks black.andP;  Any light that is too bright lookswhite.andP;  The ratio of light intensities between barely black and barely whiteis about one to 1,000.andM;That's still a pretty broad range.andP;  The eye deals with it by another trickused widely in the sense organs of animals.andP;  Its response to variations inintensity is logarithmic.andP;  That means that the eye detects ratios ofintensity, not differences.andM;Say light B produces twice the energy of light A. Your eye sees it as alighter shade of gray.andP;  Now adjust light C so it is brighter than light B bythe same shade.andP;  Light C must have twice the intensity of light B (or fourtimes that of light A) to look one shade brighter.andM;Your eye can distinguish about 10 such shades, or doublings of intensity,between barely black and barely white.andP;  We old photographers used to call afactor-of-two change in light intensity one &quot;stop.&quot;andM;Disciples of Ansel Adams learned to use a related but different terminologyin the darkroom.andP;  He called each doubling one &quot;zone.&quot; His zone system helpedprintmakers reach accurate exposure decisions without the confusion oflogarithms or f-stops.andM;A slide in a projector can reproduce the full 10 zones our eye is prepared todistinguish.andP;  A photographic print on glossy white paper can reproduce abouteight.andP;  (That's one reason slide presentations have more punch thanposters-provided they don't chronicle your Uncle Louie's vacation.) These arethe criteria by which we must judge computer displays and printed output.andP;  Aninsufficiently dynamic range of intensities makes an image look flat andlifeless.andM;Another important parameter is the number of different shades the eye candetect.andP;  Ansel Adams taught us to split a zone into much smaller pieces thanwas customary in the past.andP;  His richly detailed prints were proof of thepudding.andP;  My experience with printing color negatives was that I could barelydiscern 1/30 of a zone.andP;  That fits well with the growing popularity ofscanners that distinguish 256 shades of gray.andP;  (Thirty steps times eight to10 zones yields 240 to 300 discernible shades.)andM;Let's get back to those 17 shades of dithered gray from the laser printer.andO;First, it's clear that we need many more shades to please the eye.andP;  Evennewspaper halftones do better than that.andP;  Second, it's now apparent that theeye sees even fewer than 17 shades.andP;  Only one step separates the density ofone and two dots.andP;  Eight steps create the difference between eight and 16dots, even though it looks like the same total change in shade.andP;  Ditheringdoes not come off as a good way to trade angular resolution for gray shading.andO;So a good display will cover 10 zones of intensity or a thousandfold change.andO;It will display 256 different shades along the way, and it will distributethose shades along a logarithmic scale of intensity.andP;  It might also give yousome control over the exact shape of the gray scale.andO;</TEXT></DOC>
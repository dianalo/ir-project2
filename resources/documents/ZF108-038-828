<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-038-828  </DOCNO><DOCID>08 038 828.andM;</DOCID><JOURNAL>PC Magazine  Jan 30 1990 v9 n2 p213(22)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>CASE tools for designing your applications. (overview of tenevaluations of computer-aided software engineering softwarepackages)(includes related articles on the many steps of softwaredesign, CASE in action) (evaluation)</TITLE><AUTHOR>Fersko-Weiss, Henry.andM;</AUTHOR><SUMMARY>Microcomputer-based computer-aided software engineering (CASE)programs are not very old.andP;  Excelerator, the best-selling CASEprogram for microcomputers, was introduced in 1984.andP;  The entireCASE concept is only about 15 years old.andP;  The information systemsarena has been slow to accept CASE as it has always beenconsidered as much an art as a science.andP;  Estimates vary on CASEmarket penetration, but figure at only about 10 percent at best,though the market is expanding rapidly.andP;  Much CASE development isstill considered experimental.andP;  The CASE programs reviewed vary agreat deal in how completely they carry out the various functionsof software development.andP;  Costs vary from $595 to $9,200.andP;  Costreflects ease-of-use, functionality and completeness.andP;  Trainingand support are also important.andM;</SUMMARY><DESCRIPT>Company:   Yourdon Inc. (products)Learmonth and Burchette Management Systems Inc. (products)Nastec Corp. (products)Index Technology Corp. (products)KnowledgeWare Inc. (products)Computer Systems Advisers Inc. (products)McDonnell Douglas Corp. (products)Cadre Technologies Inc. (products)Visual Software Inc. (products)Visible Systems Corp. (products).andO;Ticker:    KNOW; INDX; MD.andO;Product:   Analyst/Designer Toolkit (Program development software)Auto-Mate Plus (Program development software)DesignAid 4.3 (Program development software)Excelerator 1.9 (CASE software)Information Engineering Workbench/Analysis Workstation (Programdevelopment software)Information Engineering Workbench/Design Workstation (Programdevelopment software)POSE 4.0 (CASE software)ProKit WORKBENCH (Program development software)Teamwork 3.0 (Program development software)Visible Analyst Workbench (Program development software)vsDesigner 2.0 (Program development software).andO;Topic:     Computer-aided software engineeringEvaluationMicrocomputers.andO;Feature:   illustrationtable.andO;Caption:   Feature summary (table)andM;</DESCRIPT><TEXT>CASE Tools for Designing Your ApplicationsandM;PC software has automated countless business processes and tasks over thepast decade, but it's only in the last few years that PC packages have beendeveloped to automate the software development cycle itself.andP;  Using softwareto develop software is what CASE (computer-aided software engineering) is allabout.andP;  CASE tools prove that the software industry can practice what itpreaches.andM;CASE tools for the PC are very young.andP;  Excelerator, one of the earliest CASEtools and now the best-seller, was introduced in 1984 by Index Technology.andO;Even the concept of CASE is only about 15 years old.andP;  The information systems(IS) world has been somewhat slow to accept CASE.andP;  Unlike hard engineeringdisciplines--such as electrical or mechanical engineering--softwareengineering has long been considered an art as well as a science.andP;  ISdepartments have been reluctant to give up the power of their mysterious artto automation.andP;  And until recently, PCs weren't powerful enough to handleCASE.andP;  But as PCs grow more powerful, and as the backlog of in-houseapplications grows bigger, IS departments are beginning to open theirarms--and their coffers--to the new wave of CASE tools that have recentlysurfaced.andM;Even now, CASE isn't much more than a topic for cocktail conversation at manycompanies.andP;  Estimates vary on market penetration, but it would seem to be 10percent at best.andP;  Much of the work with CASE is experimental, and even at themost proactive user companies, CASE has been adopted on a project ordepartmental basis only.andP;  But that's about to change.andM;A GROWING MARKETandM;The CASE market is expanding rapidly.andP;  Some analysts predict that it willgrow at a rate of nearly 50 percent a year for the next four years, reachingan annual sales level of $1.4 billion by 1993.andP;  Most analysts agree that bythe mid-1990s, no software will be written without the help of a CASE tool.andM;For many people, the term CASE calls to mind code generators, which automatethe back end of the software development process.andP;  But CASE products existsfor virtually every phase of the software development life cycle.andP;  Front-endtools, which help with planning, analyzing, designing, and prototypingsystems, are grabbing the lion's share of the CASE market.andP;  According toInput, a market research firm, front-end tools generated $135 million in1988--63 percent of the CASE market.andM;Last September, IBM announced its Application Development (AD)/Cycle, thestrategy by which IBM will provide standard specifications to allow allapplication development tools to communicate amongst themselves, thusbridging the gap between front-end and back-end tools.andP;  Besides havingpurchased minority interests in two of the companies whose products arereviewed here (Index Technology and Knowledge Ware) to help with OS/2development of its packages, IBM plans that any CASE developer will be ableto operate in the AD/Cycle by writing SAA interfaces, and 32 companies havealready signed on.andP;  The stamp of approval that IBM has given PC-based CASE isan important step forward.andM;RIGHT FROM THE STARTandM;Design and analysis CASE tools are getting most of the attention todaybecause automating the front end of the software development life cycleyields tremendous productivity gains at every subsequent stage.andP;  If theanalysis and design of a program are done well, maintaining it is a snap.andO;Today, Is departments spend about 70 percent of their time maintainingprograms.andP;  Anything that makes the maintenance process easier frees updevelopers to create new systems.andM;Today, there are well over 100 companies offering nearly 200 differentfront-end CASE tools.andP;  In this article, PC Magazine's first look at CASE,we've honed in on the best-selling design and analysis packages.andP;  Todetermine which products have the biggest market shares, we used figures fromthree market research firms: International Data Corp., Input, and SentryMarket Research.andM;BEST-SELLING CASE TOOLSandM;Our original intention was to cover all design and analysis products thataccount for at least 2 percent of CASE revenues.andP;  Some of the products thatmet this criterion didn't make it into the review: we did not receiveFoundation from Arthur Andersen or IEF from Texas Instruments, because thesecompanies offer consulting services and don't sell their products asstandalones.andP;  PACBASE from CGI Systems and SDM/Standard from AGS ManagementSystems are not included here because each requires a mainframe as well as aPC.andM;One product we chose to include, POSE, is too new to have a significant shareof the market, but we think it's an exciting alternative worthy ofconsideration.andP;  We've also included a look at one other new product: SyscorpInternational's MicroSTEP, the first PC product to combine code generationwith some of the design and analysis stages.andM;The packages that get full-fledge reviews here are Analyst/Designer Toolkitfrom Yourdon, Auto-Mate Plus from Learmonth andamp; Burchett Management Systems,DesignAid from Nastec Corp., Excelerator from Index Technology, IEW/AnalysisWorkstation and IEW/Design Workstation from KnowledgeWare, POSE from ComputerSystems Advisers, ProKit*Workbench from McDonnell Douglas, teamwork fromCadre Technologies, Visible Analyst Workbench from Visible Systems Corp., andvsDesigner from Visual Software.andM;METHODOLOGIES AND TECHNIQUESandM;Although none of the front-end CASE tools on the market today fully andrigorously incorporate a methodology, choosing a product that supports someaspects of the methodology your company already employes will help ease thetransition to a CASE tool.andP;  A methodology is a complete set of rules andstep-by-step procedures for the creation and organization of a softwareprogram.andP;  It is written down (some take up 18 volumes), can be taught, and isreproducible in project after project.andP;  In the realm of theory, methodologiesare meant to be followed unswervingly, but in the real world, where businessneeds change seemingly at the speed of light, methodological steps getdropped and procedures shortened.andP;  In the business world, techniques play amore central role.andM;Design and analysis techniques are ways to view pieces of the developmentprocess, such as system requirements, the flow of data, and entityrelationships.andP;  All of these techniques have associated diagrams.andP;  Forexample, the Gane/Sarson technique uses a data flow diagram to make a logicalmodel of a system.andP;  The diagram has open rectangles to indicate data stores(databases), square boxes for external input or output, and boxes withrounded corners to indicate processes.andP;  The flow of information through thissystem is indicated by arrows.andP;  Other techniques might use a similar diagramwith somewhat different representations.andM;These differences can be merely stylistic or more substantial.andP;  In aWard/Mellor transformation graph, you might have the exact same data-flowelements with two additions: dotted-line boxes with rounded corners toindicate control transformations--that is, changes in input from machinessuch as automated tellers or point-of-sale terminals--and dotted arrows toindicate the flow of machine inputs and outputs.andM;PICTURES TELL THE STORYandM;In the early stages of software development, creating diagrams of data flow,structure, and entity relationships requires 80 to 90 percent of thedeveloper's time.andP;  These diagrams make communication with end users mucheasier because the illustrations eliminate much of the elevated jargon ofsystems professionals.andP;  Pictures tell the story much better than words.andP;  Mostof the diagrams are fairly simple because they reflect only one piece of thepuzzle and generally only one level of detail.andP;  Diagrams are further explodedto reveal more-detailed views of a system component.andP;  It's as if the softwareengineer were turning a knob to switch levels of magnification on amicroscope.andP;  The CASE tools reviewed here all generate output in the form ofsuch diagrams.andM;While the diagrams are the visual focus of front-end CASE tools, the datadictionary or repository is the real heart of these programs.andP;  Every dataelement, control input, and process is entered into the repository.andP;  Each isdefined, described, and related to the others.andP;  The diagrams are producedfrom the information in the repository.andM;Another important output of design and analysis programs is system reports,which are also generated from the information in the repository.andP;  Thesereports tell the engineer whethe the design is consistent; whether itcontains redundant or overlapping data elements; whether processes areincorrectly connected to the data flow, are left dangling, or consume thedata; whether or not information inputs are missing; and so on.andM;The repository is also used to produce prototypes of the system, showing howthe screens will look, what the interface will be like, and which reports thesystem will produce.andP;  The prototypes can be very close in appearance andaction to the actual system, yet they are created without using actualprogram code.andP;  This CASE sleight of hand lets users have input into thesystem before changes necessitate rewriting whole chunks of the program.andO;Thus, users get systems more to their liking.andM;THE COSTS OF CASEandM;The CASE tools reviewed here vary considerably in how thoroughly they carryout these functions.andP;  Some can start with a meta-level corporate plan,showing what a company does and what its information needs are, and go rightthrough to prototyping individual systems--or, in the case of MicroSTEP, evenbeyond that to code generation.andP;  Others concentrate on one or two phases ofthe process.andP;  In some tools, the integration between analysis and design isloose; in other programs, some useful diagramming techniques are missing.andO;When evaluating a CASE tool, it's important to match your needs to theproduct's functionality.andM;Functonality, ease-of-use, and completeness are generally reflected in thecost of a CASE tool.andP;  The least expensive package reviewed here is POSE,which sells in modules for $595 each.andP;  The most expensive is ProKit*Workbenchat $9,200.andP;  Some products cost up to $50,000 because they include consulting,installation, and training; this is common with the products offered by acouple of the Big Eight accounting firms.andP;  Some tools, such as POSE andvsDesigner, are modular, allowing you some control over the functionality andprice.andM;Training and support are very important for CASE tools.andP;  Trying to learn aCASE tool just by going through the manual is like trying to learn how to usepower tools to build furniture by reading the operating instructions: you'lleither cut off your arm or stop using the tools before you've made anythingsubstantial.andP;  Some CASE manufacturers offer direct training; others use thirdparties.andM;The costs for training can vary from around $200 per user up to thousands ifthe company also sets up the tools for you and establishes procedures andpolicies for their use.andP;  Training may also ease the culture shock of movingto a CASE environment.andP;  Systems analysts may resist changes because they findit hard to learn a new style of software development, and they may see CASEas the first move toward job obsolescence.andP;  Without the proper training andthe right sociological approach to implementing CASE, departments mayexperience subtle forms of sabotage.andM;BETTER PROGRAMS, LESS MAINTENANCEandM;The benefits of using a design and analysis tool are considerable, butthey're mostly intangible.andP;  The most obvious benefit is better-designedsoftware that will require less maintenance later.andP;  Engineers point to thisas the biggest source of productivity gains with CASE.andP;  Programs are betterbecause they are designed more tightly, with little or no overlap infunctions; they have no errors and are consistent throughout.andP;  Another reasofor improved programs is that end users and engineers can test alternatives,playing what-if games with the system design.andP;  Since diagrams can be almostinstantly redrawn, this kind of testing is painless and will often result ina more creative program.andM;One measurable benefit is lower personnel requirements.andP;  Large projects oftenforce IS departments to add systems professionals; CASE tools may eliminatethe need for additional personnel.andM;Today's design and analysis tools are the second generation of CASE products,and they've already changed considerably.andP;  The diagramming and prototypingcapabilities are better, the programs are easier to use, the integrationbetween phases is tighter, and administrative functions have been cleaned up.andO;The programs will continue to improve in these directions, butmore-fundamental changes are coming.andM;Perhaps the most dramatic change will be the use of expert systems in CASEtools.andP;  Someday soon, CASE tools will be smart enough to recognize patternsand suggest alternatives for parts of the system.andP;  Mistakes in consistencyand other types of errors will automatically be fixed.andP;  Other changes willbring more flexibility and fuller life-cycle functionality.andP;  More programswill cover the whole development process, even the maintenance phase.andP;  AndCASE tools will become more team-oriented, allowing the repository to beshared over networks.andP;  As manufacturers start to incorporate these changes,CASE will expand beyond experimental enclaves.andP;  In time, CASE tools willalmost certainly become the mainstay of IS departments and the soul ofsoftware development.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> DOE2-79-1104 </DOCNO><TEXT>A large class of computational problems are characterized by frequentsynchronization, and computational requirements which change as a functionof time. When such a problem is solved on a message passing multiprocessormachine, the combination of these characteristics leads to system performancewhich deteriorates in time. Performance can be improved with periodicredistribution of computational load; however, redistribution can exacta sometimes large delay cost. The authors study the issue of decidingwhen to invoke a global load remapping mechanism. Such a decision policymust effectively weigh the costs of remapping against the performancebenefits, and should be general enough to apply automatically to a widerange of computations. The authors propose a general remapping decisionheuristic, then study its effectiveness and its anticipated behavioron two very different models of load evolution. Assuming only that theremapping cost is know, this policy dynamically attempts to minimizesystem degradation including the cost of remapping) per computation step.This policy is quite simple, choosing to remap when the first local minimumin the degradation function is detected.</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-867-478  </DOCNO><DOCID>07 867 478.andM;</DOCID><JOURNAL>PC Week  Nov 6 1989 v6 n44 p109(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>Too much effort is wasted managing data: a push for intelligentdatabase servers could net surprising results. (intelligentdatabase servers are needed) (part 2) (column)</TITLE><AUTHOR>Morse, Stephen.andM;</AUTHOR><SUMMARY>Data base servers save time and resources on local area network(LAN)-based relational data bases.andP;  The server accepts dataqueries from a microcomputer, retrieves the data from the databaseand then downloads only that information back to themicrocomputer.andP;  If a user is trying to get consolidated data froma series of LANs, however, the process can be tedious and timeconsuming.andP;  The answer is an intelligent data base server that isable to forward parts of a query to other servers and mainframesto get all the information the query requires.andP;  This setup is alsocalled a distributed data base and is starting to appear on LANsand microcomputers.andP;  Users need to start demanding more of theseimplementations in order to get the most from their data basesystems.andM;</SUMMARY><DESCRIPT>Topic:     Data Base ServersUser NeedsQuery ProcessingLocal Area NetworksDistributed Data Bases.andM;</DESCRIPT><TEXT>By Stephen MorseandM;Second of two partsandM;In the last episode of this commentary, I made the point that you can'texpect to slap all your database files onto a file server somewhere, leteveryone have at it and then expect to get any useful performance out of yourlocal area network.andP;  With everyone sending trial read requests to the fileserver and getting back records that are mostly discarded, you're using upprecious network wire time for the wrong purpose.andM;Thus the principle of the network database server: a largish machinededicated to the proposition of accepting your completely formed databasecommand (as in SQL) and returning to you only what you asked for.andP;  No messyindex buffers or trial records to throw away.andM;All of this is built on the relational model.andP;  If you inquire earnestly aboutjust what this relational model is, especially of someone who really knows,you're likely to get a lengthy discourse having to do with n-tuples, joinsboth internal and external and referential integrity, all of which will bepreached to you with a fervor not seen in the western world since the days ofthe Counter-Reformation.andP;  The old debate about angels on the head of a pin isnothing compared with the question about whether a particular databasepackage is Truly Relational.andM;But for a user, it really comes down to simple things.andP;  When the databaseserver hands you back the data you requested, you get it in the form of arectangular table, with rows for the records and columns for the fields.andO;Easy enough to look at and understand.andP;  The idea behind the relational modelis that you ought to be able to look at this table of data and know prettyquickly what you do and what you don't have there.andM;So you send SQL commands to the database server and it sends back a table,right?andP;  Well, usually.andP;  But let's say you're a regional manager and you haveto keep tabs on several departments in several locations.andP;  Each departmenthas a LAN and each department has a database server.andP;  So what do you do?andP;  Logon to each department's server in turn -- you do have the right to, of course-- and get your easy table of information from each one?andM;You could do this, but it starts to get pretty tedious, to say the least.andO;How do you look at all these tables of data at once, to say nothing of any adhoc rearrangement or reconsolidation?andP;  What you really want is one table thatincludes all your departments.andM;Or look at the problem in a different way.andP;  Suppose you're not in the habitof downloading every single byte of a mainframe database into your departmentserver.andM;Let's say you've been intelligent about it and worked out a way ofdownloading the 10 percent of mainframe data that can handle 95 percent ofyour questions.andM;What happens to the other 5 percent?andP;  Do you have to make separate queries tothe LAN server and to the mainframe just to get all the columns filled in?andO;You'd really like to make only one query that gets you everything back.andM;What we're getting around to in these scenarios is an intelligent databaseserver that understands it can't always come back with the complete responsefor every given SQL command.andP;  What it may have to do is forward pieces of thecommand to other servers and mainframes to make sure that the requester isgetting back everything there is to be had under the circumstances.andM;This is that old standby, the distributed database.andP;  It has been in existencein one form or another for a decade or two, but mainly on special-purposeminicomputers and mainframes, and not very fast at that.andP;  We are starting tosee some implementations in the LAN-and-microcomputer world, but it is stillfar from commonplace, and it is by no means easily integrated with other coreapplications.andP;  Yet.andM;So here's another call to end users to start demanding.andP;  Your data willspread all over your enterprise.andP;  And you want it to, because you will wantto place it where it will do the most good.andP;  But you'll also want to get itall back in one piece.andP;  And you'll want to get it into your spreadsheets anddocuments and mail messages with no visible effort.andM;All you have to do is ask.andM;----------Stephen Morse is a systems architect with Manufacturers Hanover Trust Co., inNew York.andO;</TEXT></DOC>
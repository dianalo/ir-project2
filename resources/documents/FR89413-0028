<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> FR89413-0028 </DOCNO><DOCID>fr.4-13-89.f2.A1027</DOCID><TEXT><ITAG tagnum="69"><ITAG tagnum="18">National Institute of Standards and Technology</ITAG><ITAG tagnum="41">[Docket No. 90365-9065]</ITAG><ITAG tagnum="56">Proposed Revision of FIPS PUB 151, Posix; Portable Operating SystemInterface for Computer Environments</ITAG><ITAG tagnum="10"><T2>AGENCY: </T2>National Institute of Standards and Technology (NIST),Commerce.</ITAG><ITAG tagnum="10"><T2>ACTION: </T2>Request for comments.</ITAG><ITAG tagnum="10"><T2>SUMMARY: </T2>The purpose of this notice is to announce the proposedrevision of Federal Information Processing Standards Publication (FIPSPUB) 151, POSIX: Portable Operating System Interface for Computer Environments.This proposed revision to FIPS PUB 151 will adopt the IEEE Standard 1003.1-1988,Standard for Portable Operating System Interface for Computer Environments.FIPS PUB 151, POSIX, was approved in September 1988 on an interim basis,pending completion of voluntary industry standards activities on the POSIXspecifications. The Appendix discusses the additional elements needed fora vendor independent interface to operating systems and an architecturalframework for applications portability.Prior to the submission of this proposed revision to the Secretary of Commercefor review and approval, it is essential to assure that consideration isgiven to the needs and views of manufacturers, the public, and State andLocal governments. The purpose of this notice is to solicit such views.This proposed revision contains two sections: (1) An announcement section,which provides information concerning the applicability, implementation,and maintenance of the standard; and (2) a specifications section whichdeals with the technical requirements of the standard. Only the announcementsection of the standard is provided in this notice. Interested partiesmay obtain copies of the technical specifications (IEEE Std 1003.1-1988)from the IEEE Service Center, 445 Hoes Lane, P.O. Box 1331, Piscataway,NJ 08855-1331, telephone 1-800-678-4333.</ITAG><ITAG tagnum="10"><T2>DATE: </T2>Comments on the proposed revision must be received on orbefore July 12, 1989.</ITAG><ITAG tagnum="10"><T2>ADDRESS: </T2>Written comments concerning the revision should be sentto: National Institute of Standards and Technology, ATTN: Revision of FIPS151, Technology Building, Room B154, Gaithersburg, MD 20899.Written comments received in response to this notice will be made partof the public record and will be made available for inspection and copyingin the Central Reference and Records Inspection Facility, Room 6628, HerbertC. Hoover Building, 14th Street between Pennsylvania and Constitution Avenues,NW., Washington, DC 20230.</ITAG><ITAG tagnum="10"><T2>FOR FURTHER INFORMATION CONTACT:</T2>Roger Martin, National Instituteof Standards and Technology, Gaithersburg, MD 20899, telephone (301) 975-3295.<ITAG tagnum="6">Raymond G. Kammer,</ITAG><ITAG tagnum="4">Acting Director.</ITAG><ITAG tagnum="21">Date: April 7, 1989.</ITAG><ITAG tagnum="85">Federal Information Processing Standards Publication 151-1 [Date]</ITAG><ITAG tagnum="85">Announcing the Standard for POSIX: Portable Operating System Interfacefor Computer Environments</ITAG>Federal Information Processing Standards Publications (FIPS PUBS) are issuedby the National Institute of Standards and Technology after approval bythe Secretary of Commerce pursuant to Section 111(d) of the Federal Propertyand Administrative Services Act of 1949 as amended by the Computer SecurityAct of 1987, Pub. L. 100-235.<T3>Name of Standard.</T3> POSIX: Portable Operating System Interface forComputer Environments.<T3>Category of Standard.</T3> Software Standard, Operating Systems.<T3>Explanation.</T3> This publication announces the adoption of IEEE Std1003.1-1988 of the Institute of Electrical and Electronics Engineers (IEEE)Standard for Portable Operating System Interface for Computer Environmentsas a Federal Information Processing Standard (FIPS). IEEE Std 1003.1-1988defines a C language source interface to an operating system environment.This standard is for use by computing professionals involved in systemand application software development and implementation. This standardis the first component of a series of specifications needed for applicationportability. The Appendix to this standard discusses the elements neededin an Applications Portability Profile.<T3>Approving Authority.</T3> Secretary of Commerce.<T3>Maintenance Agency.</T3> U.S. Department of Commerce, National Instituteof Standards and Technology (National Computer Systems Laboratory).<T3>Cross Index.</T3> The Institute of Electrical and Electronic EngineersStandard for Portable Operating System Interface for Computing Environments,IEEE Std 1003.1-1988 (POSIX).Related Documentsa. Federal Information Resources Management Regulation 201-8.1, FederalADP and Telecommunications Standards.b. Draft Proposed American National Standard X3J11/88-002, ``ProgrammingLanguage C''.<T3>Objectives.</T3> This FIPS permits Federal departments and agenciesto exercise more effective control over the production, management, anduse of the Government's information resources. The primary objectives ofthis FIPS are:a. To promote portability of computer application programs at the sourcecode level.b. To simplify computer program documentation by the use of a standardprotable system interface design.c. To reduce staff hours in porting computer programs to different vendorsystems and architectures.d. To increase portability of acquired skills, resulting in reduced personneltraining costs.e. To maximize the return on investment in generating or purchasing computerprograms by insuring operating system compatibility.Government-wide attainment of the above objectives depends upon the widespreadavailability and use of comprehensive and precise standard specifications.<T3>Applicability.</T3> This FIPS shall be used for operating systems thatare either developed or acquired for Government use where POSIX-like interfacesare required. This FIPS is applicable to the entire range of computer hardware,e.g.:a. Micro-computer systems.b. Mini-computer systems.c. Engineering workstations.d. Mainframes.<T3>Specifications.</T3> The POSIX FIPS specifications are the specificationscontained in the Institute of Electrical and Electronics Engineers Standardfor Portable Operating System Interface for Computer Environments, IEEEStd 1003.1-1988 (POSIX) as modified below. IEEE Std 1003.1-1988 definesa C language source code level interface to an operating system environment.IEEE Std 1003.1-1988 refers to and is a complement to draft ANSI standardX3J11/88-002, C Language, which is under development by Accredited StandardsCommittee X3. IEEE Std 1003.1-1988 requires specific areas of ANSI X3J11/88-002,C Language, to complete the environment specification for portable applicationsoftware.The following modifications to IEEE Std 1003.1-1988 for Portable OperatingSystem Interface for Computer Environments are required for implementationfor POSIX that are acquired by Federal agencies:a. Inconsistencies with CLK<T2>X</T2>TCK exist between the IEEE Std 1003.1-1988 and the referencedANSI/X3.159-198x Programming Language C Standard draft 13 May 1988 (X3J11/88-002).This inconsistency shall be resolved in the ratified C Standard. Untilthe C Standard is ratified, CLK<T2>X</T2>TCK is to be treated as a POSIX-only symbol.b. The implementation shall support the option <T2>X</T2>POSIX<T2>X</T2>CHOWN<T2>X</T2>RESTRICTED.c. The implementation shall support the option {NGROUPS<T2>X</T2>MAX} such that the value of {NGROUPS<T2>X</T2>MAX} is greater than or equal to eight (8).d. The implementation shall support the setting of the group-ID of a file(when it is created) to that of its parent directory.e. The implementation shall support the functionality associated with thefeature {<T2>X</T2>POSIX<T2>X</T2>SAVED<T2>X</T2>IDS}.f. The implementation shall support the functionality associated with thefeature {<T2>X</T2>POSIX<T2>X</T2>VDISABLE}.g. The implementation shall support the option <T2>X</T2>POSIX<T2>X</T2>JOB<T2>X</T2>CONTROL. h. The implementation shall support the functionality associated with thefeature {<T2>X</T2>POSIX<T2>X</T2>NO<T2>X</T2>TRUNC}. i. In section 6.4.1.2, the sentence ``If a read( ) is interrupted by asignal after it has successfully read some data, either it shall return-1 with errno set to [EINTR], or it shall return the number of bytes read.''shall be deleted and replaced with the sentence ``If a read( ) is interruptedby a signal after it has successfully read some data, it shall return thenumber of bytes the system has read.'' In section 6.4.2.2, the sentence ``If a write( ) is interrupted by a signalafter it successfully writes some data, either it shall return -1 witherrno set to [EINTR], or it shall return the number of bytes written.''shall be deleted and replaced with the sentence ``If a write( ) is interruptedby a signal after it successfully writes some data, it shall return thenumber of bytes the system has written.'' j. The environment for the login shell shall contain the environment variablesHOME and LOGNAME as defined in section 2.7. <T3>Implementation.</T3> This standard is effective October 13, 1989. Thisstandard is compulsory and binding for use in all solicitations and contractsfor new operating systems where POSIX-like interfaces are required. Theother elements identified in the Appendix should be considered in planningfor future procurements. a. <T3>Acquisition of a Conforming Portable Operating System Environment.</T3>Operating system environments which are to be acquired for Federal useafter the publication date of this standard and which have applicationsportability as a requirement shall use this FIPS. Conformance to this FIPSshall be considered whether the operating system environments are: 1. Developed internally, 2. Acquired as part of an ADP system procurement, 3. Acquired by separate procurement, 4. Used under an ADP leasing arrangement, or 5. Specified for use in contracts for programming services. b. <T3>Interpretation of the FIPS for Portable Operating System Interfacefor Computer Environments.</T3> NIST provides for the resolution of questionsregarding the FIPS specifications and requirements, and issues officialinterpretations as needed. All questions about the interpretation of thisFIPs should be addressed to:<ITAG tagnum="15">Director, National Computer Systems Laboratory, Attn: POSIX FIPS Interpretation,National Institute of Standards and Technology, Gaithersburg, MD 20899.</ITAG>c. <T3>Validation of Conforming Operating Systems Environments.</T3> NISThas developed cooperatively with industry a validation suite for measuringconformance to this standard. This suite will be required for testing conformanceof POSIX implementations. Requirements for testing will be announced inthe near future. <T3>Waivers.</T3> Under certain exceptional circumstances, the heads ofFederal departments and agencies may approve waivers to Federal InformationProcessing Standards (FIPS). The head of such agency may redelegate suchauthority only to a senior official designated pursuant to section 3506(b)of Title 44, U.S. Code. Waivers shall be granted only when: a. Compliance with a standard would adversely affect the accomplishmentof the mission of an operator of a Federal computer system, or b. Cause a major adverse financial impact on the operator which is notoffset by Governmentwide savings. Agency heads may act upon a written request containing the informationdetailed above. Agency heads may also act without a written waiver requestwhen they determine that conditions for meeting the standard cannot bemet. Agency heads may approve waivers only by a written decision whichexplains the basis on which the agency head made the required finding(s).A copy of each such decision, with procurement sensitive or classifiedportions clearly identified, shall be sent to: National Institute of Standardsand Technology, Attn: FIPS Waiver Decisions, Technology Building, RoomB-154, Gaithersburg, MD 20899. In addition, notice of each waiver granted and each delegation of authorityto approve waivers shall be sent promptly to the Committee on GovernmentOperations of the House of Representatives and the Committee on GovernmentalAffairs of the Senate and shall be published promptly in the <T4>Federal Register</T4>. When the determination on a waiver applies to the procurement of equipmentand/or services, a notice of the waiver determination must be publishedin the <T3>Commerce Business Daily</T3> as a part of the notice of solicitationfor offers of an acquisition or, if the waiver determination is made afterthat notice is published, by amendment to such notice. A copy of the waiver, any supporting documents, the document approvingthe waiver and any supporting and accompanying documents, with such deletionsas the agency is authorized and decides to make under 5 U.S.C. section552(b), shall be part of the procurement documentation and retained bythe agency. <T3>Where To Obtain Copies:</T3> Copies of this publication are for saleby the National Technical Information Service, U.S. Department of Commerce,Springfield, VA 22161. (Sale of the included specifications document isby arrangement with the Institute of Electrical and Electronics Engineers,Incorporated.) When ordering, refer to Federal Information Processing StandardsPublication 151-1 (FIPSPUB151-1), and title. Payment may be made by check,money order, or deposit account.<ITAG tagnum="74">Appendix A </ITAG><ITAG tagnum="21">POSIX, as currently defined, is the crucial first step in providinga vendor independent interface specification between an application programand an operating system. The current definition, however, must be extendedin order to provide interface specifications for full operating systemfunctionality. These additional interface specifications must include:</ITAG><ITAG tagnum="21">(1) <T3>Shell and Tools: </T3>These functions provide an interactive interfacefor users to control processing. Example: listing the files in a directory.</ITAG><ITAG tagnum="21">(2) <T3>Advanced Utilities: </T3>These utilities provide additional capabilitiesand specialized functions that make users and programmers more productive.Example: full-screen editing. </ITAG><ITAG tagnum="21">(3) <T3>System Administration: </T3>These functions are required to operatethe system. Example: mount a file system. </ITAG><ITAG tagnum="21">(4) <T3>Terminal Interface Extensions: </T3>These functions are called by applicationprograms. They enable programs to perform interactive terminal operationsin a way that is independent of the type of terminal being used. Example:turn on attributes such as blinking characters or reverse video.</ITAG><ITAG tagnum="21">POSIX, when fully extended, will provide the functionality requiredto support source code portability for a wide range of applications acrossmany different machines and operating systems. However, even the extendedPOSIX will not be sufficient to achieve portability for all applications.</ITAG><ITAG tagnum="21">There is increasing recognition of the need for an architectural approachto applications portability. This recognition has come about because earlierattempts to use a language-based approach to applications portability werenot successful. Language portability is only one aspect of the problemof porting applications software from one operating system environmentto another. Applications software portability depends on additional factorswhich include: </ITAG><ITAG tagnum="21">(1) Characteristics of the underlying hardware/software (e.g. wordlength, input/output (I/O) architecture, processor, operating system),</ITAG><ITAG tagnum="21">(2) Portability of software utilities used by the application (e.g.data base management, graphics, operating system functions, and communications),</ITAG><ITAG tagnum="21">(3) Data form, format and representation that may need to be transportedwith the software, and </ITAG><ITAG tagnum="21">(4) Language implementation (compiler/interpreter/processor) includingspecific limits or subsets of the language used in programming (e.g. magnitudeof numeric values, number of subscripts and number of labels). </ITAG><ITAG tagnum="21">Unless each of these factors is addressed as apart of an overall architecture,the benefits of applications portability will not be fully realized. </ITAG><ITAG tagnum="21">A planned Applications Portability Profile (APP) has been developedto provide sufficient functionality to accommodate a broad range of applicationrequirements. The functional components of the APP constitute a ``toolbox'' of standard elements that can be used to develop and maintain portableapplications. A key aspect of the APP is that it is an open systems architecturebased upon non-proprietary standards. The current planned components ofthe APP are summarized in Figure 1 and described in the following paragraphs.Additional components may be added as technology changes and as Federalgovernment requirements change. </ITAG><ITAG tagnum="73">Database Management </ITAG><ITAG tagnum="21">Database management is an important aspect of applications portability.A growing number of organizations use a Database Management System (DBMS)to allow application programs, written in a variety of languages, to workon the same basic data. In addition, a DBMS can facilitate language independencein the design, development, and maintenance of data resources. </ITAG><ITAG tagnum="21">FIPS 127, Database Language SQL, and FIPS 156, Information ResourceDictionary Systems (IRDS) are the initial components to meet the databasemanagement requirement.</ITAG><ITAG tagnum="21"><T3>Data Interchange</T3> </ITAG><ITAG tagnum="21">In addition to the mechanism for managing data, the data itself isan important aspect of applications portability. In many situations, theproblems associated with porting the applications software from one systemto another pales in comparison to the problem of porting the data. Thereare three categories of particular concern regarding data interchange:</ITAG><ITAG tagnum="24">andbullet; Graphics </ITAG><ITAG tagnum="24">andbullet; Product Data </ITAG><ITAG tagnum="24">andbullet; Document Processing </ITAG><ITAG tagnum="21">FIPS 128, Computer Graphics Metafile (CGM) is the initial componentto meet the graphics requirements. Initial Graphics Exchange Specification(IGES) and Product Data Exchange Specification (PDES) are the initial componentsto meet the requirements to exchange product data. Standard GeneralizedMarkup Language (SGML) and Office Document Architecture/Office DocumentInterchange Format (ODA/ODIF) are the initial components to meet the requirementsfor document processing.</ITAG><ITAG tagnum="73">Network Services</ITAG><ITAG tagnum="21">There are two basic network services that should be provided:</ITAG><ITAG tagnum="21">File Management is an integral part of most applications. File managementfunctions have traditionally focused on accessing data within a local filesystem. That focus has now shifted to functions that permit shared accessto files in a heterogeneous environment of computer hardware, software,and networks. A standard approach to managing this shared access to remotefiles is an important aspect of software portability. Failure to provideshared access to remote files will inevitably lead to local, incompatibleapproaches that inhibit application portability.</ITAG><ITAG tagnum="21">Network File System (NFS) is the initial component to meet file managementfacility requirements.</ITAG><ITAG tagnum="21">Data Communications facilities permit interoperability among applicationsin a heterogeneous environment of computer hardware, software, and networks.The requirement to manage shared access to remote files is just part ofa larger requirement for applications software to perform its functionsin a network environment. Here again, failure to provide this functionwill inevitably lead to local, incompatible approaches that inhibit applicationsportability.</ITAG><ITAG tagnum="21">Government Open Systems Interconnection Profile (GOSIP) is the initialcomponent to satisfy the data communications requirements.</ITAG><ITAG tagnum="73">User Interface</ITAG><ITAG tagnum="21">The most neglected aspect of applications software portability isthe requirement to maintain a consistent user interface across all systemson which the application resides. The fact that the application is likelyto be distributed over a heterogeneous environment of computer hardware,software, and networks means that the user interface facility must providethe flexibility to allow the user to interact with programs within suchan environment.</ITAG><ITAG tagnum="21">The X Window System is the initial component to meet user interfacerequirements.</ITAG><ITAG tagnum="73">Programming Services</ITAG><ITAG tagnum="21">The most emphasized aspect of applications software portability isthe requirement for programming language portability from one system toanother. The major problem is that programming language portability isoften equated with applications software portability. A key requirementfor programming languages is that a sufficient variety be included to encompassthe full range of application requirements.</ITAG><ITAG tagnum="21">The C language binding is the initial component for programming languageinterfaces. Additional bindings will be developed for FORTRAN, COBOL, Ada,and Pascal.</ITAG><ITAG tagnum="110"><C/><T4>Figure </T4>1._<T4>Applications Portability Profile</T4><H1>Function</H1><H1>Element</H1><H1>Specification</H1><ITAG tagnum="1">Operating system<D>Extended POSIX</D><D>FIPS 151 (IEEE Std 1003.1-1988).</D></ITAG><ITAG tagnum="22"> </ITAG><D/><D>IEE P1003.2 (proposed FIPS).</D><ITAG tagnum="1">Data base management<D>SQL</D><D>FIPS 127.</D></ITAG><ITAG tagnum="22"> </ITAG><D>IRDS</D><D>X3.138 (proposed FIPS).</D>Data Interchange:<ITAG tagnum="2">_Graphics<D>CGM</D><D>FIPS 128.</D></ITAG><ITAG tagnum="2">_Product data<D>IGES andamp; PDES</D><D>NBSIR 88-3813.</D></ITAG><ITAG tagnum="2">_Document processing<D>SGML</D><D>FIPS 152.</D></ITAG><ITAG tagnum="22"> </ITAG><D>ODA/ODIF</D><D>ISO/IS 8613.</D>Network Services:<ITAG tagnum="2">_Data Communications<D>OSI</D><D>FIPS 146 (GOSIP).</D></ITAG><ITAG tagnum="2">_File management<D>NFS</D><D>IEEE P1003.8x.</D></ITAG><ITAG tagnum="1">User interface<D>X Window System</D><D>Version 11, Release 2 (proposed FIPS).</D></ITAG><ITAG tagnum="1">Programming services<D>C</D><D>X3J11/88-002.</D></ITAG><ITAG tagnum="22"> </ITAG><D>COBOL </D><D>FIPS 021-2.</D><ITAG tagnum="22"> </ITAG><D>FORTRAN</D><D>FIPS 069-1.</D><ITAG tagnum="22"> </ITAG><D>Ada</D><D>FIPS 119.</D><ITAG tagnum="22"> </ITAG><D>Pascal</D><D>FIPS 109.</D></ITAG><ITAG tagnum="21">While NIST will continue to work with both national and internationalstandards organizations to produce the needed specifications, current federalrequirements dictate immediate action. In order to meet this need NISTwill adopt a series of specifications based on emerging national and internationalstandards.</ITAG><ITAG tagnum="21">These specifications will include interface specifications for (1)Shell and Tools, (2) Advanced Utilities, (3) System Administration, (4)Terminal Interface Extensions, (5) X Window System, and (6) NFS. </ITAG><ITAG tagnum="21">The components of the APP represent varying stages of maturity. Somehave not been introduced into the formal standards process (i.e., X WindowSystem), others exist only as draft standards (e.g. POSIX), and othershave been adopted as national and international standards (e.g. SQL). Asthese standards mature there will be a need to update the APP to reflectthe changes that will occur. NIST will establish a process to ensure thatthe APP incorporates the evolving (maturing) consensus of the nationaland international standards activities for each of the functional componentsof the APP. In addition, specifications for bindings for languages andother APP components may be required. NIST will identify the need for thesebindings and augment the APP as required.</ITAG><ITAG tagnum="21">Both users and vendors will be included in this process through anongoing series of user workshops and inplementor workshops which will provideforums for feedback and comments on the evolving APP. The user workshopswill be designed to (1) provide users with information about the progressof defining the APP and (2) provide NIST with input and feedback on theevolving APP and what priorities sould be given to the various functionalcomponents. The Implementors Workshops will provide a forum in which todiscuss the evolving APP with the vendors and to get feedback on the technicalmerits of the proposals. These implementor workshops will be designed toensure that there is a general consensus on the part of vendors to committo building products to the evolving APP specifications.</ITAG><ITAG tagnum="40">[FR Doc. 89-8814 Filed 4-12-89; 8:45 am]</ITAG><ITAG tagnum="68">BILLING CODE 3510-CN-M</ITAG></ITAG></ITAG></TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> DOE1-55-0937 </DOCNO><TEXT>The problem of automatically exploiting parallelism in computer programs,with particular emphasis on linguistic barriers to parallelism detectionis studied. Although functional languages and Prolog have many desirablecharacteristics in this respect, they are not entirely ideal. The authortherefore offers constraint-based programming as a generalization oflogic programming. By virtue of the more-flexible ways in which theyallow relations to be defined, constraint languages support more-naturaldescriptions of potentially parallel algorithms than do existing logicor functional languages. A prototype constraint language called CONSULis introduced, which demonstrates features felt to make constraint languageswell-suited for general-purpose programming of multiprocessors. The extraexpressiveness of constraint languages comes at a price, namely thatsatisfaction of general constraints can be much more difficult than satisfactionof predicates for a language like Prolog. Nonetheless, it is thoughtthat effective compilers for constraint languages can be built, and someideas on which they could be based are outlined.</TEXT></DOC>
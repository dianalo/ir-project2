<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-168-186  </DOCNO><DOCID>08 168 186.andM;</DOCID><JOURNAL>Datamation  Feb 1 1990 v36 n3 p41(4)* Full Text COPYRIGHT Cahners Publishing Co. 1990.andM;</JOURNAL><TITLE>The stages of CASE usage. (computer-aided software engineering)(includes a related article on a survey of 19 firms on theirimpressions of the CASE stage model described)</TITLE><AUTHOR>Hughes, Cary T.; Clark, Jon D.andM;</AUTHOR><SUMMARY>A five-stage model describing the steps a company planning toimplement a computer-aided software engineering (CASE) systempasses through is presented that was developed in conjunction witha survey of 19 firms.andP;  The five stages are disenchantment,resignation, commitment, implementation and maturity; each isaccompanied by a trigger point, which is an event that signals themovement from one stage to the next.andP;  Disenchantment is triggeredby the inability of the current system to satisfy user needs,which leads initially to acquisition of CASE tools without properanalysis of the requirements or adequate training.andP;  Resignation istriggered by the realization that the tools are useful andprobably necessary, commitment is triggered by the realizationthat a methodology is distinct from a tool, implementation istriggered by the realization that more resources are required, andmaturity is triggered by the realization that multiplemethodologies may be needed.andM;</SUMMARY><DESCRIPT>Topic:     ModelsImplementationProgram Development TechniquesProgram Development ToolsEquipment AcquisitionPlanningOrganizational BehaviorMISComputer-aided software engineering.andO;Feature:   illustrationchart.andO;Caption:   The five steps in the stage model. (chart)How the methodology functions. (chart)Levels of IS and organizational involvement. (chart)andM;</DESCRIPT><TEXT>The Stages of CASE UsageandM;The dynamic environment of business and government today requires thatinformation-processing systems become available more quickly and at reducedcost.andP;  The response window for creating and modifying computer systems isbecoming smaller and smaller.andP;  Additionally, funding of computer-relatedprojects is spiralling as business and government agencies demand morecomprehensive and timely systems development.andP;  As a result, more rapid andless costly computer systems development and modification are needed.andM;Computer-aided software engineering (CASE) promises to revolutionizeinformation systems design by automating the system file cycle.andP;  But in orderto implement CASE effectively, IS managers must understand how the toolsaffect the organization.andM;In its search for successful CASE implementation, an organization passesthrough various stages, represented here by a stage model.andP;  This model,developed with the help of a survey we conducted among senior informationsystems managers, can help explain why many organizations have beenunsuccessful in their attempts to implement CASE effectively.andP;  Anunderstanding of these stages and determinants within each stage can giveinformation systems planners and designers insight into what to expect, whatto prepare for and what to avoid in CASE implementatation.andM;The Stage Model TheoryandM;Using a stage model to aid in planning and implementing information systemsis not new.andP;  In the late 1970s computer consultant Richard Nolan, principalof Lexington, Mass.-based Nolan, Norton andamp; Co. described six stages of growthfor typical corporations as they move from one level of computer use to thenext.andP;  This stage model served as a basis for classifying IS development.andP;  Bydetermining what stage the firm was at, IS managers could better plan futuregrowth and avoid potential pitfalls.andM;Similarly, &quot;The Five Steps in the Stage Model&quot; chart presents a stage modelof CASE consisting of the following stages: disenchantment, resignation,commitment, implementation and maturity.andP;  These stages represent the path anorganization takes in implementing CASE into the IS environment.andM;Each stage is accompanied by a trigger point (TP) or event that signals themovement from one stage to the next.andP;  The following describes the stages andtheir respective trigger points.andM;Trigger Point (TPI): Realization that new techniques and tools are needed tosatisfy user demands.andM;Stage One.andP;  Disenchantment.andP;  At this stage, managers read and hear about thebenefits of CASE tools and decide to learn more about them.andP;  Purchasing thesetools without adequate knowledge and training leads to most becomingshelfware.andP;  In our survey, one large firm reported that out of the nearly 100CASE toolkits purchased, 80 to 90% remain unused.andM;Trigger Point (TP2): Realization that tools are useful and probablynecessary.andM;Stage Two.andP;  Resignation.andP;  Even if the firm has had poor initial results withCASE, the tools promise is too great to ignore.andP;  However, those who choosethem must fully understand and master them.andP;  If multiple tools are chosen,adequate integration is mandatory.andP;  Firms continue with ad hocexperimentation until they understand that CASE requires the adoption andenforcement of a methodology.andM;Trigger Point (TP3): Realization that a methodology is distinct from a tool.andM;Stage Three.andP;  Commitment.andP;  The firm now selects CASE toolkits that meet itsmethodology requirements and realizes that all CASE tools are not alike.andO;Also in this stage, firms need to allocate resources, including training andconsulting, in order to complete a successful pilot project.andP;  Only after thepilot is completed can the firm make a full evaluation of the tools.andM;Trigger Point (TP4): Realization that substantial additional resources areneeded in several key projects.andM;Stage Four.andP;  Implementation.andP;  Here firms install and use specific CASE toolsand methodologies in carrying out major projects throughout the organization.andO;Strict project control ensures that analysts follow the selected methodlogy.andO;Such control requires additional commitment, allocation of resources fortraining and consulting and, often, the purchase of additional softwaretools.andM;Trigger Point (TP5): Realization that one methodology is not adequate andthat adoption of multiple methodologies for specific individual projects, mayprovide additional leverage.andM;Stage Five.andP;  Maturity.andP;  At this stage, firms adopt alternative methodologiesto use on individual projects.andP;  During this phase, IS managers realize thatone methodology may not serve all requirements.andP;  They must select theappropriate methodology and choose the corresponding tools from a limitedset.andP;  Such alternatives result in more efficient and effective applicationsof CASE.andM;The Determination of the StagesandM;Along with stages and trigger points, the CASE stage model includes variousdeterminants that show the firm's position in the stage model.andP;  At eachstage, the firm considers measurements of all determinants:andM;* Productivity,andM;* Methodology,andM;* Information systems involvement,andM;* Management/user involvement andandM;* Problem type.andM;ProductivityandM;The productivity category contains two criteria for judging organizationalbehavior: efficiency and effectiveness.andP;  Early in the stage model, theemphasis is on efficiency.andP;  This may result in the selection of CASE toolsthat compress the life cycle, including fourth- and fifth-generationlanguages and code generators.andM;As the firm becomes more sophisticated, it places less emphasis on efficiencyand more on effectiveness.andP;  Although efficiency and effectiveness are notmutually exclusive, energy is usually directed toward one at the expense ofthe other.andM;MethodologyandM;The methodology a firm chooses will, to a considerable extent, determine whatstage has been achieved.andP;  Methodologies that have limited functionality willonly support the early stages of systems development.andP;  Complete CASEfunctionality allows a firm to reach the maturity stage of the model.andO;Elements of functionality include: strategic planning, analysis, datamodeling, systems design, construction, systems management, project support,configuration management, back engineering, quality assurance, metrics, andmaintenance.andM;The chart entitled &quot;How the Methodology Functions&quot; shows each function of themethodology determinant with its respective anchor points.andP;  For example,analysis is moderate in the disenchantment stage and becomes high in thematurity stage.andP;  In contrast, common metrics are not usually applicable untilthe implementation stage.andM;The functions roughly follow the systems development life cycle.andP;  Strategicplanning is the first step in the life cycle, in which the firm determineswhich system elements are most important.andP;  This process is also known as theenterprise model.andP;  Consisting of both data and process components and theirinteractions, this model is defined at a very high level of abstraction.andO;Logical files and process specifications are not relevant here.andP;  An importantadditional outcome of this function is the ranking, in order of importance,of the factors governing the firm's success.andM;The analysis function requires the firm to refine high-level specificationsfrom the enterprise model.andP;  Many often less successful development effortsactually begin at this stage.andP;  Again, the data and the process components ofthe specification are fleshed out.andP;  Tools such as entity-relationship (ER)modeling, or data modeling, and process action diagramming are used.andM;The systems design function requires firms to further refine broad data andprocess description to accommodate implementation.andP;  Still, these descriptionsremain maihine independent.andP;  Examples include determination of attributes tobe used as keys in the entity relationship diagram and generation of screendesigns for interactive systems.andM;Construction is where the logical/physical binding occurs.andP;  Often thisinvolves the generation of the DB2 or IDMS/R environment on the date side,and the production of COBOL or C language source code in the process model.andM;The specifications developed during all of these functions eitherindividually or collectively produce a system model that must be managed,brining us to the systems management function.andP;  If the CASE tool includesworkstation and mainframe components, then uploads and downloads are requiredto transfer data.andP;  In order to carry these procedures out effectively, thefollowing details much be known: the status of model components, who haschecked out each component and various other metrics of status.andP;  In addition,the ability to selectively download components and check validity prior tothe upload operation is mandatory.andM;Project support provides assistance in the administration of softwareprojects.andP;  These duties include the identification and tracking ofactivities, estimation of resource use, scheduling and other activities.andP;  Theeffort involved in project support over the life cycle can differdramatically when using CASE.andP;  CASE development effort curves are highlyfront loaded, whereas traditional methods tent to be backloaded.andM;Configuration management in a CASE environment is every bit as important asit is using traditional methods.andP;  Configuration management deals with issuesof program versions and hardware/software platforms for execution.andO;Unfortunately, few effective methods operate without user discretion.andP;  CASEconfiguration management tools are still in their infancy; however, withexpert systems some vendors may offer some automation of this difficultfunction.andM;Back engineering is any of three general categories of processes that useexisting system descriptions to produce revised ones.andP;  The weakest form,restructuring, assists in transforming descriptions through syntacticanalysis but does not result in a change to the fundamental meaning.andP;  Reverseengineering assists in extracting meaning from the system descriptionsthrough syntactic and semantic analysis and produces an explicitrepresentation in an extended form.andP;  Reengineering, which enables functionalmodification, is the ultimate extension of this process.andP;  Some degree of backengineering is desirable in any CASE tool.andM;Quality assurance is of particular importance in software development.andP;  CASEoffers some unique opportunities for consistency and validity checking duringthe development of system specifications.andP;  Not only may consistency beenforced, it also may be assisted with rules either in the toolkit or themodel repository.andM;Metrics are fundamental to any scientific area.andP;  In order for the developmentprocess to become a science, or engineering discipline, measurement isnecessary.andP;  Although traditional methods do not significantly rely onmeasurement, CASE technology demands it.andP;  Many metrics have been developedfor use in different settings and stages of the life cycle.andP;  Undoubtedly, assystems development becomes more sophisticated, the need to use metricsincreases.andM;The notion of maintenance differs throughout the stage model.andP;  Traditionalmethods make maintenance a very labor-intensive task, often one that requiresthe entire life cycle to be repeated in order to produce a working system.andO;Advanced CASE tools offer the opportunity to eliminate much of the labor ofsystems maintenance and enhancement.andP;  When specifications are changed, theregeneration of the system is automated.andM;IS InvolvementandM;IS Involvement is a category of determinants that attempts to capture thematurity of the systems development staff.andP;  The &quot;Levels of IS Models&quot; chartportrays the IS Involvement determinant, along with its functions and theiranchor points.andP;  For example, the analyst is active through all stages, butthe database administrator is not even involved until the commitment stage,and even then at a low level.andM;Manager/UserandM;InvolvementandM;Manager/User Involvement is a category of determinants that focuses onorganizational levels, user participation and political influence.andP;  &quot;Levelsof Organizational Involvement&quot; illustrates this determinant, displaying eachfunction with its respective anchor points.andP;  For example, strategic planningusually does not occur until the implementation stage.andP;  Each function of thisdeterminant is explained below.andM;The operational control functions of the enterprises dominate systemsdevelopment in the early stages of the model and have increasing importancein absolute terms through the stages.andM;Management control, though supported in the organization during the earlystages, is not affected greatly until the resignation stage.andP;  From there,greater absolute importance is achieved.andM;Strategic planning enters the stage model during the implementation stage andbecomes very important at maturity.andP;  In fact, one of the primaryjustifications of CASE is the provision of strategic advantage.andP;  Suchadvantage is achieved through substantial improvements in both efficiency andeffectiveness.andM;User involvement in systems development begins with a low level of activityduring the disenchantment stage and increases through maturity.andP;  One of theadvantages of CASE technology is that it frequently provides a convenient anduseful interface with users.andM;Politics follow the same pattern as does user involvement.andP;  The systemsdeveloped during CASE implementation and maturity are, in fact, systems ofpower and political influence.andM;Problem TypeandM;Early life cycle stages are dominated by algorithmic (step-by-step)solutions.andP;  This is consistent with the dominance of operational controlissues and the desire for efficiency at the expense of the effectiveness.andP;  Asone progresses through the successive stages, greater use of heuristics(rules of thumb) is employed.andP;  Firms in the later stages understand theusefulness of both algorithmic and heuristic solutions and concentrate onapplying them singly or jointly as the conditions warrant.andM;What's To Be Learned?andM;As with any stage model, a set of properties or conditions are normallypresent in a particular stage.andP;  If a firm wishes a predictable and efficientjourney through the stages of the model, it must meet certain conditions.andO;The model presented here identifies the important factors for successful CASEimplementation and use.andP;  The validation of the model offers a degree ofassurance of its usefulness.andP;  This model can also lay the groundwork fordiscourse between systems planners, analysts, implementors and even users ofapplication systems generated with CASE tools.andP;  Firms can use the model todetermine which stage of CASE they are in.andP;  From there, they can makedecisions that can either shorten or eliminate other stages all together.andO;With the foresight provided by this model, there is no particular reason fora firm to go through all the stages.andM;This model allows an organization to avoid pitfalls inherent in theimplementation of CASE.andP;  For example, an emphasis on the need to establishand control a methodology early in the process is apparent.andP;  By establishingand enforcing a methodology, the firm is able to ease the problems associatedwith CASE.andM;Additionally, by setting and enforcing policies, procedures and standardsearly in the acquisition process, the firm is able to capitalize on theinherent project management features built into CASE.andM;Finally, and perhaps most important, an understanding of the stage modelallows a firm to more quickly and successfully implement a new technology.andO;The bottom line is a speedier and more successful approach in the search forcompetitive advantage.andM;Cary T. Hughes is professor and chairman of the Computer Information SystemsDepartment of the College of Business at Middle Tnnessee State University.andO;Jon D. Clark is professor and chairman of the Computer Information SystemsDepartment, College of Business, Colorado State University.andO;</TEXT></DOC>
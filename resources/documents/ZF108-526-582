<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-526-582  </DOCNO><DOCID>08 526 582.andM;</DOCID><JOURNAL>Communications of the ACM  June 1990 v33 n6 p695(3)* Full Text COPYRIGHT Association for Computing Machinery 1990.andM;</JOURNAL><TITLE>Abstracts from other ACM publications.andM;</TITLE><DESCRIPT/><NOTE>Only Text is presented here; see printed issues for graphics.andO;</NOTE><TEXT>ACM Computing Surveys December 1989andM;Security-Control Methods for Statistical Databases: A Comparative StudyandM;Nabit R. Adam and John C. WortmannandM;This paper considers the problem of providing security to statisticaldatabases against disclosure of confidential information.andP;  Security-controlmethods suggested in the literature are classified into four generalapproaches: conceptual, query restriction, data perturbation, and outputperturbation.andM;Criteria for evaluating the performance of the various security-controlmethods are identified.andP;  Security-control methods that are based on each ofthe four approaches are discussed, together with their performance withrespect to the identified evaluation criteria.andP;  A detailed comparativeanalysis of the most promising methods for protecting dynamic-onlinestatistical databases is also presented.andM;To date no single security-control method prevents both exact and partialdisclosures.andP;  There are, however, a few perturbation-based methods thatprevent exact disclosure and enable the database administrator to exercise&quot;statistical disclosure control.&quot; Some of these methods, however, introducebias into query responses or suffer from the 0/1 query-set-size problem(i.e., partial disclosure is possible in case of null query set or a queryset of size 1).andM;We recommend directing future research efforts toward developing new methodsthat prevent exact disclosure and provide statistical-disclosure control,while at the same time do not suffer from the bias problem and the 0/1query-set-size problem.andP;  Furthermore, efforts directed toward developing abias-correction mechanism and solving the general problem of smallquery-set-size would help salvage a few of the current perturbation-basedmethods.andM;For Correspondence: N. R. Adam, Rutgers, The State University of New Jersey,Newark, Nj 07102; J. C. Wortmann, Dept.andP;  of Industrial Engineering andManagement Science, Eindhoven University of Technology, The Netherlands.andM;Modeling for Text CompressionandM;Timothy Bell, Ian H. Witten, and John G. ClearyandM;The best schemes for text compression use large models to help them predictwhich characters will come next.andP;  The actual next characters are coded withrespect to the prediction, resulting in compression of information.andP;  Modelsare best formed adaptively, based on the text seen so far.andP;  This papersurveys successful strategies for adaptive modeling that are suitable for usein practical text compression systems.andM;The strategies fall into three main classes: finite-context modeling, inwhich the last few characters are used to condition the probabilitydistribution for the next one; finite-state modeling, in which thedistribution is conditioned by the current state (and which subsumesfinite-context modeling as an important special case); and dictionarymodeling, in which strings of characters are replaced by pointers into anevolving dictionary.andP;  A comparison of different methods on the same sampletexts is included, along with an analysis of future research directions.andM;For Correspondence: T. Bell, Dept.andP;  of Computer Science, University ofCanterbury, Christchurch, New Zealand; I. H. Witten and J. G. Cleary, Dept.andO;of Computer Science, Univ.andP;  of Calgary, Calgary, Alberta, Canada T2N 1N4.andM;Debugging Concurrent ProgramsandM;Charles E. McDowell and David P. HelmboldandM;The main problems associated with debugging concurrent programs are increasedcomplexity, the &quot;probe effect,&quot; nonrepeatability, and the lack of asynchronized global clock.andP;  The probe effect refers to the fact that anyattempt to observe the behavior of a distributed system may change thebehavior of that system.andP;  For some parallel programs, different executionswith the same data will result in different results even without any attemptto observe the behavior.andP;  Even when the behavior can be observed, in manysystems the lack of a synchronized global clock makes the results of theobservation difficult to interpret.andP;  This paper discusses these and otherproblems related to debugging concurrent programs and presents a survey ofcurrent techniques used in debugging concurrent programs.andP;  Systems usingthree general techniques are described: traditional or breakpoint styledebuggers, event monitoring systems, and static analysis systems.andP;  Inaddition, techniques for limiting, organizing, and displaying a large amountof data produced by the debugging systems are discussed.andM;For Correspondence: C. E. McDowell and D. P. Helmbold, Board of Studies inComputer and Information Sciences, University of California at Santa Cruz,Santa Cruz, CA 95064.andM;ACM Computing Surveys March 1990andM;Resourceful Systems for Fault Tolerance, Reliability, and SafetyandM;Russell I. AbbottandM;Section I of this survey reviews the current state of the art of systemreliability, safety, and fault tolerance.andP;  The emphasis is on thecontribution of software to these areas.andP;  Section 2 reviews currentapproaches to software fault tolerance.andP;  It discusses why some of theassumptions underlying hardware fault tolerance do not hold for software.andP;  Itargues that the current software fault tolerance techniques are moreaccurately thought of as delayed debugging than as fault tolerance.andP;  It goeson to show that in providing both backtracking and executable specifications,logic programming offers most of the tools currently used in software faulttolerance.andP;  Section 3 presents a generalization of the recovery blockapproach to software fault tolerance, called resourceful systems.andP;  Systemsare resourceful if they are able to determine whether they have achievedtheir goals or, if not, to develop and carry out alternate plans.andP;  Section 3develops an approach to designing resourceful systems based upon afunctionally rich architecture and an explicit goal orientation.andM;For Correspondence: R. J. Abbott, The Aerospace Corporation, P.O. Box 92957,Los Angeles, CA 90009-2957.andM;An Overview of Deterministic Functional RAM Chip TestingandM;A.andP;  I. Van de Goor and C. A. VerruijtandM;This paper presents an overview of deterministic functional RAM chip testing.andO;Instead of the traditional ad-hoc approach toward developing memory testalgorithms, a hierarchy of functional faults and tests is presented, which isshown to cover all likely functional memory faults.andP;  This is done bypresenting a novel way of categorizing the faults.andP;  All (possible) faultcombinations are discussed.andP;  Requirements are put forward under whichconditions a fault combination can be detected.andP;  Finally, memory testalgorithms that satisfy the given requirements are presented.andM;For Correspondence: A. J. Van de Goor and C. A. Verruijt, Delft University ofTechnology, Department of Electrical Engineering, Mekelweg 4, 2628 CD Delft,The Netherlands.andM;ACM Transactions on Mathematical Software March 1990andM;A Set of Level 3 Basic Linear Algebra Subprograms: Model implementation andTest ProgramsandM;Jack J. Dongarra, Jeremy Du Croz, Sven Hammarling, and Iain DuffandM;This paper describes a model implementation and test software for the Level 3Basic Linear Algebra Subprograms (Level 3 BLAS).andP;  The Level 3 BLAS aretargeted at matrix-matrix operations with the aim of providing moreefficient, but portable, implementations of algorithms on high-performancecomputers.andP;  The model implementation provides a portable set of Fortran 77Level 3 BLAS for machines where specialized implementations do not exist orare not required.andP;  The test software aims to verify that specializedimplementations meet the specification of the Level 3 BLAS and thatimplementations are correctly installed.andM;For Correspondence: J. J. Dongarra, Computer Science Department, Universityof Tennessee, Knoxville, TN 37996-1301: J. Du Croz and S. Hammarling,Numerical Algorithms Group Ltd., Wilkinson House, Jordan Hill Road, OxfordOX2 8DR, England; I. Duff, Computer Science and Systems Division, HarwellLaboratory, Oxfordshire OX11 10RA, England.andM;More Efficient Computation of the Complex Error FunctionandM;G.andP;  P. M. Poppe and C. M. I. WijersandM;Gautschi has developed an algorithm that calculates the value of the Faddeevafunction w(z) for a given complex number z in the first quadrant, up to 10significant digits.andP;  We show that by modifying the tuning of the algorithmand testing the relative rather than the absolute error we can improve theaccuracy of this algorithm to 14 significant digits throughout almost thewhole of the complex plane, as well as increase its speed significantly inmost of the complex plane.andP;  The efficiency of the calculation is furtherenhanced by using a different approximation in the neighborhood of theorigin, where the Gautschi algorithm becomes ineffective.andP;  Finally, wedevelop a criterion to test the reliability of the algorithm's results nearthe zeros of the function, which occur in the third and fourth quadrants.andM;For Correspondence: Twente University, P.O. Box 217, 7500 AE Enschede, TheNetherlands.andM;An Adaptive Mesh-Moving and Local Refinement Method for Time-DependentPartial Differential EquationsandM;David C Arney and Joseph E. FlahertyandM;We discuss mesh-moving, static mesh-regeneration, and local mesh-refinementalgorithms that can be used with a finite difference or finite element schemeto solve initial-boundary value problems for vector systems of time-dependentpartial differential equations in two space dimensions and time.andP;  A coarsebase mesh of quadrilateral cells is moved by an algebraic mesh-movementfunction so as to follow and isolate spatially distinct phenomena.andP;  The localmesh-refinement method recursively divides the time step and spatial cells ofthe moving base mesh in regions where error indicators are high until aprescribed tolerance is satisfied.andP;  The static mesh-regeneration procedure isused to create a new base mesh when the existing one becomes too distorted.andO;The adaptive methods have been combined with a MacCormack finite differencescheme for hyperbolic systems and an error indicator based upon estimates ofthe local discretization error obtained by Richardson extrapolation.andP;  Resultsare presented for several computational examples.andM;For Correspondence: D. C. Arney, Department of Mathematics, United StatesMilitary Academy, West Point, NY 10996-1786; J. E. Flaherty, Department ofComputer Science, Rensselaer Polytechnic Institute, Troy, NY 12180-3590.andM;Designing Software for One-Dimensional Partial Differential EquationsandM;N.andP;  L. SchryerandM;Users of software for solving partial differential equations are oftensurprised by its inability to formulate their problems.andM;Computer scientists speak of partial differential equations (pdes) ascanonical coupled systems, typically in divergence form.andP;  Physicists,chemists, and engineers start with the same description, but then addreal-world things like &quot;Rankine-Hugoniot&quot; conditions, integro-differentialoperators, and Eulerian (moving) coordinate systems.andM;This paper describes a generalization of the classical pde formulation thatallows users to formulate virtually any pde problem.andP;  The extendedformulation has been used successfully on a wide range of nontrivial problemsin the physical sciences that cannot even be written down in the classicalform.andM;For Correspondence: ATandamp;T Bell Laboratories, Murray Hill, NJ 07974.andM;Polynomial Evaluation with ScalingandM;Eldon R. Hansen, Merell L. Patrick, and Richard L. C. WangandM;To overcome difficulties in polynomial evaluation caused by overflow orunnecessary underflow, we introduce a simple scaling procedure into Horner'smethod.andM;For Correspondence: E. R. Hansen and R. L. C. Wang, Department of DataSystems Engineering, Lockheed Missiles and Space Co., inc., Sunnyvale, CA94089; M. L. Patrick, Computer Science Department, Duke University, Durham,NC 27706.andM;Weyl Group OrbitsandM;Dennis M. SnowandM;A new technique is presented for calculating the orbits of the finite Weylgroup of a semisimple Lie group G in the weight lattice of G. Suchcalculations are important in the representation theory of G, and havepreviously been difficult to carry out for large Weyl groups such as E,.andO;This new technique allows large orbits to be computed using only a smallfraction of the computer memory required when using standard techniques.andP;  Inthe case of E., the memory requirements can be reduced by a factor of 30,000.andM;For Correspondence: Department of Mathematics, University of Notre Dame,Notre Dame, IN 46556.andM;Journal of the Association for Computing Machinery  April 1990andM;Cost-Error Relationships in A' Tree-SearchingandM;Henry W. DavisandM;Pearl has shown that, in admissible A' tree-searching, the expected number ofnodes expanded is bounded above and below by exponential functions ofheuristic error, An additional assumption required for the validity ofPearl's argument is given.andP;  The assumption's significance and interpretationare discussed.andM;For Correspondence: Department of Computer Science and Engineering, WrightState University, Dayton, OH 45435.andM;Faster Algorithms for the Shortest Path ProblemandM;Ravindra K. Ahuja, Kurt Mehlhorn, Jantes B. Orlin, and Robert E. TarjanandM;Efficient implementations of Dijkstra's shortest path algorithm areinvestigated.andP;  A new data structure, called the radix heap, is proposed foruse in this algorithm.andP;  On a network with n vertices, m edges, andnonnegative integer arc costs bounded by C, a one-level form of radix heapgives a time bound for Dijkstra's algorithm of 0(m + n log C).andP;  A two-levelform of radix heap gives a bound of  (m + n log C/log log C).andP;  A combinationof a radix heap and a previously known data structure called a Fibonacci heapgives a bound of 0(m + n[.square root of.](log C)).andP;  The best previouslyknown bounds are 0(m + n log n) using Fibonacci heaps alone and 0(m log logC) using the priority queue structure of Van Emde Boas et al.andP;  [17].andM;For Correspondence: R. K. Ahuja and J. B. Orlin, Sloan School of Management,Massachusetts Institute of Technology, Cambridge, MA 02139; K. Mehlhorn, FB10, Universitit des Saarlandes, 66 Saarbrucken, West Germany; R. E. Tarjan,Department of Computer Science, Princeton University, Princeton, NJ 08544 andATandamp;T Bell Laboratories, Murray Hill, NJ 07974.andM;A Trade-Off between information and Communication in Broadcast ProtocolsandM;Baruch Awerbuch, Oded Goldreich, David Peleg, and Ronen VainishandM;This paper concerns the message complexity of broadcast in arbitrarypoint-to-point communication networks.andP;  Broadcast is a task initiated by asingle processor that wishes to convey a message to all processors in thenetwork.andP;  The widely accepted model of communication networks, in which eachprocessor initially knows the identity of its neighbors but does not know theentire network topology, is assumed.andP;  Although it seems obvious that thenumber of messages required for broadcast in this model equals the number oflinks, no proof of this basic fact has been given before.andM;It is shown that the message complexity of broadcast depends on the exactcomplexity measure.andP;  If messages of unbounded length are counted at unitcost, then broadcast requires [theta](| V |) messages, where V is the set ofprocessors in the network.andP;  It is proved that, if one counts messages ofbounded length, then broadcast requires [theta](| E |) messages, where E isthe set of edges in the network.andM;Assuming an intermediate model in which each vertex knows the topology of thenetwork in radius p  1 from itself, matching upper and lower bounds of[theta] (min{ | E |, | V |[.sup.(1+[theta](1)/p]}) is proved on the number ofmessages of bounded length required for broadcast.andP;  Both the upper and lowerbounds hold for both synchronous and asynchronous network models.andM;The same results hold for the construction of spanning trees, and variousother global tasks.andM;For Correspondence: B. Awerbuch, Department of Mathematics, MassachusettsInstitute of Technology, Cambridge, MA 02139; O. Goldreich and R. Vainish,Department of Computer Science, Technion, Haifa 32000, Israel; D. Peleg,Department of Applied Mathematics, The Weizmann Institute, Rehovot 76100,Israel.andM;Concurrency and Availability as Dual Properties of Replicated Atomic DataandM;Maurice HerlihyandM;A replicated data object is a typed object that is stored redundantly atmultiple locations in a distributed system.andP;  Each of the object's operationshas a set of quorums, which are sets of sites whose cooperation is needed toexecute that operation.andP;  A quorum assignment associates each operation withits set of quorums.andP;  An operation's quorums determine its availability, andthe constraints governing an object's quorum assignments determine the rangeof availability properties realizable by replication.andM;In this paper, the restrictions on quorum assignment imposed by three kindsof atomicity mechanisms found in the literature are analyzed: (1) serialschemes, in which replication and atomicity are implemented independently atdifferent levels in the system, (2) static schemes, in which the transactionserialization order is predetermined, and (3) hybrid schemes in which theserialization order emerges dynamically.andM;The following results are derived: (1) Although serial schemes place thestrongest restrictions on concurrency, they place the weakest restrictions onavailability.andP;  (2) Although hybrid and static mechanisms place incomparablerestrictions on concurrency, hybrid mechanisms place weaker restrictions onavailability.andP;  (3) Bounding the maximum depth of transaction nestingstrengthens restrictions on concurrency for all classes, but weakensrestrictions on availability for hybrid schemes only.andP;  Concurrency andavailability are best considered as dual properties: A complete analysis ofan atomicity mechanism should take both into account.andM;For Correspondence: Digital Equipment Corporation, Cambridge Research Lab,One Kendall Square, Cambridge, MA 02139.andM;Nonclausal Deduction in First-Order Temporal LogicandM;Martin Abadi and Zohar MannaandM;This paper presents a proof system for first-order temporal logic.andP;  Thesystem extends the nonclausal resolution method for ordinary first-orderlogic with equality, to handle quantifiers and temporal operators.andP;  Soundnessand completeness issues are considered.andP;  The use of the system for verifyingconcurrent programs is discussed and variants of the system for other modallogics are also described.andM;For Correspondence: M. Abadi, Digital Equipment Corporation, Systems ResearchCenter, 130 Lytton Avenue, Palo Alto, CA 94301; Z. Manna, Computer ScienceDepartment, Stanford University, Stanford, CA 94305.andM;The Maximum Concurrent Flow ProblemandM;Farhad Shahrokhi and D. W. MatulaandM;The maximum concurrent flow problem (MCFP) is a multicommodity flow problemin which every pair of entities can send and receive flow concurrently.andP;  Theratio of the flow supplied between a pair of entities to the predefineddemand for that pair is called throughput and must be the same for all pairsof entities for a concurrent flow.andP;  The MCFP objective is to maximize thethroughput, subject to the capacity constraints.andP;  We develop a fullypolynomial-time approximation scheme for the MCFP for the case of arbitrarydemands and uniform capacity.andP;  Computational results are presented.andP;  It isshown that the problem of associating costs (distances) to the edges so as tomaximize the minimum-cost of routing the concurrent flow is the dual of theMCFP.andP;  A path-cut type duality theorem to expose the combinatorial structureof the MCFP is also derived.andP;  Our duality theorems are proved constructivelyfor arbitrary demands and uniform capacity using the algorithm.andP;  Applicationsinclude packet-switched networks [1, 4, 8], and cluster analysis [16].andM;For Correspondence: F. Shahrokhi, Department of Computer Science, Universityof North Texas, Denton, TX 76203; D. W. Matula, Department of ComputerScience.andP;  Southern Methodist University, Dallas, TX 75275.andM;Module AlgebraandM;J.andP;  A. Bergstra, J, Heering, and P. KlintandM;An axiomatic algebraic calculus of modules is given that is based on theoperators combination/union, export, renaming, and taking the visiblesignature.andP;  Four different models of module algebra are discussed andcompared.andM;For Correspondence: J. A. Bergstra, Programming Research Group, Faculty ofMathematics and Computer Sciences, University of Amsterdam, P.O. Box 41882,1009 DB Amsterdam, The Netherlands; J. Heering, Department of SoftwareTechnology, Centre for Mathematics and Computer Science, Kruislaan 413, 1098SJ Amsterdam, The Netherlands; P. Klint, Department of Software Technology,Centre for Mathematics and Computer Science, Kruislaan 413, 1098 S)Amsterdam, The Netherlands.andM;On the Execution of Parallel Programs on Multiprocessor Systems-A QueuingTheory ApproachandM;Francois Baccelli and Zhen LiuandM;The new class of queuing models, called Synchronized Queuing Networks, isproposed for evaluating the performance of multiprogrammed and multitaskedmultiprocessor systems, where workloads consists of parallel programs ofsimilar structure and where the scheduling discipline isfirst-come-first-serve.andM;Pathwise evolution equations are established for these networks that capturethe effects of competition for processors and the predence constraintsgoverning tasks executions.andM;A general expression is deduced for the stability condition of such queueingnetworks under general statistical assumptions (basically the stationarityand the ergodicity of input sequences), which yields the maximum programthroughput of the multiprocessor system, or equivalently, the maximum rate atwhich programs can be executed or submitted.andP;  The proof is based on theergodic theory of queues.andM;Basic integral equations are also derived for the stationary distribution ofimportant performance criteria such as the workload of the queues and programresponse times.andP;  An iterative numerical schema that converges to thissolution is proposed and various upper and lower bounds on moments arederived using stochastic ordering techniques.andM;For Correspondence: INRIA, Centre Sophia Antipolis, 06565 Valbonne Cedex,France.andM;Separating and Collapsing Results on the Relativized ProbabilisticPolynomial-Time HierarchyandM;Ker-I KoandM;The probabilistic polynomial-time hierarchy (BPH) is the hierarchy generatedby applying the BP-operator to the Meyer-Stockmeyer polynomial-time hierarchy(PH), where the BP-operator is the natural generalization of theprobabilistic complexity class BPP.andP;  The similarity and difference betweenthe two hierarchies BPH and.andP;  PH is investigated.andP;  Oracles A and B areconstructed such that both PH(A) and PH(B) are infinite while BPH(A) is notequal to PH(A) at any level and BPH(B) is identical to PH(B) at every level.andO;Similar separating and collapsing results in the case that PH(A) is finitehaving exactly k levels are also considered.andM;For Correspondence: Department of Computer Science, State University of NewYork at Stony Brook, Stony Brook, NY 11 794.andO;</TEXT></DOC>
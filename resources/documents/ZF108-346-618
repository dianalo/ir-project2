<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-346-618  </DOCNO><DOCID>08 346 618.andO;</DOCID><JOURNAL>LAN Times  April 1990 v7 n4 p40(1).andM;</JOURNAL><TITLE>Are upgrades moving back to the future? (the downside of backwardcompatibility)</TITLE><AUTHOR>Duncan, Thom.andM;</AUTHOR><TEXT><ABSTRACT>Backward compatibility in software products provides the user withsimilar command sets and file compatibility with previous versionsof a program, thus eliminating retraining costs.andP;  These productsare frequently improvements on an old product, but they are oftenmere window dressing with a few new bells and whistles added togive the appearance of a new program.andP;  Each successive update tothese programs seems to require more memory.andP;  The buyer should askthese questions before purchasing: how much increased memory isrequired for the new features, how much is required to add apull-down menu interface to an existing function-key interface,and how much to add 'patches' to bugs found after beta testing?andO;Increased processing speed and memory encourage 'spaghetti code',unnecessarily using space for unneeded code.andP;  Customers couldencourage the development of better programs by not requiringbackward-compatible programs.andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     ProgrammingCompatibilityCompatible SoftwareUpgradingUser Interface.andM;</DESCRIPT></DOC>
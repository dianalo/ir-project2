<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-319-559  </DOCNO><DOCID>07 319 559.andO;</DOCID><JOURNAL>IEEE Transactions on Software Engineering  Feb 1989 v15 n2p153(12).andM;</JOURNAL><TITLE>Efficient database access from Prolog. (technical)</TITLE><AUTHOR>Ceri, Stefano; Gottlob, Georg; Wiederhold, Gio.andM;</AUTHOR><TEXT><ABSTRACT>An efficient loading mechanism is developed for retrieving PROLOG'facts' from a secondary-storage relational database and storingthem in a compact way in a main-memory database for use by aPROLOG interpreter.andP;  The correspondence of PROLOG predicates andrelational algebra and of PROLOG facts and tuples of relations hasled to research into the use of PROLOG for accessing databaseinformation.andP;  An efficient interface, though, is necessary toprovide sufficient access performance.andP;  Development of the loadingmechanism and the algorithm that provides database formulamatching for the PROLOG interpreter is described.andP;  A simulator forthe loading and matching methodology is developed.andP;  Simulationresults show a significant improvement in the matching algorithmover the 'naive' algorithm and a 1.2- to 3-times improvement injoin queries.andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     TechnologyPROLOGRelational Data BasesInterfaceAccess MethodsInterpretersOptimizationSoftware DesignEfficiencyMemory ManagementIntegrated Systems.andO;Feature:   illustrationchart.andO;Caption:   Architecture of PROLOG-DBMS interface. (chart)Example of interaction between PROLOG and a relational database.andO;(chart)Areas of the secondary storage database. (chart)andM;</DESCRIPT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF107-935-520  </DOCNO><DOCID>07 935 520.andM;</DOCID><JOURNAL>MacUser  Jan 1990 v6 n1 p218(4)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>Power scripting with Wingz. (Informix Wingz spreadsheet) (PowerTools)</TITLE><AUTHOR>Finn, James.andM;</AUTHOR><SUMMARY>Informix Software's Wingz spreadsheet includes the powerfulprogramming language called HyperScript, which supports bothsimple macros and complex, customized applications.andP;  Tips forusing HyperScript effectively are presented, along with a sampleprogram that works with all selected spreadsheet cells.andP;  MostWingz commands apply to ranges of cells the user selects, makingformatting changes easy.andP;  A 'template' script shows how to workwith these selections.andP;  HyperScript has FOR loops similar to thoseused in other languages' loop structures and operates on rangesvia nested loops.andP;  The TIME function ties into the computer'sinternal clock.andP;  Changes between the working script and finishedtemplate include the addition of a cell-reference variable and aroutine that checks whether a cell contains a string representinga legal time value.andM;</SUMMARY><DESCRIPT>Company:   Informix Software Inc. (products).andO;Product:   Wingz (Spreadsheet software) (usage).andO;Topic:     SpreadsheetsSoftware PackagesTutorialProgramming InstructionForm Overlay.andO;Feature:   illustrationprogram.andO;Caption:   template for a Wingz script that works with every cell in aselection (program)Working Wingz script (program)andM;</DESCRIPT><TEXT>Power Scripting with WingzandM;Wingz, the new kid on the spreadsheet block, joins a growing number ofMacintosh applications that include their own programming language.andO;HyperScript, Wingz's high-level language, supports projects as simple ascreating shortcut macros or as complex as developing customized applications.andM;Although the Wingz manuals and on-line help are an excellent reference forHyperScript's commands and functions, they don't explain how to put thesecommands together to create working scripts.andM;In this article, we'll look at one programming problem: how to write a scriptthat works with all selected spreadsheet cells.andP;  Even if you're notinterested in programming, you can use the time-conversion script shown inFigure 2.andP;  The last section of this article explains how to attach the scriptto a menu command.andM;Selectively Is everythingandM;In Wingz and other spreadsheets, you can select multiple ranges by selectingone range and then pressing the Command key as you select each additionalrange.andP;  Most Wingz commands apply to all selected cells, even when multipleranges are selected, so you can easily change the format, font, or style ofall the cells in a complex selection.andP;  Our goal is to develop a format forcustom scripts that work the same way.andM;We'll develop a &quot;template&quot; script (see Figure 1) that shows how to work withselections and then use that template to write a working script (see Figure2) that makes it easier to enter time values into a Wingz spreadsheet.andM;Operating on SelectionsandM;Remember, a selection may contain multiple ranges, each of which is arectangular block of cells.andP;  To access each cell in turn, you have to use thecontrol structures available in HyperScript -- in this case, that means usingFOR loops.andP;  HyperScript's FOR loop is similar to those in other programminglanguages and is used to repeat an action a specific number of times.andP;  Theloop uses a counting variable, called the control variable, that increasesfrom an initial value to some final value.andP;  For example, the statementandM;FOR I = 1 to 10 whatever END FORandM;repeats the command whatever ten times, using I as the control variable.andM;FOR loops can be nested, and our template uses three nested loops.andP;  The outerloop steps through each range in the selection, counting from 1 to the numberof ranges that have been selected.andP;  The next loop steps through each row in arange, from the first to the last.andP;  The inner-most loop steps through eachcolumn in a row, letting us process one cell at a time.andP;  The basic structurelooks roughly like this:andM;FOR each range in the selection FOR each row R in the range FOR each column Cin the row Do whatever with the cell in the row R, column CandM;Filling in some of the details gives:andM;FOR RANGENUM = 1 TO NRSELECTIONS () THERANGE = SELECTION (RANGENUM) FIRSTROW= ROWOF (THERANGE) FIRSTCOL = COLOF (THERANGE) FOR R = FIRSTROW TO (FIRSTROW+ ROWS(THERANGE) - 1) FOR C = FIRSTCOL TO (FIRSTCOL + COLS(THERANGE) - 1) (do what you want to do with cell R,C ) END FOR END FOR END FORandM;Here's some explanation:NRSELECTIONS () returns the number of ranges in theselection.andP;  RANGENUM is a control variable for the FOR loop and steps througheach of these ranges in turn.andP;  The next three lines set other variables touseful values.andM;Most HyperScript functions that work with ranges require a range reference asan argument.andP;  A range reference is the standard way to identify a range andlooks something like B7 .andP;  .  G12.andP;  SELECTION (RANGENUM) takes the rangenumber RANGENUM and returns a range reference for that part of the selection(this feature of the SELECTION function is not documented in the Wingzmanuals.)andP;  We assign this reference to the variable THERANGE.andM;The expressions ROWOF (THERANGE) and COLOF (THERANGE) return the number ofthe first row and first column, respectively, in the range.andP;  These values areassigned to the variables FIRSTROW and FIRSTCOOL -- they are needed forstarting values of FOR loops.andM;We also need te final values for the FOR loops, which will be the numbers ofthe last row and column in the range, but HyperScript has no functions thatprovide these numbers directly.andP;  What it does have are the functions ROWS andCOLS, which tell us how many rows and columns are in a range.andP;  Given thesevalues, it's easy to calculate the last row and column numbers: If THERANGEstarts in row FIRSTROW and contains ROWS (THERANGE) rows, then (FIRSTROW +ROWS (THERANGE) - 1) gives the number of the last row.andP;  Calculating the lastcolumn is similar.andP;  R and C are used as FOR-loop control variables in theinner loops, representing the current row number and column number.andM;Figure 1 shows the finished template.andP;  It adds some features to what we'vedone.andM;First, Wingz requires that all variables be declared, so the template beginswith DEFINE statements.andM;Your scripts run faster if you don't refresh the screen until after all thecells have been processed.andP;  This is accomplished by the REPAINT OFF statementat the beginning of the script and the pair of statements REPAINT ON andREPAINT WINDOW at the end.andM;Last, we've added a bit of defensive programming to the template,anticipating possible user errors.andP;  We've been assuming that the selectioncontains only ranges, but a user might accidentally include a chart or someother object in the selection.andP;  The function SELECTIONTYPE returns the typeof any part of the selection--a return value of 1 means it's a cell or range.andO;SELECTIONTYPE (RANGENUM) is used within an IF statement to check each part ofthe selection before it's processed--if it's not range, we display an errormessage in a dialog box, using the MESSAGE function.andP;  The andamp; symbol representstext concatenation and is used to create a message such as &quot;Selection 3 isnot a cell or range.&quot;andM;Now we're ready to use this model script to solve a real problem: workingwith time values in Wingz.andM;Time-Value ProblemandM;Typing time values in Wingz can be a chore.andP;  If you enter &quot;10:30am&quot; in acell, Wingz doesn't understand that this is supposed to represent a time, andit formats you entry as plain text.andP;  The Wingz manuals tell you to entertimes by using the TIME function -- in this example, you'd have to type&quot;=TIME(10,30,00)&quot;, where the three arguments are the hours (based on, ugh, a24-hour clock), minutes, and seconds of the desired time.andP;  This is no fun.andO;Life would be simpler if you could type &quot;10:30am&quot; and then run a script toconvert the text to a time value.andM;In &quot;5 Ways to Extend Your Wingz&quot; (Power Tools, December '89), we gave a shortscript that does this -- it converts the text in the current cell to a timevalue and then formats the cell to use the HR:MN AM format.andP;  Here's thescript: PUT TIMEVALUE (CELL()) INTO RANGE (MAKECELL (COL(), ROW())) FORMATTIME 2andM;This script, however, operates only on the active cell.andP;  It would be easierto enter several time strings into a worksheet, select the cells containingthem, and convert the whole selection with a single command.andP;  We will modifythe template of Figure 1 to create this script.andM;The Working ScriptandM;Figure 2 shows the script for fixing times.andP;  Let's look at all the changeswe've made to the template.andP;  We've added one more variable, THE CELL, tostore a reference to the cell being changed.andP;  This reference to the cellbeing changed.andP;  This reference is created by the statement THECELL = RANGE(MAKECELL (C, R)).andM;This is similar to the way we made a cell reference in the previous script,except that here we use the control variables C and R to reference the columnand row numbers that change with each iteration of the inner FOR loops.andO;TIMEVALUE needs the contents of the cell, which we can get by using theCELLTEXT function.andP;  CELLTEXT (THECELL) returns the text contents of thereferenced cell, and TIMEVALUE (CELLTEXT (THECELL)) gives the converted timevalue.andM;We've added another bit of defensive programming.andP;  Before converting a cell'scontents to a time value, we first check that the cell contains a string thatcan represent a legal time.andP;  If a cell contains a formula or a string, usingthe TIMEVALUE function will cause an error.andP;  HyperScript provides severalmechanisms for dealing with errors.andP;  Here, we use the ISERR function; ifTIMEVALUE (CELLTEXT (THECELL)) causes an error, then ISERR (TIMEVALUE(CELLTEXT (THECELL)) returns TRUE; otherwise it returns FALSE.andP;  Thesestatements check that ISERR returns FALSE--meaning all is well--beforeattempting to convert the text string to a time value: ( only convert goodtimes ) IF NOT ISERR (TIMEVALUE(CELLTEXT(THE CELL))) PUT TIMEVALUE (CELLTEXT(THECELL)) INTO THECELL END IFandM;Finally, the statement FORMAT TIME 2 has been placed outside all the FORloops.andP;  FORMAT TIME applies to all selected cells, so it needs to be executedonly once for the whole selection.andM;Putting It All TogetherandM;Before you can use the new script, you must enter it in Wingz: Select NewScript from the Script menu, type in the script, and save it.andP;  You can thenrun it by slecting Run Script from the Script menu.andM;If you prefer, you can access this script by adding a new command to Wingz'sFormat menu, which is easiest if you use a startup script--if you create ascript named Startup in the same folder as Wingz, it will run automaticallyeach time you launch Wingz.andM;Suppose you saved the script of Figure 2 in the same folder with Wingz, usingthe filename Fixtimes Script.andP;  Add the following lines to your Startup script(or create one if you don't have one already): SELECT MENU &quot;Format&quot; ADDMENUITEM &quot;Fix Times&quot; COMMAND &quot;RUN SCRIPT &quot;&quot;Fixtimes Script&quot;&quot;&quot;andM;Happy scripting.andP;  You can use any of the techniques presented here in scriptsthat solve your own problems.andO;</TEXT></DOC>
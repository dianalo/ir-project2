<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-624-760  </DOCNO><DOCID>08 624 760.andM;</DOCID><JOURNAL>Dr. Dobb's Journal  July 1990 v15 n7 p131(8)* Full Text COPYRIGHT Mandamp;T Publishing 1990.andM;</JOURNAL><TITLE>MIDI, Turbo C++, token pasting, and PC hot keys. (column)</TITLE><AUTHOR>Stevens, Al.andM;</AUTHOR><SUMMARY>Borland International introduces Turbo C++, a complete C++object-oriented programming language development environment.andO;Turbo C++ includes a C++ compiler that conforms to ATandamp;T's C++ 2.0language specification, full ANSI-compliant C compiler andoverhauled Integrated Development Environment.andP;  Evaluation of abeta copy showed compliance with ATandamp;T C++ 2.0.andP;  The inclusion ofboth C++ and ANSI C compilers in one product requires Turbo C++ toknow how to handle the differences between the two languages,including type-safe linkages, which are discussed at length.andP;  Aseparate subject discussed in the column is the programming of hotkeys on personal computers.andP;  Programming hot keys requires readingkeyboard input to allow a user to change hot key settings,translating the setting into a meaningful display and knowing whena hot key is pressed.andP;  Several C programming language functionsfor programming hot keys are described and source code provided.andM;</SUMMARY><DESCRIPT>Product:   Turbo C++ (Computer program language) (design and construction).andO;Topic:     C Programming LanguageSpecificationsCompilersObject-Oriented LanguagesTutorialProgramming InstructionSoftware Packages.andO;Feature:   illustrationprogram.andO;Caption:   A program to demonstrate the use of the hot key programmer.andO;(program)Functions to manage hot key programming for specific applications.andO;(program)andM;</DESCRIPT><TEXT>I am writing this month from Redding, California, where the annual Reddingjazz Festival is underway.andP;  My other life often finds me at these eventsseated at a different, wider keyboard.andP;  This acoustic form of jazz that Iknow has not yet given way to technology.andP;  We use computers to keep track ofbookings, income (what little there is), and such, but we do not play thisstyle of music with machines.andP;  Other forms of music, including some newerforms of jazz, are using synthesizers, sequencers, samplers, and an interfacecalled  MIDI&quot; that computer manufacturers could learn from.andP;  I have no earfor the sounds and am certainly no expert in the technology, but it isfascinating.andP;  Jim Conger has written two books named MIDI Sequencing in C andC Programming for MIDI.andP;  Both are published by Mandamp;T Books (Redwood City,Calif.) and both address aspects of MIDI programming that a C programmer canuse on a PC with a MIDI interface and Microsoft or Turbo C.andM;Conger explains what MIDI is and how it works, and he provides ample C codeto achieve the effects he describes.andP;  I do not have any MIDI equipment, so Idid not try to run the programs, but the text in the books is understandableand the code is readable, although the small, pale typeface that thepublisher uses for code makes it hard to read.andP;  I used the diskettes to readthe code instead.andP;  Maybe it's a way to get us to buy the diskettes, whichanyone who gets a book for its code ought to do anyway.andM;The author says that musicians are being threatened by synthesized music.andO;This is true.andP;  Many of my colleagues in music feel that threat; some of themhave been touched by it.andP;  But Conger goes further and speculates that humancomposition, conducting, and performance can eventually be replaced bytechnology.andP;  He conjures an image of a digitized wire-frame model of LeonardBernstein conducting a bank of synthesizers.andP;  Add an audience of rows androws of nothing but digital audio tape recorders, and the picture would becomplete.andM;Turbo C++andM;The news this month is Turbo C++.andP;  Following their success withobject-oriented Pascal 5.5, Borland has assaulted the C++ object-orientedmarket with guns drawn and blazing.andP;  Originally intended to be an adjunct toTurbo C 3.0, the C++ face of Borland's compiler is now at its forefront.andP;  Byemphasizing the object-oriented side of their most popular compiler product,Borland has made a policy commitment to object-oriented programming as theparadigmatic wave of tomorrow.andM;Included with Turbo C++ are a C++ compiler, an ANSI-conforming standard Ccompiler, and a completely overhauled Integrated Development Environment.andO;The C++ compiler conforms to the ATandamp;T 2.0 language specification, a standardof sorts but still a moving target.andP;  ANSI has launched its X3J16 C++standards committee and we'll be hearing more about that undertaking in themonths and years to come.andP;  Until then, purveyors of C++ language productshave the ATandamp;T reference manual and the ATandamp;T implementation of C++ to aim at.andM;Most of the C++ programming systems available to PC users are ports of ATandamp;T'scfront program, the translator that reads C++ source code and emits Clanguage source code.andP;  The notable exception until now was Zortech C++, animplementation that is C++ 2.0 in spirit but that has numerous departuresfrom the ATandamp;T implementation.andP;  Borland has attempted to adhere closely to theATandamp;T reference manual.andM;I am writing this column in April, a month before the scheduled announcementof Turbo C++.andP;  You are reading it sometime near the middle of June, a monthafter the announcement, assuming no delays.andP;  There are always impediments totimely reporting when you work within this kind of schedule.andP;  My experiencewith Turbo C++ has been, therefore, gained only in beta-land.andP;  For thatreason I can report no problems with the product.andP;  Sure, there have beenproblems, but this is a beta copy, and that's what a beta test is for.andM;I just finished writing a book called Teach Yourself C++.andP;  By the time youread this, Herb Schildt will no doubt be writing one with the same title.andO;Don't be fooled by imitations.andP;  Mine has a yellow cover.andP;  (Sorry, Herb.) Mybook has about 130 exercise programs.andP;  Each exercise demonstrates a specificfeature of the C++ language.andP;  As such, the book is something of a minor C++torture test, and I used two ports of the ATandamp;T cfront program to validate theexercises.andP;  Turbo C++, not a cfront port, passed with flying colors even inits beta configuration.andM;There are two different compilers in the product called Turbo C++.andP;  The othercompiler is a full ANSI C compiler.andP;  Both compilers execute from within theintegrated Development Environment or from the command line.andP;  The programfigures out what kind of program it is compiling based on the extension ofthe source file.andP;  A C file is a C program.andP;  A .CPP file is a C++ program.andO;The compiler needs to know the difference to know how to handle certainsubtle differences in the languages.andP;  One of those differences involves&quot;type-safe linkages.&quot;andM;Type-Safe LinkagesandM;Type-safe means that a function's declaration and its callers use compatibletypes for the parameters.andP;  There has been a measure of type checking in C fora while.andP;  A C program specifies a function's return type and parameter listin the function prototype.andP;  If the function declaration or a call to thefunction does not match the prototype specification, the compiler declares anerror.andP;  In the old days before prototypes a function was assumed to return aninteger unless it was declared to return something else.andP;  You could pass itany number and types of parameters regardless of what it was expecting.andP;  Thecompiler did not care.andP;  The programmer had to wrestle with the bugs thatresulted when the program passed one thing and the function expectedsomething else.andP;  C++ needs stronger typing and so its designer created thefunction prototype, which was adopted by many C compilers and eventually bythe ANSI C standards committee.andP;  The prototype allows the compiler to insurethat calls to a function match the function's declaration with respect to itsreturn type and parameter list.andM;The C prototype is an effective measure as long as the source file thatdeclares the function and the one that calls it are using the same copy ofthe prototype.andP;  By convention, most programmers will put the prototype in aheader file and include the header in the source file that declares thefunction and all others that call the function.andP;  But this practice is only aconvention and nothing in the C language enforces it.andP;  If you use differentprototypes for the same function in different source files, the calls to thefunction can have different configurations with the same undesirable resultsthat we had before prototypes.andP;  The problem is, of course, that you compilethe source files independently, and the linker has no way to reconciledifferent function prototypes between independently compiled object modules.andO;The traditional method for controlling this situation is to use the headerfile convention mentioned above and a well-defined make file that assuresthat all affected source files compile when a header file they includechanges.andM;C++ requires stronger type checking across linked modules because much of theintegrity of a program depends upon the correct use of overloaded functions.andO;Therefore, C++ 2.0 introduces a feature called  type-safe linkage&quot; toguarantee that function prototypes are consistent across independentlycompiled source files.andP;  To achieve this guarantee, the C++ compilertranslates function names into &quot;mangled&quot; names.andP;  The translator addscharacters to the function name to encode the parameter list.andP;  For example,the following function prototype would generate the following mangledfunction name.andM;long foo(int, char*, struct tm);andM;// mangled name: _foo_FiPc2tmandM;The mangled name specifies, in cryptic notation, the types of the parameters.andO;An external function does not, therefore, have the name you gave it.andP;  if youprototype it differently in a remote source file, the mangled name will bedifferent, and you will get unresolved symbols when you link the program.andO;Thus you have type-safe linkage at the parameter list level.andP;  For somereason, this technique does not similarly encode the function's return type.andM;These mangled names are usually invisible to the programmer unless you readthe linkage memory map, but you must know about them because the unresolvedsymbol errors will report the mangled names rather than the ones you lovinglybestowed and you need to find the original name among the mangled mess.andO;There will be times when you need to tell C++ not to mangle.andM;Suppose your C++ program calls a function that was compiled by a C compiler.andO;That is not an unusual thing to do.andP;  The entire standard C function libraryis available to C++ programs.andP;  So, unless you tell the C++ compilerotherwise, it will mangle the function name in the call, and the linker willnot fin a matching function.andP;  Therefore, the C++ compiler needs a way to knowthat a named function was compiled by a C compiler.andP;  C++ uses this constructto achieve that purpose.andM;extern &quot;C&quot;andM;{//C things ...andM;}You can put prototypes between the curly braces, and the compiler knows thatcalls to those functions must be made without mangled names.andP;  C++ compilersusually include standard C header files that already have the extern &quot;C&quot;statement built in.andM;If you surround an entire function with the extern  &quot;C&quot; braces, that functionwill compile with C linkages.andP;  You would need to do that in the case whereyou are using a C library function that requires your program to provide anamed function.andP;  Of course, such functions do not enjoy the same type-safelinkage that regular C++ functions have.andM;ANSI C Token PastingandM;A few months ago I wondered about the ANSI C preprocessor ## token pastingoperation.andP;  if you code the ## operator in a macro replacement list, itreplaces the two parameters that surround it by &quot;pasting&quot; the two argumentstogether into one argument and then continuing with preprocessing.andP;  Forexample:andM;#define pasteup(a,b) a ## bandM;foo(pasteup(12, 34));andM;The resulting statement would be:andM;foo(1234);andM;One is hard pressed to imagine a use for this feature.andP;  Necessity being themother she is, we can only speculate that the invention of ## sprang from theloins of need.andP;  The behavior of ## is more peculiar when you consider this:andM;pasteup(hello,dolly)( );andM;The effective statement is:andM;hellodolly( );andM;which makes us suspect that ## could be of some use in the preprocessorfabrication of identifiers.andM;The ## behavior is well documented in the ANSI C standard, but there are nogood examples of its use or clues to its purpose.andP;  That bothered me because Icouldn't come up with a good use for it.andP;  So, as an experiment, I wentlooking for an application for the odd little critter.andP;  It would have beenun-sporting to call someone on the X3J11 committee and ask what it was forbut I wanted to find a real use for token pasting, and eventually I did.andO;What I found, however, was not code that used the ANSI token paster at all.andO;In fact, what I found was not in a C program.andP;  Instead, I found a contrivancein the generic.h header file that comes with C++ 2.0 compilers.andP;  Thefollowing construct works with pre-ANSI C and C++ preprocessor programs:andM;#define name2(a,b) a\andM;bandM;The purpose of this macro and others like it are to paste type and classnames together to form what has been called a &quot;parameterized&quot; class from ageneric one.andP;  In Programming in C++, Prentice Hall, 1989, Dewhurst and Starkdescribe what they call &quot;genericity,&quot; still another abominable non-word thatsomeone, out of generosity and in the true spirit of computer literature, hascontributed to the English-speaking world.andP;  There they observe thatANSI-conforming compilers could achieve the same thing with this:andM;#define name2(a,b) a##bandM;Eureka! Now a quick look at the generic.handM;of Turbo C++ reveals that they do indeed use the ## operator in just thatfashion and my quest is complete.andM;My original comments about ## came in a review of Rex Jaeschke's book,Mastering Standard C. Some readers called to say that they could not locatethe book or the publisher.andP;  Here is the address: Professional Press, 101Witmer Rd., Horsham, PA 19044, 215-957-1500.andM;The Future of CandM;Turbo C++ marks the dawn of an era.andP;  C++ proponents would say that the erastarted a long time ago, but from my view, the era began when awell-established and leading language vendor such as Borland bet the farm andcame out full-bore with a complete C++ development environment.andP;  You can betthat Microsoft is not far behind.andM;The C++ dialect is destined to replace C as the language of choice fordevelopers of software systems.andP;  The combination of objects, user-defineddata types (same thing, only different), and the C syntax makes C++ a naturalheir to the throne.andP;  But there is at least one category of program that willnever switch to C++.andP;  Developers of utility and systems programs will stickwith C for its freedom and close-to-the-metal feel and for its lean and meanexecutables.andP;  C++ programs can have those qualities, but at the expense ofextensibility.andP;  Add all those extensible data types and your programs willspend time and memory with layers of constructors and destructors and classhierarchies.andP;  Leave them out and you are using a C++ compiler to develop a Cprogram.andP;  C lives.andM;By the way, if you want Turbo C without C++, you can still buy Turbo C 2.0.andO;Borland will continue to market and support that version of the compiler asthe C language entry-level compiler to compete with Microsoft QuickC.andP;  I donot know prices just now, but you should expect Turbo C 2.0 to be a bitcheaper than when it was this year's snappy model.andP;  I would have preferred tosee a TC 3.0 that fixed the ANSI incompatibilities and the bugs and used thenew, improved IDE, but apparently Borland decided to invest their resourcesin the C++ package and leave 2.0 the way it is for those who want it.andM;Hot KeysandM;We've all used programs that employ hot keys.andP;  On the PC, hot keys are keycombinations that a program uses to cause things to happen.andP;  The most typicaluse is to make a TSR pop up.andP;  By definition, a hot key should be a keycombination that applications do not use in their normal command set.andP;  Byconvention, hot keys are combinations that do not produce anything on thescreen in normal DOS use and that are not one of the generic function keys.andO;Sidekick uses the Ctrl-Alt combination.andP;  Ready uses the 5 on the numerickey-pad (with NumLock off).andM;A programmer has three problems to solve with respect to hot keys.andP;  First,how do you read one from the keyboard to let the user change the hot keysetting? Second, how do you translate that into a meaningful display to tellthe user what the key combination is? Third, how do you know when the hot keyhas been pressed? The code that accompanies this month's column addressesthose problems.andM;Listing One [omitted], is hotkey.h, a header file that an application programwill include to use the hot key functions.andP;  It contains the prototypes.andM;Listing Two [omitted], is testhk.c, a program that demonstrates the use ofthe hot key functions.andP;  Hot keys are described in terms of their keyboardscan code and the BIOS shift key mask.andP;  Each key on the keyboard sends aunique scan code to the computer when you press a key.andP;  These codes are notASCII, and you will find them documented in many books about programming thePC.andP;  The BIOS shift key mask is a byte in low RAM that represents the currentstatus of the Shift, Ctrl, and Alt keys.andP;  The hot key software takes care ofthe translation of the codes to the key values.andM;The testhk.c program begins by displaying these messages to describe what itexpects you to do:andM;Press a hot keyandM;Press Esc to keep the one you haveandM;Press the Space Bar to clear the one you haveandM;Press Enter to use the new oneandM;Then it calls the hotkey function, passing the addresses of an integer forthe scan code and one for the shift key mask.andP;  The hotkey function lets theuser press different hot key combinations, displaying each one until the userpresses Enter, Esc, or the Spacebar.andM;Once the user has selected a hot key, the testhk program displays its valueby calling the showkey function, which displays something like Ctrl-X on thescreen.andP;  Then testhk calls initkey to initialize testing for the hot key.andO;The iskeyhit function returns nonzero if the hot key has been pressed andzero if not.andP;  The testhk program loops waiting for a press of the hot key.andO;Then it calls endkey.andM;It is important that the program calls initkey before testing for the hot keypress and endkey afterwards.andP;  Don't leave them out.andM;Listing Three [omitted], is hotkey.c, the functions that manage hot keyprogramming for your application.andP;  The initkey function attaches the keyboardinterrupt vector to the newkb interrupt service routine.andP;  That functionsimply reads the keyboard input port into a variable named kbval and chainsto the old interrupt vector.andP;  On some PCs you do not need the interruptservice routine.andP;  Anywhere the program examines the value in kbval you couldsimply read the keyboard input port Ox60.andP;  other computers do not work thatway.andP;  The input port delivers a meaningful value only after an interrupt 9.andO;Therefore, the program attaches to interrupt vector 9 to read the value ofthe keyboard port.andM;The iskeyhit function accepts a scan code and shift key mask and tests themagainst the current values of kbval and the BIOS shift key mask.andP;  Thefunction returns true if the values match and false otherwise.andM;The hotkey function programs a hot key.andP;  When the user presses a valid hotkey combination, the function displays an ASCII representation of it on thescreen and waits for another key press.andP;  When the user presses Enter, thescan and shift mask values associated with the most recent key are returnedto the caller.andP;  If the user presses the Esc key, the caller's original valuesare returned.andP;  if the user presses the Spacebar, zeros are returned.andM;Reading a hot key is no cake walk.andP;  Neither DOS nor BIOS return anything whenyou press one of the key combinations that we have said are valid hot keys.andO;What you must do is examine the input from the keyboard port and reactaccording to the scan codes that come in.andP;  The first thing to do is waituntil the user gets off the keyboard.andP;  The most significant bit (Ox80) of thescan code will be zero if any key is being held down.andP;  Otherwise it will beone.andP;  Next, you must clear the BIOS read-ahead buffer and keep it clear.andO;Every time the user presses a valid BIOS key, BIOS adds an entry to acircular read-ahead buffer.andP;  By clearing that buffer, you prevent BIOS frombeeping when the buffer is full.andP;  Then you go into a loop reading thekeyboard port waiting for a key to be pressed.andP;  if that key is the scan codefor the Esc, Enter, or Spacebar key, you are done.andP;  Otherwise, it must be theCtrl, Alt, or a Shift key.andP;  After that you wait for another key to bepressed.andP;  Then you wait for a third key press or a key release at which timeyou have the two or three scan codes that constitute the hot key.andP;  From themit is a simple matter to validate the combination.andM;The user might try to program an invalid hot key.andP;  You would not want to usethe letter A or the H hot keys, for example.andP;  A hot key must be a combinationthat includes one or more of the Shift, Ctrl, and Alt keys and another key.andO;Or a valid hot key can be any two or more of the Shift, Ctrl, and Alt keys.andO;if the user selects anything else, the hotkey program buzzes and rejects theselection.andM;The showkey function returns a pointer to a display string that it constructsfrom its scan code and shift key mask parameters.andP;  You can use this string todisplay the name of the hot key.andM;These functions compile with Turbo C. To use them with another compiler, youmust use that compiler's version of the setvect, getvect, sound, delay, andnosound functions.andP;  Most compilers have variations on the first two.andO;Microsoft C uses _dos_getvect and _dos_setvect, for example.andP;  The other threeare Turbo C specific.andP;  You can use whatever method your compiler has to makea noise through the speaker or you can stub out the buzz function.andO;</TEXT></DOC>
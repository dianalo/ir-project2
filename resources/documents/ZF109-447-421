<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-447-421  </DOCNO><DOCID>09 447 421.andM;</DOCID><JOURNAL>Patricia Seybold's Unix in the Office  August 1990 v5 n8 p1(17)* Full Text COPYRIGHT Seybold Office Computing Inc 1990.andM;</JOURNAL><TITLE>Unix OLTP: getting ready for commercial prime time. (on-linetransaction processing) (includes a related article on openstruggles with remote procedure calls and one on OLTP heavyweightsmoving in to the Unix market)</TITLE><AUTHOR>Rymer, John R.andM;</AUTHOR><DESCRIPT>Topic:     On-Line Transaction ProcessingUNIXMarket PenetrationMarket AnalysisPerformance SpecificationsIndustry Analysis.andO;Feature:   illustrationtablechart.andO;Caption:   The OLTP spectrum. (table)FT Unix extensions. (table)The X/Open OLTP model. (chart)andM;</DESCRIPT><TEXT>Unix OLTPandM;ONLINE TRANSACTION PROCESSING (OLTP) and Unix have arrived at the same pointat the same time.andP;  OLTP is changing.andP;  It is no longer confined to thehigh-capacity, high-speed, dedicated systems used by airlines, banks, andcredit card companies.andP;  OLTP has spread into applications that involvesmaller amounts of data and fewer users and transactions than the massivetraditional OLTP systems.andM;Unix plays a prominent role in these new &quot;OLTP Light&quot; applications.andP;  Thereason is low costs.andM;As users scale OLTP downward, they find that Unix systems offer the rightperformance at the right price for their new applications.andP;  A systemsintegrator reports delivering a big claims processing system for 20 percentof the estimated cost of an IBM Customer Information Control System (CICS)equivalent.andP;  Another user, David Sherr, director of equity systems softwarearchitectures for Shearson Lehman in New York, sought bids for hardware tosupport an OLTP application with a $3 million budget.andP;  The winning bid was$1.7 million.andP;  &quot;We have a Unix strategy,&quot; he says.andP;  &quot;But even if we weren'tdisposed to Unix, you just can't argue with economies like that.&quot;andP;  Indeed,the low cost of Unix systems makes it possible to build OLTP applicationsthat would be prohibitively expensive on proprietary systems.andM;Unix has also grown up to meet the challenges of OLTP applications.andP;  Unix andits file system were not designed to satisfy the special reliability andcontrol requirements of OLTP applications.andP;  However, hardware vendors such asSequent and Pyramid provide extensions that make Unix reliable enough forOLTP.andP;  Relational DBMS (RDBMS) vendors fix the file system problem bycreating their own file systems, and provide transaction control mechanismslike transaction queue management, transaction logging, and rollback/recoverywithin their database management software.andP;  The result is a solid foundationfor OLTP Light applications.andM;But Unix OLTP users want more--they want to run bigger OLTP applications onUnix, and they want software independence.andP;  Currently, most are dependent ontheir DBMSs.andP;  They have the freedom to change hardware vendors when they needto, but if they change DBMS vendors, they sacrifice their applications.andP;  Thebest hope for software independence--what David Sherr calls &quot;the Holy Grailof open systems&quot;--lies with X/Open Limited and the International StandardsOrganization (ISO).andP;  The two organizations are working in concert to createstandard protocols and interfaces for Unix OLTP in a distributed environment.andO;Unix vendors hope the new standards will allow them to compete withproprietary OLTP systems such as IBM's CICS/MVS/VSAM to build reservationsystems as well as for OLTP Light applications.andM;The first products based on the X/Open and ISO work will start appearing thisfall, beginning a period of superheated development in Unix OLTP.andP;  Thisreport examines the state of the art in Unix OLTP and the chances that Unixwill grow to become the predominant basis for transaction processing.andM;The New OLTPandM;The OLTP applications based on Unix today are different from reservationsystems or bank networks.andP;  But they're no less vital to their users.andP;  Take,for example, the OLTP applications running at Tootsie Roll Incorporatedoutside of Chicago.andP;  Three or four order entry clerks (more are added tohandle the Halloween rush) complete about 70 transactions per hour using anOracle DBMS running on a Sequent processor.andP;  Tootsie Roll's main criterionwas Oracle's reporting and analysis tools.andP;  &quot;We used to have a big cart thatdelivered batches of thick IBM reports to us every day,&quot; says President EllenGordon.andP;  &quot;But, to compete, we needed more immediate information.&quot;andP;  Now, whendecision-makers need information, they either get it themselves or have aquick 4GL routine written by MIS.andM;Access to information its transaction information is what's most important toTootsie Roll.andP;  The company doesn't require nonstop availability of thetransaction system.andP;  Tootsie Roll won't lose millions of dollars a minute ifits system goes down.andP;  This is a fundamental difference between applicationslike Tootsie Roll's and reservation or banking networks.andM;Are systems like Tootsie Roll's OLTP?andP;  Veterans of mainframe OLTP say theseare just database--primarily decision support--applications.andP;  Users likeTootsie Roll, however, say OLTP isn't useful without effective decisionsupport.andP;  These business users live by former Citicorp chairman WalterWriston's insight into competing in an information economy: Information aboutmoney, said Wriston, is more valuable than the money itself.andP;  The same istrue of goods and services.andP;  In embracing this view, users like Tootsie Rollare changing the way we view OLTP, and changing it in a way that favors Unix.andM;WHAT IS A TRANSACTION?andP;  OLTP starts with the transaction.andP;  A retailer sells ared dress to a customer.andP;  A bank customer withdraws $100 from a checkingaccount using a teller machine.andP;  A furniture maker orders a load of oak froma supplier.andM;Each of these interactions is different, yet each has two things in common.andO;First, each changes the state of the participating entity's information aboutitself.andP;  The retailer's revenues go up.andP;  The bank customer's checking-accountbalance goes down.andP;  An amount is deducted from the furniture manufacturer'sbudget account for lumber supplies.andP;  And so on.andM;Second, each transaction has two states: It is either in process or complete.andO;A transaction is complete when all parties can keep their parts of thebargain.andP;  For example, the retailer won't sell the red dress if the customerdoesn't have enough money to pay for it.andP;  In OLTP, completed transactions aresaid to have been &quot;committed.&quot;andP;  If a transaction can't be completed, allparties must be able to cancel them and return to the conditions prevailingbefore the transaction began.andP;  The retailer, for example, won't record thedress sale as revenue.andP;  In OLTP, this process is called &quot;aborting atransaction.&quot;andM;ONLINE TRANSACTIONS.andP;  OLTP systems don't change these fundamentalcharacteristics of transactions.andP;  Rather, they seek to reduce the time neededto complete transactions and the time between the completion of a transactionand its reflection in an organization's data about its business--itsinventory, revenues, costs, etc.andP;  The teller machine saves the bank customerfrom standing in line to cash a check.andP;  The sale of the red dress may beimmediately posted against inventory and revenue files, giving the retailerimmediate information from the field.andM;An OLTP system collects information about transactions and posts the changesto the organization's information dictated by updating a shared database orfile.andP;  The nature of transactions imposes four basic requirements on all OLTPsystems.andP;  The four, called the ACID properties, are: atomicity, consistency,isolation, and durability.andM;Atomicity.andP;  Atomicity recognizes that a transaction involves two or morediscrete pieces of information.andP;  All pieces of information in a transactionmust be committed, or none are.andP;  In the red-dress example, the sale of thedress involves, at minimum, a purchase price and an inventory adjustment.andP;  Ifthe customer buys the dress, the purchase price is added to a revenue file,and a unit representing the dress is deducted from an inventory file.andP;  Bothfiles must be changed to avoid inconsistent information.andP;  If one can't bechanged, neither is.andM;Consistency.andP;  Consistency requires that a transaction either create a new andvalid state of the organization's shared data or, if the transaction aborts,return the data to its previous state.andP;  If, at the last minute, the customercan't pay for the red dress, the retailer must be able to back out of thesale, returning the revenue and inventory files to their pre-sale conditions.andM;Isolation.andP;  While a transaction is in process, its details must be isolatedfrom other transactions.andP;  Only when a transaction is committed can itseffects on shared data be shown to other transactions.andP;  In the red-dressexample, the customer may run down to the teller machine on the corner towithdraw enough money to pay for the dress.andP;  While she does, othertransactions must proceed on the assumption that the dress hasn't been sold.andM;Durability.andP;  Durability means that an OLTP system saves a committedtransaction's changes to shared data in the event of a subsequent failure.andO;If the retail store is hit by a blackout a minute after the customer buys thered dress, that sale must be reflected in the appropriate files when thesystem recovers.andM;The ACID requirements say nothing about OLTP system availability.andP;  A system'savailability depends on the cost of lost time to conduct transactions.andO;Reservation or telephone-switching systems require nonstop availability,called 24 x 7 (24 hours, 7 days a week) by OLTP specialists.andP;  The reason isthat the cost of business lost during a reservation system outage justifiesthe cost of building systems that tolerate faults extremely well.andP;  For otherbusinesses, however, short outages may be tolerable.andP;  Many users can affordlower guaranteed system availability.andP;  Users and vendors alike tend to viewOLTP applications as fitting into a spectrum, as depicted in Illustration 1.andM;Unix: From Laggard to LeaderandM;Five years ago, the phrase &quot;Unix OLTP&quot; was a contradiction in terms.andP;  Therewas no Unix OLTP to speak of.andP;  Today, Unix is hot as an OLTP technology.andO;What has happened to thrust Unix into the limelight as an OLTP technology?andO;There are several factors, both technical and nontechnical.andM;USERS WANT IT.andP;  The most important reason for the spread of Unix OLTP is thetrend toward pushing OLTP applications closer and closer to the customer.andO;For example, in a bank, that means installing teller machines that capturetransactions directly from the customer's fingertips.andP;  In a retail store, itmeans capturing transactions at smart cash registers that are linked toservers running inventory and pricing databases.andP;  In the furnituremanufacturer example, it means using electronic data interchange to swiftlyprocess orders.andP;  The closer OLTP systems are to the customer, the quickertransactions can be processed, making a treasure trove of information abouttrends in buying, costs, consumer preferences--you name it--available tobusiness decision-makers.andM;If a bank processes thousands of transactions a day and each transaction isworth an average of $100, it's not hard to justify big expenditures on OLTPsystems like teller machines.andP;  But, as daily transaction rates andper-transaction values fall, traditional OLTP systems become too expensive.andO;The new in-store systems planned by companies such as K-mart and JC Penneyare small Unix servers, not big minis.andP;  Their system cost is more in linewith smaller transaction volumes and values.andM;Low costs are part of the story.andP;  A growing number of users are moving toUnix as a strategy to adopt open systems.andP;  &quot;We moved to Unix OLTP as part ofa larger commitment to Unix for our business,&quot; says George Caneda, a systemsdevelopment manager at B.E.A.andP;  Associates, a Wall Street money managementfirm with $9 billion under management.andP;  Telephone companies, which constitutea large market, require Unix System V compliance in their OLTP systems, as doa growing number of federal government agencies.andM;The phone companies, the federal government, and the number of corporateusers committing to Unix add up to a substantial market.andP;  No one knowsexactly how big it is, but, given that OLTP systems as a whole are believedto generate $50 billion a year in revenues, even a small share of the totalis lucrative.andP;  High-end Unix performance specialists like Sequent and Pyramidare out to capture this market.andP;  Later this year, they'll be joined by Tandemand Stratus, the most successful vendors of proprietary fault-tolerant (24 X7) systems.andP;  Unisys, Hewlett-Packard, IBM, and Digital won't be far behind.andM;UNIX KERNEL FIXES.andP;  A big part of the reason Unix OLTP has caught on isbecause vendors have fixed Unix's inherent weaknesses.andP;  The proof of theirsuccess is the final small amount of attention Unix OLTP users pay to theiroperating system software.andP;  Most have few, if any, problems.andM;Vendors such as Sequent, Pyramid, and, more recently, Stratus and Tandem,have each had to solve the same basic problems in their Unix versions.andO;They've done so without compromising the standard Unix interface.andP;  (SeeIllustration 2.)andP;  However, the Unix kernels provided by Sequent, Pyramid, andothers in this field are no longer the standard System V kernel.andO;Interestingly, many of the common fixes undertaken by these vendors will beincorporated into Unix System V Release 4, which will allow Unix OLTP vendorsto bring their kernels into closer compliance with the standard kernel overtime.andM;The fixes fall into four major areas: system robustness, data integrity, filesystem, and process management.andM;System Robustness.andP;  Unix has a reputation for being unreliable that is nolonger deserved.andP;  It used to be that system errors, known as panics, couldhang Unix.andP;  The default remedy: reboot, and often, Management processes thatclean out system log files and kill off obsolete daemons eliminate the mosttroublesome panics.andP;  Unix System V Release 4 incorporates these fixes in astandard way.andM;Data Integrity.andP;  Standard Unix processes I/O by writing first to systembuffers and then flushing the buffers to disk.andP;  Applications run using datain the buffers.andP;  This design raises a risk to data integrity.andP;  A power outagecan blow away data in buffers before it is written to disk.andP;  The simplesolution is to use Unix's synchronous write-through feature to bypass Unix'sbuffers and go directly to disk.andP;  This improves reliability, but at thesacrifice of performance.andM;The popular approach is to let the DBMS take care of the problem.andP;  The DBMSsinstitute their own buffer schemes, and all have begun using parallelmanagement of multiple queues to preserve data integrity without compromisingperformance.andM;File System.andP;  The standard Unix file system is tuned to access lots of smallfiles--exactly the opposite of what's needed by OLTP applications.andP;  Most OLTPapplications demand fast access to large files at random.andP;  Indexed fileschemes like ISAM and IBM's VSAM are very successful in meeting this need.andM;The simple solution is to use a more efficient, tunable file system, such sthe Fast File System (FFS) included in the Berkeley Unix, or to provideaccess to ISAM.andP;  The RDBMS vendors start from scratch, creating their ownfile systems using Unix's &quot;raw I/O&quot; feature.andP;  Raw I/O allows an applicationto take direct control of an I/O device, in this case, a disk.andP;  The raw I/Oapproach adds a proprietary element to an open system.andP;  Dharma SystemsIncorporated (Hollis, New Hampshire) is the one vendor we've found thatrejects the raw I/O approach.andP;  The reasons: Users have access to standardUnix system admin tools from within Dharma, and the Dharma system is moreeasily ported across Unix versions.andM;Memory Management.andP;  Unix's standard memory management is inappropriate toOLTP.andP;  Unix assigns one process to each user.andP;  The operating system must loadnew memory page tables, process control areas, and user registers--aprocedure called a context switch--every time one user session ends andanother begins.andP;  Context-switching eats up a lot of system overhead andmemory, and can limit the number of users on a Unix OLTP system to a coupleof hundred.andP;  Supporting more users requires memory management or a subsystemthat can field user requests for services, store them in queques, and matchthem to available processes as they become available.andM;Unix OLTP vendors and users deal with this problem in a wide variety of ways,from writing a daemon to field and handle multiple user requests forindividual server processes to writing their own transaction-controlsoftware--called a transaction monitor--to service multiple user tasks withinsingle Unix processes.andM;24 x 7 AND SMP.andP;  Solving the fundamental limitations of off-the-tape Unix isonly part of what's necessary to support OLTP applications.andP;  Highavailability OLTP applications require disk-mirroring and/or automaticprocess recovery.andP;  In disk-mirroring, every disk I/O is written to two disks,preserving a spare copy of the data.andP;  Automatic process recovery shiftsprocessing to a hot standby machine in a &quot;cluster&quot; configuration.andM;The next level up on the OLTP Spectrum (see Illustration 1) is fault-tolerantsystems, which duplex every system component, provide for online componentreplacement, and support sophisticated diagnostic and configurationmanagement capabilities.andP;  Applications in this range are called &quot;24 x 7&quot;because they, theoretically, will never go down.andM;Lastly, there's a big push on among Unix OLTP vendors to support symmetricalmultiprocessor (SMP) hardware designs.andP;  The Unix kernel and RDBMS softwareboth need special hardware extensions to support these configurations.andP;  SMPpromises to allow Unix systems to grow without swapping out processors.andP;  Inthe future, vendors will also boost performance by using multiprocessors toprocess instructions, queries, service requests, etc.andP;  in parallel streams.andM;Proprietary OLTP systems like Stratus's VOS and Tandem's Guardian don't havethese difficulties.andP;  They were written to support OLTP, and they've beenimproved during years of experience with critical applications.andP;  Theproprietary solutions cost more than Unix OLTP solutions.andP;  Vendors say theyears of tuning and optimization that have gone into the proprietary systemsare the reasons for their higher costs.andP;  Prices also reflect what the marketwill bear, given limited competition.andM;FOCUS ON TP MONITORS.andP;  The typical Unix OLTP system today comprises a Unixhot box, a version of the Unix kernel that's been extended to supportredundant disks, multiprocessing, and other performance and/or availabilityfeatures, and an RDBMS.andP;  The RDBMS usually provides support for theatomicity, consistency, isolation, and durability (the ACID properties)required by OLTP applications.andM;The central role of RDBMSs in Unix OLTP makes a lot of people uncomfortable.andO;Users committed to open systems strategies are keenly aware that theirdependence on an RDBMS limits the openness of their systems RDBMS softwarelocks in users with a variety of proprietary elements, from their custom filesystems to transaction management features like queue management toperformance features like stored procedures.andP;  If I use Sybase, for example, Iwrite my applications in a proprietary version of SQL, Transact SQL, and usea private service applications programming interface (API).andP;  Even if otherRDBMS vendors support the same functions Sybase does, they usually implementthese functions in different ways.andP;  One way to increase the openness of UnixOLTP systems is to separate transaction management services from datamanagement facilities, making transaction management services availablethrough a separate API.andM;OLTP professionals trained in CICS don't like assigning transactionmanagement to an RDBMS.andP;  They'd rather have a separate piece of software--atransaction monitor--to coordinate the execution of transactions.andP;  Atransaction monitor is responsible for managing the procecesses, queues, andsystem states involved in processing and committing or aborting onlinetransactions.andP;  Transaction monitors generally have the following components:andM;Name Service.andP;  The name service in a transaction monitor stores the names andadresses of data management and I/O services.andP;  When an application requests aservice, the name service fields the request and delivers it appropriately.andM;Queue Manager.andP;  If the name service fields a request for a service that iscurrently occupied in another transaction, it places the request in a queue.andO;The effect of queueing is to bypass Unix's requirement that each servicerequest have a dedicated process.andP;  Transaction managers allow multipleapplications to use a single process, and can dramatically raise the numberof users supported on a system.andM;Scheduling Service.andP;  The scheduling service in a transaction monitorschedules processes to handle competing requests for transaction services.andM;Communications Service.andP;  The communications service allows the transactionmonitor to deliver service requests to appropriate services.andM;Log Service.andP;  As it coordinates the execution of transactions, thetransaction monitor stores information about the transaction's progress andthe state of the systems involved in executing it in a log.andP;  The informationmust be current and detailed enough to roll back the transaction ifnecessary.andM;In our red-dress example, a transaction monitor would identify the stepsneeded to complete the transaction as a discrete unit of work.andP;  It wouldtrack the correct completion of data-gathering and the updating of shareddata.andP;  It would store in a log reference information about the steps of thetransaction and the state of the systems involved.andP;  The information in thetransaction manager's log would then be used to roll back the transaction ifaborting it became necessary.andM;Transaction monitors offer another important benefit to Unix OLTP: supportfor more users.andP;  Currently, most Unix OLTP systems top out at about 200users.andP;  A transaction monitor, by scheduling and managing user requests fortransaction services more efficiently than current RDBMSs do, could raise theuser threshold of Unix to 1,000 or more.andP;  Independence TechnologiesIncorporated (Fremont, California), a systems integrator-turned-Unix OLTPvendor, used a version of ATandamp;T's Tuxedo transaction monitor for Unix to builda health care claims system that supports 3,000 users.andM;In this case, the proprietary-system users and Unix users agree: Unix OLTPwill benefit if the transaction management is separated from the RDBMS.andM;Unix has never had a standard transaction monitor--RDBMSs have filled thisrole, or users have written their own monitors.andP;  Users and vendors alikeagree that transaction monitors are necessary to make Unix a seriouscontender in OLTP.andP;  But what's the best way to fill the need for bettertransaction monitor software in a standard--even better, an open--way?andP;  Thisis, after all, Unix OLTP.andP;  It should be open.andM;THe X/OPEN MODEL.andP;  If Unix OLTP is going to be open, applications must beable to call on databases or transaction monitors through a set of commonAPIs.andP;  What's needed is a set of Posix-like interfaces for OLTP.andP;  X/OpenLimited is defining a series Of APIs to allow, for example, an OLTPapplication with components that execute on an Oracle RDBMS or an IngresRDBMS using the same calls.andP;  A different API would allow an application tocall transaction monitors from different vendors using common commands.andM;Like the promise of Posix itself, the X/Open OLTP model will take years tobecome a working reality.andP;  Nevertheless, it's crucial to the development ofopen OLTP systems.andM;X/Open is defining its APIs by breaking OLTP into three functionalcomponents--resource managers, transaction managers, and applications--anddefining open APIs to each component.andP;  (See Illustration 3.)andM;Resource Manager.andP;  Resource managers include RDBMSs, file systems, and printservices.andP;  A resource manager is responsible for managing a shared resourceaccording to the ACID properties.andP;  Transaction managers and applications workwith resource managers by asking them to perform services on their behalf.andO;Applications and transaction managers don't have to know how the requestedservice is performed.andP;  As long as all elements support the same serviceinterface, users should be able to plug in new components as they need to.andM;X/Open has circulated for industry comment a formal proposal for aninterface--the XA interface--to resource managers.andP;  (See Illustration 4.)andM;TRansaction Manager.andP;  A transaction manager provides the transactionmanagement services that today's transaction monitors provide.andP;  It also givesapplications access to communications services.andP;  Transaction managers use theXA interface to obtain the services of resource managers to complete atransaction.andP;  X/Open has reserved a place in its model for the emerging ISODistributed Transaction Processing (DTP) protocol as the interface betweentwo transaction monitors cooperating in a single transaction.andM;Application.andP;  Applications define transactions as having a beginning, asequence of operations, and an end.andP;  The transaction manager coordinates andtracks the execution by resource managers of the operations defined in anapplication.andP;  They ask transaction managers to complete transactions on theirbehalf through a still-to-be-specified interface.andM;In our red-dress example, an application defines the operations that mustoccur during any sale to a customer, from the collection of data at the cashregister to the updating of the inventory and revenue files on a server.andP;  Atransaction manager directs the steps in the process, making sure that all ofthem are performed properly.andP;  A resource manager updates the inventory andrevenue files at the direction of the transaction manager.andM;Distributed OLTP.andP;  The X/Open's model assumes its interfaces must allowdifferent parts of a transaction to be executed on different, heterogeneoussystems linked by a network.andP;  This is known as distributed transactionprocessing.andM;Distributed transaction processing is the future of OLTP.andP;  By allowingtransactions to be executed across a network, users can provide additionalcapacity to existing applications without swapping in new systems, and canleverage older OLTP systems in new applications.andP;  For instance, the store inour red-dress example might want to add a dynamic pricing application to itssystems that allows a regional office to monitor how merchandise is movingand to transmit price changes to stores to help stimulate demand.andP;  If theretailer's pricing database is on an IBM mainframe and its in-store systemsare based on Unix, a distributed OLTP system might allow it to implement thenew application without rewriting its pricing database.andM;The X/Open model incorporates two concepts to accomplish distributedtransactions.andP;  First, it distinguishes between local transactions and globaltransactions.andP;  A local transaction is a set of operations that a resourcemanager executes as a local unit of work under its own control.andP;  A globaltransaction is a set of operations that is under the control of transactionmanagers and that includes local transactions.andM;Second, the X/Open model assumes that the transaction manager and resourcemanagers in an OLTP system use a two-phase commit (2PC) protocol.andP;  A 2PCprotocol builds an extra step into the process of committing a transaction.andO;It allows the transaction manager to tell all involved systems to prepare tocommit their parts of the transaction.andP;  If all of the involved systemsrespond to the &quot;prepare to commit&quot; message by saying they are ready tocommit, the transaction manager then issues a Commit command.andP;  (SeeIllustration 5.)andM;The X/Open transaction processing model gives OLTP vendors an importanttarget.andP;  X/Open has a long road to travel before its work on OLTP iscomplete.andP;  The X/Open OLTP group released an interim model a year ago.andP;  Weexpect it to introduce another interim version soon that will movecommunications management from the transaction manager to a newcommunications manager.andP;  (See &quot;X/Open Struggles with RPCs page 5.&quot;)  Beyondfine-tuning the model, X/Open faces other issues as it seeks to define opendistributed OLTP.andP;  System management, for example, is a gaping hole.andP;  Nostandards organization or vendor has crafted a unified way to administer andmanage distributed networks.andP;  And there are other issues X/Open hasn'taddressed at all.andP;  For example, what is the standard way to identify a set ofdistributed operations as a single transaction?andP;  And how can sophisticatedtransaction structures, such as nested transactions, be performed in astandard way across distributed systems?andM;In the meantime, the Unix OLTP vendors are pushing to expand beyond theirbase in OLTP Light applications by offering transaction monitors and avariety of performance enhancements.andP;  IBM, Unisys, and systems vendors arebuilding integrated OLTP environments for Unix.andP;  (See &quot;The OLTP Heavies WeighIn,&quot; page 14.)andP;  All but two of the major vendors are proceeding withcommitments to abide by the X/Open model and its interfaces.andP;  However, itremains to be seen how quickly X/Open's work will be implemented across avariety of products.andP;  The X/Open dissenters--VISystems Incorporated (Dallas),which provides a CICS-like environment under Unix, and DharmaSystems--believe the X/Open model is impractical because it doesn't addressthe need to optimize the components of an OLTP system.andM;What Unix Offers NowandM;Users building Unix OLTP solutions today have three basic choices: They canrely on the facilities of a general purpose RDBMS, they can implement one ofseveral independent transaction monitors, or they can build atop an optimizedOLTP operating environment that includes a database built for OLTP and atransaction monitor.andM;There has been much activity in each of these three areas as Unix OLTPvendors seek better performance and support for bigger systems than arefeasible today.andM;FROM DSS TO OLTP.andP;  The RDBMS cut its teeth in information processing as adecision support engine.andP;  As we've seen, users like Tootsie Roll have pushedthe RDBMS vendors to support OLTP in addition to easy data access.andP;  To keeppace with demands for bigger, faster Unix OLTP systems, Oracle, Ingres,Informix, and Sybase have each announced &quot;OLTP releases&quot; during the lastyear.andP;  Among these vendors, only Sybase was designed originally to supportOLTP.andM;The OLTP releases of the major RDBMSs are either retuned or wholly redesignedto better support OLTP's requirements, which would allow their RDBMS enginesto function as resource managers in heterogeneous OLTP environments under thecontrol of transaction monitors.andP;  This report covers the highlights of theseefforts.andM;Tuning the Engines.andP;  Each of the major RDBMS vendors has tuned its engine inessentially the same ways.andP;  They all allow databases to be locked by the rowpage during a transaction, rather than requiring entire tables to be locked.andO;And they all employ the same techniques to reduce the amount of I/O requiredto service transanctions.andM;Architectural Adjustments.andP;  Each of the major RDBMS vendors has also changedthe architecture of its software to support more uses and higher throughputin OLTP applications.andP;  There are two possible approaches.andP;  The first is tobuild a multithreaded OLTP operating system on top of Unix.andP;  The secondapproach is to layer a transaction monitor between a conventional RDBMS andapplications to give the apprearance of multithreading.andM;To speed the proc-essing of transactions, RDBMSs can simultaneously processtwo or more transactions by using multiple server processes.andP;  This approach,called the multiclient-multiserver, or multithreaded, architecture, processestransactions in parallel, usually on multiprocessor hardware.andP;  An alternativeto the multiclient-multiserver architecture is integrating a transactionmonitor and a multiclient-single server RDBMS.andP;  In that configuration, thetransaction monitor can achieve the same benefits as a multithreaded RDBMSengine.andM;Sybase and Ingres both have multiclient-multiserver architectures.andP;  Sybaseadded this feature with a virtual server architecture that allows an SQLServer process to two or more of the processors in a multiprocessing system.andO;Ingres provides multiserver support with a multithreaded RDBMS kernel.andP;  Bothof these database vendors provide their own transaction management software.andM;The Multiclient Server option of Oracle Release 6, due out this fall, andInformix Online, an OLTP version of Informix, both use the transactionmonitor approach.andM;Oracle and Informix both plan to rely on their own transaction managers aswell as on ATandamp;T's Tuxedo transaction monitor technology.andP;  Both vendors areworking with systems vendors such as Unisys and Hewlett-Packard to providesuppport for Tuxedo within their DBMS software.andM;Optimization vs.andP;  Openness.andP;  It is too early to tell which pair of vendorshas the architectural advantage.andP;  Both the multiserver architecture and thetransaction monitor approaches will yield systems that can support largernumber of users.andP;  And so users of all these major RDBMSs will be able to domore with the Unix OLTP systems.andP;  We believe the winner in the competitionfor ever-better performance will be the vendor that can best optimize itstransaction management components and RDBMS kernel, while leveragingstandards.andM;We believe Sybase, Ingres, and Dharma Systems may have a short-term advantagein optimizing their systems.andP;  Each of these vendors provides what we callOLTP operating environments--data management and transaction managementsoftware created, optimized, and controlled by one vendor.andP;  Dharma's TPE*combines a multithreaded SQL RDBMS kernel and a Network Transaction Kernelbased on Hewlett-Packard/Apollo's Network Computing System (NCS) RPC thatmanages transactions.andM;In contrast, Oracle and Informix appear more interested in moving toavailable standards by embracing Tuxedo.andP;  In the short term, both vendors maybe at a disadvantage in optimizing their systems because Tuxedo is asource-level product over which neither has total control.andP;  Systems vendorswill actually be handling the integration of the DBMS and transactionmanagement software.andP;  We expect these vendors to need time to learn what ittakes to make the combination of Tuxedo and their RDBMSs really hum.andM;The wild card in the database market will be user demand for openness.andP;  Byintegrating ATandamp;T's Tuxedo, Oracle and Informix will be early adopters of whatlooks like an important standard in Unix OLTP.andP;  Tuxedo is the first productto support X/Open's XA interface.andP;  As RDBMS vendors implement support for theXA interface in their products, applications written to Tuxedo should be ableto access heterogeneous DBMSs without requiring modification.andM;Users talk about openness--witness David Sherr's earlier comment about theHoly Grail of software independence--but we doubt many commercial will moveto XA-based open OLTP architectures soon.andP;  There are very practical reasonsfor this conclusion.andP;  First, none of the big RDBMS vendors are likely tooffer XA interfaces until early 1991.andP;  Second, users say they are reluctantto support more than one RDBMS until they see a greater payoff for theadditional effort required.andM;Still, both Sybase and Ingres are hedging their bets by moving to open theirown APIs and committing to support the X/Opens XA interface at a future date.andM;TP MONITOR OPTIONS.andP;  And what of the transaction monitors the industry agreesare so critical to the future of Unix OLTP?andP;  At this point, users have twomajor options: a version of ATandamp;T's Tuxedo Release 4.0 or VIS/TP, a CICS-liketransaction monitor for Unix from VISystems.andM;Tuxedo and VIS/TP provide basic transaction-monitoring capabilities.andP;  Butthey are targeted at different groups of users.andP;  VIS/TP offers IBM CICS shopsa practical approach to Unix OLTP.andP;  VISystems provides tools to port CICSapplications to run under its own transaction system, and consulting servicesto optimize ported applications.andM;The one question about VIS/TP is its future position in IBM's Unix OLTPstrategy.andP;  VISystems has a cooperative marketing agreement with IBM.andP;  But IBMwill port a future version of CICS under Unix, and VISystems says it is notworking with IBM on the project.andM;ATandamp;T's Tuxedo, in contrast, doesn't provide tools to migrate proprietary OLTPapplications to Unix.andP;  ATandamp;T's strategy is to provide interoperabilityfacilities, not migration facilities.andP;  Tuxedo is a new API aimed at users whoare willing to start with a clean slate to develop applications.andP;  There arevery few third-party applications for Tuxedo 4.0 at this point.andM;ATandamp;T's &quot;Wanna Be&quot; Standard.andP;  ATandamp;T announced Tuxedo 4.0 in February 1989 andhas been pushing it hard as the standard Unix transaction monitor.andP;  Somevendors are taking the bait.andP;  At press time, Unisys, Amdahl, ATandamp;T computerSystems (no surprise there), and Sequent had licensed Tuxedo technology.andO;Oracle and Informix have announced they will support Tuxedo.andP;  Hewlett-Packardappeared ready to license an enhanced version of Tuxedo from IndependenceTechnologies Incorporated (ITI).andP;  ITI has added software layers to Tuxedothat make it easier to support additional communications andindustry-specific protocols in the product.andP;  The first versions of Tuxedoshould start appearing this fall.andM;Tuxedo appears to be catching on because it works, because the market isready to consider a Unix-based transaction manager, and because it implementsemerging OLTP standards.andP;  Licensees like the client-server architecture andsupport for distributed transaction processing of Release 4.andP;  (SeeIllustration 6.)andP;  There are even second sources for Tuxedo software (ITI).andO;Licensees also like the opportunities ATandamp;T has given them to add value to thebase product.andM;Predictions that Tuxedo will dominate the market, however, are premature.andO;Even big licensees hedge their bets on the technology.andP;  &quot;Tuxedo is there andit works,&quot; said one licensee privately.andP;  &quot;It gives us a foundation for addedvalue, but we're not making a strategic commitment to it yet.&quot;andM;Vendors are reluctant to make strategic commitments to for two reasons.andP;  Thefirst is key gaps in Tuxedo's functionality.andP;  Tuxedo does not support PCs orMacintoshes as clients.andP;  It only supports character-based Unix clients.andP;  Inearly 1991, ATandamp;T will begin fixing this problem by releasing a generic DOSclient.andP;  In addition, Tuxedo relies on standard Unix password security.andP;  EvenATandamp;T concedes that it needs a validation service to check the passwords userssubmit against access control lists.andM;The second reason for vendors' hesitation about Tuxedo is their doubts aboutits openness to new technologies.andP;  Vendors who believe remote procedure callsare the simplest method for building network applications, for example, pointout that Tuxedo doesn't support an RPC yet.andP;  Others see Tuxedo as amonolithic product that won't be easy for ATandamp;T to open up.andP;  ATandamp;T has not, forexample, provided an open interface to its logging service.andP;  If a licenseewants to substitute a new logging service, it is very difficult to do so.andO;These vendors would rather see a modular architecture akin to the OpenSoftware Foundation's Distributed Computing Environment (DCE).andP;  Others worrythat the industry doesn't know enough yet about transaction monitors in open,distributed OLTP to intelligently choose a standard.andM;Users, on the other hand, appear much less interested in debating Tuxedo'smerits than in evaluating it.andP;  The big users we talked to were all eitherusing Tuxedo, evaluating it, or planning to evaluate it in the very nearfuture.andP;  Tuxedo is the most immediately available alternative among Unixtransaction monitors today, they say.andM;The Distributed FutureandM;Vendors and users alike believe the future of Unix OLTP lies in distributedtransaction processing.andP;  This is why distributed OLTP is at the heart ofX/Open's project to define open OLTP interfaces in addition to ISO's effortto define transaction processing protocols.andM;Distributing the execution of transactions across a network is a difficulttechnical feat, particularly in an environment that is not under the controlof one vendor.andP;  Users are skeptical that reliable distributed OLTP systemswill be available anytime soon.andP;  &quot;We haven't built enough distributed systemsto know what the proper constructs for distributed OLTP are,&quot; says Shearson'sDavid Sherr.andP;  Still, Sherr is one of many who are closely watching theefforts of the OSF and others to deliver on the promise of flexibility andscalability of distributed systems.andM;Earlier this year, assumptions about distributed transaction processing werechallenged by the OSF's DCE technology initiative.andP;  DCE goes further thanmost previous technologies supporting distributed OLTP by insisting that anysystem must be totally modular in structure and be portable to a variety ofoperating system kernels, not just Unix.andP;  (See Network Monitor, July 1990.)andO;Modularity promises to ensure that systems, resource management, andcommunications software will evolve to higher function and greater efficiencywithout blowing away applications built on it.andP;  Portability to a variety ofkernels promises application portability.andP;  Ultimately, the user's investmentin applications is protected and extended.andP;  No Environment/toolkits or RDBMSsdiscussed above meet both conditions.andM;Transarc Corporation (Pittsburgh), vendor of the Andrew File System selectedas part of the DCE, has become a leading proponent of the DCE approach forOLTP.andP;  Transarc expects to begin announcing the first products that conformto its DCE-aligned architecture for OLTP in late 1990, with products becomingavailable in 1991.andP;  Transarc also has a strong IBM connection; IBM has anequity investment in the company.andP;  We expect IBM to work with Transarc todeliver a future CICS version for AIX.andM;TRANSARC SOFTWARE ARCHITECTURE.andP;  Transarc's distributed OLTP environment canbe layered atop a variety of operating system kernels.andP;  It incorporates theservices provided with OSF's DCE: threading services, RPC, distributed timeservice, naming services, authentication services, and user and groupmanagement.andP;  Transarc calls these Core Services, and they support a varietyof distributed applications.andP;  (See Illustration 7.)andM;Extended Services.andP;  Atop this distributed services platform, Transarc addsthe following Extended Distributed Systems Services that support OLTPapplication development and management:andM;* Distributed Transaction Service, which coordinates and manages transactionsinvolving multiple processors and shared resources using a 2PC protocolandM;* Transactional RPC, which is Hewlett-Packard/Apollo's NCS with additionalsemantics that describe transactionsandM;* Logging Services, which information needed to recover after a transactionaborts for any reasonandM;* Recovery and Locking Services, which are available for use by a variety ofresource managersandM;* Protocol and Interface Translators, which allow interoperability of OLTPsystems using different protocols (LU6.2, etc.) and interfaces (XA, etc.)andM;* Programming Veneer, which uses C procedures and macros to shield developersfrom the details of transaction management as they build their applicationsandM;Taken together, these services define the components of a transactionmanager.andP;  Transarc plans to call them, collectively, the Transarc Toolkit.andM;Resource Managers, Management, Development Tools.andP;  Resource Managers in theTransarc architecture conform to the X/Open model by accommodating RDBMSs,file systems like C-ISAM and VSAM (as well as Transarc's own Structured FileSystem), and distributed Unix file systems.andP;  Systems management is a bigquestion mark in the architecture because so much work is still to be done todefine utilities in distributed environments.andP;  Transarc hopes the OSF willprovide help in this area with an upcoming technology initiative.andM;At the highest level of the architecture are high-level tools like screenbuilders and CASE environments.andP;  Transarc is developing an applicationdevelopment and run-time environment called the Transarc ApplicationProgrammers Environment.andP;  The environment will provide a screen generator, atransaction monitor library, a security library, and basic systemadministration facilities.andP;  In addition, Transarc hopes to attractthird-party tool vendors to its environment.andM;ConclusionsandM;There are a lot of reasons to be excited about Unix OLTP.andP;  It clearlycomprises a set of technologies that can help businesses solve problems atattractive costs today.andP;  At the same time, however, Unix OLTP technology isvery much in flux.andP;  Vendors and users are struggling to understand how theycan build bigger systems, more powerful systems, and distributed Unix OLTPsystems.andP;  As they do, they're redefining OLTP.andP;  IBM mainframe veterans arehorrified by the thought of exposing OLTP systems to the inquiries of users.andO;Unix OLTP users reply: &quot;Sorry, we need it that way.andP;  Change the rules.&quot;andM;We believe the number of Unix OLTP applications will continue to grow.andP;  Therate of that growth, however, will be determined by the success of vendorsand users in dealing with four issues: system management, integration andoptimization, and standards.andM;System Management.andP;  Transarc is about as bullish as a company can be aboutopen and distributed OLTP.andP;  Yet even Transarc concedes that it will be yearsbefore users have the kind of system management tools they'll need to managelarge distributed OLTP systems.andP;  OSF's next big technology initiative will bein distributed systems management.andP;  Everyone in Unix OLTP hopes OSF finds arobust basket of system management technologies to back--and fast.andM;Integration and Optimization.andP;  Tight integration and optimized interactionsbetween the elements in a system are the keys to reliable performance.andO;Integration and optimization are real challenges in Unix OLTP systems becauseof the number of vendors involved in the typical system.andP;  Today, most systemsare the products of a hardware (and operating system kernel) supplier and adatabase vendor.andP;  Add to this mix a transaction monitor, and the number ofpotential problems goes up.andM;Standards vs.andP;  Innovation.andP;  There's a tug-of-war in Unix OLTP between thosewho believe Unix OLTP needs standards now and those who believe Unix OLTPneeds innovation now and standards later.andP;  The standards agreements needed toopen up Unix OLTP are complex and intertwined.andP;  The fact that the industryhas been able to agree on the XA interface for RDBMS services is a positivesign.andP;  However, we don't expect a full suite of standards to be complete fortwo years.andM;We expect the industry will need three years to sort out these issues.andP;  Inthe meantime, Unix OLTP will appear to be a fertile field to some, anunstable landscape to others.andP;  We don't believe users should preoccupythemselves with the standards fights in Unix OLTP.andP;  Unix OLTP presents realopportunities to deliver quality applications at low costs today, andfunctionality is advancing rapidly.andP;  If you don't take advantage of thetechnology where you can, your competitors will.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> ZF32-185-298 </DOCNO><DOCID>10 533 788  OV: 10 533 778.andM; </DOCID><JOURNAL>PC Week  April 1 1991 v8 n13 p111(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1991.andM;</JOURNAL><TITLE>Gold Hill Inc.: GCLisp Developer 4.0. (Software Review) (one oftwo evaluations of language development tools in 'LISP toolsrefresh GUI development') (evaluation)</TITLE><AUTHOR>Coffee, Peter.andM;</AUTHOR><SUMMARY>Gold Hill Inc's $1,995 GCLisp Developer 4.0 is a programdevelopment software package that allows programmers to developgraphical user interface (GUI) applications with the LISPprogramming language.andP;  The program comes with Gold Hill Windows,which allows developers to use the Microsoft Windows 3.0 graphicaluser interface.andP;  The program development software faces theconstraints of 640Kbytes of real-mode DOS memory and the memoryfragmentation of Windows, creating particular problem for LISPprogramming, which uses long, multi-branched chains of values anddynamic data structures.andP;  It also interferes with Windows'multitasking features and is less flexible than Macintosh CommonLisp.andP;  The documentation is fragmented and some problems exist increating elegant GUI designs, but overall the software is a usefultool for developing Windows applications.andM;</SUMMARY><DESCRIPT>Company:   Gold Hill Inc. (Products).andO;Product:   GCLisp Developer 4.0 (Program development software) (evaluation).andO;Topic:     EvaluationLISPProgram Development Software.andO;Feature:   illustrationtable.andO;Caption:   Vital signs. (table)andM;</DESCRIPT><TEXT>Gold Hill Inc.andM;GCLISP DEVELOPER 4.0andM;Gold Hill's Common Lisp development environment has been pushing the limitsof DOS PCs since its first release in 1984, taking on the challenge offitting a full LISP environment into the 640K-byte straitjacket of real-modeDOS.andM;Until now, each subsequent release has taken full advantage of expanding RAMhorizons, using DOS extenders on the 286 and then on the 386 to allowoutstanding capability.andP;  Sad to say, one result of Gold Hill's latest upgradeis that GCLisp Developer 4.0 has been hamstrung by Windows' segmented memoryarchitecture.andM;Memory segments are anathema to LISP, which thrives on dynamic datastructures and long, multibranched chains of values.andP;  Unlike previous GoldHill Lisp products, which used DOS extenders for full 32-bit access to the&quot;flat&quot; address space of 386 machines' extended memory, the 4.0 release couldnot run an off-the-shelf LISP-based version of the popular OPS5 expert-systemtool, a standard rule-based approach widely available as public-domain code.andO;Discussions with Gold Hill officials traced the problem to memorysegmentation; Gold Hill offered a tricky workaround that changed the errormessage but did not alleviate the problem.andM;Gold Hill's product also serves as a discouraging demonstration of the limitsof Windows' cooperative multitasking.andP;  GCLisp often requires the system'sfull attention, blocking all user operations (such as manipulating windows orswitching to other programs) while a lengthy operation takes place.andP;  With itscompiler, editor and Windows subsystems, GCLisp 4.0 took 10 minutes to loadon a 16MHz 386 with an Enhanced Small-Device Interface disk and 9M bytes ofRAM.andP;  Windows program keys, such as those for switching tasks or even callingup the Task Manager, were ignored throughout this time.andM;In fact, GCLisp proved so voracious that on the 9M-byte test machine (with nodisk swapping), it sometimes chewed up so much RAM that iconized backgroundtasks could no longer be restored to their windows.andP;  On several occasions, infact, GCLisp itself could not run its own Exit function and had to beterminated by closing the whole Windows session.andP;  Plenty of RAM (in the10M-to-12M-byte range), and/or a similar amount of swap space on a fast harddisk, are not excessive for meaningful work with GCLisp 4.0.andM;Gold Hill's environment is full of such annoying booby traps, beginning withinstallation.andP;  The installation program merely unpacks files and createsdirectories, leaving it to the user to select and install one of the modifiedkeyboard drivers included in the unpacked files.andP;  It also requires manualediting of three different text files to control configuration and startupoptions that should all be handled by interactive dialogs.andM;There is considerable interaction between the various options: one earlyattempt at optimizing the configuration produced a system that could not evenload itself, requiring trial-and-error investigation to correct the problem.andO;A more modern approach, configuring under the control of a utility program,would make it possible to warn the user of such dead ends.andM;Within the limits of its previous text-mode platforms, GCLisp has alwaysoffered excellent aids to improve productivity.andP;  For example, the integratedGMACS text editor, derived from EMACS, automatically shows matching open andclosed parentheses, even to the extent of displaying the beginning of a LISPstatement in a message area at the bottom of the screen if that line hasalready scrolled off the top.andM;The new Windows release offers these same strengths, but the developmentenvironment does little to take advantage of Windows' CUA model for providingstandard application functions.andM;Apart from the omission of the standard File and Edit menus for commonfunctions, Gold Hill's interactive windows also lack scroll bars; theinteractive Listener window serves only as a virtual screen, losing materialoff the top as it scrolls, unable to mark and copy even visible text with themouse.andP;  The user can log input by using an editor window and executingexpressions from there, but output appears only in a short-lived minibuffer,precluding users from grabbing output for recombination into new expressions.andM;In sharp contrast to the flexible menu and dialog configuration controls ofApple's Common Lisp, the more limited options of Gold Hill's Lisp areadjusted by editing one of three configuration files.andP;  These are located atdifferent points in a heavily branched tree that starts off with 23 top-leveldirectories and contains a staggering total of 801 separate files.andM;Documentation is likewise fragmented, with four separate wire-bound manuals:User's Guide, GMACS Guide, Reference Manual, and Gold Hill Windowstutorial/reference.andM;Make no mistake, Gold Hill's GCLisp 4.0 offers a fast track to Windowsdevelopment.andP;  The company would do well, however, to learn from the exampleof Apple's Common Lisp, and make the next release of this GUI developmenttool a better demonstration of elegant GUI design.andM;------------------&quot;VITAL SIGNS&quot; DATAandM;Gold Hill Inc.andM;Cambridge, Mass.andP;  (617) 621-3300andM;Privately heldandM;Year established: 1984andM;Number of employees: Not disclosedandM;Gross annual revenue: Not disclosedandM;Gross annual earnings: Not disclosedandM;Source.andP;  Information supplied by company.andM;----------Gold Hill Inc.'s GCLisp Developer 4.0 and Apple Computer Inc.'s MacintoshAllegro Common Lisp 1.3.2 were tested against selected programs, some ofwhich were written for benchmark testing and others that have been adopted bythe LISP community.andP;  All of the benchmarks used are detailed in &quot;Performanceand Evaluation of Lisp Systems,&quot; by Richard Gabriel (MIT Press).andM;Apple's product was run on a Macintosh SE/30, a 16MHz 68030-based system witha 68882 math coprocessor and 4M bytes of RAM.andP;  Gold Hill's was run in the 386enhanced mode of Windows 3.0 on an IBM PS/2 Model 70 386-E61, a 16MHz 386with a 387 math coprocessor and 9M bytes of RAM.andM;From the benchmark results and the analyst scores in this review, theMacintosh Allegro Common Lisp would seem a clear selection for PC Week Labs'Analyst's Choice.andP;  This was not given, however, because these two LISPproducts compete in two separate operating environments.andP;  This review istherefore as much a comparison of the development opportunities to be foundon the Macintosh vs.andP;  Windows 3.0 as it is a head-to-head review of twofundamentally similar products.andM;It's ironic that LISP, one of the world's most abstract ways of developingsoftware, should become such a concrete test for hardware.andP;  LISP has alwaysbeen matched to software's needs rather than hardware's convenience, withprogram and data structures that assume unlimited access to memory and othersystem resources.andM;LISP, therefore, exposes the strengths and weaknesses of processorarchitectures more quickly than most other languages.andM;The Macintosh offers both the greater flexibility of Motorola Inc.'s 680X0processor family -- compared with the awkward restrictions of Intel Corp.'s80X86 -- and the graphical user interface (GUI)-optimized layout of theMacintosh subsystems to surpass the multilayered Windows 3.0 in the tasksthat are most critical to user interaction.andM;Developers are eager to enjoy the market benefits of delivering on both ofthese popular GUI platforms; unfortunately, neither Apple nor Gold Hill hasyet bridged this gap.andP;  Other high-level language products such as DigitalkInc.'s Smalltalk/V will be quick to exploit their products' lead inmultiplatform availability.andP;  -- P.C.C.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-288-284  </DOCNO><DOCID>08 288 284.andM;</DOCID><JOURNAL>AI Expert  April 1990 v5 n4 p28(10)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Diagnostic systems for manufacturing. (using AI to diagnosefactory machinery)</TITLE><AUTHOR>Rowen, Robert.andM;</AUTHOR><SUMMARY>Expert-system diagnostic tools for factory equipment arediscussed.andP;  A deliverable diagnostic system requires sophisticatedquality-control procedures as well as a troubleshooting decisiontree.andP;  Expert systems are built incrementally, and they requireboth a technical and pragmatic knowledge and experience base.andO;Common requirements of a manufacturing diagnostic system include:a preferred sequence of steps; an audit trail; feedback tomanagement and engineering; straightforward maintenance; and easyexpandability.andP;  Obstacles to implementing knowledge-based systemsinclude fear of new technology, incomplete documentation, and thereluctance of human experts to relinquish control.andP;  Controlcharts, flow charts, and ladder logic diagrams are all usefultroubleshooting documentation tools.andP;  The developer can encoderules from a tree through backward chaining, producing a modularsystem that is easy to maintain and provides feedback.andM;</SUMMARY><DESCRIPT>Topic:     DiagnosticsFactory ManagementArtificial IntelligenceExpert SystemsManufacturing.andO;Feature:   illustrationcharttable.andO;Caption:   Capturing the repetitive 20% can make time available. (chart)A troubleshooting guide fragment. (table)The flow chart as decision tree. (chart)andM;</DESCRIPT><TEXT>Diagnostic Systems for ManufacturingandM;Diagnostic expert-system applications predominate in manufacturing.andO;Scheduling and inventory control are understood analytically, butmanufacturing diagnostic systems are understood visually and pragmatically.andO;Machine maintenance and corrective action for product defects are the mostcommon shop-floor domains.andP;  Going from a maintenance map (a troubleshootingtree) to a backward-chaining system is easy, but building the system from themap is only the beginning: a deliverable system takes more than a decisiontree.andM;Diagnosis problems can focus on the parts in production or the machineproducing the assembly.andP;  The benefits of capturing process experience andmaking it available on all three shifts have made knowledge-based tools formanufacturing attractive.andP;  Manufacturing is a rich source of potentialapplications and challenges; emerging patterns reflect the requirements anddiagnostic manufacturing system construction.andM;At first glance, expert-system applications such as design, scheduling,diagnosis, and process planning have clear manufacturing impact.andP;  A closerscrutiny of the shop floor, however, shows that most of these applicationsare managed by engineering, production control, and other site services.andO;Manufacturing productivity can be affected more directly.andP;  The shop flooroffers many opportunities for constructing diagnostic systems using simpletechnology.andM;Processes and machines differ from one industry to the next, but knowledgesources such as maintenance documentation or ladder-logic diagrams aresimilar in most manufacturing settings.andP;  Understanding manufacturingknowledge representations and having a strategy for transforming them intoknowledge-based systems enables the knowledge engineer to constructprototypes and demonstrations.andM;A review of successful knowledge-based systems reveals that the projects hada narrow scope.andP;  Attempting to encompass an entire manufacturing floor with asingle system is too aggressive, particularly for an initial expert-systemproject.andP;  Fortunately, discrete manufacturing consists of distinct,sequential assembly steps.andP;  Each step has a machine or group of machines thatcan benefit from a narrow scope system for maintenance or process control.andM;A single machine or process does not imply a shallow or trivial application.andO;There may be 20 or more identical machines in the entire plant.andP;  Robots, forexample, may have identical electronics, controls, and hydraulics even thoughthey have different uses.andP;  The impact of even a narrowly focusedknowledge-based system can be widespread.andM;Rapid construction of a prototype knowledge-based system helps improvecommunication and retain the expert's interest.andP;  By keeping a narrow focus,the first system can be constructed and delivered in one or two months.andP;  Butthe delivered system will be only the tip of the iceberg: it evolves with theever-changing production environment.andP;  The strategy for building theknowledge-based system should not detract from the deployment and maintenanceof the production-level system.andM;International competition is changing the factory worker's role.andP;  Industriesare placing a greater emphasis on operator participation and decentralizeddecision making.andP;  Knowledge-based systems applications complement this shiftby allowing operators to make preliminary decisions (and take actions) thattraditionally were the responsibility of line-support personnel.andM;American industry is reemphasizing design quality and quality-controltechniques.andP;  These methods, usually grouped under the banner of total qualitycontrol, involve operators measuring quality at their own operations.andP;  Thetotal quality-control methods detect errors early, and knowledge-basedsystems provide an opportunity to guide the operators' responses to thedetected errors.andM;Total quality control also increases communication between line operators andsupporting personnel.andP;  Both groups are experienced in mapping out cause andeffect for process problems during joint sessions.andP;  Knowledge-based systemtechniques can help capture these problem-solving strategies.andP;  Participationby the knowledge engineer in these sessions can help identify or classifyproblem-solving approaches, much as the knowledge engineer would guideone-on-one interviews with domain experts.andM;The support engineer's role is also changing.andP;  Online documentation andgraphical aids are replacing paper documents such as set-up instructions andprocess procedures.andP;  The paper troubleshooting guide, previously supplied byengineering, is now an electronic knowledge-based debug assistant.andP;  Thechanging manufacturing environment is a challenge for the knowledge-basedsystem developer.andP;  The tides of change in manufacturing are flowing toward asmarter set of manufacturing tools; knowledge engineers will either developapplications for this environment or ensure that expert-system functions areincluded with the manufacturing-equipment software.andP;  The ability to createand deploy applications quickly and evaluate vendor offerings in amanufacturing context will be necessary job skills for a knowledge engineer.andM;PROCESS DIAGNOSISandM;Viewing the phenomenon practically, the expert systems are programs.andP;  Eventhough the development approach is nontraditional because of the incrementalbuild method, the developer should not discard lessons about projectmanagement and human nature gathered while installing conventional systems.andO;User involvement is much more important than management edict.andM;The knowledge and experience base that must be tapped for diagnosticapplications is diverse; the knowledge is both technical and pragmatic.andP;  Theexperts are not always in the same group or department.andP;  Engineering supportpersonnel have a deep technical understanding of the manufacturing operation,but the daily execution may have practical or heuristic solutions that theline operators developed.andM;The primary source of diagnostic information will be a document called aprocess procedure or specification.andP;  This document usually is written by theengineering-support personnel for manufacturing and will have atroubleshooting or problem-determination section.andP;  A secondary but probablymore valuable source of information is the work force that performs andsupports the operation.andP;  The engineer who is called in &quot;when the proceduresfail&quot; and the experienced operator whom novices operators approach with &quot;Haveyou got a minute?&quot; are two important knowledge sources.andP;  Both of theseresources know more than the paper procedures contain.andP;  Quality-controlefforts such as quality circles provide a forum for people to express ideas.andO;The interaction between experienced and inexperienced individuals providesexcellent heuristics and approaches for cause-and-effect relationships.andM;A third source of knowledge for a manufacturing-process step is tradejournals and technical conferences; they provide industry-wide opinions andobservations from experienced practitioners.andP;  Trade journals are availablefor most manufacturing domains.andP;  The company's cost is merely the knowledgeengineer's time.andM;For the knowledge engineer unfamiliar with the manufacturing domain, writtenprocedures seem like an obvious starting point.andP;  This approach is incorrect:knowledge sources should be consulted (initially) in reverse order.andP;  Once theknowledge engineer has a grasp of the domain, observing shift crossover andquality-circle meetings will help provide contextual information, such asparticular products that cause difficulties or new equipment plans.andP;  Again,this strategy takes little time.andM;The knowledge engineer should now be able to see the procedure documents in amore realistic light.andP;  While the document (when current) is the most accuratesource of troubleshooting sequence and documented expertise, the proceduresdon't always reflect the problems (context, for example)--they're knowledgebeing discovered.andM;A knowledge-based system must reflect the accepted documented procedures asaccurate.andP;  Incremental systems will be used to capture expertise as groupsdiscover solutions to problems and new equipment comes on line.andM;COMMON REQUIREMENTSandM;Expert-system development and deployment tools can't be ignored, but areoften chosen more for environmental reasons (noise resistance, companypolicy, or existing data-collection networks) than for function or specificrequirements.andP;  A manufacturing diagnostic system has five main requirementstranscending hardware and software considerations:andM;* Steps in a preferred sequenceandM;* Audit trail or journal of stepsandM;* Feedback to engineering and managementandM;* Straightforward system maintenanceandM;* Expandabality without major rewrite.andM;Diagnostic approaches usually have a preferred sequence.andP;  Manufacturing timepressures favor the simple or less-expensive procedure over time-consumingand expensive maintenance actions.andP;  Mechanical failures may not have a quicksolution.andP;  Common problems, however, will be adjustments with a choice ofsolutions.andP;  A knowledge-based system will be expected to follow the &quot;natural&quot;sequence.andM;Problem resolution involves more people as a problem defies solution.andP;  Aftera certain point, the operator will contact maintenance, and maintenance willget engineering involves when another threshold is reached.andP;  An audit trailof actions is necessary because it brings the &quot;added&quot; person up to speed.andM;Not just unresolved problems need to be tracked.andP;  Successful repair actionsstill indicate process disruptions--valuable feedback for engineering andmanagement.andP;  Upper management should review consultation results, bothsuccessful and unsuccessful, for trends.andM;Changes, many of which will be wording rather than logic, will be needed inthe knowledge base.andP;  The affected sections of a knowledge-based system, suchas parameter prompts and output messages, must be easily localized andidentified.andP;  The system should be documented just like any other program.andM;One pleasant source of change is the work force.andP;  Once operators see thesystem in operation, the words &quot;Could we add...&quot; are heard frequently.andO;Expandability (modularity) is essential for manufacturing applications.andP;  Thisrequirement fits well with incremental build strategies common in theexpert-system environment.andM;With the possible exception of a preferred sequence, these requirements arenot significantly different from features expected from a commercialaccounting or business program.andP;  Manufacturing does not negate good softwarepractice.andM;IMPLEMENTATION OBSTACLESandM;Any organization initially resists change.andP;  Because of its association withAI, introduction of an expert system brings some new arguments to the table.andO;User involvement (buy-in) is necessary for success.andP;  Knowledge-based systemsface four obstacles:andM;Reluctance to relinquish control.andP;  Experts are unwilling to surrenderdecision making, so many repair actions end with the words &quot;callengineering.&quot;andP;  A symptom of this problem is the limited time available towork with the knowledge engineer on expanding action steps to includeoperator rather than engineering actions.andM;The first step in combating this obstacle is to stress to the engineer andmanagement that these systems supplement but can never replace the expert.andO;Initially, because of incremental build, use &quot;call engineering&quot; as a stub.andO;Once the system is installed, the stubs can be gradually fleshed out aseveryone gains confidence in the system.andM;With &quot;call engineering&quot; a predominant message, time is still an issue.andP;  Butif engineering support is typical, the 80-20 rule applies.andP;  Engineeringprobably spends 80% of its time solving the same 20% of common problems.andP;  Aska group of experts how many times the same question comes up and watch theirheads nod in agreement.andP;  Then show them a diagram resembling Figure 1.andM;The left and center columns represent business as usual (without aknowledge-based system).andP;  As much as 80% of the available time is taken byonly 20% of the tasks, leaving only 20% of the time for more important andinteresting tasks.andP;  Knowledge-based systems can usually capture that common20% in the first prototype; if the system can be deployed, the engineer willsave time.andM;The numbers are not exact.andP;  Intuitively, the time that's available can beused for projects &quot;we should be doing instead of...,&quot; as shown in the righthand column of Figure 1.andP;  The knowledge engineer should negotiate some ofthat time for knowledge engineering work that expands the &quot;call engineering&quot;stubs.andM;Cause and effect are misunderstood.andP;  This argument is frustrating because asan outsider you can never argue directly with the experts about theirspecialties.andP;  The first approach is to get help statistically.andP;  Often data iscollected for an operation but analyzed by hunch.andP;  Statistical methods canuncover hidden patterns.andM;Using group dynamics through a quality circle or brainstorming session willtrigger empirical heuristics.andP;  These solutions may not be technicallyelegant, but they've probably pulled manufacturing from the precipice morethan once.andP;  These heuristics may be enough to get the initial prototype offthe ground.andP;  The knowledge-based system provides a structure for describingproblem attributes and targeting areas that need further data.andM;Documentation is incomplete.andP;  Engineering is usually painfully aware of thinor incomplete documentation.andP;  Two possible causes come to mind.andP;  First, thereisn't time to update it.andP;  The counterargument is that the system becomes thesupport documentation for troubleshooting; if well-developed, documentmaintenance is easier.andP;  If the knowledge-based system is on a server or hostsystem, the central update of all stations must be easier than updatingdocumentation manually.andM;Second, the documentation is poorly written or ineloquent.andP;  The knowledgeengineer is a system analyst in the classical sense; conducting structuredinterviews with experts or using the knowledge base architecture (tree) as acommunication vehicle will help extract the knowledge.andP;  An imposed structurehelps uncover missing or undocumented areas.andP;  The knowledge engineer has tolearn enough about the domain to ask the right &quot;stupid&quot; questions.andM;Fear of new technology.andP;  Develop a clear presentation that discusses thebasics of expert systems in terms your audience can understand.andP;  Somedocuments in manufacturing are natural candidates for this kind ofpresentation.andM;Pointing out existing applications in the same general area is also a strongselling tool.andP;  This is where a prototype from preliminary discussions can payoff.andP;  By creating a familiar example, much of the mystery can be eliminatedfrom the discussions.andP;  A manufacturing organization is oriented to resultsand concrete examples.andP;  The knowledge engineer's primary goal should be tobuild confidence in the technology as a tool, not to sell it as a panacea.andM;Valid questions concerning payback and risk assessment will be raised.andO;Taking on major projects is risky and a good reason for looking atsmaller-scale projects.andP;  Narrow-scope projects have a high probability ofsuccess and can be launched with limited resources.andP;  Unless you've builtseveral systems, don't force a return on investment or set goals that requiremany people to accomplish.andP;  Use the smaller projects as examples for laterdiscussions.andM;The payback issue, if forced, strongly favors knowledge-based systems.andP;  Mostdocumented successes [1] show a 10-1 (or greater) payback, but no onepublicizes failures.andP;  Payback from deployed systems doesn't guarantee yourproposed system's success.andP;  It still requires business judgment to assess theteam you have assembled and provide an environment for that team tocooperate.andM;REAL-LIFE EXAMPLESandM;Manufacturing diagnostic documents are hierarchical.andP;  Three common forms ofthese documents are troubleshooting guides, flow charts, and ladder-logicdocumentation.andP;  They can be transformed into decision trees that, in turn,can be transformed into rules creating a knowledge base.andM;If you're just starting an expert-system project or have been asked toidentify potential applications, search for these diagnostic documents.andP;  Youwill find that much diagnostic knowledge acquisition has already beenrecorded.andP;  (It just wasn't called a knowledge base 20 years ago.)andM;The following examples are drawn from equipment diagnostic documents.andP;  Theequipment terminology has been modified for teaching, but the structures arereal.andM;Troubleshooting guides.andP;  Many home appliances have owner's manuals.andP;  Even ifyou don't work in manufacturing, you've been exposed to a common form ofmanufacturing document, the troubleshooting guide.andP;  These guides are arrangedby major symptom.andP;  The document writer assumes that users can identify abroad high-level symptom.andP;  Listed adjacent to the symptom will be an orderedlist of remedies, often combined with justifications and causes.andP;  The sameapproach is used for maintenance-procedure manuals.andP;  The symptoms are listedin terms of instrument readings or operator-identified conditions.andM;Table 1 is typical of diagnostic manuals.andP;  The symptom in this case is twoinstrument values, shown as parameters A (PARMa) and B (PARMb).andP;  The symptomcould have been a text description or an alarm-light configuration.andP;  Thelikely cause and repair action are shown.andM;This chart has an implied flow.andP;  For the second half of the example in Table1 the flow is:andM;Since PARMA is [greater than] 12 and PARMb is [less than] 15 Assume cause isLow Agitation 1) Check the air flow  (fix if wrong) 2) Check the valve  (fixif wrong) If still not fixed assume Low pH 1) Check the lab analysisandM;Manufacturing documents suggest procedures or repairs arranged in the orderof likelihood and usually assume the user knows how to &quot;check....&quot;andP;  Thesequence lends itself to a decision tree diagram.andP;  A knowledge base targetedat new operators should be more explicit concerning the &quot;how to check...&quot; andpossibly display correct values for reference.andM;The main symptoms in the troubleshooting guide, such as Table 1, could havebeen descriptions of product defects rather than parameter values.andP;  Suchsymptom-action groupings are an output generated by quality-team efforts.andO;Quality teams often focus on visible manifestations (such as paste smearing)and recommend sequences of adjustments (&quot;check squeegee parallel&quot;).andM;Quality approaches may also include control charts: instead of instrumentreadings, the symptom classes are described by patterns inside and outsidethe control ranges.andP;  In Table 1, this could have read PARMb is below the 15unit control limit.andM;If your manufacturing environment uses total quality-control techniques,control charts are highly visible documents.andP;  Two or three control charts cancreate nine to 27 combinations of variables (each chart can be low, high, orin-spec).andP;  Not all combinations are valid, but enough are possible to beconfusing.andP;  A knowledge-based system can exploit the computer's speed forsorting the combinations and selecting the right symptom for diagnosis.andM;Flow charts.andP;  Troubleshooting guides are similar to rule tables.andP;  [2]  Unlikerule tables, however, guides tend to imply a sequence or set of successivesteps.andP;  You may want to perform a cheaper or quicker repair first and performa potentially expensive or time-consuming one later.andM;The tree form or flowchart form of documentation is another commonmanufacturing format.andP;  It explicitly states both the business practice and alogical approach to debug.andP;  The entry into the flow chart (Figure 2) is stilla defect or symptom the operator can observe.andP;  The path in Figure 2 doublesback on itself when the simple repair fails to accomplish results.andM;When this type of chart is redrawn as a decision tree, the common pointbecomes a phantom node (Figure 3).andP;  Depending on the length of the path(number of nodes), phantom nodes can help reduce the number of premiseclauses in describing later steps.andP;  Two forms of rules would be used inencoding Figure 3:andM;(A) IF defect = 'type C' AND easy C is FALSE THEN phantom 1 is TRUEandM;(A) IF defect = 'type C' AND easy C is TRUE THEN phantom 1 is FALSEandM;(B) IF phantom 1 is TRUE AND hard fix is .......andM;The rules marked (A) handle the top portion of the tree.andP;  Rule type (B) picksup after the phantom node.andP;  In a backward-chaining environment, the &quot;easy&quot;fix would be tried before phantom 1 can be resolved.andM;Ladder-logic diagrams.andP;  Pieces of manufacturing support equipment such as aircompressors or water chillers are purchased from a third party and integratedinto the plant.andP;  The equipment frequently has automatic controls supplied bythe vendor and is documented with ladder-logic diagrams.andP;  Ladder logic isalso a common notation for programming process controllers and electricalcontrol systems.andM;A typical ladder &quot;rung&quot; is shown in Figure 4.andP;  Points A and B are the primarypower rails.andP;  For the motor to have power applied, the contacts of variousrelays must be closed.andP;  This closing is often called the &quot;permissive chain&quot;since the relays are in series to provide an interlock protection function.andM;Maintenance personnel know how to read ladder logic.andP;  The benefit of using aknowledge-based system is to attain a consistent approach.andP;  The system caninclude items such as safety reminders, obvious but easily forgotten checks,and installation (off-print) features such as a remote cutoff orcircuit-breaker locations.andP;  Each pair of contacts on a ladder diagram is apotential parameter in the knowledge base.andP;  The user can be suppliedpositional (or graphical) information as part of the prompting message usedwhen asking for a particular value.andP;  For example, the knowledge-based rulesmay use Boolean values but the prompt may read:andM;Check for power between Terminal 67 and point 85.andP;  Do you have 110 volts?andM;Ladder logic can be transformed into a tree structure reflecting anexperienced technician's debug approach.andP;  The permissive chain of Figure 4can be recast, as shown in Figure 5.andP;  Initial questions check for power ingeneral (B to A) and for a faulty motor (power between C and A but noreaction by the motor).andM;After these two measurements are verified, each set of contacts is examinedleft to right.andP;  Each relay contact represents a major subsystem with its ownladder-logic section showing how the interlock relay is energized.andP;  As eachsubsection expands, the unique actions needed for that function can bedocumented.andP;  There may be additional electrical parameters (such as voltagelevels at the vibration monitor) or visual inspections (oil level or filters)unique to a subsection.andP;  With the ladder as a road map, the knowledge-basedsystem supplied the commentary and guidance.andM;The tree is then converted to rules.andP;  A typical rule might be:andM;IF power rails is true  (Between B andamp; A) AND power motor is false  (Between Bandamp; C) AND Pressure NO ok is false  (Between B andamp; D) THEN symptom is &quot;Somewherein pressure&quot; (build audit trail) AND ESTABLISH Pressure context (diagnosepressure)andM;This rule would apply when power is available but cannot reach the motorbecause the normally open contacts for the pressure relay prevent electricalcontinuity.andP;  Having identified a failing section, the inference engine isdirected toward rules that diagnose the elements of the pressure-relayladder.andM;Encoding rules.andP;  Getting from a tree to a knowledge base can be mechanical.andO;The example rules shown earlier can be generalized to create a strategy forthe rapid construction of a knowledge-based system.andP;  A tree can be describedas having three major parts: decision points (nodes) are connected bybranches (edges).andP;  Eventually, the path along the branches ends with aterminal (leaf) node.andM;Each node in a decision tree (except the terminal nodes) is converted to aparameter or variable in the knowledge-based system.andP;  The parameter may be atrue-false Boolean or take on multiple but explicit values.andP;  The highest nodeof Figure 3 is a tertiary decision.andP;  This node could be a parameter nameddefect that would only take on the values Type A, Type B, or Type C.andM;The next layer of the tree happens to be binary decisions, although not bynecessity.andP;  Interaction with the user is achieved through the promptingmessages associated with the parameters.andP;  A classification question to theuser (such as picking a defect type from a list) is the normal example of anexpert-system question.andP;  In diagnostic systems, action is frequently requiredon the operator's part.andP;  Most equipment is not fully instrumented orautomated.andP;  The prompt may describe the desired action, remind aboutprocedures, and pose a &quot;yes or no&quot; question the operator answers after thedesired action has been performed.andM;Some nodes, such as the phantom node of Figure 3, become parameters but arenever revealed to the user.andP;  The values are set by other rules or proceduresthat allow the knowledge-based system to read instruments directly.andM;The backward-chaining style of an inference engine searches for one or morevalues of a parameter specified as the goal.andP;  The tree leaves are values forthe goal parameter, and one goal parameter may draw on all leaves or a subsetof them.andP;  The knowledge base may cover multiple independent trees, joinedonly at the initial user selection.andP;  For example, the user may select StartUp, Alarm, or Preventive Maintenance from an initial list.andP;  A goal is set toobtain values for Start Up Action, Alarm Action or PM Action, respectively.andM;With names and values decided for parameters, rule writing can proceed.andO;Listing 1 shows a generic structured rule.andP;  Notice the compound THEN clause.andO;The backward-chaining goal {B} is the first clause of the consequent portion.andO;The consequent rule might read THEN Alarm Action is &quot;Repaired.&quot;andM;The premise portion {A} is also compound.andP;  Most backward-chaining engines canexhibit a desired sequence by ordering the premise clauses.andP;  All rules wouldcheck Premise(1) first or ensure a phantom node had been set.andP;  The threerules in the example for Figure 3 have this property.andP;  Each branch of thetree represents a specific value of a parameter.andP;  The path along the treefrom start to a terminal node is a succession of parameter values.andM;The explicit coding of the tree is rather tedious and inefficient, but itmakes system maintenance easier than trying to unwind an elegant but obscurelogic implementation.andP;  Most of the prompts are associated with operatoractions.andP;  Because human action is required, efficiency is measured in minutesrather than real-time milliseconds.andM;Other parameters that can be displayed to the operator or that invoke aprocedure updating an indicator can be set.andP;  A Common requirement is a traceor audit file of attempts.andP;  These can also be satisfied as part of the ruleconsequent, as shown by {C} and {D} in Listing 1.andP;  The audit parameters, ifthey can take on multiple values, can be constructed as the path reachescertain points (phantom nodes).andM;SOFTWARE ENGINEERINGandM;Maintenance of the knowledge-based system should not be neglected.andP;  Thesesystems, once deployed, evolve slowly but are not static.andP;  Changes will occurover long periods of time, so the less relearning needed, the better.andM;Rule-based systems are inherently modular.andP;  An incremental-build approach isparticularly desirable for prototyping or fast delivery, and this approachsuits the environment well.andP;  Building the first system to handle majordefects (the repetitive 20% in Figure 1) should not prevent adding new trees.andO;This flexibility is achieved by putting a multileveled branch or an extralayer of control blocks in the hierarchy's first layer.andM;Parameter and rule names should indicate their area of applicability.andP;  Recallthe examples of the goal names such as Alarm Action or PM Action.andP;  Rules thataffect these parameters may have Alarm or PM as a prefix.andP;  If theknowledge-based system tool can help you name the rules, take advantage ofit.andP;  Imagine maintaining a 500-rule knowledge base with names such asRULE001, RULE002, and so on.andM;Use some form of standard format for advice and displays so the operatordoesn't have to hunt for the requested action.andP;  Always tell the operator whatis expected (for example, a number or a Boolean).andP;  The format also makeswriting rules or parsing trace files more straightforward, particularly asthe system evolves.andP;  Standard formats also make incremental growthtransparent to the operator.andM;Ensure that a form of user feedback is available.andP;  If you can provide aninterrupt capability, great.andP;  If not, ask for comments as a parameter at theend of a consultation.andP;  Users will detect awkward instructions or situationsduring the consultation that the knowledge-based system may not handle.andO;Capture them while they're fresh in the users' minds.andP;  User feedback can alsobe invaluable for meetings with manufacturing management.andM;Finally, like any other program project, the documentation must be completebefore that project can be called a success.andP;  At a minimum, a user manual,backup source system copies, programmer guide, and project report should beavailable to users.andP;  The manual needn't be extensive.andP;  Screen shots,instructions for reading outputs, and how to start, suspend, and exit arenormal documentation items.andP;  The manual can double as a tutorial and a quickreference.andM;Backup copies of the knowledge-based system and the programmer's guide ensureagainst disaster.andP;  A natural disaster for manufacturing affects three or fourgenerations of support engineers.andP;  The fourth person in the chain may haveonly the user document and system access--a more formal plan should beimplemented.andM;A project report may be required for accounting or control reasons.andP;  Thisreport could cover overall architecture and design decisions.andP;  A formalvehicle such as a technical report [3] or memo can place reports in anaccessible library.andM;Reports serve another purpose for new technologies.andP;  Once your application isrunning, other divisions or engineering groups will want to know how it wasdeveloped.andP;  A report can be preparation for a presentation or a takeawayafter discussion; it adds a professional touch to the project.andM;OBJECTIONandM;The structured rule of Listing 1 has two purposes: to give a knowledge-basebuilder a template for going quickly from a tree structure to aknowledge-based system and to ensure that the manufacturing-diagnosticrequirements can be addressed.andP;  The quick transformation of typicalmanufacturing documents to a tree and then to a knowledge-based system isnecessary for generating a timely prototype.andP;  Fast response to constructing aprototype can help retain an expert's attention.andP;  Rules built along theframework of Listing 1 can also be used as a communication vehicle to helpremove AI's &quot;mystery.&quot;andM;The structured rule accounts for an audit parameter.andP;  Software-engineeringpractices allow easy maintenance, particularly if rules have a predictableform with meaningful names.andP;  Using a premise with multiple explicit clausesallows for preferred sequences.andM;The team constructing a knowledge-based system is a focal point for diversedocuments; mapping the procedures into trees helps uncover nondocumentedprocedures as well as missing branches.andP;  This effort is valuable in itself ifthe structure used is simple and easily expressed.andM;The operative word is &quot;team.&quot;andP;  No individual has all the answers in amanufacturing environment: skills and knowledge are spread across functionsand shifts.andP;  Group dynamics and the interpersonal skills of the knowledgeengineer will be key factors in the manufacturing expert system's success.andM;The typical manufacturing floor has dozens of opportunities for diagnosticsystems using knowledge-based paradigms.andP;  The impact on the business may notbe as large as projects supporting engineering functions, but directmanufacturing applications can enhance quality and machine utilization.andM;Equipment or process applications are excellent small-scope projects.andP;  Thenarrow domain helps keep the project focused, which means it's a good areafor initial projects--the project type that &quot;learns&quot; the technology.andP;  Theconsequent experience will make more challenging projects less risky.andM;REFERENCESandM;[1] Feigenbaum, E., P. McCorduck, and H. Nii.andP;  The Rise Of The ExpertCompany.andP;  New York, N.Y.: Times Books, 1988.andM;[2] Braun, R. &quot;Expert System Tools For Knowledge Analysis,&quot; AI EXPERT (Oct.andO;1989): 22-29.andM;[3] Langehennig, R.S., and R.B.andP;  Rowen.andP;  &quot;A Knowledge Base For Wave SolderAssistance.&quot;andP;  IBM Technical Report TR 51-0474, Unclassified, Aug. 1988.andM;Robert Rowen is an advisory systems analyst in the manufacturing-engineeringfunction at IBM, Austin, Texas.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-238-546  </DOCNO><DOCID>08 238 546.andM;</DOCID><JOURNAL>Computer Language  March 1990 v7 n3 p27(3)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>The information model: new life for an old paradigm.andO;</TITLE><AUTHOR>Keuffel, Warren.andM;</AUTHOR><SUMMARY>Use of information modeling as a preliminary or concurrentextension of the data-flow diagram (DFD) approach to systemsanalysis is discussed.andP;  A number of information resources arecited, including books by Matt Flavin, Stephen McMenamin and JohnPalmer, and Sally Shlaer and Stephen Mellor.andP;  Information modelingdiffers from DFD modeling in terms of focus; where DFDs focus onthe processing of data, information modeling focuses on the dataitself.andP;  Combining the two approaches allows the analyst to learnmore about the rules governing functions of an enterprise,provides completed ERDs and an information-model dictionarycontaining much of the information needed for thestructured-specification data dictionary, and ensurescross-linking of the ERD and DFD.andM;</SUMMARY><DESCRIPT>Topic:     Systems AnalysisData Flow DiagramsInformation TheoryTutorial.andM;</DESCRIPT><TEXT>The information model: New life for an old paradigm How can you be sureyou've done the most thorough analysis possible before going on to design anew system?andP;  If you were schooled in the DeMarco method [1] you were taughtto analyze the flow of data through a system.andP;  If you're a real old-timer,you learned to model the current physical system before constructing a newlogical system.andP;  (If you're a practicing analyst, you've probably discoveredthe perils of the &quot;current physical tar pit&quot; and are no longer spending muchtime modeling the current physical system.)andM;You began by defining the system's boundaries: you identified the objectsthat lie outside the system's domain but provide inputs to or receive outputsfrom the system, and you labeled them &quot;sources&quot; and &quot;sinks.&quot;andP;  You drew alarge bubble to represent the domain of your new system and showed flows fromthe sources into the bubble and flows out of the bubble to the sinks.andP;  Youlabeled this the &quot;context diagram.&quot;andM;Then you drew a top-level bubble chart and a data-flow diagram (DFD) showingthe major functions of your new system and you began to decompose these majorprocesses into more primitive processes until you were satisfied you hadarrived at the point where each process could be described in a one-pageminispec.andM;If this scenario sounds familiar, you're not alone.andP;  It's the way thousandsof programmers and analysts learned structured analysis.andP;  But it has oneproblem: it's wrong.andP;  It's not totally wrong.andP;  A great deal of goodness isstill left in the old method.andP;  But leading practitioners of systems analysisnow feel that DFDs focus the analyst's and user's attention on details thatonly address part of the requirement.andM;DFDs are symptomatic of a disease to which many programmers are susceptible:the tendency to view the world in terms of programs processing data.andP;  Afterall, much of the world's computer power is used for data processing.andP;  Butanother world view, the data view, has stayed the domain of a small group ofcognoscenti, dominated by mainframe data administrators and a few academics.andO;This data-oriented view--commonly known as information modeling--has beengiven short shrift by programmers because it is all too frequently hyped,especially by those who utilize James Martin's methods.andP;  [2]andM;To give credit where it is due, Martin has done the most to popularizeinformation modeling as part of his information-engineering method.andP;  In thisregard, he serves the same function for information modeling as EdwardYourdon has for the structured analysis community.andP;  But where Yourdonemphasizes flexibility and recommends several methods as equally viable pathsto the ultimate goal, Martin's books and lectures emphasizes informationengineering as the only sure road to success.andM;Because information modeling was closely identified with Martin andinformation engineering, it has been slow to emerge as a viable method in itsown right.andP;  Few good books were written about the techniques, outside of theMartin series.andP;  One of the most comprehensive, Matt Flavin's FundamentalConcepts of Information Modeling, [3] suffers from the nearly terminaldisease of having been written by a mathematician as a dry, semi-academicmonograph.andP;  Most analysts familiar with Flavin's work describe it as abrilliant exposition of the fundamental tenets of the method.andP;  But in thesame breath, these analysts counsel neophytes to plan on reading Flavin'swork at least three times before expecting to understand his message.andM;Information modeling did not get the explanation it deserved in StephenMcMenamin and John Palmer's Essential Systems Analysis [4] or Yourdon'sModern Structured Analysis.andP;  [5]  Two writers who finally gave the structuredanalysis community a decent treatment of information modeling are SallyShlaer and Stephen Mellor, authors of Object-Oriented Systems Analysis:Modeling the World in Data.andP;  [6]andM;Shlaer and Mellor advocate an ERD technique quite different from thosedescribed earlier by Peter Chen and Martin.andP;  The explanation of data-orientedanalysis is much more lucid and intuitively grasped than Flavin's.andP;  WithShlaer and Mellor under your belt, Flavin is much more digestible.andP;  Shlaerand Mellor advocate a systems analysis paradigm intended to replacestructured analysis rather than augment it.andP;  However, I have found theirmethods to mesh nicely with structured analysis methods.andM;Which diagramming technique should you adopt?andP;  I favor Shlaer and Mellor'snotation because of its simplicity, but many CASE tools do not support it.andO;Most of the CASE tools I'm familiar with provide support for the classic Chennotation or a close variant.andP;  However, several companies have announced plansto support Martin and Shlaer and Mellor notation in future CASE releases.andM;Why is the data-oriented view of information modeling necessary in additionto the process-oriented view of DeMarco-style structured analysis?andP;  Aprocess-oriented view of a system always focuses on how data moves through asystem.andP;  Little in the process-oriented method encourages the analyst tofocus on high-level business policy.andP;  However, a data-oriented view of anenterprise by its nature focuses the analyst's attention not only on what thedata is, but why.andP;  Two examples drawn from DeMarco's and Flavin's works maydramatize the differences in paradigms.andM;In Structured Analysis and System Specification, DeMarco describes the finalresult of analysis, the structured specification, as consisting of:andM;* DFDs showing the major decomposition of function and all the interfacesamong the pieces.andM;* The data dictionary, which documents each interface flow and data store onany of the DFDs.andM;* Transform descriptions that document the internals of the DFD processes ina rigorous fashion (usually through the use of structured English, decisiontables, and decision trees).andM;The data-dictionary entries in the structured specification, if entered asDeMarco suggests, provide documentation for aliases and the composition offlows.andP;  The data dictionary provides information about the values any dataelement may legally have and possibly the meanings for each value.andM;Contrast the minimal information found in the structured specification datadictionary with the data dictionary maintained using Flavin'sinformation-modeling method.andP;  Flavin recommends that analysts obtain thefollowing information for an object type component in the data dictionary:andM;* NameandM;* DefinitionandM;* PurposeandM;* PropertiesandM;* System effectsandM;* Object effectsandM;* AssociationsandM;* Data contentandM;* Data structureandM;* Base or dependent segmentandM;* Unique identifier attributesandM;* Allowable operationsandM;* And operation (preconditions and postconditions)andM;* Delete operation (postconditions)andM;* Update operation (preconditions and postconditions)andM;* Data dependencies.andM;My objective this month is not to show you how to draw an ERD or populate adata dictionary.andP;  Rather, I want to lay the foundation for several futurecolumns that will discuss aspects and philosophies of information modeling.andO;I'm not advocating the abandonment of our beloved bubble charts.andP;  DFDs haveserved, and will continue to serve, a very useful role in analysis.andP;  However,by using the strengths of information modeling as a preliminary step priorto, or concurrent with, the structured specification DFD development phase,we achieve three objectives:andM;* By first focusing on the data of an enterprise in terms of documentingentities and relationships, we can learn much more about the rules by whichan enterprise functions.andP;  These rules can help us avoid making incorrect andunwarranted assumptions about the data that might be more easily overlookedwhen employing a function-oriented DFD approach.andM;* The information modeling phase of analysis results in completed ERDs and adata dictionary.andP;  Most analysts view ERDs and DFDs as mutually complementaryviews of the same data.andP;  The information-model data dictionary provides much(but not all) of the information required for the structured-specificationdata dictionary.andM;* Every primitive object on the ERD is by convention required to appear atleast once on the DFD.andP;  This cross-linking of the ERD and DFD serves toprovide an additional consistency check on the integrity of both documents.andM;Shlaer and Mellor identify in Object-Oriented Systems Analysis anotherimportant benefit of information modeling: &quot;An information model is athinking tool used to aid in the formalization of knowledge.andP;  It helps uswork out how we want to think about a problem, the terms we need to define,the assumptions we make in selecting those terms, and the consistency of ourdefinitions and assumptions....The [information] model provides a place tohang the large volume of information which would previously have inundatedthe analyst.andP;  In addition, the formal and systematic nature of the model actsto expose inconsistencies and gaps, thereby guiding the inquiry.&quot;andM;Many of the concepts I've mentioned this month were discussed at great lengthin first 10 weeks of the Software Engineering Study Group that Rich Cohen isleading in the CLMFORUM on CompuServe.andP;  Although the group has finished itsformal discussion of information modeling, other excercises will provideparticipants with opportunities to use information-modeling techniques.andM;REFERENCESandM;[1] DeMarco, Tom.andP;  Structured Analysis and System Specification.andP;  New York,N.Y.: Prentice-Hall, 1979.andM;[2] Martin, James, and Joe Leben.andP;  Strategic Information PlanningMethodologies.andP;  New York, N.Y.: Prentice-Hall, 1989.andM;[3] Flavin, Matt.andP;  Fundamental Concepts for Information Modeling.andP;  New York,N.Y.: Prentice-Hall/Yourdon Press, 1981.andM;[4] McMenamin, Stephen, and John Palmer.andP;  Essential Systems Analysis.andP;  NewYork, N.Y.: Prentice-Hall/Yourdon Press, 1984.andM;[5] Yourdon, Edward.andP;  Modern Structured Analysis.andP;  New York, N.Y.:andO;Prentice-Hall/Yourdon Press, 1989.andM;[6] Shlaer, Sally, and Stephen Mellor.andP;  Object-Oriented Systems analysis:Modeling the World in Data.andP;  New York, N.Y.: Prentice-Hall/Yourdon Press,1988.andM;Warren Keuffel lives in Salt Lake City, Utab, and is a programmer for UnisysCorp. Contact him on the COMPUTER LANGUAGE forum on CompuServe, where he isthe sysop of the ToolWorks section.andP;  His ID is 76702,525.andP;  You may also reachhim by writing COMPUTER LANGUAGE, 500 Howard St., San Francisco, Calif.andO;94105.andO;</TEXT></DOC>
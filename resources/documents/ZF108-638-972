<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-638-972  </DOCNO><DOCID>08 638 972.andM;</DOCID><JOURNAL>PC User  June 20 1990 n135 p89(4)* Full Text COPYRIGHT EMAP Business andamp; Computer Publications(England) 1990.andM;</JOURNAL><TITLE>The generator game. (Software Review) (Layout 2.0, IntuitiveSolutions/2, Applications Manager object oriented applicationgenerators) (evaluation)</TITLE><AUTHOR>Dallas, Karl.andM;</AUTHOR><SUMMARY>Three object-oriented application generators are reviewed: MatrixSoftware Technology's Layout 2.0; Intuitive Systems' IntuitiveSolutions/2; and Intelligent Environments' Applications Manager.andO;Layout is a basic 169-pound sterling package requiring only DOS3.0 or higher system software.andP;  It provides its own windowingsystem and can generate stand-alone .EXE files or C, Pascal orQuickBasic code via a simple 'flow chart' system.andP;  IntuitiveSolution/2 (IS/2) and Applications Manager are both designed torun under OS/2 Presentation Manager; Applications Manager takesadvantage of the capabilities of PM version 1.2.andP;  IS/2 lets usersbuild, script, re-arrange, and execute applications and createmulti-level databases, but it is difficult to use.andP;  It sells for1,250 pounds sterling.andP;  Applications Manager is a high-end packagethat supports SQLbase and OS/2 Extended Edition.andP;  It generatesmodules that can be run as run-time applications with a simplecommand-line switch.andP;  The Applications Manager programmingtechnique is complex and somewhat unusual, but is extremelypowerful once the user masters its steep learning curve.andO;Applications Manager costs 695 pounds sterling for a stand-aloneversion and 5,000 pounds sterling for a professional developmentsystem.andM;</SUMMARY><DESCRIPT>Company:   Intuitive Systems (products)Matrix Software Technology Corp. (products)Inelligent Environments (products).andO;Product:   Layout 2.0 (Program development software)Intuitive Solutions 2 (Program development software)Applications Manager (Program development software).andO;Topic:     Object-Oriented ProgrammingCode GenerationProgram Development ToolsEvaluation.andO;Feature:   illustrationtable.andO;Caption:   User verdict. (table)andM;</DESCRIPT><TEXT>The generator gameandM;The buzzwords are coming together.andP;  Terms like hypertext, OOPS(object-oriented programming systems), CASE (computer-assisted softwareengineering) and 4GL (fourth generation language) aren't mutually exclusive,and since they all refer to techniques which are at the sharp end of softwaredevelopment, it's hardly surprising that they're beginning to combine andflow into each other.andM;The notion of 4GLs has been with us the longest.andP;  These provide a means ofaccessing data which doesn't require users to be hardcore data-processingprofessionals.andP;  Initially, a 4GL usually meant a natural language interface,but it's actually more than that.andM;Technically speaking, a 4GL is an automatic coding device that allows thecomputer to actually write the program, so users doesn't have to bespecialists in its language and syntax.andP;  It's usually possible to debug thecode on the fly, so errors appear at a very early stage.andM;CASE is related to 4GL, with the proviso that 4GLs are usually (but notexclusively) used for accessing databases.andM;OOPS is very much associated with windowing interfaces, but its associationwith high-level languages like C++, SmallTalk and the latest version of TurboPascal shows that it doesn't merely apply to creating graphics objects.andO;Anything can be an object, from a procedure represented by lines of code toan entire C library.andM;For instance, in Matrix Layout, one of the least expensive and in many waysthe most interesting of the 4GL-OOPS-CASE programs around, there's a wholeclass of objects called black boxes.andP;  These can be used to access specialfacilities, such as procedures for accessing dBase files, or for driving anexternal device such as a modem.andP;  Both Intuitive Solution/2 and ApplicationsManager have facilities for accessing external objects.andM;One remarkable thing is that Microsoft, as one of the main protagonists ofobject-orientation via its Windows and OS/2 operating environments, has madeno concession to OOPS in the tools it supplies for the development ofapplications.andM;Writing applications for Windows is a real pain, and it's been left to thirdparties like Henley Business Software (SQLWindows) and Whitewater (Actor) touse OOPS techniques to minimize the sheer aggravation of programming forWindows.andP;  OS/2 is even tougher, and anyone who has struggled through thecomplexity of the official Software Development Kit can have no doubts aboutthe reason for the scarcity of developed software.andM;This is changing, however, with a new generation of applications generatorswhich use the techniques of OOPS, 4GL and CASE -- not forgetting hypertext --to create viable software.andP;  But the fact that most of them are particularlyrelevant to the OS/2 environment shouldn't lead us to conclude that they'venothing to offer the world of DOS.andP;  Indeed, one of the most interesting isactually the cheapest and it is aimed at precisely that world.andM;LayoutandM;Layout is a remarkably low-priced applications generator with its ownwindowing system -- although versions running under Windows and OS/2Presentation Manager are promised during the coming 12 months.andP;  Using a verysimple 'flowchart' system, it can be used to generate stand-alone .EXE filesor high-level language code in either C, Pascal or QuickBasic.andP;  Externallibraries in any of the supported languages can also be accessed as 'blackboxes'.andM;A dBase black box is due to ship free to registered users very soon -- I'veseen a beta version and it works.andP;  A communications box is also in thepipeline.andM;A black box is just a particularly powerful object that can be incorporatedinto any program.andP;  It's possible to write it elsewhere, in either C,QuickBasic or Pascal, or to use the program's own facilities to create it.andO;This makes more sense, since the whole point of Layout is to cut through themystique of programming.andP;  The program also includes a facility to writehypertext-based help files.andM;Unlike other code-generating programs, which sometimes require users tointervene by writing certain sections of code, users of Layout don't need tolook at any code whatsoever.andP;  Everything is done using a graphical interface:a procedure to draw a window on the screen is generated by drawing therequired window and so on.andM;If you want to tweak the code, it would be necessary to do this via a normallanguage editor like Microsoft C or Turbo C (both flavours are supported) andto link and compile it in the usual way.andP;  However, while programmers may findthis an interesting exercise, average users will no doubt go direct toproducing an executable file, which can then be used in stand-alone mode --almost.andM;The almost is because every Layout-generated program looks for a programcalled MATRIX.COM at the time it runs, and won't run without it.andP;  Thisprogram actually chooses the appropriate video system in use.andP;  A number ofscreen-driving programs are included, with such obvious names as CGA.COM,MCGA.COM, VGA.COM and so on.andM;The appropriate version must be renamed MATRIX.COM for all to be fine.andO;There's no run-time licence as such, so if you create a marketable programusing Layout, you can distribute it with the appropriate version ofMATRIX.COM with Matrix' compliments.andM;One of the things that really impressed me about Layout is that such programsusually recommend that you plan your program design with pen and paper beforesitting down at the computer, but Matrix positively discourages thisapproach.andM;&quot;There's no point in using pencil and paper and wasting your time drawingendless pictures,&quot; says the manual.andP;  &quot;In the end, you'll find yourselfredrawing and retyping everything inside a Layout flowchart anyway.&quot;andP;  And youcan believe me, that's true.andM;A bonus of the flowchart way of working is that it's possible to take aprocedure, either from one of the supplied example files or from your ownprevious work, turn it into a black box and incorporate it into a newprogram.andP;  You don't have to keep re-inventing the wheel.andM;You could also take the recently shipped Paradox Engine, for instance, andcreate a black box to access Paradox files and use its query-by-examplefeatures.andP;  A similar technique could be used to grab any useful subroutine inany program for which you have the source code (many are available viaelectronic bulletin boards or shareware).andM;The program comes with a useful hypertext-based help file generator.andO;Creating the help files is a little less intuitive than the rest of theprogram -- simple codes have to be included to indicate things like pageing,and there's no built-in text editor.andM;Helpmaker, as the file generator is called, could be used for creatingregular hypertext documents.andP;  It would also be possible to create a regularhypertext program inside a main Layout flowchart, using the various buttonsavailable to provide user-defined navigation through the text.andM;Layout is a very effective and powerful program.andP;  I can't wait for theWindows and OS/2 versions.andM;Intuitive Solution/2andM;Until the arrival of Layout for OS/2 and Windows, there are at least twoother OOPS-based applications generators for the OS/2 environment.andP;  These areboth more difficult to use than Layout, but they offer powerful extrafacilities like access to SQL and DDE.andM;Intuitive Systems has been in the OOPS/CASE world for longer than most.andP;  Thecompany's original Intuitive Solution was a remarkable DOS product at a timewhen graphical user interfaces were barely beginning to appear on desktopscreens.andP;  In those pre-OS/2 days it received the accolade of being marketedunder IBM's own brand name.andM;But IS/1 (as we will now call it, to distinguish it from the new IntuitiveSolution/2 for OS/2) suffered the fate of all pioneers.andP;  For a start, it useda non-standard interface.andP;  Although brilliantly conceived, and in many wayssuperior to either Windows or GEM, it was a strike against it at a time whenthe entire trend was towards standard looks and commands.andP;  Nevertheless, manythousands of copies were sold, and it was taken up with enthusiasm in thecorporate computing world.andM;The new product avoids such maverick behaviour, by and large (albeit with acouple of exceptions which are no more than minor irritations).andP;  It runsunder OS/2 PM, either version 1.1 or 1.2, and uses the standard interface99.9 per cent of the time.andM;That odd 0.1 per cent concerns the behaviour of the mouse.andP;  To resize or movean object in an Intuitive Solution/2 window (called a form throughout theprogram), you have to press and hold down the right button, not the left.andO;Intuitive Systems tells me this isn't its fault but PM's, but other OS/2programs don't seem to suffer in the same way.andM;Also, to edit text in an object you don't just click within it: this merelyselects the object.andP;  You have to press the F12 function key to get at thetext.andM;I spotted a minor discrepancy between the manual and actual practice withtext editing -- not unusual at this early stage of a still-developingproduct.andP;  The manual says you can select a group of characters and changetheir font individually.andP;  This isn't so; you have to stick to a single fontthroughout a particular object.andP;  To place a heading in 24pt above 10pt text,say, you'd have to create the heading as a separate object.andM;However, you can link objects together so that they move as an ensemble, forinstance, when resizing a form.andP;  Also, the font change won't happen until youclick outside the object to de-select it.andM;There's one final quibble: when you make any changes to an object, the entireform disappears momentarily, which is a bit alarming until you get used toit.andP;  It then reappears, in modified form.andP;  The whole process takes about asecond.andP;  This only happens, by definition, when modifications are being made,and shouldn't throw skilled developers.andP;  It wouldn't happen to ordinaryusers.andM;Although none of the IS/1 forms can be used in IS/2, the script language isbroadly upwards-compatible, except that some functions may have been changedto take advantage of the greater capabilities of OS/2.andP;  For instance, theINVOKE function for utilizing a form now takes two parameters instead of one.andO;As OS/2 permits multi-threading, it's possible to use the same form more thanonce, so the first parameter is a unique name given for that particularutilization, and the second is the form filename.andM;The program comes with some valuable example files including an invoicingsystem, a banking system for checking overdrafts on a daily basis (gulp!), amulti-threaded 'traffic lights' application to demonstrate how OS/2 cancontrol two separate processes independently and a database of musical tunes,in which the notes are indicated by typing in a text-based series ofcharacters.andM;There are four levels of user involvement: executing, re-arranging, building,and scripting.andP;  The fourth level allows users to dismantle a scriptassociated with a form, while building restricts user intervention tochanging appearance, using drawing tools and inserting new objects from thesystem's object library.andP;  Rearranging allows things to be moved around,without changing the way the form works.andM;When users change from scripting to executing, the script associated with itis compiled automatically and any errors are displayed.andP;  There's also adebugging option, and it's actually possible to hide the User Level menuoption from users.andM;Once scripting has been engaged, users can place a number of pre-definedobjects onto a form from the Build menu.andP;  These consist of panels for text ornumbers, push button, radio button (or radio button set), check box, listbox, scroll bar and picture.andP;  The latter displays graphics files in the PCXformat.andM;However, when an object has been placed, no appropriate code is placedautomatically into the associated script.andP;  This must be written by users.andM;For instance, a button to load up a form will take the format: PROCESS FORbutton INVOKE &quot;form1&quot;, &quot;form.frm&quot; ENDPROCESSandM;where 'button' is the name of the button, 'form1' is the name to be used inthis procedure and 'form.frm' is the filename of the form to be used.andP;  If thecommand SLEEP is added to the end of the procedure, the calling form will behidden.andP;  On closing the called form, the calling form must be 'woken up';otherwise it will remain hidden from users.andM;Creating a database is a multi-level activity.andP;  First, the data dictionarymaintenance form must be used to define the fields, which can be tagged 'S'(string), 'F' (floating point), or 'I' (integer).andP;  Indexed fields can benumbered from 1 to 99, and the index length for string fields can also bespecified (default 10 characters).andP;  Each field must then be defined as anobject in a blank form.andP;  Field names and object names must be identical andcase is sensitive, so StreetName isn't the same as Streetname.andP;  The objectscan then be placed on a form for accessing, viewing or updating the data.andM;As supplied, the program is intended for stand-alone operation, although SQLand DDE procedures are available for multi-user or network access of remotedatabases.andP;  There's an SQLUTIL allowing IS/2 to access the SQL server vianormal script expressions.andP;  Also, the XCALL verb, permitting external calls,can be used with the SQL.DLL dynamic link library file to send SQL statementsdirectly to the server.andP;  The database environment can be set to SQL to accessthe SyBase server.andM;The level of documentation provided by Intuitive Systems is usually veryhigh.andP;  At the time of working with the program, I had a very good referencemanual for script commands but no user manual, although I received somephotocopies of part of the tutorial.andM;Consequently, I found it quite difficult to use, especially since theprogram's on-line help system wasn't yet fully functional.andP;  However, withreverse-engineering on the example files I was able to develop some quiteinteresting applications.andM;Applications ManagerandM;Like IS/2, Applications Manager runs in the OS/2 environment.andP;  Unlike IS/2,however, which runs equally well in editions 1.1 and 1.2 of PresentationManager and takes advantage of the later version's capabilities if they'reavailable, different versions of AM exist for OS/2 1.1 and 1.2.andP;  The packagesalso differ in their mode of execution.andM;With IS/2, forms are created and then procedures are associated with them; inAM, though, procedures are created followed by the forms used by theprocedures.andM;For instance, to set up a simple program to choose a number of options andcalculate a price, an array of variables would be created with the formatvariable [n], where [n] is the subscript of the array element.andP;  Stringvariables carry a dollar sign thus: variable $[n].andP;  A form would then bepainted, with input and output fields and a pushbutton.andP;  A list box wouldthen be associated with the variable name by typing variable [#] into the'expression' field.andM;The program monitors each entry that's typed.andP;  For instance, when assigningvariables -- which require ':=' rather than '=' - if the colon is omitted,the program bleeps and the error message 'expected:' is displayed.andP;  This isobviously better than waiting for the error to emerge at debug or trace time.andO;It would then be possible to run the program, even if it hadn't been saved.andM;This approach will appeal to programmers who're looking for a structured wayof writing code rather than something which takes over completely.andP;  As aguide to the general shape of the program, it's possible to display it ingraphical or outline form.andM;However, the actual coding is handled by AM and never needs to be seen by theprogrammer.andP;  So, while users need to understand something about such mattersas variables or arrays, it's the act of choosing menu options that writes thecode.andM;The program also maintains dictionaries of procedures and rules, variables,arrays and tables, and functions, which can then be pasted into the currentprocedure.andM;It's possible to extend the capabilities of the program by writing new'interfaces' in C.andP;  The manual explains how to do this.andM;Another important distinction from IS/2 is that AM is really intended foreither OS/2 Extended Edition or for use with the Microsoft/Ashton-TateSQLbase.andP;  Applications Manager has no facility for accessing a local SQLdatabase such as is supplied, for instance, with SQLWindows or SQLvision, orwhich IS/2 offers in conjunction with its SQL procedures.andM;On the other hand, AM's SQL interface, which consists of a set of high-levelfunctions for IBM's Database Manager, is specifically tailored for use withremote databases.andP;  AM 2.2, which is designed for OS/2 EE 1.2, utilizes theRemote Data Services facility of that edition to access remote databasesentirely transparently to the AM application.andP;  Since I was using AM 2.1 (withOS/2 1.1), I was unable to check this facility.andM;However, each AM module contains its own variables, arrays and tables ofdata, allowing it to be run locally without OS/2 EE or any other SQL databasebeing available.andP;  The example tutorial uses this mode of execution.andM;No example files are supplied, but the tutorial is well documented and takesnovice users through the design of an entire application.andM;AM data is held using its own unique structures, so there's no facility forexchanging data with other programs except via the DDE process (supported byExcel and 1-2-3/G but not 1-2-3 Release 3 or Paradox-OS/2).andM;Of course, it would be possible for users to copy and paste data via the OS/2clipboard, but not if the application has been designed in such a way as tomake OS/2 functions transparent, which is likely.andM;AM modules can be run as run-time applications if they carry a '/r'command-line switch.andP;  In this case, users won't be able to modify the codewhile accessing the data.andM;The AM documentation is very thorough, and comes with a comprehensivereference manual of the various parts of the program, such as the formspainter, the action-bar and so on, and there are also detailed manuals on SQLand DDE communication.andM;The reference manual isn't indexed by command, but breaks down the codingprocess under various headings -- action bar, forms painter and the like --and shows how the pull-down menus and dialogue boxes are used in each case.andM;The programming technique is very interesting.andP;  For instance, there's noconditional statement (if ...andP;  then ...andP;  else) as such.andP;  If a line of codefails and it's followed by a line beginning OR, then the second line will beexecuted.andP;  If the first line succeeds, the second line will then be ignored.andO;However, if the second line begins AND, it's executed only if the first linesucceeds.andM;Like IS/2, AM is a working environment that will reward careful study andworking through all the supplied examples.andP;  It's not for the faint-hearted,however: it won't enable complete novices to write new applications in thevery first afternoon.andM;ConclusionandM;None of these programs claims to make all other software obsolete like thelegendary Last One, but all three make life easier for the creativeprogrammer -- depending on your level of expertise.andM;Layout isn't only cheap and cheerful -- it's remarkably powerful for itsprice and it could be used by someone trying to get to grips with ahigh-level language, as it provides understandable code which has alreadybeen debugged and run.andP;  It's a serious product, worthy of comparison withsome costing 10 times the price, and yet it offers sophisticated functions.andO;It can also be used as an excellent front-end for DOS, using up about 92Kb ofmemory if it's shelled out.andP;  It can be used easily without a mouse.andM;The other two packages are addressed to the OS/2 development environment, andwhich one you prefer will depend on your chosen method of working.andP;  AM isparticularly slanted towards the Extended Edition area, although both supportSQL.andM;My preference leans towards IS/2, but I suspect this is probably because ofmy previous experience of IS/1.andP;  My advice to any serious developer would beto evaluate them both.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-071-244  </DOCNO><DOCID>07 071 244.andM;</DOCID><JOURNAL>Data Based Advisor  March 1989 v7 n3 p30(4)* Full Text COPYRIGHT Data Based Solutions 1989.andM;</JOURNAL><TITLE>Objective thinking. ( object-oriented computer programming)</TITLE><AUTHOR>Watterson, Karen.andM;</AUTHOR><SUMMARY>Object-oriented programming focuses on what needs to be done andlets the object decide on how to do it, while traditionalprogramming focuses on how a given task is done and in what order.andO;Objects are often referred to as encapsulated operands thatcontain data and the procedures to manipulate it.andP;  In the broadsense many applications generators are object-oriented.andP;  Thefuture will see more object-oriented links between expert systemsand data bases.andM;</SUMMARY><DESCRIPT>Topic:     Object-Oriented LanguagesObject-Oriented Data BasesProgramming.andM;</DESCRIPT><TEXT>Objective ThinkingandM;The headlines announce: &quot;Object-Oriented Programming Arrives,&quot; &quot;IBMEmphasizing Object-Oriented OS/2 Interface,&quot; &quot;Object-Oriented Tools Speed UpDevelopment.&quot;andP;  Steve Jobs' NeXT system and Hewlett-Packard's NewWave willreportedly include &quot;object-oriented development tools.&quot;andP;  What's thisobject-orientation all about?andP;  Why should database designers worry about it?andO;Let's start by looking at what object-oriented programming is and go fromthere, probing the broad conceptual foundation of what's sometimes called the&quot;object-oriented approach.&quot;andM;Traditional programmingandM;Although the phrase &quot;object-oriented programming&quot; is well defined, it'sprobably easiest understood in contrast to traditional high-level programminglanguages.andP;  The latter focuses on data (the program's integer variables,arrays, files and so on) and algorithms (the program's flow of logic and itsprocedures and/or functions).andP;  We might say there's a dichotomy between thedata, or declarations, and the procedures that act on the data.andP;  Traditionalprogramming languages, of course, include everything from FORTRAN and COBOLto C.andM;With traditional programming languages, what's important is how things happenand in what order.andP;  We often call them procedural for just that reason.andP;  Whenwe write a traditional program, we usually start by focusing on input andoutput.andP;  Then we try to imagine procedural modules that'll help us generatethe output we need, and then we start thinking of the data structures that'llaccommodate the data we have.andM;Object-orientedandM;programmingandM;Object-oriented programming focuses on objects.andP;  That sounds simple enough.andO;Objects must be like icons or tables.andP;  In fact, that's how the term &quot;objectorientation&quot; is often used today.andP;  But that's not what the term &quot;object&quot;means to object-oriented programmers (OOPs).andM;To OOPs, objects are a blend of code and data that is instructed to performspecific actions.andP;  We construct our objects, without the limitations of datatyping that apply to traditional programming languages.andP;  We visualize ourobjects as having a core of data surrounded by functions (generally called&quot;methods&quot;) that access the data (see Fig.andP;  1).andM;Some people refer to objects as encapsulated operands that contain the dataand the procedures to manipulate the data.andP;  (Those of us who are less prosaicsimply think of objects as black boxes.) Rather than specifying how toperform a given operation, the programmer only needs to specify what shouldbe done.andP;  The object chooses the appropriate method.andM;Objects also belong to classes.andP;  All members of a given class share the samemethods (and code).andM;In an object-oriented programming environment, objects have an importantcharacteristic called inheritance.andP;  If we want to define a class of objectssimilar to an existing class of objects, we simply let the new class inheritthe old class' properties and methods.andP;  Databasers can think of inheritanceas a shorthand for representing relationships among objects.andP;  If we haddefined an employee object, we could easily define a salaried employee objectthat inherited all the general characteristics of the employee object, andthen add a bit.andP;  The new salaried employee object would represent a new classof objects.andP;  Employee would become a superclass of salaried employee.andO;Conveniently, a new object can inherit methods from more than one object.andO;This is called multiple inheritance.andM;As a result of inheritance and classes, objects can be arrangedhierarchically.andP;  We might revise our vision of an object by thinking of anonion.andP;  The top peel would represent an object's class, while inner peelswould be the superclasses, or inherited classes.andP;  The innermost peel,surrounding the data, would be the root of the hierarchy.andM;An object-oriented program communicates with objects via messages.andP;  Messagesalso allow inter-object communication.andP;  Any action that takes places in anobject-oriented programming environment is the result of a message.andP;  Actions,remember, are done by objects, not to them.andP;  Cunningham drawings are oftenused to represent messaging among objects (see Fig.andP;  2).andM;Create and re-use yourandM;objectsandM;Since OOPLs (object-oriented programming languages) are meant to include ourobjects, they are, by nature, extensible.andP;  (In fact, the distinction betweenprograms and programming languages begins to blur with OOPLs).andP;  Thisextensibility is the reason OOPLs are often called &quot;software ICs.&quot;andP;  It's easyto store objects in libraries and re-use them.andM;Object-oriented database management systems (OODBMs) are being used in CADand CAM environments to capture the inter-relationships between the parts ofa product via inheritance.andM;The pros and cons of OOPLsandM;There's a lot of mystique associated with OOPLs, (like SmallTalk, the firstobject-oriented programming language, which was developed at Xerox PARC).andO;Indeed, object-oriented programming is often called a state of mind.andO;Programmers steeped in procedural languages often find it difficult to learnobject-oriented programming.andP;  It's a different mind set.andM;Inheritance provides the greatest benefit.andP;  Inheritance saves reptitiouscoding and helps simply overall program design.andP;  It also holds the promise ofobject re-usability.andP;  The overhead is that it takes a new programmer time tobecome familiar with the existing class libraries.andM;The object-oriented programming environment typically contains otherfeatures--features that have given OOPLs a reputation for being resourceintensive.andP;  Smalltalk programmers expect to have tools like browsers (whichprovide hierarchical and query-oriented access to classes and methods),debugging windows, bitmap editors, workspaces, inspectors, and access tovirtually unlimited memory.andP;  What a luxury.andM;OOPLs are also characterized by &quot;late binding.&quot;andP;  Although there is no easydefinition of binding, it's basically the binding of a program element (avariable, for example) to a particular characteristic or property (given avalue and memory location).andP;  Binding is usually done at compile/translationtime or at runtime.andP;  In order to accommodate messaging effectively, OOPLshave late, dynamic binding.andP;  This translates as slowww.andM;Traditional structured programmers are often aghast at OOPLs, since almostanything goes.andP;  If you think about it, OOPLs place no arbitrary limitationson the operations you can perform on data types.andM;So what?andM;The term &quot;object-oriented&quot; has recently been extended to refer to anythingwith icons and windows.andP;  Consider the following:andM;* The Macintosh and IBM OS/2 Presentation Manager environments let usmanipulate objects and have an object-oriented flavor.andP;  IBM has promised toadd more object-oriented features to forthcoming versions of OS/2.andM;* Apple's Hypercard and other hypertext environments let us manipulateobjects.andM;* Odesta's Helix and Blyth's Omnis (DBMSs for the Macintosh) includeobject-oriented features.andM;* Many CASE (Computer Aided Software Engineering) tools let us manipulateobjects.andM;* Informix has announced an object-oriented version of its UNIX Informix DBMSwhere the user will be able to store any type of file (spreadsheet, FAX,image, or ASCII) as objects.andP;  Access to the objects will be via a free-textsearch extension to SQL.andM;* In a more traditional sense, Hewlett-Packard's recently announced NewWave,which sits on top of Windows, defines objects as being an application and oneor more data files.andP;  Agents are set up to carry messages, thus performingtasks.andM;* Gupta's SQLWindows allows a developer to link a series of SQLWindowsobjects, such as forms, menus, and events.andM;Are applications just anandM;assembly of objects?andM;If you think about an object in its broadest sense, as a menu or report, manyof today's application generators can be thought of as object-oriented.andP;  Andlet's face it, aren't users more likely to think of their needs in terms ofobjects than normalized relations?andM;Think about a typical application development cycle.andP;  We figure out what theuser wants in terms of reports, forms, and so on.andP;  Then, from these objects,we reverse engineer a relational database to fit them.andP;  The tables rarelycorrespond one-to-one with the objects the user needs.andP;  Wouldn't it be moreconvenient to be able to group a table (along with its attributes, rules, andany other constraints) with the actions that can be done to it?andP;  This is oneway a relational DBMS can attain object-orientation.andP;  Indeed, as mentionedearlier, CASE tools are already providing us with an object-oriented approachto database programming.andM;Databases and expertandM;systems are starting toandM;overlapandM;As microcomputers gain the horse-power to work in an object-orientedenvironment, we should expect to see more links between expert systemsprogramming tools and databases.andP;  That's another reason to start learning thejargon of object-orientation.andM;Expert systems programmers also think in terms of objects.andP;  For them, objectsusually have slots (characteristics or attributes) and rules associated withthem.andP;  Each object has a collection of functions (methods) that acts on thattype of structure, representing knowledge about the object.andM;For more informationandM;We're being assailed by articles about object orientation all the time now,so if you keep your eyes open, you'll be able to pick up a lot.andP;  However,here are some specific resources:andM;* The August 1986 issue of Byte, which featured object-oriented languages.andM;* Brad Cox' Object Oriented Programming: An Evolutionary Approach,Addison-Wesley, Reading, Mass.andP;  1986.andP;  $24.95.andM;* Bertrand Meyer's Object-Oriented Software Construction, Prentice-Hall, NewYork, New York.andP;  1988.andM;* SAlly Sclaer's Object-Oriented Systems Analysis: Modeling the World inData, Yourdon Press, Englewood Cliffs, New Jersey.andP;  1988.andM;* ACM's Conference Proceedings: OOPSLA (Object-oriented Programming Systems,Languages, and Applications.andP;  Write to the Association for ComputingMachinery order department, P.O. Box 64145, Baltimore, Maryland 21264.andP;  ($27for members, $36 for non-members.)andM;* Any book on SmallTalk programming.andM;Why should you care?andM;So what's all this object-oriented stuff about and why should you worry aboutit?andP;  Well, object-oriented programming languages place no arbitrarylimitations on the operations you can perform on data types--anything goes.andO;They let you construct objects without the limitations of the data typing oftraditional programming languages.andP;  You specify what needs to be done, andnot how to do it.andP;  The object chooses how it's done.andP;  Instead of trying tofigure out what reports, and forms users want, and reverse engineering asystem to fit their needs and wishes, you can group the table with what canbe done with it.andP;  You can expect to have tools like browsers, debuggingwindows, bitmap editors, workspaces, inspectors, and access to virtuallyunlimited memory.andP;  Doesn't that sound wortwhile?andM;Karen Watterson is the Program Coordinator of Shoreline Community College'sBusiness Computer Program in Seattle.andP;  She is co-author with Alan Simpson of&quot;Understanding R:BASE for DOS and R:BASE for OS/2&quot; (Sybex).andP;  You can contactthe author at SCC, 16101 Greenwood Ave. N., Seattle, Wash.andP;  98133 or via MCImail (111-9390).andO;</TEXT></DOC>
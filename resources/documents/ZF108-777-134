<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-777-134  </DOCNO><DOCID>08 777 134.andM;</DOCID><JOURNAL>LAN Magazine  June 1990 v5 n6 p23(2)* Full Text COPYRIGHT Telecon Library Inc. 1990.andM;</JOURNAL><TITLE>The LAN tutorial series: part 23. (client-server computing) (localarea network) (tutorial)andM;</TITLE><SUMMARY>The client-server computing model in distributed networkenvironments typically involves server computers (personalcomputers or large systems) that host and do much of theprocessing of data and applications files and client PCs thatrequest and process those files over a network.andP;  Applications areusually divided into 'front-end' components on clients and'back-ends' on servers with processing shared between themdepending on which is most suited to the task.andP;  This divisionoptimizes the efficient use of computing resources and networkbandwidth, reduces the need for high-performance client PCs, andallows clients to host front-ends for multiple types ofserver-based applications.andP;  The most common use of theclient-server model is usually for data base serving, and theStructured Query Language (SQL) has become the standard for datainterchange between data base applications.andM;</SUMMARY><DESCRIPT>Topic:     TutorialClient/Server ArchitectureLocal Area NetworksFunctionsSpecificationsSystem DesignStructured Query LanguageApplications.andO;Feature:   illustrationchart.andO;Caption:   A client-server system. (chart)andM;</DESCRIPT><TEXT>THE LAN TUTORIAL SERIESandM;Defining the SubjectandM;The term &quot;client-server computing&quot; has meant many things to many people.andP;  Inthe mainframe or minicomputer environment, it has been used to refer to therelationship between the host computer and its associated dumb terminals.andP;  Intraditional local area networking terminology, it has also described theassociation between a personal computer acting as a &quot;server&quot; of data andapplications files and the &quot;client&quot; PCs that request those files via anetwork operating system over LAN cabling.andM;In the newly emerging distributed network environments, however,&quot;client-server computing&quot; takes on a more specific definition: It refers to arelationship in which the server plays a more sophisticated role on thenetwork, performing much of the processing formerly handled by its client PCswhile still retaining its requester-server (i.e., data storage)responsibilities.andM;It is this definition of the client-server model that we'll focus on here.andM;Client-Server BasicsandM;As client-server computing systems have evolved, their creators have takensome parts from the centralized host world, other parts from thedecentralized PC environment.andP;  As such, client-server systems also combinebenefits from both.andP;  From the host world, for instance, comes centralizeddata storage that can be centrally secured against unauthorized access.andP;  Fromthe PC environment comes the standalone computing power needed to runpowerful (and easy-to-use) applications and graphics packages unavailablewith dumb terminals connected to a host.andM;In understanding client-server computing, it thus helps to understand how thetraditional computing environments--that is, the host/terminal andfile-server/PC--process data application files: They do so in a totallyone-sided fashion.andP;  In the former instance, all data manipulation takes placeon the host; the terminals merely display the results of the mainframe'scomputation.andP;  Because the terminal is incapable of data manipulation, itsfunctionally is thus limited; in particular, it offers almost no graphicscapabilities.andM;In the standard file-server/PC relationship, the client PCs perform virtuallyall of the data processing.andP;  The server responds to data (and application)requests from the client, thus playing the role of an intelligent high-speeddisk system by forwarding stored information to the appropriate client.andP;  Thismeans that the server must first locate the requested files on its disksubsystem, then transfer them through its own memory and over the networkcabling to the end-user PC.andM;When a user wants to access a database on the server, for example, the serverfirst downloads the application software to memory in the user's PC.andP;  Whenthe user queries the database for a particular data record, the server sendsentire groups of data associated with it.andM;While this method does give users the data they need, it does so at theexpense of efficiency: First, entire files rather than just those needed aresent across the LAN cabling, unnecessarily using too much of the LANbandwidth.andP;  And because the user's PC does the processing, each end userwhose work requires heavy and frequent database access needs ahigh-performance computer with plenty of memory.andM;In the client-server computing environment, conversely, developers separatetheir applications into two components, a &quot;front end&quot; and a &quot;back end,&quot; withthe elements sharing the processing demands according to which is best suitedfor the task.andP;  This separation of responsibilities allows client-serversystems to more efficiently use an organization's computing power and networkbandwidth.andM;Here's how.andP;  The &quot;front end,&quot; or client-based part of the application,provides the end-user interface--that is, the onscreen images the userfollows while interacting with the application--as well as processingcapabilities.andP;  As in the traditional LAN client-server model, the &quot;back end&quot;delivers server-based functions such as data lookup and retrieval.andM;In the client-server computing architecture, however, only the front end ofthe application--not the entire application--is loaded into users' PCs whenthey start the program.andP;  Now when a user's front-end application queries adatabase for a particular record, the back-end server-based software searchesfor the specific record and sends it--not entire masses of data--to the user.andM;This significantly reduces the volume of data moving across the LAN cablingbecause entire databases are not continually being sent back and forthbetween server and client.andP;  (This offers secondary benefits in that recudedtraffic can also lower the risk of electrical or mechanical malfunctionscompromising the integrity of data.)andM;Another benefit of client-server computing: Because the server rather thanthe client handles much of the manipulation of data, it eliminates the needto give each employee who accesses the database a high-performance PC.andP;  Onlythe database server needs a large, fast hard disk, several megabytes of RAM,and the power of an 80386-based computer.andM;Although the most widely employed server in the client-server realm is thedatabase server (more on that shortly), a server in a distributed computingenvironment can be, among other things, an image or audio processor or anexpert system.andM;This means the front-end software doesn't have to be a component of adatabase; users can develop front-end applications with products such as,DataEase International's DataEase, Borland's Paradox or Ashton-Tate's dBaseIV.andP;  So can users of spreadsheets, word processors, graphics programs,electronic mail systems, and document-management applications.andM;In these situations, the database server, which usually resides on adedicated computer, acts as an &quot;engine&quot; to drive the system, The applicationsin turn can request/update data in the database, using the database server'scapabilities and benefits--for instance, improve security and centralizedaccess--in the process.andM;A 'Sequel' in the WorksandM;Because PC software applications seldon &quot;talk&quot; the same language and thus donot readily exchange data, software developers have had to agree on a commonlanguage for handling this data interchange.andP;  This language, called aStructured Query Language (or SQL, pronounced sequel, as in another &quot;Rocky&quot;of &quot;Star Wars&quot; sequel), acts as the translator between applications.andP;  SQL isa high-level tool that allows distributed databases to exchange informationamong themselves.andP;  Virtually every popular computer platform, from IBM PCs toMacintoshes to mini and mainframe computers, supports SQL.andM;Developed in the 1970s by IBM, SQL is an English-like query-type languagethat most databse vendors have standardized on.andP;  SQL has become the de factostandard for retrieving data from a relational database, and any databasethat supports SQL can theoretically exchange data with any otherSQL-compatible database.andM;The Good NewsandM;The good news about SQL is that end users usually don't have to learn or evenknow about it.andP;  The application program should hide the SQL language commands(principally, these commands come in the form of verbs such as DELETE,SELECT, and UPDATE) from the user interface.andP;  A front-end e-mail application,for instance, could use SQL as a tool to locate a recipient's network addressand determine the optimum way to &quot;mail&quot; a message.andP;  The database serveroperates in conjunction with a communications server to actually deliver themail--all without the e-mail end user knowing about it.andM;As already noted, the front-end components of a database server does notnecessarily have to be a database application; this open an amazing varietyof possibilities.andP;  Any application that can make use of a database ofinformation, including spreadsheets, point-of-sale software, andcomputer-aided drafting/engineering (CAD/CAE), can be incorporated into thedatabase-server environment.andM;Take the example of a stock broker.andP;  It is not atypical for securitiessalespeople to have two or three computers and/or terminals in their office,each one connected to a different computer system.andP;  A networked PC mightprovide access to a server-based database of the broker's importantcustomers, showing their holdings, priorities, etc.andP;  A terminal might provideup-to-the-minute stock prices from an online timesharing host via a modemconnection.andP;  And another PC might offer access to an order-entry system sothe broker can process customer orders on the spot.andM;With a client-server system, the securities firm could deliver all thosecapabilities via a single client personal computer connected to a distributeddatabase server (see Figure 1).andP;  In this scenario, the database server actsas a transparent network manager, tracking down the requested serviceswithout questioning the end user for network address information.andM;When the broker's front-end application asks for stock quotes, the databaseserver could automatically open a ling through a communications gateway,retrieve information from the online host, and report back to the user's PCwith only the specific data requested.andM;Similarly, the database server could also use the order-entry application'sfront-end instructions to provide an onscreen sales form.andP;  Or the databasecould display the customer's preferences--not to buy stock of companies withfacilities in South Africa, for instance, to sell IBM stock when it reaches$110 a share, or to buy Microsoft when it drops below $90.andM;And the database server would provide all this information without the brokerspecifying where any of it is located.andM;What's AvailableandM;As detailed in last month's LAN Magazine (&quot;On the Horizon,&quot; pp.andP;  62-74),almost a dozen database server products are on the market.andP;  These includeNovell's (Provo, Utah) NetWare SQL for NetWare, Microsoft's (Redmond, Wash.)andO;SQL Server for its own LAN Manager, Gupta Technologies' (Menlo Park, Calif.)andO;SQL Base, and IBMhs (Armonk, N.Y.) OS/2 Extended Edition Database Manager.andO;Oracle (Belmont, Calif.), informix (Menlo Park), Sybase (Emeryville, Calif.),andO;Advanced Data Systems (Boise, Idaho), Odesta (North Brook, Ill.), VIAInformation Systems (Princeton, N.J.), and XDB Systems (College Park, Md.)andO;also provide back-end products.andM;Developers have been slower in releasing front ends, however; a number ofvendors, including Borland International (Scott Valley, Calif.) and SoftwarePublishing (Mountain View, Calif.), are expected to announce client-serverfront-end programs this spring and summer.andM;In the meantime, more than a dozen vendors provide SQL front-end developmentenvironments that assist end users in the creation of client-serverapplications for systems based on NetWare and LAN Manager, the two mostpopular client-server operating system platforms.andP;  These include Borland'sParadox SQL for NetWare SQL and Paradox SQL Link for Microsoft's SQL Serveras well as Lotus 1-2-3 for NetWare SQL and the Oracle Server, Gupta's SQLWindows for SQL Base, and Novell's own Xtrieve Plus XQL for NetWare.andO;</TEXT></DOC>
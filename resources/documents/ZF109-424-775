<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-424-775  </DOCNO><DOCID>09 424 775.andM;</DOCID><JOURNAL>MacWEEK  Sept 11 1990 v4 n30 p28(1)* Full Text COPYRIGHT Coastal Associates Publishing L.P. 1990.andM;</JOURNAL><TITLE>Wanted: script-language consistency.andO;</TITLE><AUTHOR>Michel, Steve.andM;</AUTHOR><SUMMARY>Language consistency is needed among all programs that featuremacro or scripting languages.andP;  There is a significant lack ofconsistency between HyperCard and Silicon Beach Software'sSuperCard that is still growing.andP;  Apple faces copyright problemsin implementing features found on other programs, and when itinstalls features that are not like existing implementations itadds to the lack of continuity of language between theapplications.andP;  This situation does not inspire confidence inApple's promise that AppleEvents and AppleScript will lead touniversal scripting languages.andM;</SUMMARY><DESCRIPT>Ticker:    AAPL.andO;Topic:     Programming LanguagesProgram TranslatorsStandardizationProgram Development Tools.andM;</DESCRIPT><TEXT>Wanted: Script-language consistencyandM;Issues andamp; TrendsandM;In previous columns, we've discussed the need to have language consistencyamong all the programs that feature macro or scripting languages.andP;  However, aclose look at the scripting languages in HyperCard and Silicon BeachSoftware's SuperCard reveals a significant lack of consistency between thesetwo programs, and that variance is growing.andM;The quandary.andP;  Apple faces a quandary when it sees a feature in HyperCardlikeprograms or other software and wants to implement that feature or a similarone in HyperCard.andP;  On the one hand, if the company implements a feature,especially a command, in exactly the same way another program uses it, itfaces being seen as &quot;stealing&quot; ideas from others.andP;  On the other hand, when itimplements features in ways that are different from existing implementations,it destroys the continuity of language between the applications.andM;Several examples from SuperCard's SuperTalk and HyperCard's HyperTalkscripting languages come to mind.andP;  SuperTalk lets you test for the existenceof an object (such as background, card, button and field) using an &quot;exists&quot;function.andP;  The new HyperTalk feature set adds a similar function, butHyperCard's implementation of the &quot;exists&quot; function uses a &quot;there is&quot;construct: &quot;if there is an object then do this.&quot;andM;To take another example, SuperTalk lets you control whether or not a stackuser can stop an executing script using an &quot;allowInts&quot; property; when set totrue (the default), this property permits users to stop script execution withthe familiar Command-Period key combination.andP;  HyperCard's implementation ofthis function requires syntax that is logically the exact opposite; theproperty is &quot;cantAbort&quot; -- in other words, normally set to false.andP;  So inSuperCard, to disallow Command-Period, you use the statement &quot;set theallowInts to false,&quot; while in HyperCard you would say, &quot;set the cantAbort totrue.&quot; Both statements do exactly the same thing.andP;  The scriptor may find thekind of mental gear shifting required to remember the different approachestaxing.andM;Not only does the HyperCard team face a quandary, but after the release ofHyperCard 2.0, so will the SuperCard team.andP;  Should Silicon Beach then changethe implementation of existing features for HyperCard 2.0 compatibility?andP;  Insome cases, such as the &quot;allowInts&quot; property, that probably wouldn't be toohard, but in other cases, it could require a lot of work.andM;When SuperCard was announced in January 1989, Apple Products PresidentJean-Louis Gassee announced the formation of a committee to promote languagestandardization among SuperCard, HyperCard and other, similar programs.andP;  Thatwas all we've heard about the committee.andP;  Had anything come of it, perhapssome of these inconsistencies could have been averted.andM;AppleEvents.andP;  This state of affairs does not inspire confidence in thepromise that AppleEvents and AppleScript will lead to universal scriptinglanguages.andP;  To date, Apple has published only a slim AppleEvents Registrydocument listing a core set of AppleEvents.andP;  This core of AppleEvents isanalogous to the File and Edit menus of most Mac applications and letsapplications tell other applications which documents to open, print, copy orpaste.andM;What is needed, though, is a more substantial set of AppleEventsspecifications.andP;  Apple has asked developers to pose standards, and it has aforum on AppleLink to do so.andP;  However, these folders are notable for theirtotal lack of content.andP;  Apple's attempts to get developers to defineAppleEvents for them have not, apparently, been successful.andP;  Apple needs totake the lead and and propose more AppleEvents standards.andP;  If Apple does soand implements many of them (perhaps in future Claris products), otherdevelopers can follow.andP;  It seems clear that this will be a way to avoid inAppleEvents and AppleScript some of the confusion and divergence affectingHyperCard and SuperCard.andM;If you have any tips or other HyperCard-related information, write toStackWEEK, c/o MacWEEK, 301 Howard St., 15th Floor, San Francisco, Calif.andO;94105.andP;  Electronic mail: AppleLink: SMICHEL; CompuServe/ZMAC: 72511</TEXT></DOC>
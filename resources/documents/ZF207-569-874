<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-569-874  </DOCNO><DOCID>07 569 874.andM;</DOCID><JOURNAL>PC Week  August 28 1989 v6 n34 p70(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>Previewing the application development revolution. (AppliedIntelligence) (column)</TITLE><AUTHOR>Martin, James.andM;</AUTHOR><SUMMARY>IBM's Application Development Environment (ADE) will be an SAAcooperative application that will allow the user to generateapplications for all SAA environments from a programmableworkstation.andP;  ADE enables the programmer to develop applicationcomponents on the workstation and to send them to the AS/400 hostcomputer for execution.andP;  The central repository component of theADE will hold all definitions of an application and will be sharedby teams of developers.andP;  Application definitions will be generatedin the repository by front-end computer-aided software engineeringtools.andP;  The types of applications generated by ADE will berestricted in order to make the complexity of ADE more manageable.andM;</SUMMARY><DESCRIPT>Company:   International Business Machines Corp. (planning).andO;Ticker:    IBM.andO;Topic:     SAAApplications ProgrammingNetwork ArchitectureComputer Systems IntegrationCompatibility.andO;Feature:   illustrationchart.andO;Caption:   IBM's application development environment. (chart)andM;</DESCRIPT><TEXT>This is the last article in a series on IBM's Systems ApplicationArchitecture (SAA).andP;  The introduction of integrated computing environmentssuch as SAA will have a major impact on the software technologies of the1990s.andM;The focus of earlier articles in this series on SAA was the CommonProgramming Interface (CPI).andP;  The CPI provides programming services that arecommon across all supported SAA environments.andP;  These services include commonprogramming languages, common user interfaces, common communicationinterfaces and common database-access facilities.andP;  Positioned on top of theCPI is the Application Development Environment (ADE).andP;  As the name implies,it's the environment in which developers will build SAA applications.andM;IBM hasn't announced the details of the ADE yet, but there have been fairlystrong indications of what it will look like.andP;  The ADE will be an SAAcooperative application, with the programmable workstation providing the userinterface and much of the power.andP;  As shown in the graph, the workstation willwork in a client-server mode with the host-based repository, which willcontain all of the definitions required to build an application.andM;A Consistent EnvironmentandM;The workstation user interface will use the most advanced Common User Access(CUA) specifications.andP;  Developers will thus have a consistent environment inwhich to work.andM;The ADE will make it possible to generate applications for all SAAenvironments from the programmable workstation.andP;  For example, a programmerbuilding a cooperative application with portions on the workstation andportions on an AS/400 would write and develop all of the code on theworkstation.andP;  The workstation-based ADE is connected cooperatively to theAS/400, allowing the programmer to develop application components that can besent to the AS/400 for execution.andM;In the case of third-generation languages, such as C, the developer mightship the source code to the AS/400 for compilation, or the ADE might providecross-compilers that allow compilation on the programmable workstation.andP;  Ineither case, the programmer's window on the development process will be theworkstation.andM;The application-generator technology in the ADE will parallel that of thecurrent Cross System Product (CSP), an IBM fourth-generation language onwhich the application generator is based.andP;  Currently, the source code for CSPis developed only in the S/370 mainframe environment, and from there, anexecutable version can be generated for other environments, including theAS/400.andP;  Since the SAA Application Development Environment will be theprogrammable workstation, CSP will have to be reimplemented to support thedevelopment and generation of code in the workstation environment.andM;There are no plans to put the user interface of the ADE on either the S/370or the AS/400.andM;An important component of the ADE will be IBM's central repository.andP;  It willmost likely be host-based and act in a server mode for multiple developmentworkstations, each of which will have a local repository of designinformation.andP;  The central repository will hold all the definitions of anapplication, such as data elements, screen definitions and source code.andO;Teams of developers will share the repository.andM;Computer-aided software engineering (CASE) technology will also play a rolein the ADE.andP;  Front-end CASE tools, supporting planning, analysis and designfunctions, will generate application definitions in the repository.andP;  Othertools will use the information in the repository to generate executable code,databases, documentation and project-management information.andM;Hints of these directions can be seen in the current CSP product, especiallyin the relationship between CSP, the central repository and CASE tools.andM;The design specifications of a CSP application can now be stated in ExternalSource Format (ESF), which is a tag language for defining the application.andO;The ESF maps directly onto the CSP source files, which are used to generateexecutable versions of CSP applications.andP;  Now that the ESF is formalized andpublished, it's possible to build CASE tools that output ESF.andP;  At least twoCASE vendors, Index Technology Corp. and KnowledgeWare Inc., have alreadytaken steps in that direction.andM;The ESF, while currently in database files, can clearly be incorporated inthe repository when available.andP;  The ESF can then be used directly with theCSP development tools, CASE development tools and the code-generationportions of CSP.andP;  In fact, the developer can move from one of these tools tothe next.andM;ADE's complexity is made manageable by restricting the types of applicationsit generates.andP;  The more restricted a class of application is, the easier itis to build tools that generate it.andP;  The CASE tools and application generatorwill be designed for the applications that deal with most normal businessapplications.andP;  These applications generally perform transactions againstcorporate databases.andP;  User input is usually in the form of menus or forms.andM;The CASE tool shields the programmer from having to know the details of howto build CUA-compliant screens.andP;  The programmer only specifies logically whatis desired from the user -- that is, field specification on a data-inputform, or the selection of an item from a list.andP;  An interface that conformswith CUA standards is automatically built from the logical definition by theDialog Manager, one of the tools in the ADE.andM;Similarly, the complexities of database access can be hidden in the tools ofthe ADE.andP;  High-level specifications of database access can be made in a CASEtool.andP;  These specifications are translated into the primitive forms in therepository.andP;  When the executable form of the application is generated, theStructured Query Language needed to access the database is automaticallybuilt from the specifications in the repository.andM;The repository itself might not be confined to just a single hostenvironment; it might be stored in a distributed relational database.andP;  Thedeveloper can use the local repository on the programmable workstation tostore those portions of application definition that are being worked on.andP;  Thedistributed-database mechanisms of SAA will keep the databases synchronized.andM;Better ProductivityandM;Any portion of application development that is repeatable can be abstractedto higher levels and built into CASE tools.andP;  These higher levels ofabstraction then generate the specifics for a particular application fromrelatively few parameters.andP;  The result is higher productivity for thedeveloper.andM;Once design specifications for an application have been stored in therepository, they can be used to generate executable versions of theapplications.andP;  Using the facilities of the ADE, code can be generated in anyof the SAA languages, such as C or COBOL.andM;The application-development environment of the future will be much differentfrom the one developers are used to now.andP;  The cooperative environment betweena host-based repository and graphical user interface on a programmableworkstation is a powerful combination.andP;  The generation of conventionalthird-generation languages from the application-development environment willallow existing optimizing compilers to make the applications as efficient aspossible.andP;  The result will be a revolution in application-developmenttechnology.andM;Next week, I'll begin a series of articles on object-oriented programming, atechnology that is changing the way programmers and users interact withcomputers.andM;----------To learn more about the subject of these articles, please call The JamesMartin Report, an information service updated quarterly, at (800) 242-1240.andO;For information on seminars, please contact (in the United States and Canada)Technology Transfer Institute, 741 10th St., Santa Monica, Calif.andP;  90402(213) 394-8305.andP;  In Europe, contact Savant, 2 New St., Carnforth, Lancs., LA59BX United Kingdom (0524) 734 505.andO;</TEXT></DOC>
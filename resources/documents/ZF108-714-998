<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-714-998  </DOCNO><DOCID>08 714 998.andM;</DOCID><JOURNAL>Software Magazine  July 1990 v10 n9 p67(7)* Full Text COPYRIGHT Sentry Publishing Company Inc. 1990.andM;</JOURNAL><TITLE>Rescuing developers from deadline drudgery. (computer-aidedsoftware engineering)</TITLE><AUTHOR>Levine, Harvey A.andM;</AUTHOR><SUMMARY>The large cost overruns and deadline delays that plague thesoftware development industry have pushed managers and clients tothe limit of their patience and pocketbooks.andP;  The pressure ondevelopers to commit themselves to firm price quotations and hardschedules is forcing them to adopt the same tools and techniqueslong used in other project management applications.andP;  The result isthe development of new and modified tools that support managementinformation systems (MIS) software development projects.andP;  Projectmanagement software is only an aid, however.andP;  The most importantfactor in such projects is planning and controlling them.andP;  Thesenew tools provide a natural link to computer-aided softwareengineering (CASE).andM;</SUMMARY><DESCRIPT>Topic:     Project ManagementSoftware DesignProgram Development ToolsComputer-Aided Software EngineeringSystem DevelopmentCost of Operation.andO;Feature:   illustrationphotographtablechart.andO;Caption:   Representative project management systems. (table)The elements of systems management. (chart)Cross life-cycle activities. (chart)Bridging the project management gap. (chart)andM;</DESCRIPT><TEXT>RESCUING DEVELOPERS FROM DEADLINE DRUDGERYandM;Unacceptable!andP;  That is what managers and clients of software developers andsystem integrators are saying about the massive cost overruns and scheduledelays plaguing the industry.andM;Clients are now requiring firm price quotations for software development andsystem integration contracts, and they are getting more involved in theentire project process.andP;  Software development managers are requiring improvedplanning, control and communication.andP;  And in-house resources are being askedto be competitive with outside sources.andM;The pressure on software developers and system integrators to comply withsuch demands is leading more of these MIS providers to adopt some of thetools and techniques that have been long employed in other project managementapplications.andP;  This trend is also stimulating the development of new andmodified tools, aimed at supporting MIS software development projects.andM;As in many emerging industries, the immature MIS discipline had been allowedto blossom free of many of the restrictions and controls of more establishedindustries.andM;Open-ended and open-scope projects were the rule.andP;  Estimates were either notrequired, or were allowed to be overly optimistic.andP;  Scope changes were madeat will, without the recognition of the effect on effort, cost or schedule.andO;Cost overruns were charged back to the client.andM;But undelivered MIS projects resulted not only in the direct loss of money,but also in the loss of business volume and/or efficiency; in some casesbusinesses failed.andP;  But, as the industry matures, these failures are becomingless acceptable.andP;  MIS practitioners are finding it necessary to adopt projectmanagement tools and techniques to aid in meeting objectives.andM;The essential elements of project planning and control include theidentification of the work scope, the estimating of the work effort andtiming of each work item, the assignment of the work to individuals, theidentification of work item relationships (predecessors), the tracking ofwork accomplished and the measurement of the value of the work accomplished.andO;Key elements of this process include the discussion of the developing planswith eventual concurrence and commitment by the performers and management,and the use of the project management system as the center of a projectcommunication process.andM;These elements of project planning and control are not unique to MIS.andO;Although there have been some tools earmarked for MIS applications, most ofthe generalist project management software can be and is applied to MIS.andM;There are numerous project management software packages that have foundacceptance within MIS.andP;  One such package is the MicroMan II Project and StaffManagement System, from POC-IT Management Services, Santa Monica, Calif.andM;Like much of the project management software that has been aimed at thesoftware developer, MicroMan II provides a framework (work breakdownstructure) for the orientation phase that usually is characteristic in MISwork.andP;  It also provides a timesheet input and tracking capability andsupports chargeback needs.andM;Other products popular with the MIS community include Multitrak, an IBMmainframe product, from Multitrak Software Development Corp., Boston, and thePC-based Project Workbench, from Applied Business Technology (ABT), New York.andM;Additionally, there are over a hundred project management software packages,priced from under $100 to about a half-million dollars, that are capable ofsupporting the MIS project manager.andP;  These are available for every computerplatform, and range from single-user versions to multiuser, distributedprocessing, corporate license configurations.andM;An example of a successful implementation of project management to an MISsituation is credited to Stephen Rood, manager of microtechnology at Coopersandamp; Lybrand in New York, previously associate director of MIS for the City ofYonkers.andP;  He said that when he joined that department in July 1988, &quot;Therereally was no application of project management governing the undertaking ofprojects either originating or being assigned to the MIS department.andM;&quot;This lack of time accountability, I believe, contributed largely to thestanding interpretation of the MIS department as the department which 'neveraccomplished anything.'andP;  Projects were never on time, and almost always overbudget.andP;  The department even had the dubious honor of having some projectswhich never did get finished, yet cost the City hundreds of thousands ofdollars,&quot; Rood said.andM;This situation led Rood to introduce the initial aspects of projectmanagement to the City's MIS department.andP;  He used MicroMan II to trackemployee project time.andM;&quot;The idea here,&quot; he said, &quot;was to establish defined tasks for whichindividuals would be held accountable.andP;  A time frame would be placed aroundthe completion of those tasks and tasks linked together to form a completeproject.andP;  Everyone on the project team knew what would be expected of themsince individual goals were discussed with each member.andM;&quot;As the project progressed, actual dates of start and completion ofprogramming assignments were compared with planned dates.andP;  Variances,especially unfavorable ones, would have to be explained.andP;  There was no roomto hide, and pointing a finger at another individual didn't work.andP;  If thestart of a task slid because another task was late, the system marked andnoted that condition.andM;&quot;The application of a project management system was not to instill a 'BigBrother' syndrome, but rather to bring order to what was previously a sloppyway of handling project request work from end-user departments or inbudgeting one's time while on a project,&quot; Rood explained.andM;He added, &quot;The programming staff's initial reaction to the application ofproject management was somewhat skeptical.andP;  They felt that any of the timecommitments being recorded in a computer could not possibly hold true throughthe life of the project.andP;  I understood why they felt the way they did.andP;  Theyhad never before been told to assign a commitment date to a particularprogramming assignment and to hold that date.andP;  The implementation of theproject management approach was the first step in securing an agreed upon'promise' in meeting a responsibility.&quot;andM;Evaluating the advantages of such project tracking, Rood identified twoprimary beneficiaries.andP;  &quot;First, for the end users, by receiving weeklygenerated project progress reports, they could see what was actually beingaccomplished on their project, and what time was being spent on each task.andO;This gave them the feeling that the MIS department was responsive to theirneeds.andM;&quot;Second, through the project management system,&quot; Rood continued, &quot;the MISmanagement had a way of highlighting a growing succession of project workfrom various departments.andP;  This was used in several cases to commandadditional head count for our own department or even to secure upgradedhardware to accommodate new systems.andM;&quot;For the programming staff,&quot; Rood added, &quot;an indirect benefit of the projectmanagement system was to help protect them from such project taskoverbooking.andP;  A work load and time commitment would only be assigned to anindividual who was both available and able to undertake the given task.andO;Resource availability reports were generated weekly for management review todocument staff utilization on projects.andP;  They gradually recognized thisbenefit and grew to appreciate the concepts behind project management.&quot;andM;THE IMPORTANCE OF PLANNINGandM;Project management software, however, is only an aid to the practitionerinvolved in contributing to or managing such projects.andP;  Of paramountimportance is how one goes about this business of planning and controllingprojects, and how these automated tools contribute to this process.andM;MIS consultant, author and lecturer Lois Zells of Lois Zells andamp; Associates,Scottsdale, Ariz., speaks to this issue in her seminars and in her book,Managing Software Projects: Selecting and Using PC-based Project ManagementSystems [QED Information Sciences, Inc., Wellesley, Mass., 1990].andM;In the book, Zell points out that using methodologies, development techniquesand managing projects by phases and milestones does not automaticallyguarantee success.andP;  She advised readers (page 12) to &quot;recognize that planningshould not be a one-time exercise at the beginning of the project.andP;  It shouldbe an iterative process, and constant reassessment is necessary to determine,based on current data, the value of the project (Figure 1).andP;  Additionalreplanning often requires that one or more of six project managementstrategies be employed: dates extended, resources added, scope reduced,quality and/or performance and/or reliability sacrificed, productivitymeasures introduced or projects cancelled.&quot;andM;This statement could appear to imply that software project estimators usuallyunderestimate the required effort and thus the numbers in the plans areinitially optimistic.andP;  This raises at least two questions:  Under whatconditions should software project managers produce a plan that cannot,except under the most unusual circumstances, be achieved?andP;  And, if we areexpected to miss the original numbers, then how much of a miss (and in whatcategories) is acceptable?andM;Zells suggested that organizations develop a new vocabulary that representsthe &quot;goodness&quot; of the numbers at the various stages of the project.andP;  Shecalls this the &quot;moving window.&quot;andM;&quot;Estimates,&quot; Zells said, &quot;should reflect reality.andP;  But unless the group isdeveloping the same system (or type of system) over and over again, themanagement of systems projects may turn into an attempt to manage in chaosand uncertainty.andP;  Consequently, it is difficult to hit the estimating numbersright on the button, so estimators initially look to come within some 'likelyrange.'andM;&quot;Until the functional business requirements are completely defined,&quot; Zellscontinued, &quot;there is always the danger that the numbers will wind up biggerthan originally anticipated.andP;  This is what we in the software industry payfor trying to manage in uncertainty--not much different than other Randamp;Defforts.&quot;andM;Zells also voices concern that the extraordinary emphasis on meeting theproject target date might result in subsequent penalties.andM;&quot;there is often a disconnect between making the target date of the currentproject and the costs of maintaining the system after it's put intoproduction.andP;  While no one advocates risking quality, it is not unusual tounintentionally sacrifice quality, reliability and performance in order tomake a critical date, with the result of higher operational costs duringmaintenance.andM;&quot;When external requirements mandate holding the target dates, then the otherfive strategies must be considered.andP;  If, after exhausting all the choices,one is left with only the sacrificing of quality, then that choice is made asa conscious trade-off.&quot;andM;As a guideline to &quot;acceptable&quot; numbers, Zells referred to the opinions of twowell-known software engineers.andP;  Software productivity expert Barry Boehm,author of Software Engineering Economics [Prentice Hall, New Jersey, 1981],feels that his project managers are doing well if they can come within 20% ofactual costs 70% of the time.andP;  However, it is important to recognize thatthis accuracy is not expected until the functional business requirements havebeen defined.andM;Capers Jones, chairman of Software Productivity Research, Cambridge, Mass.,andO;maintains that the historical data collected by many organizations isincomplete, lacking from 30% to 70% of the real costs of building the system.andO;The missing effort might include unpaid overtime, user involvement,documentation, systems integration, quality insurance and even projectmanagement.andP;  With such omissions, bad estimates are frequent.andP;  Jones believesthat coming within 5% for effort and schedules and within 15% for staffingcan be considered to be good results.andM;Although the subject of project management for software development isfrequently placed under the heading of computer-aided software engineering(Case) tools, the software suppliers most identified with project managementdo not consider themselves Case tool suppliers.andP;  On the other hand, many Casetool suppliers are very interested in providing a degree of projectmanagement control within their tool sets.andP;  The two camps look at projectmanagement from different points of view.andP;  That a logical link exists betweenCase and project control might be acknowledged, but no more than that.andM;Such connectivity is desirable, but raises the question of integration.andO;Whenever the subject of Case tools comes up, the question often posed is,When are we going to see an entire family of interrelated tools for thesoftware developer; tools that will address most of the functions involved insoftware development (those that can be automated), and tools that willoperate on the same computer platform (or across several platforms)?andM;Several software vendors have developed tools, some of which offer provisionsto transfer data to other tools, either from the same vendor or fromdifferent vendors.andP;  But, a collection of tools, or even sets of tools thatcan pass information via a programmed interface, does not provide the fullpotential of integration that could be achieved through a seamless interface.andM;For a total, integrated solution, many developers are eagerly awaiting IBM'sAD/Cycle, an application development program intended to operate under IBM'sSystems Application Architecture (SAA).andP;  IBM is working with severalthird-party suppliers of life-cycle management software to develop a completeset of tools for application development.andM;At the heart of AD/Cycle is the Repository.andP;  The Repository Manager/MVSversion 1, release 1, focuses on entity-relationship tools and models, whichare used for enterprise modeling, and analysis and design functions ofAD/Cycle.andP;  Repository support for other functions of AD/Cycle, such as crosslife cycle, are scheduled in later releases (Figure 2).andP;  IBM has emphasizedthat AD/Cycle will provide functions across the entire applicationdevelopment life cycle through a staged set of tools from both IBM andthird-party vendors.andM;Within the discussion of cross life-cycle activities in IBM's document onAD/Cycle Concepts, IBM briefly acknowledges that most organizations maintaininformation about the status of their application development projects,addressing such items as: people assigned, work items, schedule, status,projected cost and current cost.andP;  Recognizing the existence of establishedvendors and software in this area, IBM's booklet states:andM;&quot;Many project management systems, most of them workstation-based, are tied toresource tracking information and spreadsheet programs.andP;  IBM will encouragevendors of these systems to support AD/Cycle by publishing AD/Cycle's openframework specifications.&quot;andM;One third-party supplier that has announced its intention to work with IBM onlife-cycle management tools under AD/Cycle is Multitrak Software DevelopmentCorp.andP;  The company offers a mainframe-based MIS Project Control System(Multitrak), aimed at helping medium to large MIS organizations plan,schedule, monitor and evaluate software development and maintenance projects.andM;IBM is expected to announce specifications for the project managementcomponents of the Repository by the end of 1990.andP;  &quot;Until IBM gives us thekeys to the Repository palace,&quot; said Multitrak President Michael Shattow, &quot;wewill continue building interfaces to prominent Case products and SystemsDevelopment Methodologies (SDMs).andP;  When IBM announces the specifications forinterfacing project control functions to the AD/Cycle Repository, Multitrakwill build interfaces to directly link the Repository and Multitrakdatabases.&quot;andM;Shattow supports the concept of a logical link between SDM, Case and projectcontrol.andP;  &quot;The methodology defines the work process.andP;  The Case toolkitprovides the automation to speed up execution of each step of the productionprocess and document the applications under development.andP;  Project controlprovides the means to manage resources and measure the progress in the Caseenvironment.andM;&quot;Project control systems define and communicate work plans and schedules toproject managers, and provide a framework to monitor and evaluate theresults.andP;  Case and SDM do not allocate or track the resources needed toexecute a project.andP;  They offer no incentive to work to full capacity.andP;  Theyonly attempt to make more effective use of the resources available.andM;&quot;Project control--not Case--addresses fundamental issues for controlling thesoftware development process.&quot;andM;Acknowledging that Case, SDMs and project control are partners in supportingsoftware development, many of the major software development consultingservices have developed in-house capabilities, with various levels ofintegration between software development support modules.andP;  Chicago's AndersenConsulting (Foundation), Robbins-Gioia (CAT) and American Management Systems(Life-cycle Productivity System) are three examples.andP;  The latter can link itsLife-cycle Project Manager component with ABT's Project Workbench.andM;Another commercial interface to Project Workbench is with the ExceleratorCase tool from Index Technology, Cambridge, Mass.andP;  The free XL/PW interfacecan be obtained from either vendor.andP;  Index Technology is one of the fourprimary vendors--along with KnowledgeWare of Atlanta, Bachman InformationSystems Inc. of Burlington, Mass., and Synon, Larkspur, Calif.--working withIBM on AD/Cycle applications.andM;An effective link from SDM to project control functions should consider anorganization's life cycle, planning and estimating routines and data.andO;ProjectBase, from the Center for Project Management, San Ramon, Calif., is aPC-based project management tool that automates these processes.andM;Developed by MIS consultant and lecturer Gopal Kapur, ProjectBase providesinitial databases that can be modified by the user, with the customizermodule.andP;  Templates help the user develop the project estimate and baselineplans.andP;  Export utilities are available for Project Workbench; ViewPoint, fromComputer Aided Management, Petaluma, Calif.; SuperProject Expert, fromComputer Associates of San Jose, Calif.; Qwiknet Professional, from ProjectSoftware and Development Inc., Cambridge, Mass.; and dBase, from Ashton-Tate,Torrance, Calif.andM;ABT is expected to release a new product this month aimed at integratingestimating methodology and project management.andP;  Project Bridge is aknowledge-based planning and estimating tool, consisting of a set ofautomated methods and estimating techniques.andP;  It links directly to ABT'sProject Workbench (Figure 3).andP;  Project Bridge provides 15 &quot;kits,&quot; eachincluding a work breakdown structure (WBS) and appropriate resources.andO;Customization capabilities can be applied at three levels.andM;AGS Management Systems Inc., King of Prussia, Pa., has started shipping itsintegrated program, first-Case, which supports IBM's cross life-cyclecomponent of AD/Cycle.andP;  It also provides automated support for both processand project management via incorporated life-cycle methodologies, estimatingfacilities and a full-featured project management capability.andM;PROJECTS UNDER CONTROLandM;Project management software tools are not &quot;Case&quot; tools per se.andP;  However,there is a natural link to Case in that they primarily bring automation tothe project management process.andP;  The use of such tools can help to organizethe planning process and to more effectively utilize historical data, butthey do not negate the requirement to develop realistic and intelligentestimates and plans.andM;In practice, it is likely that project targets will still be missed.andP;  But,with the project control system in place, these deviations are likely to besmaller, and will be recognized earlier.andM;With 28 years of experience, Levine is an expert on project management.andP;  Heis a principal of The Project Knowledge Group, Clifton Park, N.Y., a firmspecializing in project management software selection, evaluation andtraining.andP;  He is also the editor of AEC Project Management Advisor, AuerbachPublishers, New York.andO;</TEXT></DOC>
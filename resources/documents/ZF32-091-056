<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> ZF32-091-056 </DOCNO><DOCID>11 024 991</DOCID><JOURNAL>Data Based Advisor  August 1991 v9 n8 p34(1)* Full Text COPYRIGHT Data Based Solutions 1991.andM;</JOURNAL><TITLE>Eschewing object-oriented obfuscation. (Object-OrientedTechnology: A Manager's Guide)</TITLE><AUTHOR>Duchesneau, Dave.andM;</AUTHOR><DESCRIPT>Company:   Servio Logic Development Inc. (Publishing).andO;Topic:     BooksReview.andM;</DESCRIPT><TEXT>If you're even thinking about including object-oriented anything in your workor casual conversation, Object-Oriented Technology: A Manager's Guide, byDavid A. Taylor, PhD, is required reading.andP;  As you may have gathered from thetitle, it's written to explain object-oriented concepts in a clear, conciseway that even managers can understand.andP;  The really great thing about it is:software developers can understand it too, without getting bored.andM;Available only from Servio Corp. (who also produce the Gemstoneobject-oriented database management system), this 146-page book is the firstI've seen dedicated to clarifying object-oriented concepts and theterminology to discuss them intelligently.andP;  This book was expressly writtento counter some of the surrounding hype and help readers make more informeddecisions about adopting the technology.andM;The organization of this book reflects Taylor's knack for communicatingdifficult concepts in a straightforward way.andP;  The introduction sets thecontext by identifying some of the problems faced by information-basedorganizations.andP;  Without dawdling, he jumps right into an overview of howsoftware is constructed, pointing out how structured programming is useful,but very limited.andP;  He uses the modularization of procedures as a transitionto the modularization of data, and notes that neither is enough.andP;  This ofcourse, sets the stage for the rest of the book.andM;Other chapters introduce objects, messages, and classes, the three keys tounderstanding object orientation.andP;  (An appendix i dedicated to describingthese concepts.andP;  They also appear in the glossary.) Taylor separates thejargon from the terminology.andP;  He does an excellent job of reducing&quot;object-speak&quot; to 10 basic terms: object, method, message, class, subclass,instance, inheritance, encapsulation, abstraction, and polymorphism.andM;As the chapters delve deeper into objects, messages, and classes, Taylorshows why the object-oriented approach is more natural than other softwaredevelopment paradigms.andP;  He illustrates why data encapsulation pays off, andhow data abstraction raises thinking to a higher level.andP;  He identifies commonproblems, such as modules knowing too much about each other, and explainswhich object-oriented concepts solve the problem.andM;There's an excellent discussion of how classes bring order to objects.andP;  Hisexplanation is so clear that essential concepts, such as abstract classes andmultiple inheritance, seem like child's play.andP;  Nonetheless, he tempers hisdiscussion by mentioning the potential complications, such as multipleinheritance.andM;Taylor goes on to explain the real power of object-oriented technology:database and information-modeling applications.andP;  Some of the problemsassociated with information storage, retrieval, and shared access are alsobrought to light.andP;  Taylor explains the role of passive and activeobject-oriented databases in providing solutions.andP;  He goes on to show howdata abstraction lets users think of data in terms normally used to describeit, rather than how it's stored.andM;Building reusable objects is another focus.andP;  Taylor contrasts conventionalapproaches with the object-oriented approach of building and refining workingmodels of real-world operations.andP;  While citing the payoffs, he's quick topoint out that the maximum benefit comes at a price.andP;  It takes more time,energy, and foresight to construct a maximum-payoff general model than a morespecific model, and these costs must be amortized over multiple projects asthe models are re-used.andM;Taylor wraps up the book with an evaluation of the risks and benefits ofobject-oriented technology, and a discussion of future software.andP;  As athoughtful touch, he includes an appendix of key concepts and a glossary.andP;  Ofcourse, there's also an index.andM;This small, simple book stands out as an enviable example of technicalwriting aimed at a wide audience.andP;  Every word has been carefully chosen tofit within painstakingly crafted sentences.andP;  The organization is superb.andP;  Ionly wish that I'd written the book.andP;  I've already recommended it to all ofmy associates-even my attorney liked it.andP;  At a price of only $10, you can'tafford not to have it.andM;-Dave DuchesneauandM;Servio Corp.andM;420 Harbor Bay ParkwayandM;Alameda, CA 94501andM;(800) 243-9369andM;(415) 748-6200andM;ContributorsandM;* Leon Chainick is president of Professional Information Consulting Inc., aLong Beach, Calif., based company that specializes in custom applicationdevelopment and Windows application integration.andM;* Dave Duchesneau (pronounced doo-SHAY-no), a syustems architect at a Fortune100 firm and a partner in The Relevance *Group, is currently authoring a bookon problem-solving with Clipper.andM;* Tom Loveland is president of Mind Over Machines, Inc., a Baltimore,Maryland-based firm specializing in custom X-Base and Clipper programming.andO;You can reach Tom at (301)659-9300andM;* Jim Powell is manager of credit card and human resource systems forSecurity Pacific Automation Company Northwest.andP;  He can be reached onCompuServe (70401,3642).andM;* Joe Riley is director of system development with Fred Rothenberg andAssociates, Inc., a software and consulting firm for the manged healthcareindustry.andP;  You can reach him at (818)999-5021.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-182-222  </DOCNO><DOCID>08 182 222.andM;</DOCID><JOURNAL>Data Based Advisor  Jan 1990 v8 n1 p113(6)* Full Text COPYRIGHT Data Based Solutions 1990.andM;</JOURNAL><TITLE>The changer and the CHANGED(). (programming in FoxBASE+)(tutorial)</TITLE><AUTHOR>Zita, George R.andM;</AUTHOR><SUMMARY>Program CHANGED.PRG for FoxBASE+ is given.andP;  CHANGED.PRG is a UDFthat determines modifications in record fields after READs andGETs have been issued.andP;  CHANGED.PRG was developed after the authordiscovered that the UPDATED() function accurately detects changesto a field upon issuance of a READ order, but cannot detect themif a field was changed back to its original value.andP;  CHANGED.PRGtakes advantage of the SCATTER command.andP;  CHANGED.PRG requires aSCATTER of the contents of database file records prior to issuingREADs and GETs on the fields in a maintenance program.andM;</SUMMARY><DESCRIPT>Product:   FoxBase Plus (Data base management system) (programming).andO;Topic:     Type-In ProgramsTutorialData Base Management SystemsFile Maintenance.andO;Feature:   illustrationtableprogram.andO;Caption:   The contents of the record fields are transferred as follows.andO;(table)CHANGED.PRG. (program)andM;</DESCRIPT><TEXT>The Changer and the CHANGED()andM;Recently, a client asked me to design a database management system toorganize their patient profiles according to federal and state record-keepingstandards.andP;  One requirement was to devise a method to update client recordswith a modification date--but only when data fields had actually changed fromtheir original values.andM;I thought my job would be a snap after reviewing the requirements.andP;  I coulduse the UPDATED() function in FoxBASE+ to detect changes in the clientmaintenance procedure after all GETs and READs were issued.andP;  And I couldupdate the modification date field with the current system date.andM;The assumption was correct, but I found the UPDATED() function a one-waystreet.andP;  It accurately detects changes to a field when a READ is issued, butcan't tell you if the field was changed back to its original value.andM;For example, assume your maintenance program has a sex code field.andP;  Whenfirst displaying a record, the field may contain the value &quot;M&quot; (male).andP;  Ifyou change the field value to &quot;F&quot; (female), the UPDATED() function accuratelyreports the change, by returning the value as .T.andM;Now, move the cursor back to the sex code, changing the &quot;F&quot; value back to &quot;M&quot;again.andP;  This returns the field back to its original value, essentiallyvoiding any changes made.andP;  This is where a problem arises: UPDATED() willstill return .T., whether the field had been returned to its original valueor not.andM;Since the client's requirements were explicit, I had to find an alternativemethod to detect field changes after GETs and READs were issued.andP;  I devised aprogram to do this, which takes advantage of the SCATTER command.andP;  It letsyou quickly and easily load the contents of database records into arrays inmemory.andM;To use the function, just SCATTER the contents of your database record fieldsto an array, before issuing any GETs and READs on the fields in yourmaintenance program.andP;  First, access the record.andP;  Then place a SCATTER TOandless;arraynameandgt; statement in the program or procedure storing the field valuesinto memory variables.andM;Once the fields are stored in the array, execute the maintenance routine onthe record fields.andP;  Before updating (REPLACing) the modified fields, call theCHANGED() function.andP;  When executed, the function will SCATTER the fieldvalues to a second array after the data fields are modified by GET and READstatements.andP;  It compares the modified field values to those in the originalarray.andP;  If any fields are found unequal, the function returns a .T.andP;  value,indicating that the data record has been modified.andM;Direct vs.andP;  indirect readsandM;You can take advantage of the function whether you're using direct orindirect READs in your maintenance program.andP;  (Direct READs take place onactual database record field names; indirect READs take place on memoryvariables containing the data stored in each record field.)andM;You should call the function after all data has been READ by the programmaintaining the data fields.andP;  Regardless of where the data resides, theSCATTER TO command accurately places the read field contents in thecomparison (MCOMPREC) array.andM;Field type considerationsandM;I designed the function to compare all data field types used by FoxBASE+,except MEMO fields.andP;  (The SCATTER command ignores MEMO fields when loadingeach record field type in the array.)andP;  To illustrate how SCATTER loads arrayswhen a MEMO field is present, look at the following:andM;Once the database is in USE, the FoxBASE+ command SCATTER TO MORIGREC isissued.andP;  The contents of the record fields are transferred to an array inmemory that looks like Listing 1.andM;Notice that the SCATTER command ignores the MEMO field type, by placing thenext valid field type in the array position that normally occupies the MEMOfield.andP;  While the DBF file structure contains 11 fields, the MORIGREC arraywill have only 10 after it's loaded.andM;How field comparisons are doneandM;The main program loop executes one time for each field.andP;  Once inside theloop, each element from the original array (MORIGREC) is compared to thecorresponding element in the second (MCOMPREC) array.andP;  Tests are included forproper comparison of all data field types, e.g., logical to logical, numericto numeric, etc.andM;The FCOUNT() function retrieves the number of fields found in the DBFstructure.andP;  It also controls the execution of the DO...WHILE loop.andP;  Using theTEST.DBF file structure as an example, the value returned by FCOUNT() wouldbe 11.andP;  However, since the MORIGREC array contains only 10 elements, the 11thiteration of the loop would cause a &quot;Subscript out of bounds&quot; error to bereturned by FoxBASE+.andM;To prevent this error from being generated, the first test in the programloop checks for the presence of an undefined (&quot;U&quot;) data field type.andP;  The 11thiteration (when MFIELD = 11), would be trapped by this test, therebypreventing the &quot;Subscript out of bounds&quot; error.andP;  The MFIELD subscript isincremented, and control is passed back to the DO...WHILE statement for thenext iteration.andP;  In this example, since the value of MFIELD is greater thanFCOUNT(), the loop terminates normally.andM;I've benchmarked this function under FoxBASE+ version 2.1 with databasescontaining from one to 128 fields in a record (the maximum number of fieldspossible by FoxBASE+ in one database record).andP;  My tests show that thisfunction can compare up to 32 data fields per second.andP;  If we use a DBF filestructure of 128 fields, and each field in both arrays undergoes comparison,it wouldn't take longer than four seconds for the function to return a valueto the calling program.andM;With additional changes, you could easily alter this function to compare twoor more arrays in memory--up to the limits imposed by FoxBASE+ on both sizeand number of arrays DIMENSIONed.andP;  If you decide to modify the function forthis purpose, remember, you can only compare similar field types.andP;  Forexample, a character field must be compared to another character field--itcan't be compared to a logical or number field type, and vice-versa.andM;George R. Zita is president of Datamatic Information Systems, Inc., and alsoa lecturer and writer in the micro and minicomputer data processingindustries.andP;  He's an active member of the New York/New Jersey Chapter ofICCA, and Contributing Editor to their newsleeter.andP;  He can be reached at(201) 997-2252 or on CompuServe [73357,3503].andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> ZF32-248-079 </DOCNO><DOCID>09 766 371</DOCID><JOURNAL>Computing Canada  Jan 3 1991 v17 n1 p41(1)* Full Text COPYRIGHT Plesman Publications Ltd. (Canada) 1991.andM;</JOURNAL><TITLE>Object-oriented accesss for Ada developers. (Classic-Ada Ontosinterface from Software Productivity Solutions Inc.) (NewProducts/Software) (product announcement)andM;</TITLE><DESCRIPT>Company:   Software Productivity Solutions Inc. (Product introduction).andO;Product:   Ontos (Data base management system) (Computer programs)Classic-Ada Ontos (Program translator) (Product introduction).andO;Topic:     Product IntroductionADAInterfaceProgram Translators.andM;</DESCRIPT><TEXT>Object-oriented access for Ada developersandM;MELBOURNE, Fla.andP;  -- Software Productivity Solutions Inc. has developed an Adainterface that permits transparent access between user programs created withits Classic-Ada software developemnt tool and the Ontos object-orienteddatabase from Ontologic Inc. of Burlington, Mass.andM;The companies have formed a strategic business alliance and will jointlymarket the Classic-Ada Ontos interface and associated tools.andM;Software Productivity Solutions says the interface will allow Ada developersto effectively use object-oriented database technology that, to date, hasbeen limited to those programming in C++.andM;In addition, the company is incorporating the Ontos interface into oen of itsnew products, Classic-Ada with Persistence, that transparently stores andretrieves objects from Ontos during the execution of a Classic-Ada userprogram.andM;Objects are stored, and persist, in the object-oriented database acrossexecutions of the user program.andM;Using Classic-Ada with Persistence, users can create applications using theOntos object-oriented database, and use a simple persistent object managerbundled with Classic-Ada with Persistence as a low-cost vehicle forprototyping an application.andM;Software Productivity Solutions is also making its object managementinterfaces public.andP;  This will allow developers to provide their ownobject-management solutions for both persistent and non-persistent objects.andO;</TEXT></DOC>
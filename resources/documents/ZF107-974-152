<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF107-974-152  </DOCNO><DOCID>07 974 152.andM;</DOCID><JOURNAL>Hewlett-Packard Journal  Dec 1989 v40 n6 p50(8)* Full Text COPYRIGHT Hewlett Packard 1989.andM;</JOURNAL><TITLE>A compiled source access system using CD-ROM and personalcomputers.andO;</TITLE><AUTHOR>Cathell, B. David; Kalstein, Michael B.; Pearce, Stephen J.andM;</AUTHOR><SUMMARY>The HP Source Reader allows local support engineers to accesscomplete source code listings stored on CD-ROM.andP;  The Source Readereliminates paper listings and allows quick and efficient debuggingof HP 3000 Computer systems by displaying source code at any pointwithin a procedure or segment.andP;  Information about identifierdefinitions, reference materials and the assembly codecorresponding to each source line can displayed using pop-upwindows.andP;  Besides the pop-up windows, the Source Reader takesadvantage of other microcomputer user interfaces, such as thekeyboard, mouse and menus.andP;  The Source Reader reduces the time ittakes an engineer to locate a specific source location fromseveral minutes to just a few seconds.andM;</SUMMARY><DESCRIPT>Company:   Hewlett-Packard Co. (computer programs).andO;Ticker:    HWP.andO;Product:   HP 3000 (Computer) (computer programs).andO;Topic:     CD-ROMSource CodeDebugging Tools.andO;Feature:   illustrationchart.andO;Caption:   The traditional method of source code location. (chart)HP Source Reader method of source code location. (chart)CD-ROM production process. (chart)andM;</DESCRIPT><TEXT>A Compiled Source Access System Using CD-ROM and Personal ComputersandM;HP SOURCE READERS IS A SYSTEM for accessing compiled source code stored oncompact disk read-only memory (CD-ROM) for purposes of system debugging.andP;  Thesource code is is stored in a proprietary format that optimizes retrieval bythe access program running on an HP Vectra Computer.andM;HP Source Reader facilities quick and efficient debugging of HP 3000 Computersystems by allowing the user to display source code at any point within aspecified procedure or segment.andP;  The user can then quickly scroll the displayor jump to any other location with precise control.andP;  Relevant information canbe &quot;popped&quot; onto the screen in seconds.andP;  This includes identifierdefinitions, reference materials, and the assembly code corresponding to eachsource line.andP;  The program also provides many useful auxiliary functionsincluding searching, printing, logging, and a comprehensive set ofcustomization options.andP;  A context sensitive help facility eliminates the needto consult written documentation.andM;Unlike other source browsing systems, HP Source Reader was written by and forengineers who debug HP 3000 Computers.andP;  The user interface is designed to befamiliar to support engineers who may not be knowledgeable about personalcomputers.andP;  The program prompts users for information in the same format asother tools they use.andP;  In addition, to make the program easy to use, HPSource Reader takes full advantage of the personal computer user interface,including keyboard, mouse, pop-up windows, and menus.andM;To our knowledge, HP Source Readers is the first system in the industry thatcombines the convenience of one-step source retrieval with the power of theCD-ROM and personal computer (PC) technologies.andM;HP 3000 Debugging--BeforeandM;HP 3000 Computers are debugged, for the most part, by analyzing dumps of thecomputer's memory.andP;  When a system fails, the operator dumps the memory tomagnetic tape and then restarts the computer.andP;  The tape is forwarded to HPwhere it is formatted and analyzed by an engineer.andP;  The engineer must examinesource code while reading the dump, comparing the failed system to what thesource code indicates should happen when the system is running normally.andP;  Theengineer is constantly alterating between the source code and the dumpthroughout the analysis of the problem.andM;Historically, memory dumps have been printed on paper.andP;  This worked fine whenthe HP 3000 contained less main memory, but this practice has graduallybecome untenable with the advent of larger and larger systems.andP;  Therefore,interactive tools have been developed that allow a dump to be analyzed in anon-line mode.andP;  Over time, these interactive tools have been enhanced to thepoint where they are now powerful on-line tools that allow engineers tolocate and format specific information in a memory dump easily.andP;  However, asthese tools have matured, no parallel progress has occurred allowingefficient on-line examination of source code.andP;  Engineers have continued todepend on printed listings stored in a shared library area.andM;Fig.andP;  1 shows the complex manual process that must be followed to locatespecific source code in a listing from information presented in the momorydump.andP;  It should be apparent that this is exceptionaly tedious.andM;Project HistoryandM;In 1986, we began to rethink the strategy for the use of workstations withinour organization (HP Commercial Systems Support).andP;  It seemed apparent thatreal productivity gains could be made by engineers, managers, and supportpersonnel through the use of readily available PCs and software.andM;At the same time, we recognized that it was becoming feasible to marry the PCto the emerging technology of optical media.andP;  This marriage could provide aplatform for an engineer to access the massive amount of information requiredfor system level support of MPE, the HP 3000 operating system.andM;It became apparent that much of the time spent in analyzing system failureswas not bringing expertise to bear on the problem.andP;  Engineers were spendingtoo much time in overhead activities--walking to a library, finding listings,and engaging in the long tedious process of source location.andP;  We felt thisstrictly mechanical work could and should be automated.andM;We refined our ideas sufficiently to produce a PC-based demo version of aprogram.andP;  This gave us the opportunity to evaluate the user interface withfeedback from engineers who would be users of the actual program, if and whenit was produced.andP;  It also gave us a method to communicate our vision tosoftware developers who had experience in the CD-ROM industry but who did notnecessarily have knowledge of our particular activities in supporting the HP3000.andM;Unfortunately, when we surveyed what was available in an attempt to savedevelopment effort, all we found were natural-language-based keyword indexingdata base engines.andP;  These are not a viable solution because there is asubstantial difference between natural language and computer language.andP;  Forinstance, the word &quot;ball&quot; has a small number of meanings which are reasonablyconsistent from document to document.andP;  However, the variable &quot;x&quot; may havemany different meanings depending on where it appears in the source code.andM;Eventually, wer concluded that there were no existing solutions that we couldleverage to meet our needs--we would have to develop a prototype.andP;  This firstprototype was the proof of the validity of the concept.andP;  It had enoughpositive aspects to justify the resources to rewrite and then extend theprograms.andM;The main body of effort is now complete and the generation of HP SourceReader CD-ROMs is becoming a routine manufacturing effort.andP;  The onlyremaining tasks involve small utility programs to automate some partiallymanual processes.andP;  In addition, we plan to continue to expand thefunctionality of the access program as good ideas are suggested and as timepermits their implementation.andM;Project GoalsandM;At the beginning of the project our overriding objective was to improve theefficiency of HP 3000 system debugging.andP;  To achieve this, we established thefollowing goals:andM;* Elimination of paper listings to save time, space, and mundane labor.andM;* Full use of emerging technology to make engineers' time as productive aspossible.andM;* Ease of use to minimize learning time and errors.andM;* Minimal impact on organizations that supply source code to avoid the needto reformat source code or modify procedures.andM;* Cost-effectiveness to make it easy for support organizations to justify theexpense required.andM;CD-ROMs and PCsandM;CD-ROM is logical choice for the paperless environment.andP;  A CD-ROM, a 4-1/2inch plastic disk, can hold the equivalent of a 35-foot stack of paperlistings.andP;  This is sufficient capacity to contain an entire release of the HP3000 operating system and its supporting software.andP;  The disks are inexpensiveenough that each engineer can have a set.andP;  Unlike paper, optical media aremachine readable, allowing for a wide variety of automated access techniques.andO;Because the CD-ROM is read-only, it cannot be overwritten; it always has theintegrity it had when it was manufactured.andM;The HP Vectra PC is an excellent system for implementing a high-technologu,ergonomic access program.andP;  It has many features that make it comfortable forusers--a mouse, a full-color display, and the ability to pop up and removewindows and menus as necessary.andP;  Since the Vectra is a personal computer,each engineer has private use of the system and its performance is notimpacted by other users competing for resources.andP;  In addition, the Vectrasupports a vast array of commercially available software and hardwareproducts.andP;  Some of these products provide mechanisms for switching quicklybetween the source code and the dump, capturing parts of both in anintegrated document.andP;  The Vectra is widely available within HP and is alreadyin use in many offices that would need to use HP Source Reader.andM;Fig.andP;  2 shows how HP Source Reader is used to accomplish the task shown inFig.andP;  1.andP;  These two diagrams clearly show the reduction in manual effortbrought about by the access program.andM;HP Source ReaderandM;HP Source Reader consists of two main parts.andP;  The first is the datapreparation system, which is used to generate the CD-ROMs from the compiledsource code as it is produced by the lab.andP;  The second is the access programthat runs on the Vectra, which is used to locate and display the source codestored on the CD-ROM.andM;CD-ROMs are generated whenever a new version of the MPE V or MPE XL operatingsystem is about to be released.andP;  Each disk contains all the modulesassociated with a given version.andP;  Fig.andP;  3 shows the process flow used toconvert the data from its original form (in the lab) to its final form (onthe CD-ROM).andP;  Raw source code is maintained in the lab, then compiled withthe output listing files submitted for inclusion on the CD-ROM.andP;  The compilerlistings are processed in a series of steps to produce a magnetic tape set.andO;The tapes are sent to a mastering facility, which manufactures the disks.andM;Structure of the CD-ROMandM;The CD-ROM had exactly the same physical structure as the now familiar audioCD.andP;  The only real difference between the two is the meaning of theinformation recorded on the optical media, which represents computer data inthe case of the CD-ROM and digitized music on the audio CD.andP;  Data is recordedas a series of pits positioned in a continuous spiral (beginning at thecenter of the disk).andP;  The pits are read as ones and zeros when illuminated bya laser source.andP;  The bits are evenly spaced, requiring the drive to vary therate of rotation to maintain a constant linear velocity.andP;  Additional bits areused to provide a high level of error correction.andM;Additional structure is imposed to make it possible to use the CD as arandom-access device.andP;  A standard layout of the disk directories and filesknown as the High Sierra standard was proposed and widely accepted within theindustry.andP;  Microsoft Corporation was active in the definition of the standardand quickly produced an intermidiate level driver that makes all High SierraCD-ROMs look like very large standard DOS discs (albeit read-only).andP;  CD-ROMsrecorded using this standard have approximately 550,000,000 bytes ofavailable disk space for data and directories.andP;  The wide acceptance of thisstandard and the availability of the Microsoft CD-ROM extensions made itpossible for our project to develop our access program using the normal DOSfile functions.andM;From the very beginning of the project, it was evident to us that theorganization of the many files that would be on the CD-ROM was of paramountimportance.andP;  A poor choice would have resulted in terrible performance.andP;  Theresulting design makes extensive use of DOS subdirectories to group modulesin a pattern logically similar to that of MPE.andP;  Fig.andP;  4 shows the directorystructure of the CD-ROM.andP;  The root directory contains only a file describingthe contents of the CD-ROM.andP;  The second level subdirectories are of threetypes--one for system libraries, one for programs, and one for the referencedocuments.andM;The system library subdirectory contains only a file listing all the entrypoints and segments for that library.andP;  The modules themselves are located insubdirectories below the system library directory.andP;  Each modile subdirectorycontains a set of files containing the compressed source code, identifiers,cross reference, procedure mao, and optionally, the object code for thatmodule.andM;The program subdirectories contain a set of files containing the compressedsource code, identifiers, cross reference, procedure map.andP;  and optionally,the object code for that program.andM;The document subdirectory contains a set of files containing the compressedtext, page list, table of contents, and index for each document.andM;In addition to providing good performance, this structure has proved to bequite robust--only small extensions were required to include the changesbrought about by MPE XL.andP;  Originally, we had only one system librarysubdirectory, and now we have three.andP;  In addition, a new directory type wasdefined for include files (these are files that are incorporated into thesource code of multiple modules to provide common definitions, etc.).andP;  In thecase of MPE XL, a set of files containing the compressed source code,identifiers, and cross reference for the large include file DWORLD resides inthat directory.andP;  Thus this shared information is recorded only once, greatlyreducing the amount of disk space required.andM;FiltersandM;In the compact disc industry, a filter is a program that reads some form ofdata and reformats it for use on a CD-ROM.andP;  The files on the CD-ROM aredesigned and organized to facilitate rapid retrieval of the desiredinformation.andP;  The application designer can take advantage of the fact thatoptical media can be read but not written.andP;  Thus it is desirable to do asmuch processing as possible during the data preparation phase.andP;  This shouldresult in less processing and, presumably, faster data retrieval by theaccess and display programs.andM;For the HP Source Reader project to succeed, we had to minimize anyadditional effort that might be required of other organizations.andP;  In ourcase, that meant that the input data for the filter program would have to bethe same compiler-generated listing files that were already supplied for eachrelease of MPE.andP;  These are exactly the same files that we previously printedand archived in our library.andM;The initial prototype filter was for SPL, the primary language use in MPE V.andO;The result was tantalizing in that it gave us a glimpse of the tool that wehad envisioned.andM;We learned from this prototype when we began the design of the filter forPascal/XL (the primary language used in MPE/XL).andP;  The major goal was toautomate the processing of the huge number of listing files.andP;  The logicalsolution was a data base that would contain enough information about eachoperating system module to make the need for human intervention minimal.andO;Thus the filter could locate files on the system to be filtered, determinewhich filter was to be used, and record the results of the filtering in thedata base.andP;  This goal also dictated that filtering be done on a more powerfulcomputer system than a PC, and an HP 3000 Series 70 was chosen.andM;A secondary goal was that the overall environment and the program structurebe suitable for extending the filter for other programming languages.andP;  Properdesign of the data base would easily allow extending the environment.andP;  Tofacilitate extending the filter program itself, we chose a three-passphilosophy.andM;The first pass parses each input record and determines what part of thelisting it represents.andP;  It then reformats information to be retained andwrites it to the appropriate intermediate file.andP;  The second pass performscertain cleanup tasks such as removing duplicate information regardingidentifiers.andP;  The final pass generates the target files for the CD-ROM.andM;Although the first implementation using this three-pass philosophy was forPascal/XL, we found that more than 95% of the code was retained when weextended the program to handle Pascal/3000 (the MPE V version of Pascal).andO;The second and third passes were only minimally changed.andP;  Perhaps this resultis not very surprising in the case of such closely related Pascal compilers.andO;However, we found that more than 90% was retained when we implemented the SPLversion of the filter.andP;  With these three filters, we can now process 99% ofthe modules for both MPE V and MPE XL.andM;Most of the processing is done by the filters.andP;  However, there is a need toaccommodate certain complex modules that consist of multiple compilationunits that may even be written in different languages.andP;  To keep the processas simple as possible, we filter each submodule and later employ a mergeutility, which we also developed.andP;  This program uses the data base todetermine which submodules need to be merged.andP;  The source, identifier, crossreference, and optional object files are retained but the procedure map filesare combined.andP;  Each procedure entry in the merged map file indicates whichsubmodule contains it.andM;Writing the filters was not a trivial task.andP;  We encountered numerousdifficulties.andP;  The biggest challenge was posed by inaccuracies in thecompiled output.andP;  The filters detected numerous cases of cross referencesthat didn't exist or were on pages other than what the compiler reported.andO;The Pascal compilers support long identifier names but truncate them in manyplaces.andM;Additional challenges were provided by programmers.andP;  Some use NOLIST compilerdirectives to turn off listing output.andP;  Others use the DEFINE construct inSPL to improve readability and shorten the code.andP;  Still others use differentcross-reference programs whose formats are different from the ones for whichthe filters were written.andM;Premastering and MasteringandM;Premastering is the process of converting files from standard DOS format toHigh Sierra format.andP;  The files output by the filters are standard DOS fileimages, while compact discs are recorded according to the High Sierrastandard.andP;  Premastering changes the structure, not the content, of the files.andO;The conversion is done on a CD Publisher system manufactured by Meridian DataSystems.andP;  The output of the CD Publisher is a set of master tapes, which arethen sent to a compact disk mastering facility.andM;The mastering vendor takes the tapes and creates a CD-ROM master with thesame data structure.andP;  This will be used to press CD-ROMs by a processidentical to that used for audio CDs.andP;  The finished CDs are sent back to HPfor packaging and distribution.andM;Access Program Design PhilosophyandM;As mentioned above, a major goal for this project was to make the accessprogram easy to use.andP;  This was especially important because most of theengineers who use it are not knowledgeable about personal computers.andO;Therefore, we designed the screen layout with the major commands permanentlydisplayed on the second line.andP;  Above that line is an area that identifies thecurrent procedure.andP;  It is also used for dialog for commands that require it.andO;The remainder of the screen is used for displaying source code.andM;Commands are invoked by pointing at them with the mouse.andP;  For systems withouta mouse, the command can be selected by pressing the slash key (/) followedby the first letter of the command.andP;  When a command is selected, a menu dropsdown from the command line listing the subcommands.andP;  The user can point tothe desired subcommand with the mouse or type the first letter of thesubcommand.andP;  Prompts for additional information can be displayed on the topline or in dialog boxes if more room is needed.andM;Many of the commands require information such as the name of a procedure or avariable.andP;  We recognized that, while the program is in use, this informationis probably already displayed on the screen.andP;  Therefore, we permit the userto move the alpha cursor by pointing at a screen position with the mouse,then selecting the command.andP;  When the user is prompted for the name of aprocedure of variable, the access program automatically displays theidentifier above the cursor as the default value.andM;Another design decision was the extensive use of windows--temporary boxesthat overlay the main screen and contain information gathered from some otherplace in the listing.andP;  For example, if the user wants to know more about avariable used in the currently displayed code, the information is displayedin a window overlaying the top of the code area.andP;  Once the user has finishedwith the window it is removed and the code area is restored to its previouscondition.andM;Although HP Source Reader uses many windows, it is nota Microsoft[R] Windowsapplication.andP;  At the time the project began, MS Windows was not anestablished product.andP;  There was little known about OS/2 and PresentationManager.andP;  Therefore, we decided to implement the access program as acharacter-based DOS application capable of running in various environmentsincluding DOS, MS Windows, and Quarterdeck DesqView.[TM]andM;However, we also decided to structure the program in such a way thatconverting to MS Windows or Presentation Manager would be feasible without acomplete rewrite.andP;  Thus, the program has a main loop, which checks for a useraction (keystroke, mouse movement, or mouse button press).andP;  Control thenpasses to a routine based on the current internal state.andP;  That routineperforms some action, possibly changes the internal state, and returns to themain loop.andM;Another important attribute of the access program is the speed ofscrolling--we wanted it to be as fast as possible.andP;  Unfortunately, the accessspeed of the CD-ROM is only a bit faster than that of a flexible disk drive.andO;Since most of our disk access is sequential, we implemented a bufferingalgorithm using buffers that are one sector long (2048 bytes).andP;  A pool ofbuffers is allocated when the program initiates.andP;  The exact number depends onthe amount of memory available on the system.andP;  Buffers are linked in orderfrom most recently used to least recently used.andP;  When a new one is needed,the least recently used buffer is cleared and reused.andP;  This results in fasteraccess than simply reading the individual records one at a time.andO;Furthermore, the display of information already in the buffers is very rapid,since no I/O is required.andM;HP Source Reader is written in Turbo Pascal from Borland International withextensive user of routines in Turbo Power Tools Plus from Blaise Computing.andO;The program employs numerous overlays which are carefully organized topreclude the possibility of thrashing.andM;Access Program Command OverviewandM;The HP Source Reader access program is designed to provide engineers with themost flexible interface possible--one that provides commands that allow therequired code to be located with minimum delay.andP;  The program was developed byengineers who wold use it in day-to-day work, so the command structure chosencomplements the data provided by current tools.andM;The main commands and subcommands of HP Source Reader are as follows:andM;GOTOandM;This is probably the most important command in the access program.andP;  It allowsthe user to select the exact code to display.andP;  Subcommands allow differenttypes of access to the source.andP;  In MPE, each modules is located either in alibrary or an application program.andP;  In MPE V/E and MPE XL compatibility mode,procedures are grouped into segments.andP;  In MPE XL native mode, segmentation isnot used.andP;  To provide a consistent user interface, HP Source Reader defines&quot;native mode segment&quot; to be interchangeable with &quot;module.&quot;andP;  GOTO has sixsubcommands.andM;SEGMENT.andP;  Allows the user to select a segment/module name to be used for thestarting point for displaying source code.andP;  Optionally, the user can alsoprovide an offset from that starting point.andP;  The user can limit the searchdomain to specific libraries to reduce search time.andM;PROCEDURE.andP;  Identical to GOTO SEGMENT except that the user provides aprocedure name as the starting point.andM;ENTRY.andP;  Equivalent to GOTO PROCEDURE with an implicit offset to the mainentry point of the procedure.andP;  This bypasses declarations and nestedsubroutines, procedures, and functions.andM;CALL.andP;  Equivalent to GOTO ENTRY, plus the current module and location aresaved in a logfile.andP;  allowing the user to return to this point at a latertime.andP;  This mimics the call and return mechanism used by a computer.andM;RETURN.andP;  Allows the user to return to a place in the source code that wassaved in the logfile as a result of an earlier GOTO CALL.andM;APPLICATION.andP;  Allows the user to select an application program to bedisplayed instead of a library module.andM;IDENTIFYandM;This command displays information regarding identifiers defined in the sourcecode.andP;  Three subcommands select different information to display.andM;VALUE.andP;  The identifier map information supplied by the compiler for theselected identifier is displayed in a window.andP;  This includes type, class, andlocation or value.andM;DEFINITION.andP;  The source code containing the definition of an identifier isdisplayed in a scrollable window.andM;LOCAL VARS.andP;  The identifier map information supplied by the compiler for allthe local identifiers in the current procedure is displayed in a scrollablewindow.andM;SEARCHandM;This command finds a specific item or pattern in the current module.andP;  Threesubcommands determine the search method.andP;  Each can be done in a forward orbackward direction.andM;IDENTIFIERS.andP;  Finds the next or previous occurrence of an identifier assupplied by the compiler cross-reference table.andM;TEXT.andP;  Searches forward or backward for text matching a pattern, which caninclude wildcard characters for increased flexibility.andM;LEVEL.andP;  Searches in the required direction for a specific block level.andP;  Theblock level is a function of the BEGIN-END statements in Pascal and SPL.andO;Each BEGIN increments the level number, and each END decrements it.andM;DISPLAYandM;This command switches the display between code and supplementary informationwhile retaining the previously displayed information.andP;  Seven subcommandsselect what information to display.andM;CODE.andP;  Returns to the source code display.andM;PMAP.andP;  Displays the procedure map for the current module.andP;  This listsprocedures with segment offsets, if applicable.andM;REFERENCE.andP;  Displays the current page of the current reference document.andO;Useful documents such as internal specifications are included on the CD-ROM.andM;LIBRARY/MODULE/APPLICATION.andP;  Displays a list of procedures, module/segments,or applications whose names match a pattern.andM;STACK.andP;  Displays the current logfile CALL history.andM;TOGGLEandM;This command controls the state of three binary switches.andM;ABSOLUTE/RELATIVE.andP;  Alters the way that code offsets are displayed.andP;  They canbe ABSOLUTE (using the segment as a base) or RELATIVE (using the procedure asa base).andM;HEX/OCTAL.andP;  Alters the radix of code offsets.andM;SOURCE ONLY/INNERLIST.andP;  Displays source code only or source code interspersedwith the corresponding assembly instructions generated for each source line.andM;PRINTandM;This command prints information to a printer or file.andP;  There are subcommandsto control what is printed.andM;REFERENCEandM;This command selects a specific document or a location in that document usingthe table of contents or index.andM;CONFIGUREandM;This command is used to customize the program by selecting miscellaneousoptions for the access program to use.andP;  These include display colors, screensize, printer, function keys, and CD-ROM drive location.andM;HELPandM;Context sensitive help text is provided to assist with any difficulty usingthe program.andP;  For example, if the user is being prompted for some input, theHELP command displays text that explains the exact nature of the inputrequired.andP;  This is most useful for a novice user, but even experienced usersmay need assistance from time to time with infrequently used features.andM;QUITandM;This command gracefully exits from the program.andP;  A special logfile entry ismade, saving the current location.andP;  This allows the user to issue a GOTORETURN command the next time the program is run to resume displaying thesource code that was being displayed when HP Source Reader was lastterminated.andM;An ExampleandM;Fig.andP;  5 shows part of a typical HP Source Reader session.andP;  An engineer istrying to locate the source line that aborted l the system.andP;  From the memorydump the engineer has determined that the code aborted in segment HARDRES atoctal offset 16562.andP;  The engineer switches from the dump analysis tool to HPSource Reader.andP;  Fig.andP;  5a shows the screen after the engineer selects the GOTOSEGMENT command and types the segment name and offset.andP;  HP Source Readerlocates the source code at that location, resulting in the screen shown inFig.andP;  5b.andP;  The cursor is positioned on the source line corresponding to thereturn point from the call to SUDDEN-DEATH--the engineer has found the callthat aborted the system.andM;From the code, it is apparent to the engineer that SUDDEN-DEATH is called ifCHECKLDEV determines that the value of the variable LDEV is invalid.andP;  Theengineer then needs to examine LDEV in the dump to determine what value itcontained when the check failed.andP;  The engineer uses the mouse to point toLDEV on the screen, then invokes the IDENTIFY VALUE command.andP;  Fig.andP;  5c showsthe screen for doing this.andP;  HP Source Reader locates the identifier mapinformation for LDEV and displays it in a window as shown in Fig.andP;  5d.andP;  Theengineer now knows that LDEV is found at location Q-%14, and thereforeswitches back to the dump analysis tool and examines the value of LDEV foundat that location in the memory dump.andM;ConclusionsandM;HP Source Reader provides substantial increases in productivity based on ourpersonal experience, feedback from support engineers, and managementanalysis.andP;  The time that it takes an engineer to locate a specific sourcelocation has been reduced from several minutes to a few seconds.andP;  Furthersavings are achieved by direct access to supporting information such asidentifier maps, assembly code, reference materials, and other sources.andO;Significant cost savings are achieved by the elimination of paper listings.andO;These savings include computer time, consumable items, labor for printing andbinding, and storage costs.andM;HP Source Reader represents an important contribution to HP's commitment tocustomer satisfaction in support.andP;  Local support engineers now have fastaccess to complete source listings.andP;  Previously, maintaining such listings inevery HP support office was not cost-effective.andP;  Today, more problems areresolved by field support personnel.andP;  Customers realize this as improvedsystem availability.andM;HP Source Reader is now in use in virtually every HP support office aroundthe world.andP;  Engineers tell us it is indispensable, and managers at all levelshave gone out of their way to report that HP Source Reader has dramaticallyimproved problem resolution time.andM;HP Source Reader successfully combines new optical media technology with theease of use and power of the PC.andP;  Designed with HP's traditional &quot;next bench&quot;development philosophy, it seems to be developing into the method of choicefor MPE system support engineers who analyze memory dumps.andO;</TEXT></DOC>
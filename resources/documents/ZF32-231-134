<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> ZF32-231-134 </DOCNO><DOCID>10 413 828</DOCID><JOURNAL>The Journal of Systems and Software  Feb 1991 v14 n2 p67(11).andM;</JOURNAL><TITLE>Software cost reduction methods in practice: a post-mortemanalysis.andO;</TITLE><AUTHOR>Hager, J.A.andM;</AUTHOR><TEXT><ABSTRACT>Sixty percent of the software costs associated with the design,development, and implementation of computer systems occurs in themaintenance phase.andP;  Since change is intrinsic in software, asignificant reduction in the maintenance costs can be realized byrecognizing the evolutionary aspects of software and integrating adesign for change philosophy into the engineering life-cycle.andO;Programs must be designed to be alterable and the resulting changeprocess rigorously planned and controlled.andP;  From 1984 to 1987, thegovernment funded a large, computer-based training effort based onthese goals.andP;  The training system software provided hands-ontraining for a large collection/processing system by emulating theman-machine interfaces.andP;  The fundamental goal of the design anddocumentation effort was to minimize the impact of implementingexpect system changes to the training system.andP;  Initial maintenancemetrics collected during 1988 and 1989 for the effort suggest thatseveral of the project design/documentation and maintenance goalswere realized.andP;  The purpose of this paper is to revisit the designmethodology and goals of the effort by analyzing change datagathered during the system test and early maintenance phases.andO;This data strongly suggests that integrating a design for changephilosophy into the software development practices has thepotential to significantly reduce full life-cycle costs.andO;(Reprinted by permission of the publisher.)andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     Software MaintenanceCost ReductionSoftware DesignSoftware MetricsStudy.andO;Feature:   illustrationchartgraph.andO;Caption:   Behavior-Hiding module. (chart)Software Decision-Hiding module. (chart)Cumulative resolution time as a function of time. (graph)andM;</DESCRIPT></DOC>
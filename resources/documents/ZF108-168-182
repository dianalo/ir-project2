<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-168-182  </DOCNO><DOCID>08 168 182.andM;</DOCID><JOURNAL>Datamation  Feb 1 1990 v36 n3 p33(3)* Full Text COPYRIGHT Cahners Publishing Co. 1990.andM;</JOURNAL><TITLE>Defining object databases anew. (the second of two articles onobject-oriented databases) (includes a related article onstandardization and performance of object-oriented databases)</TITLE><AUTHOR>Kim, Won.andM;</AUTHOR><SUMMARY>Object-oriented database systems will be an important technologyof the 1990s.andP;  A previous article described a benchmark fordefining the technology, and here the three sublanguages used tocreate and manage the databases are described and problems ofobject management are discussed.andP;  An object-oriented database'sdata manipulation language must let users create, update anddelete individual instances of a class by sending the necessarymessage to the class and must let users fetch objects by theirunique identifier or by a user-specified object.andP;  The data controllanguage in an object-oriented database must let users specifytransactions, semantic integrity control, authorization andmanagement of access methods.andP;  (The third sublanguage, the datadefinition language, was described in the previous article.) Thedesign and operation of an object-oriented database managementsystem are described.andM;</SUMMARY><DESCRIPT>Topic:     Object-Oriented Data BasesOutlookFuture TechnologiesData Base LanguagesObject-Oriented LanguagesTrendsProgram Development TechniquesData Base DesignQuery LanguagesData base management systems.andO;Feature:   illustrationphotographtablechart.andO;Caption:   Problems ahead for next-generation databases. (table)Objectively managing cars and trucks. (chart)andM;</DESCRIPT><TEXT>Defining Object Databases AnewandM;A full month into the new decade, information systems executives have nodoubt been already inundated with articles, interviews, staff briefings,etc., on how complex yet swift business will be in the 1990s.andP;  That's why thesubject of a relatively new information technology known as object-orienteddatabases has come to the forefront of discussions on how organizationsshould manage information.andM;In the first part of DATAMATION's discussion on object-oriented databases,which appeared in the previous issue under the headline, &quot;A New Database forNew Times,&quot; a benchmark for defining the technology was set.andP;  Anobject-oriented database system, you may remember, is a persistent andshareable repository and manager of an object-oriented database, which itselfis a collection of objects defined by an object-oriented data model--objectsthat capture the semantics of objects supported in object-orientedprogramming.andM;As part of the benchmark, two rules governing object-oriented databases wereset that affected the three sublanguages--the means of creating and managingsuch databases--used in them.andP;  Those rules hold that such databases mustprovide all the facilities afforded by conventional databases and that theyadhere to several concepts specific to object management.andP;  Our earlierarticle analyzed the impact on one sublanguage, data definition.andP;  Thisarticle focuses on the two other sublanguages, data manipulation and datacontrol.andM;Manipulating Data EffectivelyandM;A data manipulation language (DML) includes facilities to express queries andupdates against a given database (replace, insert, delete).andP;  The DML of anobject-oriented database must allow users to do several things.andP;  It mustpermit them to create, update and delete individual instances of a class bysending an appropriate message to the class.andP;  And it must permit them tofetch objects in two ways.andP;  One is a navigational fetch of a single objectkeyed on its unique identifier (UID) or of a collection of objects rooted ata user-specified object.andP;  Another is a query--a declarative fetch of a set ofobjects that satisfies user-specified search conditions.andP;  The DML also mustallow a declarative update or deletion of a set of objects that satisfyuser-specified search conditions.andM;The query language should allow both queries on a single class and queries onmore than one class.andP;  A query on a single class retrieves all instances ofthe class that satisfies search conditions on the attributes of the class andthe domains of the attributes of the class.andP;  A query on more than one classis the object-oriented equivalent of the joins and set operations found inrelational systems.andM;An object-oriented database system, like its relational database predecessor,must automatically determine an optimal plan for executing any given queryand execute the query using the selected plan.andP;  A user should not have toprovide hints to the system on the access methods to be used for evaluatingthe query or the order in which different classes involved in the queryshould be evaluated.andM;A query is formulated against a portion of the database schema.andP;  Since theschema of an object-oriented database consists of a class hierarchy and aclass-composition hierarchy rooted at each of the classes in the database, aquery against an object-oriented database can be very rich.andM;Consider a query against a single class, ignoring the class hierarchy for themoment.andP;  A query against a class will result in the retrieval of a set ofinstances of the class that satifies user-specified search conditions.andO;Remember, however, that an instance of a class is a nested object consistingrecursively of instances of the domains of the attributes of the instance.andO;That means a query against a class is really a query against the class andsome of the domains of the attributes of the class.andP;  In other words, a queryagainst a class is formulated against the nested definition of the class.andM;In the first part of our benchmark series, an object-oriented database forvehicle manufacturers was employed to demonstrate the traits of this newclass of data management.andP;  Returning to the database example, let's considerthe query: &quot;Find all vehicles that weigh more than 7,500 pounds and aremanufactured by a company in Detroit.&quot;andP;  That query would be targeted againstthe class vehicle, and it would associate the predicate &quot;location = Detroit&quot;with the class company and the predicate &quot;weight andgt;7,500 lbs.&quot; with the classvehicle.andM;When the concept of class hierarchy is introduced to the query, twomeaningful interpretations for evaluating the scope of the query surface.andO;One interpretation is obviously all instances of the target class.andP;  The otherintepretation is that the user is searching for all instances of the classeson the class hierarchy rooted at the target class.andM;A data control language (DCL) includes facilities for protecting theintegrity of the database and managing the resources of the system.andP;  The DCLmust allow specification of transactions, semantic integrity control,authorization and management of access methods.andP;  The facilities forspecifying transactions (commit and transaction abort) are the same as thosein conventional database systems (assuming that nested transactions orlong-duration transactions are not supported).andP;  Semantic integrityconstraints may be specified in methods associated with classes.andM;Selective AuthorizationandM;The authorization mechanism supported in some commercial database systemsmakes it possible for a user to selectively allow other users limited accessprivileges to a subset of the database.andP;  The current model of authorizationhas been designed for the relational model of data.andP;  As such, the smallestunit of authorization is a relation or an attribute of a relation.andP;  In theautomorive example, a user named Smith may create and populate a relationnamed vehicle and allow another user called Jones the read privilege on therelation and allow still another user called Brown an update privilege on the&quot;weight&quot; attribute of the relation.andM;It is necessary, however, to extend the current model of authorization forobject-oriented databases.andP;  Why? First, the unit of authorization inobject-oriented databases is logically an object, since an object is the unitof access.andP;  Any authorization has three parts: object, authorization type andauthorized user.andP;  For example, an authorization type may be &quot;read, create andupdate (including delete).&quot;andP;  An authorized user may be a single user or agroup of users.andP;  It is, of course, potentially expensive to supportauthorizations at the object level since the database system must maintainall three parts of the authorization for each object rather than for eachclass.andP;  Second, an object potentially represents a large collection ofobjects related through the aggregation relationship.andP;  Such a collection ofobject is a legitimate unit of authorization.andM;The aggregation and generalization relationships captured in anobject-oriented data model also require changes to the semantics of indexes.andO;These relationships, in fact, suggest different types of indexing:class-hierarchy indexing along a class hierarchy and nested indexing along aclass-composition hierarchy.andP;  The DCL must allow the user to create anddelete these new types of indexes.andM;An index is a data structure that a database system uses to expedite theevaluation of a query that retrieves a small subset of a large database.andP;  Anindex is maintained on an attribute (or a combination of attributes) of aclass; an index is logically a list of pairs (key-value, list of objectidentifiers), where the key-value is a value in the indexed attribute(s), andeach identifier in the list of object identifiers is the identifier of anobject in which the indexed attribute holds the keyvalue.andP;  In our automotiveexample, an index may be maintained on the &quot;weight&quot; attribute of the classvehicle to speed the evaluation of queries with a search predicate involvingthe &quot;weight&quot; attribute (e.g., weight=8,000 lbs.).andM;In relational database systems, one index is maintained on an attribute (or acombination of attributes) of one relation.andP;  If applied to an object-orienteddatabase, this technique would mean one index would be needed for anattribute of each class.andP;  However, since the indexed attribute is common toall classes on the class hierarchy rooted at the user-specified target class,it makes sense to maintain one index on the attribute for all the classes onthe class hierarchy rooted at the target class.andP;  An index on an attribute ofa class and the class hierarchy rooted at the class is a class-hierarchyindex.andM;Although a query returns a set of instances of the target class, searchpredicates may be specified on any nested attribute of the class.andP;  Just as anindex on an attribute of a class is useful for evaluating a query involving apredicate on the attribute, an index on a nested attribute of a class shouldalso be useful for evaluating a query involving a predicate on the attribute.andM;Object-oriented database systems address some of the important deficienciesin conventional database systems.andP;  But they do not by themselves solve allthe problems in conventional database systems--ones that cannot be solved bysimply shifting from the relational data model to an object-oriented datamodel.andP;  Solutions to these problems, such as storing and retrieving longdata, are requirements for next-generation database systems.andP;  Hopefully,object-oriented databases will embody such solutions.andM;Won Kim is the chief architect of the ORION object-oriented database systemat the Austin, Texas-based Microelectronics and Computer Technology corp.,andO;which has licensed the use of the technology for commercial resale to ArtemisTechnology Inc.andO;</TEXT></DOC>
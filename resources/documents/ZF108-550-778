<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-550-778  </DOCNO><DOCID>08 550 778.andM;</DOCID><JOURNAL>UNIX Review  June 1990 v8 n6 p48(6)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Joining power with ease. (development of UNIX for the Macintosh)</TITLE><AUTHOR>Chow, Michael; Hendrickson, B.W.andM;</AUTHOR><SUMMARY>The Apple A/UX implementation of UNIX for the Macintoshillustrates how UNIX can be incorporated into a non-UNIX basesystem.andP;  Applications in the Mac graphical environment give usersinformation about the state of the system as well as some control,letting users access any system resources directly.andP;  Itsuser-interface Toolbox in ROM is an extensive collection ofroutines that simplify development.andP;  A/UX 2.0 contains a driverthat forwards Toolbox information from the operating system kernelto user mode.andP;  Its File Manager provides the Toolbox with avirtual file.andP;  Each user in a multiuser system can customize theenvironment and create a private System Folder.andP;  UNIX symboliclinks eliminate unnecessary copies of System files.andP;  The MacintoshFinder, a 'graphical shell' used for file manipulation, has beenextended to support UNIX under A/UX.andP;  'Hybrid' UNIX programs witha Mac interface can run under A/UX.andP;  The A/UX system also uses amodified version of the Mac MultiFinder shell for multitasking.andO;It runs with a fixed memory partition size but can use virtualmemory.andP;  A/UX MultiFinder shares some file descriptors with hybridapplications.andP;  The new Macintosh UNIX provides over 500 utilitiesand shell scripts and supports shared libraries.andM;</SUMMARY><DESCRIPT>Company:   Apple Computer Inc. (products).andO;Ticker:    AAPL.andO;Product:   Apple Macintosh (Microcomputer) (computer programs).andO;Topic:     UNIXSoftware MigrationSoftware DesignCompatible SoftwareProgrammingOperating Systems.andM;</DESCRIPT><TEXT>JOINING POWER WITH EASEandM;As computing environments become increasingly heterogeneous, the relativelyhigh degree of portability UNIX applications offer works to the operatingsystem's advantage.andP;  By adopting UNIX as a working environment, softwareusers free themselves, to some extent, of having to use the products of asingle hardware vendor.andM;UNIX, however, has traditionally been geared more toward largescale computingusage, and has not offered many &quot;personal productivity&quot; applications--wordprocessors, spreadsheets, and th like--with the renown for performance andease of use enjoyed by such software running on personal computers.andP;  As thescope of the UNIX market broadens, it is becoming increasingly important forUNIX to address the needs of the nontechnical user.andM;Personal computer systems criginally developed without UNIX such as thApple[R] Macintosh[R], have featured software designed to serve such needs.andO;Since so many applications are already available on such machines, it maywell make sense to adapt UNIX to support such systems rather than to try toport the application base of those platforms to UNIX-based hardware systems.andM;In this article we explore how UNIX can e incorporated into the base systemsthat support non-UNIX software.andP;  To do so, we will focus on the admittedlyspecific but well-known setting of the Macintosh system.andP;  UNIX and theMacintosh operating system (Mac OS) both have their own strengths andweaknesses, and the applications designed for each tend to reflect thosecharacteristics.andP;  Making UNIX capable of supportng non-UNIX softwarenecessitates the construction of a virtual environment that extends elementsof the UNIX system without adversely affecting the environment as a whole.andO;This environment must permit interaction between the native and virtualcontexts, as it must determine what system resources are available and howthose resources may be accessed at any given time.andM;The Macintosh Environment.andP;  In terms of user-system interaction, Macintoshapplications differ from their conventional UNIX counterparts.andP;  In theMacintohs graphical environment, applications give users a great deal ofinformation about the state of the system and provide a certain measure ofcontrol over that state.andP;  Additionally, users can access any of the system'sresources directly; this includes manipulation of global system data as wellas the use of privileged microprocessor instructions.andM;The cornerstone of the Macintosh environment is the extensive collection ofroutines composing the user-interface Toolbox contained in the Macintosh ROM.andO;These routines minimize the amount of development effort required to producethe intuitive interface for applications, and result in a consistent look andfeel for the overall system.andP;  Applications interact with both the Toolbox andthe operating system through the Motorola 680x0 CPU's 1010-emulator trap,which handles unimplemented instructions; the Macintosh uses unimplementedopcodes in the range $A000 through $AFFF for this purpose.andP;  When such a trapis executed, the program is vectored by the system to the code that performsthe desired operation.andM;Under UNIX--in this case, Apple's latest version of UNIX,A/UX[R] 2.0--allexceptions induce a context switch and are handled by the kernel.andP;  SinceMacintosh software is not constructed to deal with a dual-mode environment,the A/UX kernel must return control back to the user process beforedispatching to the appropriate Toolbox or operating-system handler.andP;  It'salso necessary to provide emulation of any privileged 680x0 instruction thatthe Macintosh software might use in its all-supervisory view of the system.andM;In performing many of its functions, Toolbox relies on unique characteristicsinherent in Mac OS.andP;  One such characteristic, known as an event, providesinformation about the environment.andP;  Events are messages that convey dataregarding a change in some part of the system, such as movement of the mouse,insertion of a floppy disk, or deactivation of an application.andP;  Under UNIX,however, only kernel objects--such as device drivers--are aware of suchactivity, and applications must query the proper part of the kernel for suchinformation.andP;  Consequently, it was necessary that A/UX contain a driver tahtforwards this information from the kernel to user mode for use by Mac OS.andO;This driver serves to set up the memory segments for the screen buffer,system globals, and the ROM code upon initialization of the virtualenvironment.andM;Another Mac OS characteristic on which the Toolbox depends is the filesystem.andO;Unlike UNIX files, which provide single byte streams, Macintosh files providetwo streams, called forks.andP;  One stream, the data fork, is used forapplication data (text data, for example) while the other stream, theresource fork, is used for attribute information (such as fonts, icons, andcolors).andP;  All Macintosh files have a pseudo-third fork--called &quot;Finderinformation&quot; (described later)--that is used when representing those fileswithin the graphical desktop environment.andP;  Under A/UX, the File Manager mustprovide the Toolbox with a three-fork virtual file using the single-streamUNIX filesystem.andM;To create the proper virtual file, the file manager employs two specialphysical file formats: AppleSingle and AppleDouble.andP;  AppleDouble uses twoUNIX files to store the necessary information.andP;  One file contains the datafork, while the other is divided into variable-sized entries for all theattribute information.andP;  The data fork is placed in a separate file so thatits contents may be shared with UNIX applications.andP;  AppleSingle format issimilar to AppleDouble format, except that all information is contained inthe attribute file, the data fork being just one entry.andP;  The file managertranslates all Macintosh file data operations into the apppropriate UNIXroutines in one of these two formats.andP;  (Note that a regular UNIX file may beconsidered an AppleDouble with no attribute information.)andM;Finally, the Macintosh filesystem provides file information far moreextensive than that provided by UNIX filesystems.andP;  Each Macintosh file has anassociated type and an associated creator.andP;  The type identifies the file'scontents; the creator is the signature of the application that has createdthose contents.andP;  To provide such information for UNIX data stored in a fileformat other than AppleSingle or AppleDouble, the file manager must examinethe files and construct this information.andP;  This is similar to the UNIX filecommand's function.andM;Multiuser Considerations.andP;  In creating the Mac OS environment, the shared,multiuser environment of UNIX had to be accommodated.andP;  Macintosh systemsoftware centers around one directory, known as the System Folder, whichcontains the key files and resources needed to start the user interface.andO;Since UNIX allows several users to share a system, default and individualsettings for each user must be supported.andP;  These settings include theappearance and location of icons on the desktop, printer and serverselection, available fonts and desk accessories, and specialprograms--INITs--that are run when the user interface is started.andM;After logging on, a user can create a private System Folder to customize theenvironment without affecting other users' settings and to maintain securityusing UNIX file and directory permissions.andP;  A public System Folder is used ifa private one is not available, but users must realize that if they use thepublic System Folder, their settings may be altered as subsequent users logon.andM;Since System Folders can contain over one megabyte of data, A/UX employs UNIXsymbolic links to eliminate unnecessary copies of files.andP;  Some options, suchas system time, can be changed only by users with superuser access.andP;  OtherMacintosh-style operations such as restarting the system, may require theuser to enter a superuser password.andM;As mentioned earlier, access to Macintosh disks is supported by MacintoshToolbox system calls.andP;  Mac OS does not provide for access permissions onlocal disks, and A/UX does not enforce UNIX access permissions on thosedisks.andP;  Therefore, these disks can be used in the same manner under bothoperating systems.andP;  If a user wants to get access permissions for Macintoshfiles, the files can be transferred to the UNIX filesystem and UNIXpermissions can then be applied.andP;  Another advantage to sending Macintoshfiles to the UNIX filesystem is that they can then be accessed by machines ina heterogeneous network using NFS.andM;Access to the UNIX Side.andP;  The Macintosh Finder is a &quot;graphical shell&quot; used tomanipulate files and directories, to start applications, and to provideaccess to system services.andP;  Under A/UX, the Finder has been extended tosupport the underlying UNIX system.andP;  UNIX files and utilities can be accessedusing the same mouse point-and-click interface that is used to accessMacintosh applications and documents.andP;  By mapping UNIX-directory permissionsinto Macintosh folder (directory) permissions, the Finder can communicatethese permissions to the user.andM;For example, if a user has UNIX read and execute permissions for a directory,the Finder displays a standard folder icon for that directory.andP;  If the userlacks read permisions for tht directory, a shaded folder icon is displayedinstead.andP;  If the user does not have write permission for a directly, a&quot;no-write&quot; icon is drawn in the upper-left-hand corner of the window for thatdirectory's contents.andM;Since the native Macintosh environment does not support file permissions, theA/UX file manager uses Macintosh file attributes to communicate some filepermissions to the Finder.andP;  The only file permission the Finder cares aboutwhen opening files is read permission, which, if granted, is sufficient tolaunch an application or open a document.andP;  If a user lacks read permisssionfor a file, the File manager returns a Macintosh type/creator pair, which theFinder then uses to display a shaded file icon.andM;The Finder does not need to display write permissions; absence of writepermission is communicated to the user by the application that opens a file.andO;UNIX execute permissions apply to UNIX binaries and shell scripts, and theFinder displays a unique icon for each of these files.andP;  Additionally, a userwith the appropriate execute permissions can start a Macintosh applicationcontained in a file simply by entering the filename.andM;UNIX programs that use a Macintosh user interface (termed &quot;hybrid&quot;applications) can also run under A/UX.andP;  To the user they appear identical toMacintosh applications.andP;  Hybrid applications can be started in the same wayas Macintosh applications, either by double-clicking with the mouse on anicon or by typing the filename in a shell.andP;  The A/UX utility CommandShell isan example of such an application.andP;  A UNIX COFF executable that forks severaUNIX shells, CommandShell makes calls to the Macintosh Toolbox to displaywindows for each shell.andM;A common task on any UNIX system is editing text files.andP;  Double-clicking on atext file's icon will normally invoke TextEditor, a Macintosh text editorthat uses the mouse and pull-down menus.andP;  This utility provides multipleediting windows, so several files can be ope at the same time and text can becut and pasted between windows.andP;  If the user prefers to employ a standardUNIX editor such as vi, an environment variable can be set so thatdouble-clicking on text files invokes that editor instead.andP;  Since Macintoshtext files use a different character for line breaks, the A/UX file managerautomatically converts the line speculator; the line breaks appear as theyshould, regardless of which type of editor is used.andM;Multitasking.andP;  A/UX uses a modified version of Macintosh MultiFinder [R] thatallows users to alternate Toolbox applications running in the background.andO;MultiFinder is responsible for the context switching and scheduling betweenToolbox applications.andP;  The Macintosh model uses &quot;cooperative multitasking&quot;and depends on applications to be Multi-Finder-compatible--that is, they mustrelease control of the system by calling WaitNext Event().andP;  Since the A/UXMultiFinder allows hybrid applications to run as well, these UNIX processeshad to be MultiFinder-compatible, and designed with an eye to avoiding UNIXsystem calls that might block indefinitely.andP;  MultiFinder has no effect onUNIX processes that do not utilize the Macintosh user interface (such as Isor networking daemons); these processes are controlled by the UNIX scheduler.andM;The UNIX system call select() is often used to determine whether I/O to afile descriptor is pending.andP;  However, a hybrid program that uses select(1)can conflict with MultiFinder since this system call can block and wait foran indefinite time.andP;  MultiFinder has been modified to inform a program when acall to select () will not block.andP;  It delivers a special Macintosh event tothe program, telling it that I/O to one of the select () file descriptors ispending; a subsequent call to select() will return without blocking.andP;  SinceMultiFinder works in conjunction with select(), a new A/UX system call hasbeen added, ui_setselect(), which sets the file descriptor musts used bydeterminating the state of select()'s I/O.andM;Multifinder runs using a fixed memory-partition size.andP;  However, it can usethe virtual memory provided by A/UX to allocate a memory partition large thanphysical memory (under Mac OS, MultiFinder is currently limited to thephysical memory size).andP;  It use a UNIX shared-memory segment to run Macintoshapplications and manage the Macintosh user interface for hybrid applications.andO;These programs must ensure that the data structures managed by MultiFinderare located in the MultiFinder shared area.andM;A/UX MultiFinder must also share some of its UNIX file descriptors with thehybrid UNIX applications, and it must maintain the same file-descriptor IDsfor all hybrid UNIX processes.andP;  This is accomplished using a file-descriptortable augmented by special &quot;global&quot; file-descriptor IDs; specifying a flagwhen a file is opened of created allocates a shared file descriptor to thatfile.andM;The Motorola 68000 uses only 24 bits for addressing, and many of the olderMacintosh applications took advantage of this by using the high eight bits ofeach address to store other information.andP;  Within the 32-bit addressenvironment provided by A/UX, this type of behavior would normally cause anaddressing exception.andP;  To enable these 24-bit Macintosh applications to rununder A/UX, users can enter a mode which creates a 24-bit UNIX process byconstructing page-table entries to ignore the high-order eight bits whencomputing addresses.andP;  The rest of the UNIX system can continue to operatewith normal 32-bit addressing while 24-bit applications executive in thisspecial process.andM;One of the most important components of a graphical user interface is itsresponsiveness to user's actions.andP;  Much of the Macintosh user-interface codehas been highly optimized to provide very good performance on Macintoshsystems.andP;  The UNIX scheduler under A/UX is similarly biased to give priorityto the user-interface process.andP;  It also uses a time quantum that allows theuser-interface process to be scheduled in quickly, without switching UNIXprocess contexts excessively.andP;  Mouse cursor-tracking and -display areperformed within the A/UX kernel to ensure smooth, responsive userinteraction.andM;Bridging the Macintosh and UNIX Environments.andP;  The X Windows System hasbecome an important component of many modern UNIX systems.andP;  MacX, an X11server that runs under both A/UX 2.0 and Mac OS, was designed to display Xclient windows on the Macintosh desktop along with UNIX terminal windows andMacintosh application windows.andP;  MacX displays windows in two modes.andP;  In thefirst mode, MacX allocates a separate Macintosh window for each top-level Xclient window that would otherwise be managed by an X11 window manager.andP;  Eachclient Macintosh window can be configured to appear as a standard Macintoshwindow.andP;  MacX performs the duties of an X window manager and of the server,providing &quot;click-to-type&quot; control over the X client windows.andP;  By performingthe duties of the X window manager, MacX can provide cut-and-paste functionsnot only between X clients that conform to the X Window System's Inter-ClientCommunication Conventions Manual (ICCCM), but between X clients and Macintoshapplications as well.andM;MacX can also display all X clients in a single Macintosh window.andP;  In this&quot;rooted&quot; mode, a virtual X screen that may be larger or smaller than thephysical display is created.andP;  Users can scroll through this screen to viewthe entire X environment.andP;  The primary advantage of this mode is that userscan run any X window manager with the &quot;rooted&quot; clients; for example, theMotif window manager can be run in conjunction with X clients, using a Motifuser interface.andP;  MacX can support both display modes at the same time.andM;For networking services, MacX relies on the Communications Toolbox, whichuses a layer called MacTCP[R] to access TCP/IP.andP;  Writter originally for MacOS, MacTCP also runs on A/UX 2.0.andP;  Several Macintosh applications have beenwritten using MacTCP to provide access to UNIX services, and these can beused to access A/UX's UNIX facilities.andP;  One example is HyperNetNews, aHyperCard[R] program with a graphical interface for reading Usenet groups.andO;Another such application is Stanford MacIP, which uses Mail Handling PostOffice Protocols (MHPOP) and provides a Macintosh interface for managing andreading, UNIX mail.andP;  Other applications include terminal emulators andfile-transfer services.andM;A/UX provides over 500 UNIX utilities and shell scripts; many of theseprograms originated in an earlier, non-graphical release of UNIX, andtherefore use ASCII characters to display their output.andP;  Almost all theseutilities are &quot;non-interactive&quot;, at least in the Macintosh sense; the usertypes the command with a few modifier flags, executes it, and then studiesthe output.andM;To simplfy user execution of these programs, A/UX supports a mechanism calledCommando that constructs and displays a dialog box for every UNIX programthat allows the user to select command-modifier flags.andP;  These modifiers aredescribed in readable text, and the user positions the mouse to point andclick on the desired options; a built-in help system describes each option ingreater detail as it is selected.andP;  After the user has selected the modifiers,a command line is constructed according to the options; the user may thenexecute the command line as generated, or use a shell's pipe mechanism tobuild compound commands.andP;  Users access Commando by double-clicking on a UNIXprogram icon, by selecting a menu item from within A-UX's terminal emulator,or by invoking the cmdo utility.andM;A/UX also combines Macintosh and UNIX printing capabilities.andP;  Under theMacintosh printing model, AppleTalk[R] networking protocols are used toaccess printers on a network.andP;  The BSD remote printing mechanism used by A/UXhas been modified so that UNIX print jobs are spooled and printed by aprinter on an AppleTalk network.andP;  Non-A/UX-based UNIX systems on a TCP/IPnetwork can send remote print jobs to an A/UX system, which forwards them toan AppleTalk network printer.andP;  One of the benefits of Macintosh printing isthat printers are selected using a &quot;point-and-click&quot; interface.andM;A/UX also supports shared libraries, which allow programs to share a singlecopy of common code, bound to programs at runtime.andP;  The advantages of sharedlibraries are great; the amount of disk-storage space used by UNIX programsis reduced, and programs using shared libraries can take advantage of changesto these libraries without being recompiled.andP;  The Macintosh A-line trapmechanism similarly allows operating system and Toolbox calls to be modifieddynamically, enabling Macintosh or hybrid applications to use modified callswithout recompilation.andP;  The combination of shared libraries and the Toolboxfacilitates the maintenance of programs run on A/UX.andM;The complexity of porting Macintosh applications to UNIX becomes a minorissue, since A/UX runs existing Macintosh binaries.andP;  Porting UNIX programs toA/UX is usually a straightforward matter, since the latter supports standardssuch as POSIX.andP;  MacX and support for the X library allow X11 programs to runon A/UX.andP;  With graphical user interfaces becoming increasingly popular onUNIX systems, new A/UX uses are emerging.andP;  By allowing Macintosh applicationsto operate in conjunction with X Window applications, and by incorporatingthe Macintosh user interface with traditional UNIX components, A/UX providesa versatile and flexible environment for addressing UNIX needs.andM;Michael Chow is the project leader for the A/UX Desktop at Apple Computer.andO;He has worked on graphical environments for UNIX, including the Finder and anX11 server.andP;  Chow holds degrees in computer science and electricalengineering from Stanford and Berkeley.andM;B.andP;  Winston Hendrickson is a project leader for the A/UX Toolbox at AppleComputer, and is the primary engineer for the A/UX 2.0 File Manager.andP;  Heholds a degree in computer science from the University of California atRiverside.andO;</TEXT></DOC>
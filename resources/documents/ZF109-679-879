<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-679-879  </DOCNO><DOCID>09 679 879.andM;</DOCID><JOURNAL>Data Based Advisor  Dec 1990 v8 n12 p78(2)* Full Text COPYRIGHT Data Based Solutions 1990.andM;</JOURNAL><TITLE>Give me tools, not toys. (column)</TITLE><AUTHOR>Freeland, Russell R.andM;</AUTHOR><DESCRIPT>Topic:     Data Base Management SystemsProgramming LanguagesApplicationsCodesProgrammersUser Needs.andM;</DESCRIPT><TEXT>Give Me Tools, Not Toys Dave Kalman used to taunt me, saying that he knew Ididn't like dBASE, and trying to get me to 'fess up.andP;  Truth is, I don't muchlike some of the things I have to do with dBASE.andP;  Business applications canget old sometimes, but more often I find myself cursing the language itself.andM;The biggest problem with the dBASE language is that it evolved (and isevolving) at a time when software products have more marketing punch thanprogramming languages.andP;  But dBASE is, and always will be at its heart, aprogramming language.andP;  Still, there is resistance to taking the steps thatwould legitimize it as a language.andP;  A formal definition of the language (fromeach vendor) would help a lot.andP;  But such a definition could be embarrassing,considering the inconsistencies spread throughout every implementation of thelanguage.andM;It's almost surprising to see that Nantucket has (finally!) come around andincluded true compiler directives and local variables.andP;  But other features of&quot;real languages&quot; are still lacking.andP;  One of my pet peeves is the absence of agoto (unconditional jump) directive.andP;  Every other language I've worked withhas a goto--even those whose basic premise is to avoid its use.andP;  Why?andO;Because it is genuinely useful in some cases.andM;Like any tool, jump statements are counterproductive when misused.andP;  Andthat's the argument I always hear when I broach the subject.andP;  Everyone seemsto be concerned with the quality of the code that will result if gotos areallowed.andP;  What I always hear between the lines is that dBASE programmersaren't ready for anything but a toy language.andP;  I disagree.andM;How about the quality of the code that's out there now?andP;  Lack of variabletyping, almost no scoping options, design flaws that necessitate obtuse macrosubstitution, and other basic lacks may have made dBASE the most abusedcomputer language in the short history of the subject.andP;  Still, some very goodprogrammers have found the language to be their vehicle of choice for certainkinds of application development.andP;  They've kludged around the language'slimitations and made things work, but they're tired of it.andM;The fundamental problem is vendors' perception of who makes up the market.andO;Sure, the greatest part of the buying market is end users.andP;  But who uses thedBASE language most?andP;  Programmers.andP;  And what do these people need most?andP;  Areal language, with tools for building and maintaining applications--toolslike conditional compilation, static local variables, procedure/functionprototyping, inclusion of header definition files...all the techniques thatfolks use nowadays to produce superior software.andP;  These are the basic toolsneeded to produce dBASE compilers and interpreters--the folks who write dBASElanguage products have forgotten to include their favorite tools in the dBASElanguages themselves!andM;R.andP;  Russell Freeland is a freelance, free-spirited consultant and programmerin Fort Lauderdale, Florida.andP;  His company, Synergy Corp., publishes SCRIMAGE,a screen and menu design tool for dBASE language programmers.andP;  Russell alsoclaims to play a mean jazz trombone.andO;</TEXT></DOC>
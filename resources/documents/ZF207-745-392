<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-745-392  </DOCNO><DOCID>07 745 392.andM;</DOCID><JOURNAL>Communications of the ACM  Oct 1989 v32 n10 p1261(3)* Full Text COPYRIGHT Assn. for Computing Machinery, Inc. 1989.andM;</JOURNAL><TITLE>Abstracts from other ACM publications.andM;</TITLE><DESCRIPT/><NOTE>Only Text is presented here; see printed issues for graphics.andO;</NOTE><TEXT>Petri-Net-Based Hypertext: Document Structure with Browsing SemanticsandM;P.andP;  David Stotts and Richard FurutaandM;We present a formal definition of the Trellis model of hypertext and describean authoring and browsing prototpye called (alpha)Trellis that is based onthe model.andP;  The Trellis model not only represents the relationships that tieindividual pieces of information together into a document (i.e., theadjacencies), but specifies the browsing semantics to be associated with thehypertext as well (i.e., the manner in which the information is to be visitedand presented).andP;  The model is based on Petri nets, and is a generalization ofexisting directed graph -based forms of hypertext.andP;  The Petri net basispermits more powerful specification of what is to be displayed when ahypertext is browsed and permits application of previously developed Petrinet analysis techniques to verify properties of the hypertext, A number ofuseful hypertext constructs, easily described in the Trellis model, arepresented.andP;  These include the synchronization of simultaneous traversals ofseparate paths through a hypertext, the incorporation of access controls intoa hypertext (i.e., specifying nodes that can be proven to be accessible onlyto certain classes of browsers), and construction of multiple specialized(tailored) versions from a single hypertext.andM;For Correspondence: Department of Computer Science and Institute for AdvancedComputer Studies, University of Maryland, College Park, MD 20742.andM;Formative Design Evaluation of SuperBookandM;Dennis E.andP;  Egan, Joel R.andP;  Remde, Louis M.andP;  Gomez, Thomas K. Landauer,Jennifer Eberhardt, and Carol C LochbaumandM;SuperBook is a hypertext browsing system designed to improve the usability ofconventional documents.andP;  Successive versions of SuperBook were evaluated in aseries of behavioral studies, Students searched for information in astatistics text presented either in conventional printed form or in SuperBookform, The best version of SuperBook enabled students to answer searchquestions more quickly and accurately than they could with the conventionaltext.andP;  Students wrote higher quality &quot;open-book&quot; essays using SuperBook thanthey did with the conventional text, and their subjective ratings of thedocumentation strongly favored SuperBook,andM;This work is a case study of formative design evaluation, Behavioralevaluation of the first version of SuperBook showed how design factors anduser strategies affected search and established baseline performance measureswith printed text.andP;  The second version of SuperBook was implemented with thegoal of improving search accuracy and speed.andP;  UserandM;January 1989andM;strategies that had proved effective in the first study were made very easyand attractive to use.andP;  System response time for common operations wasgreatly improved.andP;  Behavioral evaluation of the new SuperBook demonstratedits superiority to printed text and suggested additional improvements thatwere incorporated into &quot;MiteyBook,&quot; a SuperBook implementation for PC -sizescreens.andP;  Search with MiteyBook proved to be approximately 25 percent fasterand 25 percent more accurate than that obtained with a conventional printedbook, For Correspondence: Bellcore, 2L-347, 445 South St., Morristown, NJ07960.andM;Context and Orientation in Hypermedia NetworksandM;Kenneth Utting and Nicole YankelovichandM;The core of hypermedia's power lies in the complex networks of links that canbe created within and between documents.andP;  However, these networks frequentlyoverwhelm the user and become a source of confusion.andP;  Within Intermedia, wehave developed the Web View-a toot for viewing and navigating such networkswith a minimum of user confusion and disorientation, The key factors in theWeb View's success are a display that combines a record of the user's paththrough the network with a map of the currently available links; a scope linethat summarizes the number of documents and links in the network; and a setof commands that permit the user to open documents directly from the WebView.andM;For Correspondence: Institute for Research in Information and Scholarship,Brown University, P.O.andP;  Box 1946, Providence, RI 02912; kdu(atsignal)iris,brown.edu, ny(at signal)iris.brown.edu.andM;A Data Model for Flexible Hypertext Database Systems Frank Wm.andP;  TompaandM;Hypertext and other page-oriented databases cannot be schematized in the samemanner as record-oriented databases, As a result, most hypertext databasesimplicitly employ a data model based on a simple, unrestricted graph, Thispaper presents a hypergraph model for maintaining page-oriented databases insuch a way that some of the functionality traditionally provided by databaseschemes can be available to hypertext databases.andP;  In particular, the modelformalizes identification of commonality in the structure, set-at-a-timedatabase access, and definition of user-specific views.andP;  An efficientimplementation of the model is also discussed.andM;For Correspondence: Department of Computer Science, University of Waterloo,Waterloo, Ontario, Canada N2L 3Gl.andM;Journal of the Association for Computing Machinery July 1989 RecognizingCircle Graphs in Polynomial Time Csaba P.andP;  Gabor, Kenneth J.andP;  Supowit, andWen-Lian HsuandM;The main result of this paper is an 0(! V ! x ! E!) time algorithm fordeciding whether a given graph is a circle graph, that is, the intersectiongraph of a set of chords on a circle, The algorithm utilizes two newgrapb-theoretic results, regarding necessary induced subgraphs of graphshaving neither articulation points nor similar pairs of vertices.andO;Furthermore, as a substep of the algorithm, it is shown how to find in 0(! V! x ! E!) time a decomposition of a graph into prime graphs, therebyimproving on a result of Cunningham.andM;For Correspondence: C.andP;  P.andP;  Gabor, Department of Computer Science, PrincetonUniversity, Princeton, NJ 08544; K.andP;  J.andP;  Supowit, Department of Computer andInformation Science, Ohio State University, Columbus, OH 43210; W.andP;  -L.andP;  Hsu,Department of Industrial Engineering and Management Sciences, NorthwesternUniversity, Evanston, IL 60208.andM;Efficient Implementation of Graph Algorithms Using ContractionandM;Harold N.andP;  Cabow, Zvi Galiz, and Thomas H.andP;  SpencerandM;A graph problem, which we call the (component) merging problem, is defined.andO;Versions of the problem appear as bottlenecks in various graph algorithms.andO;It is shown how to solve the problem efficiently, and how to derive improvedsolutions for two important special cases of the problem.andP;  The solutions makeuse of several new data structures.andP;  The performance of the data structuresis sped up by introducing a new algorithmic tool called packets.andM;New observations are made about B-trees and F-heaps.andP;  Specifically, B-treescan be used simultaneously as a priority queue and a concatenable queue.andP;  Itis also shown that F-heaps support some kinds of split operations with noloss of efficiency.andM;An immediate application of the solution to the simplest version of themerging problem is an 0(t(m, n)) algorithm for finding minimum spanning treesin undirected graphs without using F-heaps, where t(m, n) = m log sub 2, logsub 2, log sub d, n, the graph has n vertices and m edges, and d =max(m/n,2).andP;  Packets also improve the F-heap minimum spanning tree algorithm,giving the fastest algorithm currently known for this problem.andM;Using efficient solutions to the merging problem and the new observationabout F-heaps, an 0(n(t(m, n) + n log n)) algorithm is derived for finding amaximum weighted matching in general graphs.andP;  This settles an open problemposed by Tarjan in which the weaker bound of O(nm log(n sup 2/m)) wasconjectured.andP;  For Correspondence: H.andP;  N.andP;  Gabow, Department of Computerscience, University of Colorado at Boulder, Boulder, CO 80309; Z.andP;  Galil,Computer Science Department, Columbia University, New York, NY 10027; T.andP;  H.andO;Spencer, Department of Computer Science, Rensselaer Polytechnic Institute,Troy, NY 12180-3590.andM;Optimum Lopsided Binary TreesandM;Sanjiv Kapoor and Edward M.andP;  ReingoldandM;Binary search trees with costs alpa and beta, respectively, on the left andright edges (lopsided search trees) are considered.andP;  The exact shape, minimumworst-case cost, and minimum average cost of lopsided trees of n internalnodes are determined for nonnegative alpha and beta; the costs are bothroughly log sub p,(n + 1) where p is the unique real number in the interval(1, 2] satisfying l/p sup alpha + l/p sup beta = 1.andP;  Search procedures aregiven that come within a small additive constant of the lower bounds,Almost-optimum algorithms for the lopsided case of unbounded searching arealso obtained, Some extensions to nonconstant costs are briefly sketched.andO;For Correspondence: S.andP;  Kapoor, Indian Institute of Technology, Delhi, HauzKhas, New Delhi,110016 India.andP;  E.andP;  M.andP;  Reingold, Department of ComputerScience, University of Illinois at Urbana-Champaign, 1304 West SpringfieldAvenue, Urbana, IL 61801.andM;Hiearchical Planarity Testing AlgorithmsandM;Thomas LengauerandM;Using hierarchical definitions, one can describe very large graphs in smallspace.andP;  The blow -up from the length of the hierarchical description to thesize of the graph can be as large as exponential, If the efficiency of graphalgorithms is measured in terms of the length of the hierarchical descriptionrather than in terms of the graph size, algorithms that do not exploit thehierarchy become hopelessly inefficient, Whether the hierarchy can beexploited to speed up the solution of graph problems depends on thehierarchical graph model.andP;  In the literature, hierarchical graph models havebeen described that allow almost no exploitation of the hierarchy [16].andP;  Inthis paper, a hierarchical graph model that permits taking advantage of thehierarchy is presented, For this model algorithms are given that testplanarity of a hierarchically described graph in linear time in the length ofthe hierarchical description.andP;  For Correspondence: Fachberich 17, UniversitatGesamthochschule Paderborn, Postfach 1621, 4790 Paderborn, West Germany.andM;A Trade-Off between Space and Efficiency for Routing TablesandM;David Pelig and Eli UpfalandM;Two conflicting goals play a crucial role in the design of routing schemesfor communication networks.andP;  A routing scheme should use paths that are asshort as possible for routing messages in the network, while keeping therouting information stored in the processors' local memory as succinct aspossible.andP;  The efficiency of a routing scheme is measured in terms of itsstretch factor-the maximum ratio between the length of a route computed bythe scheme and that of a shortest path connecting the same pair of vertices.andM;Most previous work has concentrated on finding good routing schemes (with asmall fixed stretch factor) for special classes of network topologies.andP;  Inthis paper the problem for general networks is studied, and the entire rangeof possible stretch factors is examined.andP;  The results exhibit a trade-offbetween the efficiency of a routing scheme and its space requirements.andO;Almost tight upper and lower bounds for this tradeoff are presented.andO;Specifically, it is proved that any routing scheme for general n-vertexnetworks that achieves a stretch factor k andgt;/= 1 must use a total of (ohms(nsub(1+1/(2k+4)bits of routing information in the networks.andP;  This lower boundis complemented by a family A(k) of hierarchical routing schemes (for every kandgt;/= 1) for unit-cost general networks, which guarantee a stretch factorofO(k), require storing a total of O(k sup 3, n sup 1+(1/k)log n) bits ofrouting information in the network, name the vertices with 0(log sup 2 n).andO;bit names and use 0 (log n)-bit headers.andM;For Correspondence: Department of Applied Mathematics, The WeizmannInstitute, Rehovot 76100 Israel.andM;Simple Constant-Time Consensus Protocols in Realistic Failure ModelsandM;Benny Chor, Michael Merritt, and David B.andP;  ShmoysandM;Using simple protocols, it is shown how to achieve consensus in constantexpected time, within a variety of fail-stop and omission failure models.andO;Significantly, the strongest models considered are completely asynchronous.andO;All of the results are based on distributively flipping a coin, which isusable by a significant majority of the processors.andP;  Finally, a nearlymatching lower bound is also given for randomized protocols for consensus.andM;For Correspondence: B.andP;  Chor, Technion, Haifa, Israel; M. Merritt, ATandamp;T BellLaboratories, Murray Hill, NJ 07974; D.B.andP;  Shmoys, Room 2-376, Department ofMathematics, Massachusetts Institute of Technology, Cambridge, MA 02l39.andM;Acyclic Fork-Join Queuing NetworksandM;Francois Baccelli, William A.andP;  Massey, and Don TowsleyandM;In this paper the class of acyclic fork-join queueing networks that arise invarious applications, including parallel processing and flexiblemanufacturing are studied.andP;  In such queuing networks, a fork describes thesimultaneous creation of several new customers, which are sent to differentqueues.andP;  The corresponding join occurs when the services of all these newcustomers are completed.andP;  The evolution equations that govern the behavior ofsuch networks are derived.andP;  From this, the stability conditions are obtainedand upper and lower bounds on the network response times are developed.andO;These bounds are based on various stochastic ordering principles and on thenotion of association of random variables.andM;For Correspondence: F.andP;  Baccelli, INRIA-Sophia 06565, Valbonne, France; W.A.andO;Massey, ATandamp;T Bell Laboratories, Murray Hill, NJ 07940; D.andP;  Towsley,University of Massachusetts, Amherst, MA 01003.andM;Optimal Bounds for Decision Problems on the CRCW PRAMandM;Paul Beame and Johan HastadandM;Optimal (ohmes(log n/log log n) lower bounds on the time for CRCW PRAMs withpolynomially bounded numbers of processors or memory cells to compute parityand a number of related problems are proven.andP;  A strict time hierarchy ofexplicit Boolean functions of n bits on such machines that holds up to 0(logn/log log n) time is also exhibited.andP;  That is, for every time bound T withinthis range a function is exhibited that can be easily computed usingpolynomial resources in time T but requires more than polynomial resources tobe computed in time T - 1.andP;  Finally, it is shown that almost all Booleanfunctions of n bits require log n - log log n + (ohmes)(l) time when thenumber of processors is at most polynomial in n.andP;  The bounds do not placerestrictions on the uniformity of the algorithms nor on the instruction setsof the machines.andM;For Correspondence: P.andP;  Beame, Computer Science Department, FR-35, Universityof Washington, Seattle, Washington 98195; J. Hastad, Royal Institute ofTechnology, Stockholm, S-100-44, Sweden.andM;Computing Surveys June 1989 Control Strategies for Two-Player Games BruceAbramsonandM;Computer games have been around for almost as long as computers.andP;  Most ofthese games, however, have been designed in a rather ad hoc manner becausemany of their basic components have never been adequately defined.andP;  In thispaper some deficiencies in the standard model of computer games, the minimaxmodel, are pointed out and the issues that a general theory must address areoutlined.andP;  Most of the discussion is done in the context of controlstrategies, or sets of criteria for move selection.andP;  A survey of controlstrategies brings together results from two fields: implementations of realgames and theoretical predictions derived on simplified game-trees.andP;  Theinterplay between these results suggests a series of open problems that havearisen during the course of both analytic experimentation and practicalexperience as the basis for a formal theory.andP;  For Correspondence: ComputerScience Department, University of Southern California, Los Angeles, CA 90089.andM;Explanation-Based Learning: A Survey of Programs and PerspectivesandM;Thomas EllmanandM;Explanation-based learning (EBL) is a technique by which an intelligentsystem can learn by observing examples.andP;  EBL systems are characterized by theability to create justified generalizations from single training instances.andO;They are also distinguished by their reliance on background knowledge of thedomain under study.andP;  Although EBL is usually viewed as a method forperforming generalization, it can be viewed in other ways as well.andP;  Inparticular, EBL can be seen as a method that performs four different learningtasks: generalization, chunking, operationalization, and analogy.andM;This paper provides a general introduction to the field of explanationbasedlearning.andP;  Considerable emphasis is placed on showing how EBL combines thefour learning tasks mentioned above.andP;  The paper beginswith a presentation ofan intuitive example of the EBL technique.andP;  Subsequently EBL is placed in itshistorical context and the relation between EBL and other areas of machinelearning is described.andP;  The major part of this paper is a survey of selectedEBL programs, which have been chosen to show how EBL manifests each of thefour learning tasks.andP;  Attempts to formalize the EBL technique are alsobriefly discussed.andP;  The paper concludes with a discussion of the limitationsof EBL and the major open questions in the field.andM;For Correspondence: Columbia University, Department of Computer Science, NewYork, NY 10027.andM;Applications of Combinatorial Designs in Computer ScienceandM;Charles J Colbourn and Paul C.andP;  Van OorschotandM;The theory of combinatorial designs has been used in widely different areasof computation concerned with the design and analysis of both algorithms andhardware, Combinatorial designs capture a subtle balancing property that isinherent in many difficult problems and hence can provide a sophisticatedtool for addressing these problems.andP;  The role of combinatorial designs insolving many problems that are basic to the field of computing is explored inthis paper.andP;  Case studies of many applications of designs to computation aregiven; these constitute a first survey, which provides a representativesample of uses of designs.andP;  More importantly, they suggest paradigms in whichdesigns can be used profitably in algorithm design and analysis.andM;For Correspondence: Department of Computer Science, University of Waterloo,Waterloo, Ontario N2L 3Gl, Canada.andM;ACM Transactions on Computer Systems August 1989 Preserving and Using ContextInformation in Interprocess CommunicationandM;Larry L.andP;  Peterson, Nick C.andP;  Buchholz, and Richard D. SchlichtingandM;When processes in a network communicate, the messages they exchange define apartial ordering of externally visible events.andP;  While the significance ofthis partial order in distributed computing is well understood, it has notbeen made an explicit part of the communication substrate upon whichdistributed programs are implemented.andP;  This paper describes a newinterprocess communication mechanism, called Psync, that explicitly encodesthis partial ordering with each message.andP;  The paper shows how Psync can beefficiently implemented on an unreliable communications network, and itdemonstrates how conversations serve as an elegant foundation for orderingmessages exchanged in a distributed computation and for recovering fromprocessor  failures.andM;For Correspondence: Department of Computer Science, University of Arizona,Tucson, AZ 85721.andM;Integrating Security in a Large Distributed SystemandM;M.andP;  SatyanarayananandM;Andrew is a distributed computing environment that is a synthesis of thepersonal computing and timesharing paradigms.andP;  When mature, it is expected toencompass over 5,000 workstations spanning the Carnegie Mellon Universitycampus.andP;  This paper examines the security issues that arise in such anenvironment and describes the mechanisms that have been developed to addressthem.andP;  These mechanisms include the logical and physical separation ofservers and clients, support for secure communication at the remote procedurecall level, a distributed authentication service, a file-protection schemethat combines access lists with UNIX mode bits, and the use of encryption asa basic building block.andP;  The paper also discusses the assumptions underlyingsecurity in Andrew and analyzes the vulnerability of the system.andP;  Usageexperience reveals that resource control, particularly of workstation CPUcycles, is more important than originally anticipated and that the mechanismsavailable to address this issue are rudimentary,andM;For Correspondence: School of Computer Science, Carnegie Mellon University,Pittsburgh, PA 15213-3890.andM;Verified Data Transfer Protocols with Variable Flow ControlandM;A.andP;  Udaya ShankarandM;We present and verify a sliding window protocol which uses modulo-N sequencenumbers to achieve reliable flow-controlled data transfer between a producerand a consumer connected by unreliable channels.andP;  The consumer's data needsare represented by a receive window whose size can vary with time.andP;  Theproducer entity sends segments of data words that lie within the consumer'sreceive window.andP;  The consumer entity sends acknowledgment, selectiveacknowledgment, and selective reject messages that inform the producer entityof the current receive window size, the data word next expected, and thereception (or lack of reception) of out-of-sequence data segments.andP;  Ourprotocol is, therefore, a proper extension of existing transport and datalink protocol standards such as TCP, ISO TP, HDLC, ADCCP, and so forth.andM;We consider two types of unreliable channels.andP;  The first type, referred to astransport channels, can lose, duplicate, and reorder messages to an arbitraryextent, but impose an upper bound on message lifetimes (which can be verylarge, e.g., days).andP;  The second type, referred to as data link channels, canonly lose messages, For both types of channels, we obtain the minimum valueof N that ensures safe operation without imposing any constraints on theretransmissions of messages or on the data segment sizes.andP;  Thus, anyretransmission or acknowledgment policy that optimizes the protocol'sperformance can be used.andP;  For transport channels, this value.! N is afunction of the maximum message transmission rate, the maximum messagelifetime, and the maximum receive window size.andP;  For data link channels, thisvalue of N is a function only of the maximum receive window size.andP;  We verifyprogress under three different liveness assumptions: retransmissionsinitiated by both entities, only by the producer entity, and only by theconsumer entity.andP;  The protocol also satisfies a convenient noninterfeTencesafety property between the acknowledgment, selective acknowledgment, andselective reject messages.andM;The protocols are specified as event-driven systems and verifiedhierarchically in two major stages.andP;  First, we verify that correctflow-controlled data transfer results if the sequence numbers in the channelssatisfy certain correct interpretation bounds, irrespective of the types oferrors that the channels may have.andP;  Second, for both transport and data linkchannels, we verify that the correct interpretation bounds are enforced bythe corresponding minimum values of N.andP;  For the verification of the transportchannel case, we use a system model with continuous measures of time in whichreal-time constraints can be formally specified and verified.andM;For Correspondence: Department of Computer Science and Institute for AdvancedComputer Studies, University of Maryland, College Park, MD 20742.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-683-341  </DOCNO><DOCID>09 683 341.andM;</DOCID><JOURNAL>Hewlett-Packard Journal  Dec 1990 v41 n6 p24(10)* Full Text COPYRIGHT Hewlett Packard 1990.andM;</JOURNAL><TITLE>Optical disk autochanger servomechanism design. (technical)</TITLE><AUTHOR>Oliver, Thomas C.; Bianchi, Mark J.andM;</AUTHOR><SUMMARY>Three factors that contributed to the successful design of theservomechanism of the Hewlett-Packard Series 6300 20GB/Arewritable optical disk library system are the use of individualworkstations connected by a local area network (LAN), developmentof the data capture tool, and the mechanical regression testsuite.andP;  The servomechanism supplies the muscles, from motors,power supplies, and sensors, and brains, from the firmware programthat controls the muscles, to bring the mechanical limbs to life.andO;Design goals included high reliability, flexibility, systemstability, high performance, user safety, and contributions toother parts of the development.andP;  A sense of touch and errorrecovery routines achieve high reliability.andM;</SUMMARY><DESCRIPT>Company:   Hewlett-Packard Co. (Products).andO;Ticker:    HWP.andO;Product:   HP 6300 (Optical disk drive) (Design and construction).andO;Topic:     ReliabilityDesignOptical DisksServomechanisms.andO;Feature:   illustrationchart.andO;Caption:   Servo hardware architecture. (chart)Top-level firmware architecture. (chart)Servo firmware architecture. (chart)andM;</DESCRIPT><TEXT>[FIGURES HAVE BEEN OMITTED]andM;A &quot;sense of touch&quot; and error recovery routines contribute to reliability.andO;Data capture, error injection, and mechanical regression testing facilitiesimproved the productivity of the designers.andM;THE SERVOMECHANISM OF THE HP Series 6300 Model 20GB/A rewritable optical disklibrary system is a collection of electronics and firmware algorithms thatcontrol the autochanger mechanism.andP;  The servo provides the muscles and brainsthat bring the mechanical limbs to life.andP;  Muscles are provided using motors,power supplies, and sensors.andP;  The brains are contained in the firmwareprogram that controls how the muscles are energized.andM;It is the responsibility of the servo to control the autochanger mechanismreliably.andP;  Designing for reliable control requires that many aspects of thesystem be analyzed and optimized.andP;  The design encompasses a broad range ofengineering disciplines, including system models for stability andperformance, continuous and discrete-time control theory, firmwarearchitecture, motor parameter optimization, analog hardware design, anddigital logic design.andP;  Goals and SolutionsandM;The goals for the servomechanism design were high reliability, flexibility,system stability, high performance, user safety, and contributions to otherparts of the development effort.andM;Techniques for achieving high reliability include the sense of touch foradaptive, gentle movements, minimizing the number of components throughfirmware integration, the use of proven, reliable technologies (HP ICs,standard LSI, surface mount technology), increasing hardware design marginsby overrating, and the use of self-calibration, error detection, and recoverytechniques.andM;Flexibility is provided by firmware implementation of servo functions, amodular design architecture, and the use of a high-level programminglanguage.andM;System stability is ensured by extensive system modeling before and duringimplementation, optimized programmable compensation for each movement, andmargin verification over all operating ranges.andM;High performance is achieved by optimal compensator selection for eachmovement, motor and power supply optimization based on the performance model,and overlapping of movements.andM;User safety is ensured by continuously monitoring applied forces in firmwareand hardware.andM;Contributions to the development project outside the servo area include adata capture system, mechanical regression tests, error injection, and codethat can be leveraged by other projects.andM;Design PhilosophyandM;Extensive modeling was performed before the design was implemented.andP;  Aperformance model was developed so that motors, gears, and power suppliescould be selected to meet the swap time goal.andP;  Plant models and compensatortechniques' were simulated so that optimal control schemes could beinvestigated.andP;  Bandwidth analysis was required to ensure that amicroprocessor could close the control loop fast enough.andP;  Root locus and Bodeanalysis methods were vital tools used to ensure adequate stability margins.andM;Proven, reliable HP technologies are employed in the servo design.andP;  Digitalimplementations were selected over analog techniques because they offergreater flexibility and fewer components.andP;  A custom digital IC from the HPDraftPro plotter family is used because it has a proven track record and isused in large volumes.andP;  HP optical encoders were a natural choice based ontheir exceptional reliability and manufacturability.andP;  A power driver from theHP 7980A tape drive is also used.andP;  Design margins were increased on allcritical components, particularly the devices that dissipate large amounts ofpower.andP;  Additional reliability is achieved by sharing a single microprocessorbetween the servo and interface functions.andM;The servo firmware architecture contributes to HP Series 6300 Model 20GB/Areliability on many levels.andP;  The firmware is designed to provide maximumintegration of servo functions such as closed-loop control, profilegeneration, and error detection.andP;  Firmware integration helps reduce partscount and increase flexibility.andP;  A &quot;sense of touch&quot; technique was developedto eliminate the need for sensors on the moving transport, a key contributionto reliability.andP;  Control of each mechanical function (vertical movement,flip, translate, I/O) is tailored to provide gentle, adaptive movements.andO;Self-calibration, error detection, and error recovery play key roles inincreasing reliability and manufacturability.andM;Another project philosophy was to increase the productivity of the designteam through the creation and use of tools.andP;  Features such as data capture,error injection, and mechanical regression tests are incorporated into thefirmware to give the design engineers a &quot;mechanical oscilloscope&quot; for themechanism.andP;  Our investment in networked HP 9000 workstations provided acommon development, debug, and testing platform for the design team.andO;Hardware ArchitectureandM;The servo hardware is kept to a minimum to ensure reliability.andP;  Digitalcircuitry is used whenever possible because it usually requires fewer partsand is more flexible than analog implementations.andP;  Real-time functions, whichcan't be performed in firmware, reside in hardware.andP;  These functions includethe motor drivers and the motor position encoding.andP;  Fig.andP;  1 shows the servohardware architecture.andM;The motor driver consists of a pulse width modulator and an H-bridgeamplifier.andP;  A custom HP ASIC (application specific IC) is used to generate aPWM (pulse width modulation) signal for two motor drivers configured forbidirectional operation.andP;  The IC contains a register that is used totransform a digital value into a TTL PWM signal having a duty cycleproportional to the register value.andP;  A state sequencer PAL (programmablearray logic) transforms the IC's outputs into four time-sequenced signalsthat control operation of the FET H-bridge.andP;  The PAL prevents crossconduction in the FET H-bridge and offers a flexible alternative to analogtime delay circuits.andP;  The FETs amplify the sequencer outputs and presentvoltage pulses to the motor.andP;  The motor averages out the high-frequencypulses and responds as if a dc voltage were applied at its inputs.andM;As the motor turns, its two-channel shaft encoder sends a series of pulses tothe HP ASIC.andP;  Quadrature decoding is performed by the ASIC, and a registerrepresenting the motor position is made available to the system.andP;  Thus, thefirmware uses the ASIC as a single interface with which to control the motorvoltage and receive positional feedback.andM;Firmware ArchitectureandM;The servo firmware is partitioned into two types of code: real-time andnonreal-time.andP;  Real-time firmware is referred to as servo code whilenonreal-time firmware is called mechanism code.andP;  Servo code is responsiblefor the closedloop operation of the system.andP;  Real-time code is placed in aninterrupt routine, which executes once every millisecond.andP;  Mechanismoperations are coordinated by the mechanism code through control of the servocode.andP;  The two processes communicate through a set of primitive routines,which manage the flow of commands and state information.andP;  Fig.andP;  2 shows theoverall firmware architecture and Fig.andP;  3 shows the servo firmwarearchitecture.andM;Servo CodeandM;The servo code is responsible for closed-loop compensation, profilegeneration, sense of touch calculation, error detection and shutdown, anddevelopment tools.andP;  Closed-Loop Compensation.andP;  Closed-loop compensation isthe algorithm that determines how the motors respond to command positionchanges or payload disturbances.andP;  Compensation is implemented with a simpleP-D (proportional-derivative) algorithm.andP;  It can be described by thefollowing equation:andM;pwm = [K.sub.1] (e - [K.sub.2.omega]andM;where pwm is the command voltage to the PWM on the motor control ASIC, e isthe motor's position error, omega is the motor's angular velocity, K, is theproportional gain (stiffness), and  is the derivative gain.andM;Since each mechanical function has a different load characteristic, the servogains must be adjusted for each mechanical operation.andP;  Knowledge of the loadis maintained by the mechanism code, which controls these gain values.andO;Profile Generation.andP;  The method used to change the motors' position frompoint [Y.sub.1, Z.sub.1] to point [Y.sub.2, Z.sub.2] is referred to asprofile generation.andP;  Profile generation is the creation of a series ofcommand positions to the Y and Z compensators that will cause the motors tomove a desired distance.andP;  A trapezoidal velocity profile is generated basedon parameters of distance, acceleration, and peak velocity.andP;  Scaling is alsoperformed to allow the motors to move different distances at different speedssimultaneously.andM;Sense of Touch Calculation.andP;  The servo code is responsible for determiningthe forces being exerted by each motor/load system.andP;  Forces are monitored bythe servo and mechanism firmware to obtain an additional form of feedbackfrom the mechanism.andP;  During each interrupt, the servo calculates force usingan equation based on motor voltage and velocity.andM;The equation is:andM;f = [K.sub.3 pwm] - [K.sub.4.omega]andM;where f is the applied force, pwm is the command voltage to the PWM on themotor control IC, w is the motor speed, and K, and K, are constants based onthe motors and gearing.andP;  Traditional techniques use direct currentmeasurement, which involves added circuitry and cost.andP;  Error Detection andShutdown.andP;  Error detection is an important safety and reliability feature ofthe servo code.andP;  During each interrupt, the servo firmware monitors theforces, voltages, and currents of both motor systems to determine if an errorcondition exists.andP;  Measured values are compared against expected thresholdsfor a given submove.andP;  The mechanism control code tailors the threshold foreach submove within a mechanical operation.andP;  If limits are exceeded, theservo will immediately disable motor power and record pertinent informationfor later processing.andM;Development Tools.andP;  The servo code also performs functions that aided in theproject as a whole.andP;  Features such as data capture, error injection, and peakforce detection were designed into the firmware in its early stages.andP;  Datacapture provided designers with a multichannel &quot;mechanical oscilloscope&quot; toobserve key variables used in the servo interrupt (see &quot;Data Capture,&quot; page29).andP;  Error injection allowed designers to simulate error conditions withinthe servo code and observe the system's response (see &quot;Error Injection,&quot; page33).andP;  Peak force detection provides servo information that was used toidentify movements that were stressing the design margins of the mechanicalassemblies.andP;  Hooks for the mechanical regression test were used to determinehow well a unit was operating over time.andM;Mechanism CodeandM;The mechanism code provides a translation between the SCSI interface and theservo code.andP;  Commands are received and executed by transforming them into aseries of smaller submoves.andP;  Adaption, error detection, and recoveryfunctionalities also reside in the mechanism code.andM;The mechanism code accepts high-level commands from the autochangerinterface, executes the command, and returns status.andP;  High-level commandsinclude the following:andM;* Move/Exchange.andP;  Move cartridge from element A to element B.andM;* Seek.andP;  Position transport at target element.andM;* Test.andP;  Test for the presence of a cartridge at a target element.andM;* Actuate Mailslot.andP;  Rotate the mailslot assembly to perform I/O with theuser.andM;An element is defined to be any possible resting place for a cartridge,including storage magazines, optical drives, the mailslot, and the transport.andM;The commands are transformed into a series of basic autochanger operations,such as:andM;*  Vertical Move.andP;  Position transport to a vertical position.andM;*  Translate.andP;  Position transport to access a given vertical stack ofcartridges.andM;*  Flip.andP;  Rotate the transport.andM;*  Cartridge I/O.andP;  Control the plunger to move cartridges between thetransport and the magazines, drives, or mailslot.andM;*  Rotate Mailslot.andP;  Control the plunger to rotate the mailslot assembly toor from the user.andM;For example, &quot;Move element 11 to element 2 with flip&quot; would be transformedinto the following sequence of autochanger functions:andM;1) Determine that element 11 is a storage slot and element 2 is a drive.andM;2) Determine if a translate is required to position the transport to theappropriate stack for the storage slot.andP;  If so, perform the translate.andM;3) Perform vertical move to the storage element.andM;4) Get cartridge from the storage element.andM;5) Perform flip.andM;6) Determine if a translate is required to position the transport to theappropriate stack for the drive.andP;  If so, perform the translate.andM;7) Perform vertical move to the drive element.andM;8) Put cartridge into the drive element.andM;Each autochanger function is then transformed into a series of smallmovements called submoves.andP;  There are two types of submoves:andM;* Move (Y,Z).andP;  Move motors a given distance at a specified acceleration andpeak speed.andM;* Saturate (Y,Z).andP;  Same as a move except that motion is halted if forceexceeds a specified threshold.andM;* Move (Y,Z) is used for high-speed, unobstructed movements of a knowndistance.andP;  Saturate (Y,Z) is for low-speed, adaptive movements of variabledistance.andM;Autochanger functions consist of one or more combinations of move (Y,Z) andsaturate (Y,Z) submoves.andP;  Each function has a tailored set of these submovesthat guarantees that the movements will be gentle.andP;  As the submoves areexecuted, the servo gains are adjusted to allow for changes in loadcharacteristics.andP;  An example of the process for a flip is outlined below:andM;1) Move plunger backwards a fixed distance to engage the flip lock.andM;2) Change gain for flipping.andM;3) Move plunger backwards a fixed distance to perform the flip.andM;4) Ensure that the flip is completed by performing a saturate until the forceexceeds a fixed threshold.andM;5) Change gain for plunger movement.andM;6) Move plunger forward to relieve the force.andM;Each submove within a function has a unique set of stability, performance,error recovery, force, and reliability critera.andP;  Each submove is assigned aunique identification code (ID) which is used to determine how the moveshould be performed.andP;  Before a submove is executed, its ID is used to fetchacceleration, velocity, and force limits to use.andP;  If the move fails, its IDis used to determine the type of error recovery scheme to employ.andP;  Thistailored technique provides gentle, stable control of the mechanism, thusincreasing reliability.andM;AdaptionandM;Adaptive algorithms were developed to increase reliability and decreasesensitivities to dimensional variations.andP;  Dimensions that require adaptionare the translate distance, flip distance, magazine depths, mailslot depth,and mailslot actuator throw.andP;  If a dimension is susceptible to variation, thefirmware is designed to measure the distance using a two-step process.andP;  Thefirst step is to undershoot the typical position using a move.andP;  The secondstep is to perform a saturate until a hard stop is encountered.andP;  The amountof variation is calculated and the proper dimensional adjustment is made.andO;Subsequent operations will be performed at full speed using the newlycalibrated dimension.andP;  This form of self-correction eliminates unnecessaryimpulse forces caused by tolerance buildup.andM;Adaption is also used to increase the reliability of the autochanger/driveinterface.andP;  Initially, drive insertions are performed at slow speeds.andP;  Anadaptive technique is employed to measure the point at which the driveaccepts the cartridge.andP;  The results are used so that subsequent insertionsare exact and can occur at high speed.andP;  Mechanism initializationandM;For the servo firmware to be able to perform controlled movements, themechanism must be methodically set into a known initial state.andP;  This processof initializing the transport system is referred to as finding home.andP;  Thesuccessful completion of the find home routines is crucial for the properoperation of the autochanger.andM;The transport mechanism is designed to operate through a number of degrees offreedom using only two servo motors.andP;  As a result, motions such as flip,translate, and insert/extract require the servo to move the transport thumbto specific absolute positions within the transport sleeve (see article, page14).andP;  The translate motion, in addition to requiring a specific locationalong the transport sleeve, requires an absolute reference point at thebottom of the autochanger.andP;  These positional requirements necessitate theaccurate and repeatable location of two points of origin from which the servocan reference its motions.andP;  These are called the plunge origin and thevertical origin.andP;  Once these points of origin are found, the servo canreliably perform all of its fundamental movements.andP;  However, the autochangermay have power removed at any time during one of its motions.andP;  This impliesthat upon subsequent restoration of power, the mechanism may not be in astate that facilitates locating these points of origin.andP;  The find homealgorithms must therefore be capable of interpreting the current state of themechanics through various feedback methods, moving the mechanics in such away that location of the points of origin is possible, and finally locatingthe points of origin in a very repeatable and reliable manner.andM;To interpret the current state of the mechanics upon power-up, the find homeprocess employs a number of algorithms collectively referred to as initialrecovery.andP;  These algorithms are charged with assessing the state of themechanics using position feedback and force sense of touch.andP;  Once sufficientinformation has been gathered, these algorithms are also responsible formaneuvering the mechanism to a position from which it is possible to completethe find home process.andP;  Each initial recovery algorithm is designed toperform specific motions assuming a certain mechanical configuration and/orrange of position.andP;  Therefore, each algorithm is most effective when usedwith a specific move type.andP;  To choose the recovery algorithm that bestmatches the current state of the autochanger, the nonvolatile RAM is examinedto determine the ID of the last movement that was occurring when the powerwas removed.andP;  This number is used to select the appropriate initial recoveryroutine.andM;Once the initial recovery routine has completed, the find home process canproceed with locating the plunge and vertical origins.andP;  This process involvesa number of steps that must be performed in a specific order.andP;  The transportmust complete a full flip so that the mechanical hard stop along the plungeaxis can be located.andP;  Force sense of touch is employed to locate this pointand the servo firmware initializes the plunge axis position to zero.andP;  Thetransport can then be moved downward to locate the vertical hard stop at thebottom of the autochanger.andP;  After this is determined using force sense oftouch, the vertical position is initialized to zero.andP;  The last basic findhome motion is performed by sensing which vertical stack the transport isfacing.andP;  Once the two axis origins have been located and the correct stackhas been set, the mechanism is able to perform all of its fundamentalmotions.andM;Three more operations are performed that provide the firmware with additionalinformation.andP;  The first involves a slow traversal of the two vertical stackswhile monitoring the vertical force.andP;  This motion ensures that the entirepath is free of obstructions.andP;  The second involves determining whether thereis a cartridge in the transport sleeve.andP;  This is performed by moving theplunger slowly outward towards a solid section of the mailslot whilemonitoring the force exerted.andP;  The presence or absence of a large forceincrease denotes the presence or absence of a cartridge.andP;  The third operationinvolves determining which side of the transport sleeve is facing upward.andO;This piece of information is important since it helps determine theorientation of the cartridge before it is inserted into a magnetoopticaldrive.andP;  These drives are single-sided devices, so proper orientation of thecartridge is vital to the successful completion of a move or exchangecommand.andM;The accurate positioning of the front of the transport is critical forreliable insertion and retraction of cartridges into and from the magazineslots and magnetooptical drives.andP;  The servo system is capable of veryaccurate positioning of the transport mechanism.andP;  However, vertical motion ofthe transport is controlled from the horizontal carriage assembly, which isin the rear of the transport.andP;  Mechanical tolerances and variations in themanufacturing of the transport assembly may result in the mechanism's notbeing exactly perpendicular with the vertical axis.andP;  In addition to adeviation from perpendicular, the front of the transport may change itsvertical position in flipping from one side to another and from changing fromone vertical stack to another.andP;  To compensate for these three variations, twooptical sensors are employed in conjunction with firmware algorithms tocalibrate the transport system.andM;Transport CalibrationandM;The accurate positioning of the front of the transport is critical forreliable insertion and retraction of disks into and from the magazine slotsand optical drives.andP;  The servo system is capable of very accurate positioningof the transport mechanism.andP;  However, vertical motion of the transport iscontrolled from the horizontal carriage assembly, which is in the rear of thetransport.andP;  Mechanical tolerances and variations in the manufacturing of thetransport assembly result in a mechanism that may not be exactlyperpendicular to the vertical axis.andP;  In addition to a deviation fromperpendicular, the front of the transport can change its vertical position inflipping from one side to another and in changing from one vertical stack toanother.andP;  To compensate for these three variations, two optical sensors areemployed in conjunction with firmware algorithms to calibrate the transportsystem.andM;The autochanger is designed so that all magazine slots and drives areaccurately mounted and referenced to the walls of the autochanger structure.andO;The optical sensors are also accurately referenced to this same structure andeach one's trip point is very tightly specified.andP;  Hence, the distance fromthe trip point to any one of the vertical locations is known within a verysmall mechanical tolerance.andP;  The firmware contains a table of these distancesstored in ROM.andP;  By measuring the height of the sensors with respect to thevertical origin, the firmware is able to position the front of the transportaccurately at any storage slot or drive.andP;  Measurement of these sensors isperformed by moving the transport down toward a sensor (with the plungeleadscrew facing upward) while monitoring the output state of that sensor.andO;The state of the sensor will change when the appropriate flag on thetransport sleeve interrupts the optical beam.andP;  When this occurs, the verticalencoder position is stored as the height of the sensor.andP;  A similarmeasurement is performed after the transport sleeve has been flipped and theplunge leadscrew is facing downward.andP;  The difference in height between thetwo sides of the sleeve is stored as another calibration offset.andP;  Thus,accurate positioning to a given storage slot or drive entails a combinationof three distances: (1) the mechanical distance from the optical sensor tothe slot or drive of interest, (2) the distance from the vertical origin tothe optical sensor located in the same stack as the slot or drive ofinterest, and (3) an offset resulting from the orientation of the transportsleeve.andM;ServiceandM;It is important that the find home and calibration processes be as adaptiveand fault-tolerant as possible, since proper operation of the autochangerdepends upon their successful completion.andP;  If these processes cannot besuccessfully completed, then the autochanger is inoperable and must beserviced by a customer engineer.andP;  Unnecessary service calls negatively impactthe product's reliability and add to its cost of ownership.andP;  For thesereasons, much effort was spent on the design of the find home algorithms inan effort to make them as robust as possible.andM;In the event that something has broken within the autochanger, repair timecan be significantly reduced if the autochanger can make intelligentinferences regarding the faulty components.andP;  The find home and calibrationroutines perform checks after each motion to determine if an incorrectcondition exists.andP;  If such a condition exists, the firmware will set anappropriate error code and will suggest a list of up to three fieldreplaceable units that it believes may be faulty.andP;  This self-diagnosis allowsthe customer engineer to verify and repair the faulty units rapidly.andM;Error RecoveryandM;Error recovery is the process by which an unexpected condition is rectifiedso that normal operation can continue.andP;  In the autochanger mechanism, errorsmay occur for a number of different reasons.andP;  Some of these reasons are:andM;* The host computer requested that a cartridge be moved from a location thatdid not contain a cartridge.andM;* There is a temporary mechanical misalignment because of the dynamic natureof the mechanism.andM;* A power failure has occurred during a movement.andM;* There has been a mechanical or electronic failure of the autochanger.andP;  Theerror recovery firmware is designed to recover from a plethora of differenterror conditions and provide accurate information to the host computerregarding the status of the mechanism.andM;The four functions of the error recovery routines are error prevention, errordetection, restoration of the mechanism to normal operating conditions afteran error is detected, and completion of the command during which the erroroccurred.andP;  Error prevention involves verifying that the requested sourcelocation contains a cartridge and that the requested destination location isempty.andP;  This is done by examining an array in nonvolatile RAM that containsthe status of each element within the autochanger.andP;  If the firmware believesthat the requested move would result in an error, the command is rejectedbefore any motion is attempted.andP;  This method of prevention, although veryreliable, is not foolproof.andP;  The element status array may be incorrect if acustomer engineer manually moves cartridges around within the autochangerwithout reinitializing the element status array.andP;  In this event, the firmwaremust rely on the second facet of error recovery, namely error detection.andO;Error detection is the means by which the firmware determines that somethingout of the ordinary has occurred within the autochanger.andP;  The firmwaredetects errors in two ways.andP;  The first involves the servo loop monitors,which run continuously during autochanger motion.andP;  These routines monitor theforces that are being exerted by the vertical and plunge axes.andP;  If either ofthe measured forces should exceed levels specified for a given motion, themonitor routines immediately disable the servo system and set an error flag.andM;The second method of detection involves the use of force sense of touch atkey positions during cartridge movement.andP;  While a cartridge is beingextracted from its storage slot, the firmware moves the transport thumboutward slightly beyond the point at which it should engage the cartridge.andO;If no change in force is encountered during this move, then the storage slotis assumed to be empty and an error has occurred.andP;  Upon returning a cartridgeto a storage slot, the same outward movement is performed to ensure that acartridge was in the transport.andP;  In addition, after retracting the thumb backinto the transport, a small vertical motion is performed while monitoring theforce on the vertical axis.andP;  A large change in the vertical force signifies afailure by the mechanism to release the cartridge.andP;  Similar tests areperformed when inserting and extracting cartridges into and from the opticaldrives.andM;The design of the error recovery firmware is predicated on the assumptionthat because of the simple and reliable design of the mechanics, errorconditions should occur very infrequently.andP;  This means that the executionspeed of the error recovery routines can be reduced significantly withoutnegatively impacting the overall performance of the autochanger.andP;  As aresult, the firmware controlling the normal operation of the autochanger isgreatly simplified by partitioning the code so that all error recoveryalgorithms are consolidated into one functional area and all motion controlfirmware resides in another.andP;  A simplified hierarchical diagram of the motioncontrol firmware and error recovery firmware is shown in Fig.andP;  4.andM;The motion control firmware is designed to complete its execution regardlessof the status of the servo system.andP;  The lowest-level procedures that performmotion control test the status of the servo system.andP;  If the servos have beendisabled, the procedures simply return and no motion is performed.andP;  Allattempts to modify mechanism state information occur via procedures thatverify the status of the servo system.andP;  These state variables will not bemodified if the servos have been disabled.andP;  Therefore, if an error occurs,the motion control firmware completes its execution in a normal manner, butno motion occurs and the state of the mechanism is preserved.andP;  This providesthe error recovery firmware with a snapshot of the mechanism at the instantthat an error occurred.andP;  Error recovery can then proceed with restoration ofthe mechanics.andM;As can be seen in Fig.andP;  4, ERROR_RECOVERY is composed of the two procedures:FIND_HOME and NEW_COMMANDGENERATOR.andP;  These two procedures can be thought ofas physical recovery and logical recovery procedures, respectively.andP;  TheFIND_HOME procedure is responsible for successfully maneuvering the mechanismout of the error condition and then restoring the mechanics to a knowninitial state.andP;  It makes extensive use of the snapshot of state informationthat was preserved when the error occurred, and of information gathered viaforce sense of touch movements.andP;  FIND_HOME is the same procedure that is usedfor power-up initialization.andP;  Therefore, once it completes, the mechanism isin a known state and safe motions can be performed.andP;  FIND_HOME is invoked byERROR_RECOVERY whenever a physical error has occurred that forces the servosto be disabled.andP;  The logical recovery segment of ERRORRECOVERY is dependentupon FIND_HOME's successful completion.andP;  If FIND_HOME does fail, thenERROR_RECOVERY assumes that something is drastically wrong and calls aroutine that attempts to diagnose the failure of the mechanics.andM;The NEW_COMMAND_GENERATOR procedure is composed of a number of routines thatperform three main tasks.andP;  The first is to examine the original command andthe current state of the machine.andP;  The second is to generate a new commandthat will either gather more information, attempt to complete the originalcommand, or attempt to restore the autochanger to the configuration thatexisted just before the original command was issued.andP;  The third task is tosend the newly formed command back to the PERFORM_MOTIONS routine to beexecuted.andP;  This process may be repeated a number of times to complete acommand or restore the autochanger successfully.andP;  This looping process isinitiated by any movement error that occurs while PERFORM_MOTIONS isexecuting.andP;  Once in this loop, ERROR_RECOVERY is directed by a state machinewhich determines how to resolve the error condition or exit gracefully.andP;  Eachtype of motion command move cartridge, exchange cartridges, test forcartridge, seek to cartridge, or rotate mailslot) has a state machinesequence that is designed to solve the specific recovery requirements of thatparticular motion type.andP;  However, all state machines are composed of fourcommon states: error recovery initialization, retry the original command,restore the autochanger to its original configuration, and return a pass orfail status.andP;  A detailed state diagram for the move cartridge error recoveryalgorithm is given in Fig.andP;  5.andM;An error that occurs during a move cartridge command will causeERROR-RECOVERY to begin execution.andP;  The error recovery state machine is setto its initial state, during which the original move command is stored forlater use and FIND_HOME is invoked to return the mechanism to a known state.andO;FIND_HOME will then return a pass/fail status and will provide informationregarding the presence or absence of a cartridge in the transport.andP;  The statemachine changes to the Test_Source state, during which a test for cartridgecommand is generated.andP;  This command is passed back to the PERFORM_MOTIONSprocedure, which will execute a physical test of the source location for thepresence or absence of a cartridge.andP;  The result of this test is passed backto ERROR_RECOVERY.andP;  If a motion error occurs during this test, ERROR_RECOVERYwill invoke FIND_HOME to resolve the error and the same test for cartridgecommand is repeated.andP;  This process can be repeated a number of times, and ifmotion errors continue to occur, the state machine will decide that errorrecovery has failed.andP;  However, if no motion error occurs, the state machineproceeds to the Test_Test state, during which another test for cartridgecommand is generated and passed back to PEFORM_MOTIONS.andP;  The destinationlocation is then physically tested and the result is passed back toERROR_RECOVERY.andP;  As with the Test_Source state, any motion error will causeFIND_HOME to be executed again along with a reexecution of the test forcartridge command.andM;At this point, the state machine knows whether the source, destination, andtransport are full or empty.andP;  Any full/empty combination that should notlogically be possible (such as the source being empty, the transport beingfull, and the destination also being full) causes error recovery to fail andan appropriate error status is returned to the host.andP;  If the source is empty,the transport is empty, and the destination is full, then the command musthave completed and the state machine proceeds to the Error_RecoveryPassedstate.andP;  Otherwise, the state machine proceeds to the Retry state and theappropriate move command is generated.andP;  This command is either a move fromthe original source to the original destination or a move from the transportto the destination.andM;The command is once again passed back to PERFORMMOTIONS and a cartridgemovement is attempted.andP;  If it is successful, the state machine proceeds tothe Error_RecoveryPassed state.andP;  Otherwise, FIND_HOME is again invoked andthe state machine returns to the Test-Locations sequence to determine whichlocations are full or empty.andP;  Once the TestSource and Test_Dest functionshave completed and returned the status of both locations, the state machinecycles back to the Retry state and either a Move_Source_to_Dest or aMoveTransport_to_Dest operation is initiated, depending on the presence orabsence of a cartridge in the transport.andP;  This retry sequence may also berepeated a number of times if motion errors continue to occur, and then thestate machine will proceed to the Restore state.andM;A very similar chain of events occurs in the Restore state, except that inthis state the exit criterion is the successful restoration of theautochanger to the configuration that existed before the original command wasattempted.andP;  The move commands that are generated will attempt to place thecartridge back into the source location.andP;  As with the Retry state, anymovement errors that occur during an attempted restore will cause the statemachine to cycle between the Test_Locations sequence and the Restore state.andO;This process may be repeated a number of times, after which the state machinearrives at the Error_Recovery_Failed state.andP;  Once the state machine is ineither the Error_Recovery_Passed or the Error_Recovery_Failed state, theappropriate status information is returned by MOVE_WITH_ERROR_RECOVERY to thehost and error recovery is complete.andM;Firmware Development EnvironmentandM;A number of factors contributed to the successful development of theautochanger firmware.andP;  One significant factor was the use of individualworkstations connected by a local area network (LAN).andP;  This networkingprovided independent access to a common set of source code.andP;  The code filesfor the project resided on one hard disc, and each development workstationused the Network File System (NFS)* to gain access to the files.andP;  Eachworkstation had the same view of the source code, but each firmware designerwas able to work independently on an HP 9000 Model 370 workstation.andP;  Thebottleneck normally produced by editing, compiling, and linking on onemachine was removed.andP;  In addition to increasing the designers' productivity,the use of a common set of code files facilitated revision control, tooldevelopment, and system administration.andM;Another factor that greatly contributed to the autochanger program was thedevelopment of the data capture tool (see box, page 29).andP;  This tool provideda means for capturing and displaying any time-varying global variable withinthe firmware.andP;  Data capture was primarily used to focus on mechanical orservo aspects of the autochanger, Network File System is a product of SunMicrosystems.andP;  such as the position, velocity, or force of one or both axesof motion.andP;  It provided the designers with a &quot;mechanical oscilloscope&quot; thatproduced enlightening views into the operations of the autochanger.andP;  Hence,it was extremely useful in examining and diagnosing operational errors.andM;While data capture provided useful insight regarding errors that occurredduring the autochanger development, another tool provided the means forexercising the error recovery code without requiring that specific errorsoccur.andP;  The error injection tool (see box, page 33) allowed the firmwaredesigners to force an error to occur during a specific motion and at aspecific position or range of positions.andP;  By using this tool, the manydifferent states of the error recovery code could be debugged, tested, andverified.andP;  Since an error can occur during any portion of the mechanism'soperation, simulating all errors by physically inducing an error would beextremely difficult to do.andP;  Error injection solved this problem and provideda powerful and flexible means for ensuring the reliability of the errorrecovery firmware.andM;A third tool that contributed to the firmware development was the mechanicalregression test suite.andP;  This set of procedures provided the means to measurevarious mechanical aspects of each unit.andP;  Friction tests, spring constants,hard stops and datum, performance measurements, and servo parameters could beacquired using these utilities.andP;  Measurements could be taken, then tests runand the measurements rerun to assess various factors (degradation over timeor temperature, effectiveness of a part or design change, baselinemeasurement).andP;  These routines are now used during the manufacturing processto assess the correctness of the unit's assembly.andM;AcknowledgmentsandM;The authors wish to acknowledge the efforts of the other two firmwaredesigners: Rick Kato and Kraig Proehl.andP;  All four designers contributed to thedesign, implementation, and testing of the autochanger firmware.andP;  Specialthanks to the management team that helped make the autochanger a reality.andO;The team includes section manager Don Stavely, mechanical design manager MarkWanger, and electrical hardware and firmware manager Mark Gembarowski.andO;Special thanks to Colette Howe for her assistance in testing, tracking, anddebugging the firmware.andP;  Additional thanks to Jeff Kato, Joel Larner, KellyReasoner, John Schere, and Myron Yoknis for their assistance in refining theautochanger firmware.andP;  The authors would also like to thank the Randamp;D andmanufacturing teams from HP's San Diego Division who offered their expertisein plotter technology.andO;</TEXT></DOC>
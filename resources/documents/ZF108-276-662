<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-276-662  </DOCNO><DOCID>08 276 662.andM;</DOCID><JOURNAL>IBM Systems Journal  March 1990 v29 n1 p59(20)* Full Text COPYRIGHT International Business Machines Corp. 1990.andM;</JOURNAL><TITLE>Using box structures for definition of requirementsspecifications.andO;</TITLE><AUTHOR>Odom, J.E.andM;</AUTHOR><SUMMARY>Box structures provide a stepwise refinement and verificationmethodology for information systems analysis and design.andP;  They areespecially useful for recording and decomposing requirementsspecifications.andP;  The benefits of using the structures centeraround making the requirements clear to readers, helping to makethe requirements complete, and providing an artifact that willenhance the traceability of the requirements.andP;  This paperdescribes the methodology of applying box structures and presentsan example of their use in the definition of requirementsspecifications.andP;  (Reprinted by permission of the publisher.)andM;</SUMMARY><DESCRIPT>Topic:     Systems AnalysisSystem DesignMethodsSpecificationsDocumentationCase Study.andO;Feature:   illustrationchart.andO;Caption:   Problem and solution domains. (chart)The three equivalent box structure views. (chart)Black box view. (chart)andM;</DESCRIPT><TEXT>Using box structures for definition of requirements specifications Boxstructures provide a stepwise refinement and verification methodology forinformation systems analysis and design.andP;  They are especially useful forrecording and decomposing requirements specifications.andP;  The benefits of usingthe structures center around making the requirements clear to readers,helping to make the requirements complete, and providing an artifact thatwill enhance the traceability of the requirements.andP;  This paper describes themethodology of applying box structures and presents an example of their usein the definition of requirements specifications.andM;This paper addresses the problem of writing good requirements specificationsthat can be understood by potential customers of an information system aswell as by the designer who will provide a solution to the problems that therequirements specifications define (see Requirement Specification Process inFigure 1).andP;  The characteristics of these requirements specifications willdetermine the success of the solution and how much rework will have to bedone before it will satisfy customer needs.andM;The portion of the development process in Figure 1 shows the differentprocesses and artifacts that are on both sides of the line separating theproblem and solution domains.andP;  The artifacts that come out of the boxstructure methodology are the box definition graphics (BDG) and the boxdefinition language (BDL).andP;  The BDG and BDL are used to describe the samemodel and can be used interchangeably.andP;  The BDG, along with supporting text,are very useful in communicating high-level concepts and overall systemstructure.andP;  The BDL is more useful when the design becomes more detailed.andO;This paper will focus primarily on BDG but will use some BDL when describingan example problem.andM;Box structures are limited to three major structures: black box, state box,and clear box.andP;  [1]  The clear box can contain the four basic proceduralstructures: sequence, alternation, iteration, and concurrent, [1] which aresufficient from a structured programming viewpoint.andP;  [2]  These structuresmake up the entire set of basic structures necessary for the definition ofany requirements.andP;  The structures can be described in graphical terms withBDG or in narrative terms with BDL.andP;  [1]andM;Figure 2 summarizes the three equivalent box structure views of aninformation system in a stepwise refinement and verification methodology.andO;Each box exhibits identical stimulus (or stimuli) and response behavior atincreasing levels of detail.andP;  [1]andM;The use of box structures builds upon the idea that the definition ofrequirements in the form of requirements specifications is part of theproblem domain as opposed to the solution domain.andP;  The definition of therequirements in this form is not intended to presuppose a design directionfor the final product.andP;  Rather, it is intended to provide a method forestablishing a precise definition of the problem that can be used incommunicating the final form of the requirement.andP;  Box structures can be usedto design the solution, but that is not within the scope of this paper.andM;Different types of problems will need different techniques for collecting andanalyzing the requirements, but a single technique for documentingrequirements would significantly improve human communication.andP;  A requirementsmethodology exists that provides an approach to collecting and definingunderlying problems and to developing a prose functional specification.andP;  [3] In order that a design, programming, and testing organization can developsoftware that is accurate, easy to maintain, and is what the customer wants,[4] without too much rework, a standard technique for recording therequirements based on a model should be used.andP;  Box structures provide anapproach to recording the requirements with enough detail and precision toaccomplish this.andM;Developing the black box view of a requirementandM;The functional definition of black box behavior is:andM;(Stimulus History, Stimulus) [right arrow] (Response)andM;When used with box structures, this definition of a black box is slightlydifferent from that used in testing theory.andP;  A description of this definitionis as follows:andM;&quot;The black box is a mechanism that accepts stimuli, and for each stimulusproduces a response before accepting another stimulusandgt; furthermore, eachresponse is uniquely determined by the history of stimuli accepted by theblack box.&quot; [1]andM;This definition includes the consideration of a stimulus history, as we seein Figure 3.andP;  The stimulus history consists of all of the previous stimulithat have been received by the system prior to the stimulus being documented.andO;For example, consider the requirement for a simple system that returns a oneor a zero, alternating between them.andP;  The history of the stimuli received bythe system is important because it determines what the response for thisstimulus will be.andM;Although stimulus history conceptually contains a record of all previousstimuli, only a portion may be relevant.andP;  Also relevant is the initialcondition of the system.andP;  In the previously mentioned example, if we knowthat the system initially returns a zero, we need only know how many stimulihave been receivedandgt; if an even number, a zero will be returned, otherwise aone.andM;The starting point for the history of each stimulus should be carefullyselected.andP;  Only enough stimulus history is needed to establish a singleresponse for the stimulus.andP;  Once this point has been established, the historyof each stimulus should be documented along with the resulting response.andM;The stimulus and stimulus history can cause several functionally differentstimulus data transitions as they pass through the system.andP;  As an example,assume a user enters a query transaction in a personnel system which issupposed to display information about an employee.andP;  If the information wasentered through a previous build transaction, the transition that occurs whenthe query transaction for the employee is entered is the display ofinformation about the employee.andP;  If it has not been entered through aprevious build transaction, the transition will be the display of somemessage indicating that no information is available on this employee.andP;  Eachof these transitions must be documented because in this way the stimulus andresponse are related.andP;  These transitions are caused by user-view transactionsor operations such as the build and query transactions mentioned in theexample.andM;Transaction analysis must be performed at the black box level to determinewhether a system will answer all the needs of the customer requirement.andP;  Thefirst step in transaction analysis is to decide the context of the system.andO;Context is defined as the user's environment where the system will reside andthe changes it will invoke on that environment.andP;  Next, the context of therequirement is narrowed by determining if all of the user-view transactions,in terms of stimulus histories, exist to supply the information needs of theuser by way of responses.andP;  While this transaction analysis is being done, averification should be made to ensure that the definition of the problemincludes enough information in the transaction to cover system integrity,which includes system security, system operability, system auditability,system reliability, and system capability.andP;  [1]  Again, the needs of thesystem are here definedandgt; a solution is not presented.andM;Establishing the highest-level black box for a system is important becausethis level is the true &quot;user view&quot; of the system.andP;  This statement means theanalyst will not be describing the details of stimuli but will be concernedwith the highest-level demands the user will be placing on the system.andP;  Therequirements point of view should not dictate a specific design direction.andM;The BDG view of the requirement is helpful in understanding the requirement,but it is essential that good narrative documentation is used to back upthese graphics.andP;  The BDL, shown in Figure 4, is a more formal presentationmedium and is helpful in adding precision, although still in need ofnarrative accompaniment.andM;Developing the state box view of a requirementandM;Once the black box view of the system has been developed, the next step is todevelop the state box view even if the final published documentation of thesystem will be left in the black box form.andP;  The state box view allows thecompleteness of the transitions that were described to be checked and allowsthe analyst to discover whether or not he or she understood the stimulushistory.andM;The state box view is depicted in Figure 5.andP;  Here the functional definitionis:andM;(Stimulus, Old State) [right arrow] (Response, New State)andM;In refining a state box from a black box, the first step is to examine thestimulus history and abstract from it the state data that should be retainedby the system, because the stimulus history is not part of the state boxview.andP;  The key is to determine the minimal information needed to fullyrepresent the impact of the stimulus history on the black box behavior.andP;  Thepurpose of the state data is to define the retained data necessary to supportthe system.andM;The behavior of the black box is now restated as the transition part of thestate box.andP;  The transition part is a simpler view of the initial black box ofthe system since the total stimulus history is no longer considered.andM;Next, the system must have transaction closure.andP;  Satisfying this conditionhelps to determine whether or not the state data are sufficiently complete.andO;Mills describes satisfying this condition as follows:andM;&quot;The condition of transaction closure is satisfied if the transactions aresufficient to generate all state data, and the state data are sufficient togenerate all the transactions.&quot; [1]andM;Another way of showing transaction closure for the state selected is toensure that the following interactions between the transactions and the statedata exist in some form:andM;1.andP;  Initialization.andP;  There must be some way for the state data to be created.andM;2.andP;  Add.andP;  There must be some way for new data to be added to the existingstate data.andM;3.andP;  Delete.andP;  There must be some way for data to be deleted from the existingstate data.andM;4.andP;  Update.andP;  There must be some way of updating existing state data.andM;5.andP;  Query.andP;  There must be some way of using the state data.andM;The above five transactions may be required for each piece of state datacreated that expands and contracts like a file.andP;  If a single entity thatcannot expand or contract comprises the state data, the initialization,update, and query transactions are required.andP;  The initialization isespecially important to consider since the initial state should be specifiedso that the reader understands what form the data take from the verybeginning.andP;  The other four transactions could be combined in various ways.andM;If this condition is satisfied, it means that we have been complete indescribing our transactions in the black box view and have selected a properstate to support these transactions.andP;  If the list of transactions isincomplete, the analyst must return to the black box view and update the listof transactions, then examine these new transactions against the stimulushistory.andM;Again, these graphics should be backed up with a good narrative thatdescribes the transactions and the state with enough detail for the reader tounderstand them.andP;  They can also be described in BDL, which has the format fora state box as shown in Figure 6.andP;  Note that the defined state box can beverified as a correct expansion of the black box by converting the state tostimulus history in a new black box and comparing the two black boxes forequivalence.andM;Developing a clear box view of a requirementandM;Prior to developing the clear box view (or procedural definition) of arequirement, the different transactions and retained state data as defined inthe black box and state box views should be known for the system.andP;  Theprocess of specifying a procedural definition will force the analyst tocontinue examining the interaction of transactions.andP;  An example oftransaction interaction in a simple inventory system is the requirement thata purchase order must be prepared when an item is removed from the inventoryand the inventory reaches a reorder point.andP;  The system is to contain update,manual reorder, and automatic reorder operations.andP;  In this example there isinteraction between an update transaction followed by an automatic reordertransaction, where the automatic reorder transaction depends on the action ofthe update transaction.andP;  If in the black box and state box view thisinteraction was not identified, an addition to the definition of the behaviorof the update transaction must be made so that it will show the appropriateresponse.andM;The process of expanding a state box into a clear box is accomplished bytaking the single transition function specified in the state box anddescribing it in terms of the interaction of multiple smaller transitions.andO;The transition part of the state box can be expanded into a proceduralstructure by one of four primitive steps, resulting in a clear box with thesame behavior as the transition part of the state box.andP;  The resulting clearboxes are described below.andM;The functional definition of a clear box is:andM;(Stimulus, Old State) [right arrow] (Response, New State) by procedureandM;Part A of Figure 7 shows the sequence clear box.andP;  In this structure the boxBB1 must come before the box BB2 after the system receives the stimulus S1.andO;BB1 also receives as input the state data of the system as it receives thestimulus S1.andP;  The response of BB1, which is R1, contains a possible update tothe state data NS1 and the stimulus S2 for BB2.andP;  BB2 also receives theupdated state data as input.andP;  The response of BB2 contains a possible updateto the state data along with the response R2, which is the external responseof the system to the stimulus S1.andP;  A sequence structure contains two or moreboxes.andM;The BDL to support the sequence portion of the clear box is shown in Part Bof Figure 7.andP;  The remaining portion of the BDL is the same as the state boxexcept with CB instead of SB.andM;Figure 8A depicts the alteranation (IF) structure.andP;  In this structure thestimulus S and the state data are used by the condition C to determine whichpath will be followed through the system.andP;  Whichever path is selected, thebox BB1 or BB2 will receive as input the stimulus S and the state data.andP;  Theoutput of the box will potentially update the state and provide the externalresponse R of the system.andM;The BDL to support the alternation (IF) portion of the clear box is shown inFigure 8B.andM;Figure 9A contains the alternation (CASE) structure.andP;  This structure operatesexactly the same as the IF structure except for the number of differentpossible paths through the structure.andP;  The BDL to support the alternation(CASE) portion of the clear box is shown in Fibure 9B.andM;Figure 10A is the iteration structure.andP;  This structure allows looping in thesystem.andP;  When the system receives a stimulus S, the stimulus and the statedata are used by the condition C to determine whether or not the system willloop.andP;  If it does not loop, S becomes the response R of the system.andP;  If itdoes loop, S becomes the stimulus along with the state data for the bos BB1.andO;BB1 then provides a potential update to the state data along with a responseR1.andP;  S becomes R1, and the condition C uses this new S along with the updatestate to determine whether they system will continue to loop.andP;  Whenever thecondition C is no longer met, the latest S and old state contribute to theexternal response of the system.andM;The BDL to support the iteration portion of the clear box is shown in Figure10B.andM;Figure 11A is the concurrent clear box structure.andP;  [5]  In this structure thestimulus S and the state data are received simultaneously by the transactionsBB1 and BB2 (there could be more than two of these).andP;  Each transactionprovides a prossible update to the state data and an external response.andM;If sequencing of the updates to the state (NS1 and NS2) or the externalresponses (R1 and R2) is necessary, it is described in the RESOLVE function.andO;[5]andM;The BDL to support the concurrent portion of the clear box is shown in Figure11B.andM;Note that each clear box introduces new black boxes to continue the stepwiserefinement and verification process.andP;  Clear boxes are verified to be correctexpansions of their state boxes by reducing the effect of their procedureparts to a single step in a new state box and comparing the state box forequivalence.andM;A transition may be used in more than one place while the clear box view isbeing defined.andP;  A dependency tree should be developed showing therelationship between the transitions.andP;  As the definition of the system grows,these &quot;common&quot; use transitions will help minimize redundancy and increase theability of readers to understand the requirement.andP;  Redundancy leads toinconsistencies, which is a major problem in communicating requirements.andP;  [4]andM;Keep in mind that we want to make the definition of the problem completeandgt; weshould not propose an implementation solution.andP;  The clear box structuressupply the means for examining the interactions of the different parts of theproblem.andP;  In this way it may be discovered that the definition of aparticular part of the problem was not complete and thus save some reworklater.andM;The last problem we face with each clear box is whether or not the individualtransitions we have described as part of our procedural definition are clearenough to stand on their own with any further definition.andP;  This problem isdiscussed in the next section.andM;Using the structures to define the whole problemandM;A sample hierachy of the definition of a large requirement is shown in Figure12.andP;  The black box (BB) in the level designated by (1) is the system-leveldefinition.andP;  The BB in level (1) has been refined into a state box (SB) viewand a clear box (CB) view.andP;  The CB in level (1) had seven differenttransitions in its procedural definition which were described as black boxes.andO;The clear box BBs become the starting point for the next refinement.andP;  Two ofthese BBs were refined further because of their complexity.andM;The major question that arises when viewing the hierarchy in Figure 12 is:How many levels must be refined before the definition of the requirement iscomplete?andP;  The answer to this question depends upon the complexity of the BBsof the CB in the last refinement.andP;  The following are some criteria to beconsidered:andM;1.andP;  After the first refinement, there exists a clear box that has severaltransitions identified (in the form of some structure).andP;  The clear boxdescription, for completeness, will document these transitions as black boxes(stimuli, stimulus history, responses).andP;  If there are no additionaltransactions to be discovered or no additional state data to be identifiedthat would require additional transactions (for transaction closure),refining is finished.andM;2.andP;  If there is any uncertainty about the questions raised in the clear boxexpansion, each of the black boxes needs to be refined from that expansionthat bears on the u ncertainty.andP;  That means a state box, and possibly a clearbox, must be created for each transition.andP;  If the transition of the state boxis clear (and simple), there is no reason to create a clear box from thestate box.andM;3.andP;  It will be certain that an additional level of refinement is u nnecessaryonly if the refinement process is carried to one more level than needed toestablish the system requirements.andM;4.andP;  Complexity of the overall system is probably not a determining factor inthe number of levels required.andP;  Neither is system size.andM;Another question might be, &quot;SHould definition of the requirement always startat the top level?&quot;andP;  The answer to this question is &quot;no,&quot; because it may notalways be possible to start at that level.andP;  Information may come as a seriesof major user requirements, and there is a desire to place them all in asingle system.andP;  Work can be done on each of these seemingly independentrequirements, but the work must progress upward by first combining theserequirements into a single CB view of the system.andP;  It is possible to moveupward to the SB view by abstracting.andP;  This SB view is very valuable becauseit helps in looking for redundant data in the overall requirement definition.andO;There is no unique starting place for defining the requirement for a systembecause it will depend upon many different attributes of the problem.andO;Whether work starts with the top level BB and that level is iterativelyupdated as the levels below it are created, or the top level BB is found byabstracting upward, the level should be completed because it will be the viewcommunicated to the user.andM;If the top level BB is created by abstracting upward, transaction analysisshould be performed when the level is defined.andP;  This will help narrow thecontext of where the system will reside.andM;As the requirement is refined into the level (2) SB views, new state datacommon to two or more different SBs at this level may be discovered.andP;  Thedecision can be made to migrate this common data up to the level above tomake the data more visible to the reader and also to guard againstredundancy.andP;  However, it is desirable to leave the state data at the point oforigination unless a move will reduce redundancy.andM;A need might exist to describe part of the system that must be isolated fromthe rest because:andM;1.andP;  That part of the system will reside apart from the rest of the systemandgt;andM;2.andP;  That part is subject to change in a future release of the systemandgt; orandM;3.andP;  There will be different versions of that part for different environments.andM;In Figure 12 the area indicated by (4) shows where one leg of the hierarchymust be isolated for one of these reasons.andP;  By having this pointed out duringrequirements specification the designers will have a clear message of a majorimpact on their design.andM;Example: Workstation printer requirementandM;Within this section is an illustration of the use of box structures indefining (and refining) requirements for a workstation printer.andP;  This examplebuilds from the following (incomplete) statement of capabilities:andM;* The printer will operate in a workstation environment where it will beconnected to a workstation that is similar to a personal computer.andM;* The printer will have standard fonts and print control features availablein the hardware that can be referenced.andM;* The printer will be able to print custom fonts that can be created andmaintained by the user.andM;* The printer will have the ability to print graphics.andM;We will go through the black box and state box views for all of theserequirements and through the clear box view that supports the custom fontspart of the requirements.andP;  Notice that some of the facts are not known atall, and rather than take a wild guess, the notation TBD (to be determined)is inserted so information can be filled in later.andP;  Also included with theexample is a glossary of terms and items, which provides a place for the dataitems to be defined and for additional information to be added to them as therequirement is refined.andP;  The glossary will also help with the consistencyissue (items being defined in multiple places under the same name ordifferent names).andM;Comments about the requirement will be inserted at the point where thecomment is being made and will be distinguished from the rest of the text.andM;Workstation printer requirement black box.andM;Comment--The first step is to determine the stimulus response pairs.andP;  Thesepairs are shown with the same numbers on each side of the black box for thesystem in Figure 13.andP;  The stimuli contain multiple parts and are so labeledon the diagram and detailed in the text.andM;1.andP;  Print TextandM;Comment--The three subheadings--stimulus parameters, response, andbehavior--used for each stimulus response pair, provide a place for anin-depth description.andM;a.andP;  Stimulus parameters (stimulus history)andM;Comment--The second step taken during the definition of the balck box is todetermine the stimulus history for each of the stimulus and response pairs.andO;The stimulus history is shown in parentheses after the name of the data itemthat is part of the stimulus.andP;  Further definition of the stimuli can be foundin the glossary.andM;* Text-data (codes established in font entered through operation 3 or as partof the standard fonts)andM;* Font-id (identification for font previously entered into system throughCreate/Update or as part of the standard fonts identifications)andM;Comment--The following two stimuli come from outside the software system.andO;These could be viewed as other black boxes with which this system mustcommunicate.andM;* Standard fonts (available from hardware)andM;* Standard print controls (available from hardware)andM;b.andP;  Response--Printed copy or error messageandM;c.andP;  BehaviorandM;Comment--The third step in defining the black box is to describe the behaviorthat will tie each stimulus to its response.andP;  The behavior is stated in termsof the stimulus and response pair using the stimulus history.andP;  BDL is used inthis description.andM;if  no font-id is specified then  use the last font specified in the stimulushistory else if  the font matching the font-id (either a standard font or onespecified in the stimulus history through a Create/Update stimulus) isspecified then  use this font to print the text-data else  return an errormessage fi fiandM;2.andP;  Print GraphicsandM;a.andP;  Stimulus parameters (stimulus history)andM;Comment--The requirement was quite vague about what printing graphic filesmeant.andP;  It means additional information must be found to support this area.andM;* Graphic-data (TBD)andM;* Graphics mode (TBD)andM;b.andP;  Response--Printed copyandM;c.andP;  BehaviorandM;* Print graphic-data in the graphics mode.andP;  TBDandM;3.andP;  Update/Create FontandM;a.andP;  Stimulus (stimulus history)andM;* RequestandM;- Create (if the font identified by font-id has not been specified in thecreate stimulus history or is not a standard font)andM;- Update (if the font identified by font-id has been specified in the createstimulus history and an update of the font is desired)andM;- Delete (if the font identified by font-id has been specified in the createstimulus history and removal of the font is desired)andM;* ImagesandM;- New-images (no history)andM;- Replace-images (if the font identified by font-id was specified in thecreate stimulus history)andM;* Font-id (see request and images above)andM;* Standard fonts (available from the hardware)andM;b.andP;  Response--Message indicating success or failureandM;c.andP;  BehaviorandM;* Create requestandM;if  the create request was specified, and font-id is not one of the standardfonts and is not one that has been specified in the create stimulus historythen  the new font-id, along with its characters and their mappings, will beentered into the system, and a message indicating that a new font has beenentered will be returned to the user else  an error message will be returnedfor this create request fiandM;* Update requestandM;if  the update request was specified and the font-id is the identificationfor a font that is in the create stimulus history then  the referenced fontcharacters and their mappings will be entered into the system, and a messageindicating that the font has been change will be returned else  an errormessage will be returned for this update request fiandM;* Delete requestandM;if  the delete request was specified and the font-id is the identificationfor a font that is in the create stimulus history then  a message indicatingthat the font has been deleted will be returned else  an error message willbe returned for this delete request fiandM;4.andP;  Specify FeaturesandM;a.andP;  Stimulus (stimulus history)andM;* Font-id (identification of a font that is either a standard font or onethat is in the stimulus history of the create request)andM;* Print features (available from hardware)andM;* Standard fonts (available from hardware)andM;b.andP;  Response--Message indicating success or failureandM;C.andP;  BehaviorandM;if  the requested features are available from the hardware and the fontidentified by font-id is one which is in the stimulus history of the createrequest or is a standard font then  a message indicating that the printersettings have been made will be returned else  an error message will bereturned fiandM;Comment--Once the black box has been described, ensure that the descriptionincludes all of the requirements.andP;  Systems much more complex than this willrequire clumping (abstracting) of the parts of the requirement until amanageable number of stimulus response pairs (seven or fewer) is left.andM;Workstation printer requirement state box.andM;1.andP;  Print TextandM;Comment--The first step in creating the state box view (Figure 14) of a blackbox is to derive the state data from the stimulus history of each stimuluse.andO;With necessary stimullus history items retained in the state, the stimulushistory can be dropped from the stimulus parameters.andM;a.andP;  Stimulus parametersandM;* DataandM;* Font-idandM;*Standard fontsandM;* Standard print controlsandM;b.andP;  Response--Printed copy or error messageandM;c.andP;  StatesandM;Comment--The following two pieces of state data are used to support thisstimulus and response pair.andP;  The standard fonts and standard print controlsare not included since they come from outside the system.andP;  Also, it is goodto note the action that is taken with the state data, such as INPUT, OUTPUT,or UPDATE.andP;  The state data will also be described in the glossary along withtheir initial states.andP;  Eventually we will want to make sure that there istransaction closure for every part of the state data.andM;* Custom fonts (INPUT ONLY)andM;* Current active font and print controls (INPUT, UPDATE)andM;d.andP;  BehaviorandM;Comment--The second step for creating the state box is to restate each of thebehaviors described in the black box view in terms of the stimulus andresponse pair and the state data.andM;if  no font-id is specified then  use the current active font else if  therequested font exists in the standard fonts or in the custom fonts then  takethe referenced font from the standard fonts or custom fonts and use it to setthe current active font and to print the data else  return an error messagefi fiandM;2.andP;  Print GraphicsandM;a.andP;  Stimulus parametersandM;*Graphic-dataandM;*Graphics modeandM;b.andP;  Response--Printed copyandM;c.andP;  State--TBDandM;d.andP;  BehaviorandM;*Print the file in the graphics mode.andP;  TBDandM;3.andP;  Update/Crete FontandM;a.andP;  Stimulus parametersandM;* RequestandM;- CreateandM;- UpdateandM;-DeleteandM;*ImagesandM;- New-imagesandM;- Replace-imagesandM;* Font-idandM;* Standard fontsandM;b.andP;  Response--Message indicating success or failureandM;c.andP;  StateandM;* Custom fonts (INPUT, UPDATE)andM;d.andP;  BehaviorandM;* Create requestandM;if  the create request was specified, and the font does not currently existas a standard font then  the new font, along with its characters and theirmappings, will be entered into the system, and a message indicating that anew font has been entered will be returned to the user else  an error messagewill be returned to the user fiandM;* Update requestandM;if  the update request was specified, and the referenced font exists as oneof the custom fonts then  the referenced font characters and their mappingswill be entered into the system, and a message indicating that the font hasbeen changed will be returned else an error message will be returned to theuser fiandM;* Delete requestandM;if  the delete request was specified, and the font-id specified exists as oneof the custom fonts then  the referenced font will be removed from the customfonts, and a message indicating the font has been deleted will be returnedelse  an error message will be returned for this delete request fiandM;4.andP;  Specify FeaturesandM;a.andP;  Stimulus parametersandM;* Font-idandM;* Print featuresandM;* Standard fontsandM;* Standard print controlsandM;b.andP;  Response--Message indicating success or failureandM;c.andP;  StateandM;* Custom fonts (INPUT ONLY)andM;* Current active font and print controls (UPDATE)andM;d.andP;  BehaviorandM;if  the requested font exists in either the standard fonts or custom fontsthen  the requested features including the font will be used to set thecurrent active font and print controls, and a message indicating the newsettings will be returned else  an error message will be returned fiandM;Comment--The third step is to check for transaction closure for each piece ofstate data.andP;  Below are the five criteria suggested earlier for transactionclosure:andM;1.andP;  Initialization--both described in the glossaryandM;2.andP;  AddandM;* Custom fonts--Create requestandM;* Current active font--Only one can be active at a time.andP;  This can be setthrough the print text request or through the specify feature request.andM;3.andP;  DeleteandM;* Custom fonts--Delete requestandM;* Current active font--It is replaced by the action of the print text requestof the specify feature request.andM;4.andP;  UpdateandM;* Custom fonts--Update requestandM;* Current active font--It can be changed by replacing it.andM;5.andP;  Query--Both can be used by the print text and specify features requests.andM;Workstation printer requirement clear box.andM;Comment--The clear box will show the procedural representation of the statebox.andP;  The most typical representations at this level are alternation,concurrent, or sequence.andP;  If a combination of these is used, keep the readerin mind and keep the structure simple.andM;Only the Update/Create Font will be documented in this example.andM;Comment--The first step in defining the clear box for a state box is todecompose the transitions from stimulus to response into procedural steps.andO;In this case the procedural steps for the stimulus response pairs andindependent of one another.andM;The second step is to use one of the structures to describe that interaction.andO;The structure selected for the example is an alter-nation nation structuresince each of the paths is independent and will not be occurringconcurrently.andM;Comment--The use of BB 1.n in the clear box shown in Figure 15 could bereplaced with a name.andP;  Transactions within the boxes should not be describedandgt;instead the text following the diagram should be used for the description.andM;Comment--What is new in the description that follows is the sectiondescribing the condition &quot;C.&quot;andP;  This directs the reader to the correct path inthe alternation structure of Figure 15.andP;  Also, the BB 1.n tags are related tothe proper behaviors.andM;1.andP;  Print Text .andP;  .  .andM;2.andP;  Print Graphics .andP;  .  .andM;3.andP;  Update/Create FontandM;a.andP;  Stimulus parametersandM;* RequestandM;- Create - Update - DeleteandM;* ImagesandM;- New-images - Replace-imagesandM;* Font-idandM;* Standard fontsandM;b.andP;  Response (R3)--Message indicating success or failureandM;c.andP;  State--Custom fonts (INPUT, UPDATE)andM;d.andP;  Behaviour (BB 1.3)andM;* Create requestandM;if  the create request was specified, and the font doest not currently existas a standard fontandM;then  the new font, along with its characters and their mappings, will beentered into the system, and a message indicating that a new font has beenentered will be returned to the userandM;else  an error message will be returned to the userandM;fiandM;* Update requestandM;if  the update request was specified, and the referenced font exists as oneof the custom fontsandM;then  the referenced font characters and their mappings will be entered intothe system, and a message indicating that the font has been changed will bereturnedandM;else  an error message will be returned to the userandM;fiandM;* Delete requestandM;if  the delete request was specified, and the font-id specified exists as oneof the custom fontsandM;then  the referenced font will be removed from the custom fonts, and amessage indicating the font has been deleted will be returnedandM;else  an error message will be returned for this delete requestandM;fiandM;4.andP;  Specify Features .andP;  .  .andM;Comment--The third step in defining the clear box is to examine each of theblack boxes that have been defined within the clear box to determine ifenough details was given for the reader to understand this part of therequirement.andP;  If there is not enough information available for a particularbox, that box will become the black box for refinement into a lower-levelstate box and clear box.andM;Workstation printer requirement glossary.andM;Comment--The glossary provides a place for the data descriptions andfunctional descriptions that relate to this requirement.andP;  As more informationis needed about a particular piece of data, it can be added here.andM;The glossary contains the description and the elaboration of the data.andP;  Ifthe description contains (global), the data type is used in more than oneplace and will be described under global data descriptions.andM;1.andP;  Classes of stimuli descriptionandM;a.andP;  Print TextandM;1) Text-data--Print file created using code of fontandM;2) (global) font-idandM;3) Standard fonts--These are fonts that are available from the hardware andcan be referenced by the font-id for each particular font.andM;4) Standard print controls--These are the print controls available from thehardware and can be referenced by the proper (global-standard fonts) featureskeyword and value for each desired print characteristic.andM;b.andP;  Print GraphicsandM;1) Graphic-dataandM;2) Graphics modeandM;c.andP;  Update/Create FontandM;1) Request--One of the following three would be valid:andM;a) Update--Keyword for indicating that an update to a custom font is desired.andM;b) Create--Keyword for indicating that the operation for creating a newcustom font is desired.andM;c) Delete--Keyword for indicating that the operation for deleting a customfont is desired.andM;2) ImagesandM;a) New-images--Entire font character graphics and ASCII mappingsandM;b) Replace-images--Same as new-images except contains only the font charactergraphics and ASCII mappings for the characters that are to be changed.andM;3) (global) font-idandM;4) (global) standard fontsandM;d.andP;  Specify FeaturesandM;1) (global) font-idandM;2) Print features--Printer settings such as lines per inch, characters perinch, etc., that are part of the hardwareandM;3) (global) standard fontsandM;4) (global) standard print controlsandM;2.andP;  State data descriptionsandM;a.andP;  Custom fonts--Contains the user-entered custom fonts which are referencedby their fontid and contains the characters and their mappings (the code bywhich the characters will be referenced from within a text file).andM;Initialization: Empty.andM;b.andP;  Current active font and print controls--Contains the current active fontand print features (print features are defined under global datadescriptions).andM;Initialization: At IPL (initial program load) time the printer will be set upwith (TBD).andM;3.andP;  Global data descriptionsandM;a.andP;  Font-id--Name of font desiredandM;b.andP;  Standard fonts--These fonts are available from the hardware and can bereferenced by the font-id for each particular font.andM;c.andP;  Standard print controls (for print features)--These print controls areavailable from the hardware and can be referenced by the proper featureskeyword and value for each desired print characteristic.andM;Observations on the printer example.andP;  The example contains all three views ofthe same level of the requirement.andP;  There is still work to be done for thislevel because there are several &quot;TBDs&quot; to be removed.andP;  The question aboutwhat it means to print graphic text is far from understood, but we have put aplace holder into the requirement specification for it and have created amodel for the entire system that can be reviewed with users and designers.andO;It may not be necessary to use all three of these views in a particulardocument.andP;  They are meant to show the progression of refinements, and eachview has its own audience.andM;The glossary supplies a &quot;where used&quot; understanding of the data associatedwith the stimuli, states, and responses.andP;  The descriptions of those data arefairly primitive, but they can be enhanced as it becomes necessary.andP;  At thisstage they should help support consistency by minimizing redundantdescriptions and making the document more modifiable.andM;The next activity would be to supply information for the TBDs and then toconsider the need to take each of the BB 1.n boxes and decompose them intothe next level of BB[right arrow] SB[right arrow] CB diagrams.andM;ConclusionandM;Box structures allow us to document a requirement using easily understoodmodels.andP;  Since these models give the reader a perception of where to look inthe models for different pieces of information about the requirement, theyhelp to convey what the requirement is saying to both the user and thedeveloper whom implements it.andM;A requirement written in this way can be further refined by someone elsebefore a particular implementation is started.andP;  If one person documents arequirement in this way, other people could take the requirement and continueto refine it to determine whether they understand all of its subsystems.andP;  Inthis way it becomes the communication vehicle between the requirements writerand the developer.andM;Finally, a requirement that communicates well will be used and will bemaintained as changes occur.andP;  This will help to make the product that isdelivered be closer to what was initially desired by the user.andM;Cited referencesandM;[1.] H. D. Mills, R. C. Linger, and A. Hevner, Principles of InformationSystems Analysis and Design, Academic Press, Inc., New York (1986).andM;[2.] R. C. Linger, H. D. Mills, and B. I. Witt, Structured Programming:Theory and Practice, Addison-Wesley Publishing Company, Inc., Reading, MA(1979).andM;[3.] R. G. Mays, L. S. Orzech, W. A. Ciafella, and R. W. Phillips, &quot;PDM: ARequirements Methodology for Software System Enhancements,&quot; IBM SystemsJournal 24, No.andP;  2, 134-149 (1985).andM;[4.] ANSI/IEEE Std.andP;  830-1984, &quot;An American National Standard IEEE Guide toSoftware Requirements Specifications,&quot; Institute of Electrical andElectronics Engineers, New York (1984).andM;[5.] H. D. Mills, &quot;Stepwise Refinement and Verification in Box-StructuredSystems,&quot; Computer 21, No.andP;  6, 23-36 (June 1988).andM;General referenceandM;H.andP;  D. Mills, R. C. Linger, and A. R. Hevner, &quot;Box Structured InformationSystems,&quot; IBM Systems Journal 26, No.andP;  4, 395-413 (1987).andM;John E. Odom  IBM US Education, 500 Columbus Avenue, Thornwood, New York10594.andP;  Mr. Odom joined IBM in 1980.andP;  He is currently part of the SoftwareDevelopment Technology Center where he teaches and consults with IBMorganizations on software requirements and design.andP;  Since joining IBM, Mr.andO;Odom worked in systems programming and software engineering education.andP;  Priorto joining IBM he was an associated professor of computer science at MankatoState University in Minnesota where he spent ten years on the faculty.andP;  Healso served for two years as the executive manager of a data processingorganization in Minnesota.andP;  He received his B.S., M.A., and EducationalSpecialist degrees from Mankato State University in 1968, 1969, and 1974,respectively.andP;  Mr. Odom is a member of the IEEE Computer Society.andO;</TEXT></DOC>
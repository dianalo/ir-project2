<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> ZF32-024-088 </DOCNO><DOCID>11 465 209</DOCID><JOURNAL>PC-Computing  Nov 1991 v4 n11 p196(4)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1991.andM;</JOURNAL><TITLE>DOS punctuation primer. (tutorial)andM;</TITLE><SUMMARY>An overview of the punctuation symbols used in programming MS-DOSand their meanings is presented.andP;  Thirteen symbols are presentedand explained.andP;  It is vital to use these symbols properly, as atransposed symbol can result in the loss of an entire file.andP;  Theinformation provided for each symbol includes what the symbol is(its designation), how it works, and where it is used.andP;  Thesymbols used in programming MS-DOS include the plus sign, colon,period, at sign, single and double right arrows and single leftarrow, vertical bar, double equal sign, and the percent sign invarious combinations.andM;</SUMMARY><DESCRIPT>Topic:     MS-DOSGlossaryTutorial.andM;</DESCRIPT><TEXT>Even more COnfusing to many users than cryptic DOS command names likeNLSFUNC, CHCP, SETVER, KEYB, and GRAFTABL are DOS's exacting and oftenexasperating symbols and operators.andP;  And there's reason for concern: Switch asimple andless; sign around at the wrong time, and you can utterly wipe out acritical file.andP;  Fortunately, DOS uses just a handful of symbols; masteringthe small list of them will let you harness your system's true power.andM;The following descriptions explain the workings of the symbols used in theaccompanying article.andM;SYMBOL: +andM;WHAT IT IS: COPY file &quot;concatenator.&quot;andM;WHAT IT DOES: Tells the COPY command to combine the contents of several smallfiles, or the contents of a file plus text you enter from the keyboard&quot;console&quot; (CON), into one big file.andM;USES:andM;1.andP;  To copy and combine both DOS startup files into one archive file calledSTARTUP.FIL, typeandM;COPY AUTOD(EC.BAT+CONFIG.SYS STARTUP.FILandM;2.andP;  To add a new line &quot;REM End of file&quot; to the bottom of your existingAUTOEXEC.BAT file without having to use a word processor or text editor, goto the DOS prompt and typeandM;COPY AUTOEXEC.andP;  BAT+CONandM;REM End of fileandM;ZandM;(for ^ Z, either hold down the Ctrl key and press Z, or press F6), and hitEnter.andM;3.andP;  You can also use the + sign to make corners of crude boxes:andM;WHAT IT IS:  Batch file label designator.andM;WHAT IT DOES: Indicates a label destination for a GOTO command.andM;USES:andM;1.andP;  To see if your DOS directory contains a copy of DEBUG.COM or DEBUG.EXE,the DBUGHUNT.BAT batch file below uses :DEBUG_YES, :DEBUG_NO, andandM;:END labels, which tell DOS where to jump for each of the batch file's GOTOcommands.andM;@ECHO OFFandM;REM This is  DBUGHUNT.BATandM;IF EXIST \DOS\DEBLIG.* GOTO DEBUG_YESandM;GOTO DBUG_NOandM;: DEBUG_YESandM;ECHO It's hereandM;GOTO ENDandM;: DEBUG_NOandM;ECHO DEBUG is missingandM;:ENDandM;While you can use long labels, DOS looks at only the first eight characters,so to DOS, :LONGLABEL1 and :LONGLABEL2 are the same (it chops off everythingafter the eighth character and sees both as :LONGLABE).andP;  If your batch Mecontains what DOS thinks are duplicate copies of the same label, it willalways use the one closer to the beginning of the batch file.andM;Labels must contain a colon k':) as the first character.andP;  Since DOS won'texecute anything after a colon, you can also use colons as you would REMcommands to add REMarks and comments to your batch files if you're careful.andO;You could make the second line of DBUGHUNT.BAT readandM;:This is  DBUGHUNT.BATandM;However, if you had included a GOTO THIS command in the batch file, DOS mighttry to jump to such a comment line, thinking that  :This&quot; was a label.andP;  So tobe safe, if you do use colons to leave comments, simply add a space afterthem:andM;: This is DBUGHUNT.BATandM;While filenames can't contain spaces, labels can.andM;2.andP;  You can also use the colon to make sides of crude boxes:andM;SYMBOL:andM;WHAT IT IS:  ECHO blank line generator.andM;WHAT IT DOES: When used directly after the commandandM;ECHO with no extra spaces thrown in, it displays a blank line onscreen.andO;USES:andM;To have a blank line appear onscreen before and after the box around thefollowing warning, use a pair of ECHO commands:andM;@ECHO OFFandM;REM This is MUSTDO.BATandM;ECHO.andM;ECHO +---------------------andplus;andM;ECHO : Back up every day! :andM;ECHO +---------------------andplus;andM;ECHO.andM;The period after the ECHO is different from the one DOS uses to preface afilename extension like .BAT or .EXE.andP;  And it's different from the singleperiod that DOS uses to indicate the current directory, as it does inandM;COW B: .andM;to have DOS COMPare the files on drive B: with those in the currentdirectory.andM;Note: This works with DOS 3.0 or later versions; earlier DOS versions handleECHOing blank lines differently.andM;SYMBOL:andM;@  WHAT IT IS:     Batch file display suppressor.andM;WHAT IT DOES:   Prevents batch files from displaying linesandM;and cluttering up the screen unnecessarily.andM;USES:andM;ECHO OFF will prevent all subsequent lines from displaying onscreen, unless aparticular line is expressly designed to display something.andP;  But since thissuppression capability doesn't go into effect until the line after ECHO OFF,the ECHO OFF itself will normally display.andP;  Prefacing this (or any line) withan ac, sign will prevent that one particular line from displaying.andO;Generally, all batch files should begin with anandM;@ECHO OFFandM;line.andP;  These two batch files work essentially the same way:andM;@ECHO OFFandM;REM This is SILENT1.BATandM;ECHO Only this line will appearandM;@REM This is SILENT2.BATandM;@ECHO Only this line will appearandM;Note: This requires DOS 3.3 or later to work.andM;SYMBOL: andgt;andM;WHAT It IS:      Redirect-and-overwrite symbol.andM;WHAT IT DOES: Redirects DOS output to a file and overwrites any existing filethat happens to have the specified filename.andP;  USES:andM;DOS can shift, or  redirect,&quot; the output of a file, device, or command fromits usual destination to a different file or device.andP;  When redirecting outputto a file, using a single andgt; sign creates a brand-new file and overwrites anyexisting file with the same name (see andgt; andgt;).andM;1.andP;  To print a DIR listing, typeandM;DIR andgt; PRNandM;2.andP;  To suppress a  file(s) copied&quot; message after a COPY operation, add a andgt;NUL to the end:andM;COPY *.* B: andgt; NULandM;3.andP;  To redirect the output of a DIR C: command and create a brand-new filecalled DIRFILE (which would overwrite any existing file that has the samename), typeandM;DIR C: andgt; DIRFILEandM;If you subsequently typedandM;DIR A: andgt; DIRFILEandM;DOS would wipe out the DIR C: contents of DIRFILE and create a new filecontaining just the directory listing of drive A: .andM;Note: This requires DOS 2.0 or later to work.andM;SYMBOL:  andgt;andgt;andM;WHAT IT IS:  Redirect-and-append symbol.andM;WHAT IT DOES: Redirects DOS output to a file and either creates a new file ifone with the specified name doesn't already exist, or adds (&quot;appends&quot;) thenew information to the end of an existing file with the specified filename(seeandgt;).andM;USES:andM;1.andP;  If no file called DIRFILE already exists, the following line will createa brand-new DIRFILE file containing a DIR C: listing:andM;DIR C: andgt;andgt; DIRFILEandM;2.andP;  If a DIRFILE already exists, DOS will append a DIR C: listing to it.andP;  Ifyou typeandM;DIR C: andgt;andgt; DIRFILE and thenandM;DIR A: andgt;andgt; DIRFILEandM;DOS will also append the directory listing of drive A: to the DIRFILE file.andM;Note: This requires DOS 2.0 or later to work.andM;SYMBOL:  andless;andM;WHAT IT IS:  Redirect-input-from-file symbol.andM;WHAT IT DOES: While DOS normally expects input to come from the keyboard, insome cases you can tell it to use a file for input instead.andP;  USES:andM;To view the contents of a long text file called LONGTEXT.FIL, typeandM;MORE andless; LONGTEXT.FILandM;Be careful not to switch the andless; symbol around.andP;  Do not type MORE andgt;LONGTEXT.FIL, or you'll wipe out the LONGTEXT.FIL contents !andP;  Note: Thisrequires DOS 2.0 or later to work.andM;SYMBOL:andM;WHAT IT IS:  Pipe symbol.andM;WHAT IT DOES: A DOS pipe makes the output of one command serve as the inputfor another command.andM;USES:andM;1.andP;  To view the contents of a long text file called LONGTEXT.FIL, typeandM;TYPE LONGTEXT.FIL I MOREandM;Here, the output of the TYPE command becomes the input for MORE.andM;2.andP;  To delete all the files in a directory and bypass the &quot;Are you sure(Y/N)?&quot; prompt, pipe the ECHOed keystroke Y into the DEL command:andM;ECHO Y | DEL *.*andM;Don't try this unless you really want to erase everything !andP;  3.andP;  The mostcommon pipe operation is to feed the FIND filter.andP;  To see a compact list ofall your nonhidden subdirectores, typeandM;CHKDSK /V | FIND &quot;Di&quot;andM;DOS 5.0 lets you try to do this with a new DIR switch:andM;DIR \ /AD /S | FIND &quot;Di&quot;andM;but this won't locate hidden subdirectories, either.andM;Note: This requires DOS 2.0 or later to work.andM;SYMOBL: %0,%1...%9andM;WHAT IT IS:  Replaceable parameter.andM;WHAT IT DOES: Lets a batch file use information sent to it from outside thebatch file.andP;  DOS replaces any  O it sees inside a batch file with the veryfirst thing that appears on the command line after the DOS prompt.andP;  Since thefirst thing that appears after the DOS prompt is the name of the batch fileitself-usually without the BAT extension-%%0 always represents the name ofthe batch file (at least initially; SHIFT can later change this).andP;  DOSreplaces any l it sees inside a batch file with the first thing you typed onthe command line after the name of the batch file.andP;  It replaces any %2 withthe second thing you typed after the batch file, %3 with the third thing, andso on, up to %9.andP;  It uses &quot;delimiters&quot; to separate each thing you typed.andP;  Themost common delimiter is a space, but DOS will treat semicolons, commas, andequal signs as delimiters, too.andP;  SHIFT can later change the way DOSinterprets these replaceable parameters.andM;USES:andM;The following TALKBAK1.BAT batch file mill display up to nine words that youenter at the DOS prompt after the word TALKBAK1; the first word afterTALKBAK1 will replace  1, the second %2, and so on.andP;  TALKBAK1.BAT uses thespecial parameter  O to display the name of the batch file itself.andM;@ECHO OFFandM;REM This is TALKBAK1.BATandM;ECHO This is %0.BATandM;FOR %%A IN (%1 %2 %3 %4 %5 %6 %7 %8 %9) DO ECHO %%AandM;To have a batch file process more than nine replaceable parameters, use theSHIFT command.andP;  TALKBAK2.BAT will display as many words as you can type onthe command line after TALKBAK2:andM;@ECHO OFFandM;ECHO This is %0.BATandM;:TOPandM;IF %1!==1 GOTO ENDandM;ECHO  %1andM;SHIFTandM;GOTO TOPandM;:ENDandM;While replaceable parameters are normally used to handle things that you typeon the command line, they also work well with FOR ...andP;  IN ...andP;  DO %%Avariables and CALL commands.andP;  In the following pair of batch files, BATCH1calls BATCH2 and passes parameters from BATCH1 to BATCH2.andP;  BATCH1 will ferretout all the .BAT files in your directory and pass the names to BATCH2; BATCH2will display the names one by one and then display the contents of the files.andO;The %%A in BATCH1 is like the pitcher; the %1 in BATCH2 is like the catcher:andM;@ECHO OFFandM;REM This is BATCH1.BATandM;FOR  %%A IN  (*.BAT) DO CALL BATCH2  %%AandM;REM This is BATCH2.BATandM;ECHO  %1andM;MORE andless; %1andM;PAUSEandM;SYMBOL: %%AandM;WHAT IT IS:  FOR ...andP;  IN ...andP;  DO batch file variable.andP;  WHAT IT DOES: Lets theFOR ...andP;  IN ...andP;  DO command perform repeated operations inside a batch fileon a set of files or commands.andM;USES:andM;The DOSFILS1.BAT batch file will copy all your .COM, .EXE, and .SYS filesfrom the current directory on drive C: to a floppy in drive B:andM;@ECHO OFandM;REM This is DDSFILS1.BATandM;B:andM;FOR %%A IN (C:*.COM C:*.EXE C:*.SYS) DO COPY %%AandM;DOSFILS2.BAT will do this and then erase the originals:andM;@ECHO OFFandM;REM This is DOSFILS2.BATandM;B:andM;FOR %%A IN (COPY ERASE) DO %%A C:*.COMandM;FOR %%A IN (COPY ERASE) DO %%A C:*.EXEandM;FOR %%A IN  COPY ERASE) DO %%A C:*.SYSandM;Note: FOR ...andP;  IN ...andP;  DO variables require double %% prefixes when used inbatch files but just single % prefixes when used directly at the DOS prompt.andM;SYMBOL:  %AandM;WHAT IT IS:  FOR ...andP;  IN ...andP;  DO nonbatch variable.andM;WHAT IT DOES:  Lets the FOR ...andP;  IN ...andP;  DO command perform repeatedoperations on a set of files or commands directly on the command line at theDOS prompt.andM;USES:andM;To see help for all the external DOS 5.0 commands (assuming your DOS filesare aH in a DOS directory), typeandM;FOR %A IN  (\DGS\*.COM \DOS\*.EXE) DO  %A /?andM;Note: FOR ...andP;  IN ...andP;  DO variables require double %% prefixes when used inbatch files but just single % prefixes when used directly at the DOS prompt.andM;SYMBOL:  %ENV VAR%andM;WHAT IT IS:  Environment variable.andM;WHAT IT DOES: Lets your batch files use the DOS environment as a place tostore variables, and gives batch files access to the important DOS settingsalready stored there (PATH, PROMPT, COMSPEC, and so on).andP;  USES:andM;The DOS PROMPT command can issue tricky ANSI.SYS color-setting Escapesequences.andP;  Normally this would change your PROMPT, but you can store a copyof the current prompt as an OLDPROMPT environment variable and then laterretrieve the stored value as %OLDPROMPT%.andP;  This works only from inside batchfiles.andP;  SHOWCOL.BAT assumes ANSI.SYS has already been loaded at boot-up timein CONFIG.SYS  with a line like DEVICE=\DOS\ANSI.SYS), and it will displaysix differyou leave a blank line before the  @CLS!andM;@REM This is SHOWCOL.BATandM;@SET 0=PROMPT%andM;@PROMPT $E[0;40mandM;@FOR %%A IN (6 5 4 3 2 1 1) DO PROMPT  E[3%%AmandM;@PAUSEandM;@PROMPT $E[34;47mandM;@CLSandM;@SET PROMPT=%0%andM;Note: Environment variables were not documented before Version 3.3 and workederratically (or not at all) in some earlier DOS versions.andP;  To use theenvironment as a variable storage area, you'll probably have to expand thedefault environment size with a line in your CONFIG.SYS like this one:andM;SHELL=C:\DOS\COMMAND.COM C:\DOS\  E:1024 /PandM;WHAT IT IS:  IF string-test equal sign.andM;WHAT IT DOES: Lets IF test whether two character strings are the same.andM;USES:andM;All batch files that need user-entered parameters should start out with an&quot;IF  1!==! GOTO OOPS&quot; test:andM;@ECHO OFFandM;REM This is ANYBATCH.FILandM;IF  %1!==! GOTO OOPSandM;REM (Guts of batch file go here)andM;GOTO ENDandM;; :OOPSandM;ECHO You didn't enter anything!andM;:ENDandM;If the user enters anything at all on the command line after the name of thebatch file, DOS replaces the  %1 with what the user entered.andP;  If the userenteredandM;ANYBATCH Hi MomandM;DOS will make  l equal to Hi, and will make the IF test:andM;IF Hi!==! GOTO OOPS Hi! is not equal to !, so the test fails, and the batchfile doesn't jump to :OOPS.andP;  But if the user doesn't enter anything after thename of the batch file, the test becomesandM;IF  !==! GOTO OOPS and since ! is clearly equal to !, DOS will jump to the:OOPS label.andO;</TEXT></DOC>
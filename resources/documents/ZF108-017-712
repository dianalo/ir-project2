<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-017-712  </DOCNO><DOCID>08 017 712.andM;</DOCID><JOURNAL>EXE  Dec 1989 v4 n7 p32(4)* Full Text COPYRIGHT Process Communications Ltd. (England) 1989.andM;</JOURNAL><TITLE>More maths matters. (how-to article on mathematical programming)</TITLE><AUTHOR>Ince, Darrel.andM;</AUTHOR><SUMMARY>The mathematics involved in formal methods of software developmentare discussed.andP;  Also, a specification expressed in mathematics isgiven for a small control system for a chemical plant.andO;Significant increases in clarity and exactness are only realizedwhen the systems specified with mathematics are large.andP;  The firststage is to identify stored data and the second stage is thederivation of the data invariant.andP;  The third stage is to identifyany operations that must be supported by the system.andP;  Onceidentified, the operations can be specified mathematically.andM;</SUMMARY><DESCRIPT>Topic:     Mathematical ProgrammingTutorialProgram Development Techniques.andO;Feature:   illustrationprogram.andO;Caption:   Natural language specification for chemical plant control system.andO;(program)Specification of stored data. (program)Specification of the data invariant. (program)andM;</DESCRIPT><TEXT>More maths matters In a previous article (.EXE, May '89) I explained howmathematical methods of software development are beginning to be used inBritish industry.andP;  That article concentrated on the advantages of theseso-called formal methods of software development.andP;  This article takes a muchcloser look at the mathematics involved and gives an example of aspecification expressed in mathematics.andM;Before wading in, a little background is necessary, describing a branch ofmathematics known as set theory.andP;  This is the corpus of laws and theoremsabout collections of objects known as sets.andP;  A set is a very simple objecT,its distinguishing feature is that it doesn't contain duplicates, thus{Thomas, Williams, Roberts} is an example of a set of employees and %react1,cracker2, distill1, distill3} is an example of a set of chemical reactors.andO;However, {VAX1, VAX2, PC1, PC2, PC3, PC2} is not an example of a set becauseit contains a duplicate entry (PC2).andP;  There is a special set, equivalent tozero in numerical mathematics, known as the empty set: a set with no members.andO;It is usually written as { }.andP;  In a similar way that mathematics hasoperators such as +, - and *, set theory has a series of operators which canbe applied to sets.andP;  The first is set union [intersection].andP;  This forms a setfrom two sets.andP;  The result is a set which has the same members as the twosets to which [intersection] is applied.andP;  For example, the result of {23, 44,lm, 88, 90} [intersection] {33, 44, 23, 89, 90} is the set {23, 44, 67, 88,90, 33, 89] Notice that 44, which is a member of both the sets to which[intersection] is applied, only occurs once in the result set.andM;A useful operator is the set intersection operator [union].andP;  This takes twosets and forms a set which contains only those elements which are common tothe two.andP;  Thus, {Ince, Watts, Williams, Tomkins} [union} {Davis, Watts,Tomkins} is equal to the set {Watts, Tomkins} since both sets have only twoelements in common.andP;  Another commonly used operator in formal specificationsis the set difference operator --.andP;  This removes the contents of one set fromthe other set.andP;  Thus, {PC1, PC2, VAX1, VAX2} -- {PC1, VAX2} is equal to {PC2,VAX1}andM;The operator E, which is read as 'belongs to', takes an elements of a set onthe left hand side, and a set on the right hand side.andP;  It gives the valuetrue if the element is contained in the set, and false otherwise.andP;  Thus,Davis E {Roberts, Ince, Wilson, Davis} is true and Thomas E {Roberts, Ince,Wilson, Davis} is false.andP;  A final operator is the card (ie cardinal number)operator.andP;  When applied to a set, it returns the number of elements in thatset, thus, card{1, 5, 78, 89, 67} = 5 card{} = 0andM;This short tutorial has described the base mathematics used for all formalmethods of software development.andP;  To see what a formal specifical looks like,we will consider a small problem.andM;The chemical plantandM;The problem that is to be specified is a small control system for a chemicalplant.andP;  I shall use the formal method of software development called 'VDM'(Vienna Development Method) for the specification.andP;  The natural languagespecification for the system is shown in Figure 1.andM;It is worth stressing that, because of space limitations and the tutorialnature of the article, the example I have used is unrealistically small.andP;  Itcould be specified using natural language without much loss of accuracy.andO;Only when larger real-life systems are specified with mathematics do you getsignificant increases in clarity and exactness.andM;The first step is to identify stored data.andP;  In the example above, this is thecollection of reactors which have been shut down and those which areoperating.andP;  This stored data can be specified as shown in Figure 2.andP;  Thefirst line states that a collection of reactors will be known in thespecification as react_set.andP;  The second line states that the system willconsist of two sets of reactors: shut_down (those reactors which are notcurrently working) and operating (those reactors which are).andM;The next stage is the derivation of the data invariant.andP;  This is a conditionwhich must be true throughout the execution of a system.andP;  For example, in abanking application, the data invariant might state that no account isallowed to go beyond a particular overdraft limit.andM;The data invariant for the reactor system is: no more than 100 reactors willform part of the system, no more than 20 reactors will be working at the sametime and a reactor will not simultaneously be shut down and operating.andP;  Thatis, if you take a snapshot of the system at any time during its operation,then you will find that the number of reactors will be less than or equal to100, the number of operating reactors will be less than or equal to 20 andthe intersection of the operating set and the shut_down set will contain nomembers.andP;  The data invariant can be written mathematically as shown in Figure3.andM;The preamble inv-system(s) * is just a way of saying for any system s thedata invariant is defined as.andP;  The right hand side of the * symbol specifieswhat the invariant is.andP;  Each part of the data invariant is separated by thesymbol [and] which can be read as and.andM;It is easy to see how the mathematical specification maps to the Englishversion given above.andP;  The first line shut_down(s) [union] operating(s) statethat the intersection of the shut down reactors in the system and theoperating reactors in the system will be the empty set, ie that a reactorcannot simultaneously be functioning and shut down.andP;  The second line statesthat the combined collection of shut down reactors and operating reactorswill contain no more than 100 members.andP;  The final line states that there willnever be more than 20 reactors in the set of operating reactors.andM;OperationsandM;With the data now specified, the next stage is to identify any operationswhich must be supported by the system; these correspond to the functions ofthe system.andP;  In our reactor example, each operation will correspond to acommand.andP;  These are:andM;* An operation which corresponds to the SHUT_DOWN command.andP;  This transformsan operating reactor to one which is shut down.andM;* An operation which corresponds to the START_UP command.andP;  This takes areactor which is shut down and starts it operating.andM;* An operation which corresponds to the OPERATING command.andP;  This returns withthe number of reactors which are operating.andM;Once identified, these operations can be specified mathematically.andP;  Thespecification for the SHUT_DOWN command is shown in Figure 4.andM;The first line gives the operation's name and parameter.andP;  SHUT_DOWN takesreactor reac - the reactor to be shut down.andP;  The next lines specifies thetype of access the command requires to the stored data.andP;  There are two typesof access: read access (objects in the data are read-only) and write access,in which objects are read and altered.andP;  In the case of SHUT_DOWN, writeaccess is required to the system.andP;  This is signified by the keyword wr.andM;The next part of the specification defines the effect of the SHUT_DOWNcommand on the system s.andP;  This specification consists of a pre-condition anda post-condition, introduced by the keywords pre and post respectively.andM;The pre-condition states  the condition under which the operation will bedefined.andP;  In the case of SHUT_DOWN is it only defined if reac is found in theset of operating reactors.andP;  The post-condition states what happens after anoperation is executed.andP;  It uses the convention of placing a harpoon over thestored data.andP;  When a variable has a harpoon  above it in a post-condition, itis a reference to the value of the variable before the operation wasexecuted.andP;  Thus, the first part of the post-condition can be rad as:'afterthe operation has been completed, the set of operating reactors in the systemis equal to the old value of the set of operating reactors minus the reactorthat is to be removed.'andP;  Similarly, the second part can be read as: 'afterthe operation has been completed, the set of reactors which have been shutdown is equal to the old value of the set of reactors that have been shutdown to which reac has been added.'andM;The pre-condition and post-condition are part of the contract between thestaff who specified the system and staff who are going to design and progrtamit.andP;  It says that if the pre-condition holds, then the system shouldguarantee that the post-condition holds.andM;The specification for the START UP command is similar--see Figure 5.andP;  In thiscase, the pre-condition states that the reactor reac must be shut down andthere must be less than 20 reactors which are currently operating.andP;  Theeffect of the command, as detailed in the post-condition, is to remove reacfrom the shut down set and add it to the operating set.andP;  The operationrequires write access, since the data is modified by the operation.andM;The final operation OPERATING is slightly different to SHUT DOWN and START UPsince it returns and integer value.andP;  This operation is shown in Figure 6.andO;the first line includes the expression no in operating: N.andP;  This signifiesthat the operation will deliver a value no in operating, which will be anatural number (an integer in the range 0 to [infinition]).andP;  The symbol Nstands for the set of natural numbers.andM;Since OPERATING only queries how many elements there are in the set ofoperating reactors, the stored data is specified as read only.andP;  There is nopre-condition because the operation will work correctly irrespective of thestate of the stored data.andP;  The post-condition states that after the operationhas terminated, the variable no in operating will contain the number ofelements in the operating set, ie the number of reactors that are operating.andM;Checking the specandM;With the specification completed, the next step is to check that it iscorrect.andP;  The first check that is made is to ensure that the operations donot violate the data invariant--that they do no t give rise to data for whichthe data invariant is not true.andP;  This is easy to show in the case of theOPERATING operation: it only has read access to the stored data, so the datamust remain unchanged.andM;We can quite easily demonstrate inforamlly that the data invariant holds forthe START UP command.andP;  First, we assume that it holds before the operation,and then examine what the operation does to the stored data.andP;  If the datainvariant holds before the operation we know that no more than 100 reactorswill be in the system.andP;  Now, since STARU UP does not create any new reactors,after the operation has been executed there will stil be no more than 100reactors in the system.andM;Let us next examine that part of the data invariant which declares that nomore than 20 reactors will be operating simultaneously.andP;  As before, assumethat the invariant holds before the operation.andP;  Now, the pre-condition of theSTART UP operation tells us that for the operation to be defined there mustbe less than 20 reactors in the set of working reactors.andP;  The post-conditionstates that a reactor is removed from the shut down set and placed in theoperating set; that is, that a single reactors added to the operating set.andO;Thus the number of reactors in the operating set after the operation has beencompleted must be less than or equal to 20.andP;  Hence this second part of thedata invariant will hold after the operation.andM;The remaining component states that a reactor cannot simultaneously beoperating and shut down (ie it cannot be both a member of the shut down setand the operating set).andP;  Again, assume that the data invariant holds beforethe operation.andP;  After the operation has been executed, all that has happenedis that a reactor has been transferred from the shut down set to theoperating set.andP;  Hence, if there are no common members of these sets beforethe operation, there must be no common members after the operation; so theinvariant holds.andP;  A similar set of arguments can demonstrate that SHUT DOWNwill not violate the data invariant.andM;A second set of checks try to demonstrate that the properties of the systemare as expected.andP;  In our example, one of these would be to prove that, if areactor was shut down and then started up again, the stored data would notchange from its initial state.andP;  Another possible check would involvedemonstrating that, when a reactor was shut using the SHUT DOWN operation,there would be one more member of the shut down set than there was before theoperation was executed.andP;  I will not show the reasoning required todemonstrate that these properties hold.andP;  Note that it could be done by thesame informal process that used to demonstrate that the invariant was notviolated.andM;The example in this article is quite small.andP;  Informal reasoning is sufficientto prove that the specification is correct.andP;  As systems get larger, this typeof reasoning must be augmented (and eventually supplanted) by mathematicalproof.andP;  When it comes to very large systems, this proof becomes so difficultthat computer assistance is required.andP;  Some specialised software tools, knownas theorem provers, have been developed to enable much of the proof processto be automated.andM;Once the specification has been checked, the process of specifying thefunctions of a system mathematically is complete.andP;  We can now produce adesign which matches the specification.andP;  Development staff decide how thesystem is to be implemented.andP;  For example, they might decide that, becausespeed is of the essence, the reactor data is to be stored in an array,ordered by the name of the reactors, retrieved by a fast binary search.andM;Irrespective of the implementation, the data is again specified usingmathematics, with design operations corresponding to START UP, SHUT DOWN andOPERATING described by pre-conditions and post-conditions.andP;  The checkingprocess is then carried out, ensuring that the data invariants are notviolated by the operations and that properties of the implementation arereflected in the design.andP;  At this stage another series of checks must bedone: checks that prove that the design meets the specification.andP;  After this,the system can be given to a programmer to implement.andM;ConclusionandM;Of necessity, the example that I have given has been small.andP;  However, it hasdisplayed all the features of formal software development: the use ofmathematics, to specify the functions of a system and its design, and the useof proof techniques, to check that the descriptions produced at each stage inthe development are correct and an adequate reflection of previous stages.andM;Darrel Ince is a Professor of Computing Science at the Open University, wherehe is the acting head of the computing department.andP;  If you are interested infurther study of mathematical methods for software development, he recommendsthe three books listeed below;andM;An Introduction to Discrete Mathematics and Formal System Specification.andO;(Darrel Ince, Oxford University Press).andP;  A book which teaches the mathematicsbehind formal methods and introduces the Z formal development method.andP;  Z isvery similar to the notation presented in this article.andP;  The book is suitablefor self-study.andM;Systematic Software Development Using VDM.andP;  (C.andP;  Jones, Prentice-Hall).andP;  Thebible and reference book for VDM.andP;  However, it does assume of good knowledgeof discrete mathematics.andP;  If you're going to carryout serious softwaredevelopment using VDM then this book should be on your shelves.andP;  The Scienceof Programming.andP;  (D Gries, Springer-Verlag).andP;  An excellent book, whichdescribes a formal method of software development suitable for developingsubroutines.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-468-531  </DOCNO><DOCID>09 468 531.andM;</DOCID><JOURNAL>Computer Language  Oct 1990 v7 n10 p11(3)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Feedback. (letter to the editor)</TITLE><AUTHOR>Brantley, David J.; Duty, Darrel T.; Cannon, Clifford Randal;Foster, Cameron; Prince, Timothy C.; Asahi, Teruo.andM;</AUTHOR><DESCRIPT/><TEXT>In defense of NintendoandM;Dear Editor:andM;I've had about all I can stand of Stan Kelly-Bootle's moralizing (&quot;Are wehaving fun yet?&quot; Aug. 1990).andP;  So what if most Nintendo games have an&quot;alarming emphasis on blood and guts ...andP;  and new-age occultism&quot;? Bootlesounds like one of those joyless souls who testified in front of Congress forwarning labels on rock records.andP;  Western culture has survived bear-baitingand hanging children for stealing bread, and it will survive Nintendo.andM;To refer to the &quot;widely publicized reforms in the once-Evil Empire&quot; mustcertainly be a comfort to the people of Lithuania and Soviet Georgia who arelearning firsthand just what glasnost really means.andP;  Enough already !andP;  DavidJ. BrantleyandM;Reisterstown, Md.andM;code of silence brokenandM;Dear Editor:andM;My conscience will no longer allow me to suffer in silence.andP;  I've endured thedrivel in Karen Hooten's articles in the hopes that she would provide somepearls of wisdom after the initial shock of being a contributing editor hadworn thin.andP;  I was wrong.andM;Hooten's elitist approach, ill-mannered remarks, and ivory-tower view asexpressed in Programming by Profession have totally exhausted my patience andexasperated more than a few of your readers, as evidenced in recent Feedbackcolumns.andM;I believe you should return to the fundamental question of why you publishCOMPUTER LANGUAGE and why I, as a software engineer, continue to subscribe.andO;I subscribe to get information and another perspective on the use of computerlanguages that I must deal with in a production environment on a day-to-daybasis.andP;  More than once I have extrapolated an idea from code you've publishedto solve an unrelated problem or I've gained an insight into the philosophybehind an implementation of a language feature that has saved me hours ofresearch.andP;  You save me time and I, in return, pay you money.andM;We cannot do without the musings of P. J. Plauger or the witticisms of StanKelly-Bootle.andP;  Every court needs a magician and jester to maintain an evenbalance and keep things in perspective.andP;  However, I can do without innuendo,half truths, and misinformed viewpoints perpetuated in the name of&quot;professional journalism' by Hooten.andM;T urge you to reconsider the usefulness of the information provided inHooten's column.andP;  I believe it to be wasted space that could contain valuablecode.andM;Darrel T. DutyandM;Columbus, OhioandM;Apology gladly accepted.andM;Dear Editor:andM;I feel I owe you an apology.andP;  Some months ago I accepted a trial subscriptionto COMPUTER LANGUAGE.andP;  When the invoice arrived, I cancelled the subscriptionwithout giving the decision any thought.andP;  Then I read an issue of themagazine.andM;My way of reading professional and technical magazines is to tear them apart,keeping and filing the articles I want to read carefully and discarding therest.andP;  After so treating my issue of COMPUTER LANGUAGE, I realized I hadsaved the entire magazine.andP;  I have not seen another publication soknowledgeable and useful, and at the same time so literate andunderstandable.andM;I have enclosed my paid subscription.andP;  I assure you I intend to remain aCOMPUTER LANGUAGE reader for many years to come.andM;Clifford Randall CannonandM;Chico, CalifandM;Minority RulesandM;Dear Editor:andM;In your Editor's Notes (July 1990) you defend your perceived position as &quot;Cbigots.&quot; While I fully support your position, I feel you have unfairlyslighted what is admittedly a small portion of your readership, specifically,&quot;nonprogrammer programmers and hobbyists.&quot;andM;I fall somewhere in between those two categories: I write programs at work tosolve specific problems, which usually involve real-time machine controlusing a processor I've never heard of before, and I write programs at homefor my own enjoyment and curiosity.andM;COMPUTER LANGUAGE is very important to me.andP;  It is not important because ithas snippets of C code I can lift; I can write C code as well as anyone.andP;  Itis also not important because you or your authors have solved a specificproblem for me.andP;  I've never seen an article in COMPUTER LANGUAGE showing mehow to select cross-points on a video switcher in response to real-timeexternal events, nor do I expect to.andP;  What is important is that I can learnthe process of programming--how to develop algorithms, efficiently use theresources at hand, reduce complexity, ensure maintainability and errorrecovery, and so forth.andP;  These processes--the art of programming--can onlycome from experience, and when you're self-taught, experience can be apainful teacher.andP;  It is very helpful to see how someone else solved aproblem--not for the solution itself, but for the processes involved inreaching the solution.andM;In short, I feel COMPUTER LANGUAGE is targeted squarely at me, whether sointended or not.andP;  I and others like myself may not make up a significantportion of your readership, but I suspect that in terms of value received,we're the largest portion.andM;Cameron FosterandM;Hayward, CalifandM;Show me where to C itandM;Dear Editor:andM;Your editorial, &quot;Life among the C bigots&quot; (July 1990) prompts me to make afew comments.andP;  I was a charter subscriber of COMPUTER LANGUAGE, and I recallthe magazine being sold originally as intended for those who program in morethan one language.andP;  I still spend more time &quot;banging out the odd FORTRANprogram&quot; (or improving the function, structure, and performance of same) thanI do with C.andM;I have worked in large and small corporate environments, as a non-programmerprogrammer, as a manager of nonprogrammer programmers, and as a writer ofarticles on C. I feel qualified to state that if a company has standardizedsuccessfully on a particular programming language, it is because thatlanguage is appropriate to the discipline or market segment in which thatcompany works.andP;  Most companies work in enough different disciplines that theymust use more than one language, or at least use software developed invarious languages.andM;I was surprised the other day to find out, using UNIX ps, that my FORTRANcompilations on a Silicon Graphics were being performed by cc.andP;  As aconsequence, it turns out that this FORTRAN compiler supports a fair amountof C, including structures.andP;  If one compiler can understand both C andFORTRAN, surely we should be able to choose whichever mode of expression isbest suited to the job.andM;I have published more articles using C. C, being both a lower-level andsometimes higher-level language than others, is often better suited formaking detailed points about programming practices.andP;  As you point out, C hasa wider readership audience and may be the best choice for publishingalgorithms that could be written equally well in other languages.andP;  On theother hand, C provides a great deal of flexibility that prevents some of therun-time checks or compiler optimizations of other languages and, in manyapplications, worsens the quality vs.andP;  development time.andP;  Witness the greaterneed for interpreters and on-line debuggers in the C market !andP;  One of theobstacles that inhibits people from using unfamiliar languages is the lack ofwritten references on the less-obvious points of correspondence between them,or on the most common ways functions written in various languages caninteract.andP;  These nonevident points inevitably come up in a project of anysize, leading people to reach possibly misinformed conclusions about thegenerality of each language.andP;  With better information available, it would beeasier for non-C programmers to take advantage of published articles on C.andO;This area appears to be one in which your magazine could contribute.andM;Timothy C. PrinceandM;Grosse Point Farms, Mich.andM;Computer foreign language?andM;Dear Editor:andM;Thank you for your frequent invitations for COMPUTER LANGUAGE subscriptionrenewals.andP;  I won't renew my subscription because COMPUTER LANGUAGE is a bitdifficult for me to enjoy.andP;  Since English isn't my native tongue, all Englisharticles are more or less not as easy to comprehend as Japanese articles.andM;When I am very serious, I use a dictionary.andP;  Usually, for example, on themorning train to work, I have to read without a dictionary.andP;  This worked finefor years with BYTE.andP;  Then came COMPUTER LANGUAGE.andP;  First I was delighted atthe titles on the contents page.andP;  All the articles seemed interesting andworthy of reading.andP;  Then I found myself embarrassed by different wordings anddiscussions.andM;Take your May 1990 issue, for example.andP;  In the first two Paragraphs of P. J.andO;Plauger's &quot;All the standard reasons,&quot; I hit words like &quot;hiatus,&quot;  gripe,&quot;opine,&quot; &quot;plagues,&quot;  gleefully,' and &quot;bleatings,&quot; which are not in my Englishvocabulary.andM;Plauger's discussion is also hard to grasp.andP;  I expected the column tointroduce the newest features of standard C, but I felt Plauger was enjoyinghimself by playing with his ample vocabulary.andM;I feel this example is typical of COMPUTER LANGUAGE.andP;  Readers must possessthe same wit and knowledge as the author to enjoy an article.andP;  COMPUTERLANGUAGE talks about a theme while BYTE describes it.andP;  I have decided toconcentrate on BYTE, although I'm still interested in computer languages.andM;Please allow me to suspend my subscription for a while until my interest inCOMPUTER LANGUAGE returns.andM;Teruo AsahiandM;Kobe, Japan</TEXT></DOC>
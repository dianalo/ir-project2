<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-146-610  </DOCNO><DOCID>08 146 610.andM;</DOCID><JOURNAL>Communications of the ACM  Feb 1990 v33 n2 p190(12)* Full Text COPYRIGHT Association for Computing Machinery 1990.andM;</JOURNAL><TITLE>Self-assessment procedure XX. (self-assessment of operatingsystems) (technical)</TITLE><AUTHOR>Rosenberg, J.; Ananda, A.L.; Srinvasan, B.andM;</AUTHOR><SUMMARY>A series of self-assessment questions on computer operatingsystems is presented.andP;  The self-assessment procedure is designedto help computer professionals test their knowledge of generaloperating-system concepts.andP;  Most of the questions are multiplechoice, and are developed for the purpose of letting participantsthink further about the concepts.andP;  Some individuals will prefer tostart with the questions and note the references later, whileothers will read the answers first.andM;</SUMMARY><DESCRIPT>Topic:     Operating SystemsTestingTraining of EmployeesEducationTechnology.andO;Feature:   illustrationtableforms.andO;Caption:   Previous self-assessment procedures. (table)Questions. (forms)Suggested responses. (table)andM;</DESCRIPT><NOTE>Only Text is presented here; see printed issues for graphics.andO;</NOTE><TEXT>SELF-ASSESSMENT PROCEDURE XXandM;What is Self-Assessed Procedure XX?andM;This is the 20th self-assessment procedure.andP;  All the previous ones are listedon the facing page.andP;  The first 13 are available from ACM (*1) in a singleloose-leaf binder to which later procedures may be added.andM;This procedure is intended to allow computer professionals to test theirknowledge of general concepts of operating systems and includes questionsconcerning terminology, process and memory management, capability, and filesystems.andP;  In all except two cases, there is supposed to be only one correctanswer for each of the multiple-choice questions.andM;The next few paragraphs repeat the introduction and instructions given withearlier procedures.andP;  Those who read them before may advance directly to thequestions.andM;What is Self-Assessment?andM;Self-assessment is based on the idea that a procedure can be devised thatwill help a person appraise and develop his or her knowledge about aparticular topic.andP;  It is intended to be an educational experience for aparticipant.andP;  The questions are only the beginning of the procedure.andP;  Theyare developed to help the participant think about the concepts and decidewhether to pursue the matter further.andM;The primary motivation of self-assessment is not for an individual to satisfyothers about his or her knowledge; rather it is for a participant to appraiseand develop his or her own knowledge.andP;  This means that there are several waysto use a self-assessment procedure.andP;  Some people will start with thequestions.andP;  Others will read the answers and refer to the references first.andO;These approaches and others devised by the participants are all acceptable ifat the end of the procedure the participant can say, &quot;Yes, this has been aworthwhile experience&quot; or &quot;I have learned somethng.&quot;andM;How to Use the Self-Assessment ProcedureandM;We suggest the following way of using the procedure, but as noted earlier,there are others.andP;  This is not a timed exercise; therefore, plan to work withthe procedure when you have an hour to spare, or you will be shortchangingyourself on this educational experience.andP;  Go through the questions, and markthe responses you think are most appropriate.andP;  Compare your responses withthose suggested by the Committee.andP;  In those cases where you differ with theCommittee, look up the references if the subject seems pertinent to you.andP;  Inthose cases in which you agree with the Committee, but feel uncomfortablewith the subject matter, and the subject is significant to you, look up thereferences.andM;Some ACM chapters may want to devote a session to discussing thisself-assessment procedure or the concepts involved.andM;The Committee hopes some participants will send comments.andM;Previous Self-Assessment ProceduresandM;Self-Assessment Procedure IandM;Three concept categories within the programming skills and techniques areaMay 1976andM;Self-Assessment Procedure IIandM;System organization and control with information representation, handling,and manipulation May 1977andM;Self-Assessment Procedure IIIandM;Internal Sorting September 1977andM;Self-Assessment Procedure IVandM;Program development tools and methods, data integrity, and file organizationand processing February 1978andM;Self-Assessment Procedure VandM;Database systems Peter Scheuermann and C. Robert Carlson August 1978andM;Self-Assessment Procedure VIandM;Queueing network models of computer systems J. W. Wong and G. Scott GrahamAugust 1979andM;Self-Assessment Procedure VIIandM;Software science M. H. Halstead and Victor Schneider August 1980andM;Self-Assessment Procedure VIIIandM;The programming language Ada Peter Wegner October 1981andM;Self-Assessment Procedure IXandM;Ethics in computing Edited by Eric A. Weiss, from a book by Donn B. ParkerMarch 1982andM;Self-Assessment Procedure XandM;Software project management Roger S. Gourd December 1982andM;Self-Assessment Procedure XIandM;One part of early computing history Eric A. Weiss July 1983andM;Self-Assessed Procedure XIIandM;Computer architecture Robert I. Winner and Edward M. Carter January 1984andM;Self-Assessment Procedure XIIIandM;Binary search trees and B-Trees Gopal K. Gupta May 1984andM;Self-Assessment Procedure XIVandM;Legal issues of computing Jane P. Devlin, William A. Lowell, and Anne E.andO;Alger May 1985andM;Self-Assessment Procedure XVandM;File processing Martin K. Solomon and Riva Wenig Bickel August 1986andM;Self-Assessment Procedure XVIandM;Computer organization and logic design Glen G. Langdon, Jr.andP;  November 1986andM;Self-Assessment Procedure XVIIandM;ACM Eric A. Weiss October 1987andM;Self-Assessment Procedure XVIIIandM;Data Communications John C. Munson March 1988andM;Self-Assessment Procedure XIXandM;Copyright Law Riva W. Bickel April 1989andM;Approved and submitted by the ACM Committee on Self-Assessment,andM;a committee of the ACM Education BoardandM;Chairman  Neal S. Coulter Department of Computer Science Florida AtlanticUniversity Boca Raton, FL 33431andM;Members  Richard E. Fairley George Mason UniversityandM;Mark J. Jensen IBM-Austin, TXandM;Randy E. Michelsen Los Alamos National LaboratoryandM;Edward G. Pekarek, Jr.andP;  Appalachian State UniversityandM;Eric A. Weiss EditorandM;Self-Assessment Procedure XXandM;This self-assessment procedure is not sanctioned as a test nor endorsed inany way by the Association for Computing Machinery.andP;  Any person using any ofthe questions in this procedure for the testing or certification of anyoneother than himself or herself is violating the spirit of this self-assessmentprocedure and the copyright on this material.andM;ContentsandM;Part I. Questions Part II.andP;  Suggested Responses Part III.andP;  Reference TablePart IV.andP;  Reference Titles Part V. AcknowledgmentsandM;Part I. QuestionsandM;TERMINOLOGYandM;1.andP;  A process may be defined as:andM;a.andP;  A set of instructions to be executed by a computer.andM;b.andP;  A program in execution.andM;c.andP;  A piece of hardware that executes a set of instructions.andM;d.andP;  The main procedure of a program.andM;2.andP;  A processor in the context of computing is:andM;a.andP;  A set of instructions to be executed on a computer.andM;b.andP;  A program in execution.andM;c.andP;  A piece of hardware that executes a set of instructions.andM;d.andP;  The main procedure of a program.andM;3.andP;  A multiprogramming system may be defined as one in which:andM;a.andP;  Programs are divided into pages.andM;b.andP;  Input is accepted in batches of many jobs.andM;c.andP;  Several programs can reside in memory at the same time.andM;d.andP;  Many processes may share the same program residing in main memory.andM;4.andP;  The main distinction between a multiprocessor system and amultiprogrammed system is that in a multiprocessor system:andM;a.andP;  The main storage is shared by several programs.andM;b.andP;  The input is accepted in batches of many jobs.andM;c.andP;  Processor time is shared among several processes.andM;d.andP;  Many processors may be active simultaneously.andM;PROCESS MANAGEMENTandM;5.andP;  A user process can become blocked only if it is:andM;a.andP;  In the ready stateandM;b.andP;  In the running state.andM;c.andP;  In the blocked (or waiting) state.andM;d.andP;  Waiting for a resource.andM;6.andP;  A counting semaphore was initialized to 9.andP;  Then 27 P (wait) operationsand 23 V (signal) operations were completed on this semaphore.andP;  The resultingvalue of the semaphore is:andM;a.andP;  5andM;b.andP;  0andM;c.andP;  7andM;d.andP;  13andM;7.andP;  The main difference between binary semaphores and counting semaphores isthat:andM;a.andP;  Binary semaphores can only take the values 0 and 1, while countingsemaphores can take any non-negative integer values.andM;b.andP;  Binary semaphores can only be used to solve problems involving up to twoprocesses sharing the same resource, while counting semaphores can be used tosolve problems involving more than two processes sharing the same resource.andM;c.andP;  Binary semaphores cannot solve all the problems that can be solved bycounting semaphores.andM;d.andP;  Counting semaphores must be controlled by a monitor, while binarysemaphores are called directly by user processes.andM;8.andP;  A wait operation on a semaphore should not occur within a criticalsection controlled by that semaphore because:andM;a.andP;  A deadlock will occur.andM;b.andP;  A semaphore is not a shared variable.andM;c.andP;  Another process may then enter the critical section violating the mutualexclusiion constraint.andM;d.andP;  A signal on a semaphore is always given from outside the criticalsection.andM;9.andP;  Which of the following statements is false?andM;a.andP;  Disjoint processes need not use critical sections.andM;b.andP;  Programs with critical sections can never be used simultaneously by morethan one process.andM;c.andP;  A process wanting to enter a critical section currently in use must waitfor the process utilizing the critical section to terminate.andM;d.andP;  Two different critical sections may be executed concurrently if they donot use the same shared variables.andM;10.andP;  The basic principle of a monitor is that:andM;a.andP;  Several resources can only be controlled by a monitor.andM;b.andP;  Several processes may concurrently execute a procedure of a givenmonitor.andM;c.andP;  Only one process may execute a procedure of a given monitor at any giventime.andM;d.andP;  It schedules the execution of processes in a multiprocessor operatingsystem.andM;11.andP;  Which of the following actions may result in a process becoming blocked?andM;a.andP;  A process executes a P (wait) operation on a semaphore.andM;b.andP;  A process executes a V (signal) operation on a semaphore.andM;c.andP;  A process exits from a critical section.andM;d.andP;  A process within a critical section changes the value of a sharedvariable.andM;12.andP;  Non-preemptive-process-scheduling policies:andM;a.andP;  Are indispensable for interactive systems.andM;b.andP;  Allocate the processor to a process for a fixed time period.andM;c.andP;  Always use a ready queue sorted in order of decreasing priority.andM;d.andP;  Make short jobs wait for long jobs.andM;13.andP;  The pure-round-robin-scheduling policy:andM;a.andP;  Responds poorly to short processes if the time slice is small.andM;b.andP;  Does not use any a priori information about the service times ofprocesses.andM;c.andP;  Becomes equivalent to the Shortest-Job-First Policy when the time sliceis made infinitely large.andM;d.andP;  Ensures that the ready queue is always the same size.andM;14.andP;  Which of the following statements is true?andM;a.andP;  A multiprogrammed system gives better average turnaround than anon-multiprogrammed system.andM;b.andP;  When a job-scheduling policy is changed, it is possible for the averageturnaround time to decrease while the average priority-weighted turnaroundtime increases.andM;c.andP;  There is no job scheduler in a time-sharing system.andM;d.andP;  Indefinite postponement of a job is possible if theFirst-Come-First-Serve-job-scheduling policy is used.andM;15.andP;  Which of the following statements if false?andM;a.andP;  I/O-bound processes should be given priority in scheduling over CPU-boundprocesses to ensure good turnaround time.andM;b.andP;  Users can exploit a multilevel feedback-scheduling policy by breaking along job into several small jobs.andM;c.andP;  The processor scheduler normally classifies a process as being aCPU-bound process if it uses most of the previous time slice allocated to it.andM;d.andP;  The round-robin-scheduling policy allocates a time slice to a processdepending on the number of time slices it has already used.andM;16.andP;  Which of the following is not a necessary condition for a deadlock?andM;a.andP;  Mutually exclusive use of a resource by processes.andM;b.andP;  Partial allocation of resources to a process.andM;c.andP;  Preemptive scheduling of resources.andM;d.andP;  Circular waiting by processes.andM;17.andP;  One solution to the Dining Philosophers problem which avoids deadlockis:andM;a.andP;  Non-preemptive scheduling.andM;b.andP;  Ensuring that all philosophers pick up their left fork before they pickup their right fork.andM;c.andP;  Ensuring that all philosophers pick up their right fork before they pickup their left fork.andM;d.andP;  Ensuring that odd philosophers pick up their left fork before they pickup their right fork and even philosophers pick up their right fork beforethey pick up their left fork.andM;18.andP;  Which of the following statements is true for the Banker's algorithm?andM;a.andP;  It cannot be used for a system with many resources, each of which isunique with no multiple copies.andM;b.andP;  It is used to detect deadlock.andM;c.andP;  It is not applicable when a resource is shared simultaneously by manyusers.andM;d.andP;  An unsafe situation will always lead to a deadlock.andM;19.andP;  Consider a system in which the total available memory is 48K and inwhich memory once allocated to a process cannot be preempted from thatprocess.andP;  Three processes A, B, and C have declared in advance that themaximum amount of memory that they will require is 25K, 15K, and 41K wordsrespectively.andP;  When the three processes are all in execution and using 3K,9K, and 24K words of memory respectively, which one of the following requestsfor additional allocation can be granted with a guarantee that deadlock willnot occur as a result of the allocation.andM;a.andP;  A requests 9K words.andM;b.andP;  C requests 7K words.andM;c.andP;  B requests 6K words.andM;d.andP;  A requests 6K words.andM;MEMORY MANAGEMENTandM;20.andP;  Which of the following statements is true?andM;a.andP;  When the best-fit method of allocating segments is used, it is preferableto order the list of free blocks according to increasing memory addresses.andM;b.andP;  The best-fit method chooses the largest free block in which the givensegment can fit.andM;c.andP;  In general, the first-fit allocation algorithm will be faster than thebest-fit algorithm.andM;d.andP;  The tagged method of deallocating segments is fast when the list of freeblocks is ordered according to increasing memory addresses.andM;21.andP;  In a variable partition-memory management scheme, internal fragmentationoccurs when:andM;a.andP;  Sufficient memory is available to run a program, but it is scatteredbetween existing partitions.andM;b.andP;  Insufficient memory is available to run a program.andM;c.andP;  The partition allocated to a program is larger than the memory requiredby the program.andM;d.andP;  A program is larger than the size of memory on the computer.andM;22.andP;  The FIFO page-replacement policy:andM;a.andP;  Is based on program locality.andM;b.andP;  Sometimes can cause more page faults when memory size is increased.andM;c.andP;  Is not easy to implement, and hence, most systems use an approximation ofFIFO.andM;23.andP;  Which of the following statements is false?andM;a.andP;  With the Least Recently Used (LRU) page-replacement policy, when the pagesize is halved, the number of page faults can be more than double theoriginal number of page faults.andM;b.andP;  The working set size is a monotonically nondecreasing function of theworking set parameter.andM;c.andP;  When the working set policy is used, main memory may contain some pageswhich do not belong to the working set of any program.andM;24.andP;  It is advantageous for the page size to be large because:andM;a.andP;  Less unreferenced data will be loaded into memory.andM;b.andP;  Virtual addresses will be smaller.andM;c.andP;  Page tables will be smaller.andM;d.andP;  Large programs can be run.andM;25.andP;  It is advantageous for the page size to be small because:andM;a.andP;  Less unreferenced data will be loaded into memory.andM;b.andP;  Virtual addresses will be smaller.andM;c.andP;  Page tables will be smaller.andM;d.andP;  Large programs can be run.andM;26.andP;  For a certain page trace starting with no page in the memory, ademand-paged memory system operated under the LRU replacement policy resultsin 9 and 11 page faults when the primary memory is of 6 and 4 pages,respectively.andP;  When the same page trace is operated under the optimal policy,the number of page faults may be:andM;a.andP;  9 and 7.andM;b.andP;  7 and 9.andM;c.andP;  10 and 12.andM;d.andP;  6 and 7.andM;27.andP;  In a paged segmented scheme of memory management, the segment tablepoints to a page table because:andM;a.andP;  The segment table may occasionally be too large to fit in one page.andM;b.andP;  each segment may be spread over a number of pages.andM;c.andP;  Page size is usually larger than the segment size.andM;d.andP;  The page table may be too large to fit into a single segment.andM;28.andP;  Sharing in a paged memory system is done by:andM;a.andP;  Giving a copy of the shared pages to each process.andM;b.andP;  Dividing the program into procedures and data and allowing only theprocedures to be shared.andM;c.andP;  Several page table entries pointing to the same frame in the main memory.andM;29.andP;  One of the ways of sharing segments in a segmented system is by:andM;a.andP;  Maintaining a common segment table containing the information aboutshared segments.andM;b.andP;  Dividing the program into procedures and data and allowing only theprocedures to be shared.andM;c.andP;  Dividing the shared segment into a set of pages and allowing only certainpages to be shared.andM;d.andP;  None of the above, as segments are larger than pages, and hence, cannotbe shared.andM;30.andP;  With reference to Multics, which of the following statements is false?andM;a.andP;  Every process must have a separate linkage segment for every sharedsegment.andM;b.andP;  The linkage segment need not be used to resolve internal references of asegment.andM;c.andP;  When control is transferred from one segment to another, the linkagepointer must be changed to point to the new linkage segment.andM;d.andP;  The linkage segment is constructed at the time of linking.andM;31.andP;  An advantage of dynamic linking is that:andM;a.andP;  The segments that are not used in a run need not be linked into theprocess address space.andM;b.andP;  It reduces execution time overhead.andM;c.andP;  Debugging is simplified because programs are modular.andM;d.andP;  The linker need not construct the known segment table.andM;CAPABILITYandM;32.andP;  In operating systems, a capability is:andM;a.andP;  A facility which provides global access to all data in the system.andM;b.andP;  A unique and nonforgeable name identifying an object in the systemtogether with access information.andM;c.andP;  A user-maintained list of access privileges of the objects in the system.andM;d.andP;  A table of the available operating system resources.andM;33.andP;  In capability-based systems, which of the following statements is true?andM;a.andP;  The unique name of a capability is reused after every time slice.andM;b.andP;  The unique name of a capability is never reused.andM;c.andP;  The unique name of a capability can be reused if there are no referencesto it.andM;FILE SYSTEMSandM;34.andP;  Disk scheduling involves:andM;a.andP;  Allocating disk space to users in a fair manner.andM;b.andP;  Validating the file control information stored in the file.andM;c.andP;  Examining pending disk requests to determine the most efficient way toservice the requests.andM;d.andP;  Reorganizing disk requests to maximize seek time.andM;35.andP;  Which of the following is not normally contained in the directory entryof a file?andM;a.andP;  Creation date.andM;b.andP;  Access control list.andM;c.andP;  A count of the number of free blocks in the disk.andM;d.andP;  Filename and extension.andM;36.andP;  Which of the following is an example of a spooled device?andM;a.andP;  A line printer used to print the output of a number of jobs.andM;b.andP;  The terminal used to enter the input data for a Fortran program beingexecuted.andM;c.andP;  The secondary memory device in a virtual memory system.andM;d.andP;  The swapping area on a disk used by the swapper.andM;Part II.andP;  Suggested ResponsesandM;1.andP;  b The term process was borrowed from chemical engineering by thedesigners of the Multics system in the 1960s and is used interchangeably withthe term task.andP;  The generally accepted definition of a process is a programin execution.andM;2.andP;  c A processor is any piece of hardware that executes a set ofinstructions.andM;3.andP;  c Multiprogramming is, by definition, having several programs in memoryat the same time.andP;  In time-sharing systems, for example, a process currentlyrequiring an input/output operation will yield the CPU to another processwhich is ready to run.andP;  Such switching is also called CPU scheduling.andP;  Atime-sharing system generally has multiprogramming too.andM;4.andP;  d A multiprocessor system has more than one processor.andP;  Each processorcan have its own memory or share a common memory.andP;  The former belongs to theclass of loosely coupled systems and the latter to the tightly coupledsystems.andP;  Each processor executes a separate process, and many processors maybe active simultaneously.andM;5.andP;  a, b A process can become blocked if it is either ready or in the runningstate.andP;  A process can become blocked while running if it requests a resourcein use by another process.andP;  It is also possible for a process to becomeblocked while ready.andP;  For example, in a preemptive resource-allocationscheme, a low-priority process could be ready to run.andP;  While that process iswaiting in the ready queue, if a higher-priority process requests a resourcethat is held by a ready process, the operating system can preempt theresource and allocate it to the higher-priority process, thereby blocking theprocess which was in the ready state.andM;6.andP;  a Each P (wait) operating would decrement the semaphore value by onewhile each V (signal) operation would incremental the semaphore value by one.andO;Thus, for an initial value of 9, 27 waits and 23 signals would result in asemaphore value of 9 - 27 + 23 = 5.andM;7.andP;  a The power of counting semaphores and binary semaphores is the same.andO;The counting semaphore is particularly useful when a resource is to beallocated from a pool of identical resources.andP;  The counting semaphore forsuch a resource is initialized to the number of identical resources in thepool.andP;  Each P operation decrements the value of the semaphore indicating thatanother resource has been allocated, and each V operation increments thesemaphore value by 1 indicating that a process has returned the resource tothe pool.andP;  If a process attempts a P operation on the semaphore whose valueis zero, then the process has to wait until a resource is returned to thepool.andM;8.andP;  a When a semaphore is used to implement mutual exclusion it isinitialized to 1.andP;  In order to enter the critical region a process executes await on the semaphore which decrements it to zero.andP;  The next processattempting to enter will then wait.andP;  On exitting the critical region, theprocess executes a signal which-activates the next process (if there is onewaiting) or increments the semaphore.andP;  If a process executes a wait on thesemaphore while in the critical region it will be suspended, and no otherprocess will be able to enter.andP;  Thus the processes waiting for the semaphorewill be deadlocked.andM;9.andP;  b Disjoint processes that do not share any data need not require criticalsections.andP;  A critical section contains shared data, and hence, any processwanting to enter the critical section which is in use by another process mustwait for the process utilizing the critical section to terminate.andP;  Hence,programs with critical sections can be shared by many processes as long asonly one process is accessing the data in the critical section at any time.andM;10.andP;  c The monitor is a synchronization mechanism based on data abstraction.andO;The shared data is encapsulated in routines, and automatic mutual exclusionis provided on these routines; only one process may execute a procedure of amonitor at any time.andP;  Monitors also have a queuing mechanism for waiting onconditions.andM;11.andP;  a V operations can never cause a process to become blocked.andP;  Processescan be blocked by executing a P operation.andM;12.andP;  d In general, a non-preemptive process-scheduling policy can make shortjobs wait longer in the ready queue, thereby giving poor response to thoseprocesses.andP;  This is particularly true when the system is heavily loaded withlong jobs.andM;13.andP;  b With the Round-Robin-scheduling policy, processes are dispatched inFIFO order but are given a limited amount of CPU time, called the time sliceor quantum.andP;  If a process does not complete before the time slice expires, itis preempted, and the CPU is given to the next waiting process in the readyqueue.andP;  The preempted process is placed at the back of the ready queue.andO;Hence no a priori knowledge is used to determine the next process toschedule.andM;14.andP;  b Multiprogramming systems do not always perform better than singleprogram systems because of the overhead of switching between processes.andP;  Itis possible for the average turnaround to improve because of the change inthe job scheduling policy, but at the same time it may result in a longerturnaround for high-priority jobs.andP;  This could happen when the priority ofthe job is given less importance in the new scheduling algorithm.andO;Time-sharing systems sometimes have a job scheduler to limit the number oflogged-on users to a level that the system can cope with.andP;  Under thefirst-come-first-serve algorithm, it is not possible for a job to beindefinitely postponed because jobs are executed in the order of theirarrival.andM;15.andP;  d I/O-bound processes use little CPU time in general, and hence, inorder to have better turnaround time (defined as the number of processescompleting execution per unit of time), I/O processes should be given morepriority over CPU-bound processes.andP;  In the case of a multilevel feedbacksystem, multiple wait queues are maintained.andP;  The queue on which a processwaits for CPU allocation is determined by its previous queue and the amountof CPU time used in the previous allocated CPU time slice.andP;  If a process usesits entire time slice (i.e., a CPU-bound process) it is moved down in thehierarchy and will thus have a lower priority in the next CPU-time-sliceallocation.andP;  Hence, response to a long job can be improved by dividing itinto several smaller jobs.andP;  For discussion about the Round-Robin-schedulingpolicy, refer to question 13.andM;16.andP;  c In a deadlock, processes never finish executing, and systems resourcesare tied up.andP;  This prevents other jobs from ever starting.andP;  The following arethe necessary conditions that must be satisfied for a deadlock to exist.andM;* Processes claim exclusive control of the resources they require mutualexclusion condition)andM;* Process hold resources already allocated to them while waiting foradditional resources (hold and wait condition)andM;* Resources cannot be removed from the processes holding them until theresources are used to completion (no preemption condition)andM;* A circular chain of processes exists in which each process holds one ormore resources that are requested by the next process in the chain(circular-wait condition).andM;17.andP;  d The scheduling algorithm given (d) will guarantee that there will beno deadlock.andP;  Both (b) and (c) allow the possibility of all philosopherspicking up one fork resulting in deadlock.andP;  There are other solutions to theDining Philosophers problem.andM;18.andP;  c The Banker's algorithm (initially described by Dijkstra in 1965) is analgorithm which will detect whether a given allocation of resources couldresult in a deadlock.andP;  It does not detect the existence of a deadlock.andP;  Thealgorithm can handle single or multiple equivalent or independent resources.andO;The algorithm is pessimistic in that it flags situations as being potentialdeadlocks when, in fact, a deadlock may not occur.andP;  Simultaneously sharedresources can never be in a deadlock situation, and thus, the algorithm isinapplicable to these cases.andM;19.andP;  c After initial allocation to the process A, B, and C, the remainingavailable memory is 12K.andP;  If process A makes a further request of 9K and ifthe request is satisfied, it could still require 13K at some point before itscompletion.andP;  This requirement cannot be satisfied at this point of timebecause, if A gets 9K more, no process can get its maximum memory request, sodeadlock is possible.andP;  A similar argument holds good for the choices (b) and(d).andP;  However, if 6K is allocated to process B (which can be satisfied fromthe available memory), its maximum requirement is satisfied, and hence it canrun to completion.andP;  After a finite amount of time the memory held by processB will be released.andP;  Then process C's requirement can be met, and in a finiteamount of time it will complete its execution which in turn allows process Ato complete.andP;  Hence, the allocation of 6K memory for process B under thecurrent allocation will result in a safe situation.andM;20.andP;  c In the first-fit allocation algorithm, the free blocks are searchedsequentially until a free block whose size is greater than or equal to therequested memory size is found.andP;  The best-fit algorithm tries to find andallocate the free block (if it exists) that is the closest (but at least aslarge to the required size.andP;  Empirical study shows that a first-fitallocationis generally faster than a best-fit allocation although there arecircumstances where either one can be better than the other.andP;  For a detailedcomparison of the first-fit and best-fit strategies refer to Shore, J.E., &quot;Onthe External Storage Fragmentation Produced by First-Fit and Best-FitAllocation Strategies,&quot; (Communications August 1975, pp.433-440).andM;The tagged method is used (by using tag fields to indicate whether the blockis free or used by a process) for coalescing adjacent free blocks when ablock of memory is released.andM;21.andP;  c Internal fragmentation occurs when a partition allocated to a programis larger than that required.andP;  The difference between these two sizes is theamount of memory that is wasted.andP;  Choice (a) refers to externalfragmentation.andM;22.andP;  b It would seem reasonable to expect that if more pages are allocated toa process, then it should experience fewer page faults.andP;  But under the FIFOpage-replacement strategy, certain page-reference patterns actually causemore page faults when the number of pages allocated to the process isincreased.andP;  This phenomenon is known as Belady's anomaly.andP;  For moreinformation refer to Belady, L.A., Nelson, R.A., and Shedler, G.S., &quot;AnAnomaly in Space-Time Characteristics of Certain Programs Running in a PagingEnvironment&quot; (Communications December 1969, pp.andP;  349-353).andM;23.andP;  a For a given pattern of references and a given page size, the number ofpage faults is governed by the number of different pages that are accessed.andO;If the page size is halved, then no more than the original number offull-sized pages can be accessed, and thus, no more than twice the originalnumber of page faults can occur.andM;24.andP;  c Increasing the size of the page will decrease the number of pages ofthe addressing space, and hence, the number of entries in the page will besmaller.andM;25.andP;  a By reducing the page size, the amount of unreferenced data held inmemory will be reduced.andP;  However, the size of the page table will increase.andM;26.andP;  b The LRU scheme results in 9 and 11 page faults for memory sizes of 6and 4 pages, respectively.andP;  Hence, the optimal (OPT) scheme must have a and bnumber of page faults for a memory size of 6 and 4 pages, respectively, wherea [is less than or equal to] 9 and b [is less than or equal to] 11 and 0 [isless than or equal to] a [is less than or equal to] b.andP;  This is because OPTmust be at least as good as LRU and must not have more faults if there ismore memory.andP;  Initially, the memory is empty, and, hence, in both cases,there must be an initial set of accesses requiring more than the total numberof pages of memory in order to cause page faults greater than the number ofmemory pages.andP;  Thus, even with OPT, there must be at least a numer of pagefaults greater than the number of pages of memory for each memory size, thatis a [is greater than] 6 and b [is greater than] 4.andP;  Hence, 6 [is less than]a [is less than or equal to] 9 and 4 [is less than] b [is less than or equalto] 11.andP;  Therefore, it should be noted that neither OPT nor LRU schemesuffers from Belady's anomaly.andM;27.andP;  b Segments are variable-sized memory blocks.andP;  In a paged segmentedsystem, each segment is divided into one or ore fixed-size pages.andP;  Hence, anentry for a segment points to a page table which contains the addresses ofthe pages corresponding to that segment.andM;28.andP;  a, c Sharing pages can be achieved either by providing a copy of thepage or by having the same entry in the page tables that point to the sharedpage.andP;  The latter does not have the duplicate copy of the page, and hence,the memory-space requirement and the overhead involved in maintaining theconsistency of shared pages is reduced.andP;  There need be no restriction thatonly procedures and not data can be shared in a paged system.andM;29.andP;  a The sharing of segments in a segmented system can be done by having acommon segment table.andP;  All virtual addresses above a certain segment numbercan be translated using the information in the common segment table ratherthan the entries in the local segment table.andP;  This method will avoidduplication of the entries in the shared segments in each local segmenttable.andM;30.andP;  a A linkage segment is only required when there are external referencesfrom a shared segment.andP;  Hence, if some objects are shared but have noexternal references, then there will be no linkage segment.andM;31.andP;  a Dynamic linking allows procedures to be linked and loaded into memorywhen they are first called.andP;  Hence, procedure segments that are not requiredfor a particular execution need not be in memory, thereby reducing the amountof memory required.andM;32.andP;  b A capability is a unique nonforgeable name directly identifying anobject in a system, together with access information.andP;  Users cannotmanufacture or modify capabilities.andP;  Possession of a capability gives theright to access the object, governed by the access information.andM;33.andP;  c The unique name in capabilities can be reused, but only if it can beguaranteed that no references remain to the old use of the name.andM;34.andP;  c In multiprogrammed systems, many processes may be generating requestsfor reading and writing disk records.andP;  Because these processes often makerequests faster than they can be retrieved by moving head disks, queues buildup for such devices.andP;  Some systems use the first-come-first-serve (FCFS)policy to service the disk queues.andP;  But FCS exhibits a seek pattern in whichsuccessive requests can cause time consuming seek delays.andP;  To minimize thetime spent in seeking records, it is reasonable to order the request queue.andO;Such a method of ordering the disk requests is called disk scheduling.andP;  Diskscheduling generally tries to minimize the head-movement time.andM;35.andP;  c The directory entry generally contains information pertaining to afile that includes the file name and possibly some or all of the following:file extension, date of creation, date of last modification, size (may be inkilobytes), access rights, etc.andP;  The number of free blocks on the disk isinformation related to the whole disk and is not kept as part of a file.andM;36.andP;  a In spooling (Simultaneous Peripheral Operation On Line), a buffer isinterposed between a running program and a slow-speed device involved withthe program for input/output.andP;  For example, instead of writing lines directlyto the line printer, the lines are written (temporarily) onto a disk.andP;  Thus,the program is allowed to run to completion without waiting for the (slow)printer to finish.andP;  When the printer becomes free, the lines can be printedfrom the disk file.andM;Part III.andP;  Reference TableandM;The following table gives the page numbers of the suggested references wherea discussion on the question can be found.andP;  Suggested references are fullycited in Part IV, Reference Titles.andM;Part IV.andP;  Reference TitlesandM;Suggested ReferencesandM;1.andP;  Calingaert, P. Operating System Elements--A user Perspective.andP;  PrenticeHall, Englewood Cliffs, N.J., 1982.andM;2.andP;  Deitel, H.M.andP;  An Introduction to Operating Systems.andP;  Addison-Wesley,Reading, Mass., 1984 (revised first edition).andM;3.andP;  Janson, P.A.andP;  Operating Systems Structures and Mechanisms.andP;  AcademicPress, New York, 1985.andM;4.andP;  Peterson, J. L., and Silberschatz, A. Operating System Concepts.andP;  2d ed.andO;Addison-Wesley, Reading, Mass., 1985.andM;5.andP;  Tanenbaum, A.S.andP;  Operating Systems--Design and Implementation.andP;  PrenticeHall, Englewood Cliffs, N.J., 1987.andM;6.andP;  Theaker, C.J., and Brookes, G.R.andP;  A Practical Course on OperatingSystems.andP;  Macmillan Press Ltd., United Kingdom, 1983.andM;Additional ReferencesandM;7.andP;  Bic, L., and Shaw, A.C.andP;  Logical Design of Operating Systems.andP;  2d ed.andO;Prentice Hall, Englewood Cliffs, N.J., 1988.andM;8.andP;  Christian, K. The Unix Operating Systems.andP;  John Wiley andamp; Sons, New York,1983.andM;9.andP;  Comer, D. Operating System Design--The XINU Approach.andP;  Prentice Hall,Englewood Cliffs, N.J., 1984.andM;10.andP;  Davis, W.S.andP;  Operating Systems--A Systematic View.andP;  3d ed.andO;Addison-Wesley, Reading, Mass., 1987.andM;1.andP;  Kaisler, S.H.andP;  The Design of Operating Systems for Small ComputerSystems.andP;  John Wiley andamp; Sons, New York, 1983.andM;12.andP;  Maekawa, M., Oldehoeft, A.E., and Oldehoeft, R.R.andP;  OperatingSystems--Advanced Concepts.andP;  Benjamin/Cummings Publishing Co. Inc., 1987.andM;13.andP;  Milenkovic, M. Operating Systems--Concepts and Design.andP;  McGraw-Hill, NewYork, 1987.andM;14.andP;  Turner, R.W.andP;  Operating Systems--Design and Implementation.andP;  MacMillanPublishing Company, New York, 1986.andM;Part V. AcknowledgementsandM;The authors would like to acknowledge the referees for their constructivecriticisms and the valuable suggestions which made this assessment proceduremore consistent and readable.andM;EpilogueandM;Now that you have reviewed this self-assessment procedure and have comparedyour responses to those suggested, you should ask yourself whether this hasbeen a successful educational experience.andP;  The Committee suggests that youconclude that it has only if you haveandM;--discovered some concepts that you did not previously know about orunderstand, orandM;--increased your understanding of those concepts that were relevant to yourwork or valuable to you.andM;ACM Self-Assessment ProceduresandM;Guide for Prospective AuthorsandM;Self-assessment procedures are intended to be fairly short mechanisms to helpmembers of ACM appraise and develop their knowledge of subjects important tothem in their roles as computer professionals.andP;  The purpose of the proceduresis tutorial.andP;  The subjects of the procedures should be about computing, ofwidespread interest or importance to ACM members, and comprehensible to theaverage ACM member after a reasonable amount of effort.andP;  However, thesubjects need not be of universal interest within the ACM community.andP;  Theprocedure need not present a balanced view of all known ways of solving orviewing a particular problem as long as the procedure is accurate.andM;The procedure should be aimed at the general ACM membership, not atspecialists.andP;  The set of items in the procedure seldom would make a goodgraduate student examination, although some of the items conceivably might beused in such a context.andM;It is important to keep in mind that the self-assessment procedure is notintended as a test or certification of knowledge for anyone other than theperson reading the procedure.andM;The items in the procedure should be of widely varying difficulty; a fewshould be easy enough for virtually any ACM member to answer or make areasonable guess at.andP;  The author should apply about 30 items, some or all ofwhich may be based on short examples placed in the procedure.andP;  Most of theitems in published procedures have been in multiple-choice form, but this isnot necessary as long as reasonably short responses can be provided.andP;  Someitems have had more than one correct response, which is fine as long as theitem is appropriately worded.andP;  It is suggested that the items not be arrangedin order of increasing difficulty and that some easy items appear very nearor at the beginning, and occasionally throughout.andM;Responses should be provided for almost all of the items.andP;  Occasionally, anopen question might be included (a procedure consisting entirely of openquestions would be unusual).andM;Every item and its response should be associated with a reference.andP;  Thesereferences should be as precise as possible (including page and, ifappropriate, line or paragraph number).andP;  References should be only to a fewpublicly available documents.andP;  One should be able to obtain the referenceswithout having access to a huge library.andP;  If the author can find noreferences for a response, this probably indicates that the subject or itemis too new to appear in a self-assessment procedure.andM;It is desirable to provide an additional short bibliography for readers whobecome interested enough to read further.andP;  If a good bibliography has alreadybeen published, a reference to it should be included as well.andM;Authors of published procedures have found it useful to test the proceduresby asking colleagues and students to work them through.andP;  The Committeestrongly recommends that this be done prior to submission of a draft.andM;Please supply the ACM Self-Assessment Committee with your proposed procedureincluding the following sections: items, responses, references for each item,and bibliography.andP;  The Committee will review your procedure and will gettechnical reviews by experts as needed.andP;  If the Committee accepts yourprocedure, it may ask you to attend a committee meeting to go over anyproposed changes.andP;  After the authors of accepted procedures sign copyrightagreements, the Committee will have the procedure published with anappropriate introduction in Communications.andP;  The authors of the procedurewill be listed as such, as with other Communications articles.andP;  Themembership of the Committee will be listed as part of the procedure.andO;</TEXT></DOC>
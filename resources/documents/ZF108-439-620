<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-439-620  </DOCNO><DOCID>08 439 620.andM;</DOCID><JOURNAL>Communications of the ACM  May 1990 v33 n5 p577(7)* Full Text COPYRIGHT Association for Computing Machinery 1990.andM;</JOURNAL><TITLE>Abstracts from other ACM publications. (Association for ComputingMachinery) (column)andM;</TITLE><DESCRIPT/><NOTE>Only Text is presented here; see printed issues for graphics.andO;</NOTE><TEXT>ACM Transactions on Database Systems  December 1989andM;Imprecise Schema: A Rationale for Relations with Embedded SubrelationsandM;Howard M. Dreizen and Shi-Kuo ChangandM;Exceptional conditions are anomalous data which meet the intent of a schemabut not the schema definition, represent a small proportion of the databaseextension, and may become known only after the schema is in use.andP;  Admissionof exceptional conditions is argued to suggest a representation that locallystretches the schema definition by use of relations with embeddedsubrelations.andP;  Attempted normalization of these relations to 1NF does notyield the static schema typically associated with such transformations.andP;  Aclass of relations, termed Exceptional Condition Nested Form (ECNF), isdefined which allows the necessary representation of exceptional conditionswhile containing sufficient restrictions to prevent arbitrary and chaoticinclusion of embedded subrelations.andP;  Queries on a subset of exceptionalconditions, the exceptional constraints, are provided an interpretation viaan algorithm that transforms ECNF relations into 1NF relations containing twotypes of null values.andP;  Extensions of relational algebraic operators, suitablefor interactive query navigation, are defined for use with ECNF relationscontaining all forms of exceptional conditions.andM;For Correspondence: H.M.andP;  Dreizen, EPIX, Inc., 310 Anthony Trail, Northbrook,IL 60062; S.K.andP;  Chang, Computer Science Department, Univ.andP;  of Pittsburgh,Pittsburgh, PA 15260.andM;Integrity = Validity + CompletenessandM;Amihai MotroandM;Database integrity bas two complementary components: validity, whichguarantees that all false information is excluded from the database, andcompleteness, which guarantees that all true information is included in thedatabase.andP;  This article describes a uniform model of integrity for relationaldatabases, that considers both validity and completeness.andP;  To a large degree,this model subsumes the prevailing model of integrity  i.e., integrityconstraints).andP;  One of the features of the new model is the determination ofthe integrity of answers issued by the database system in response to userqueries.andP;  To users, answers that are accompanied with such detailedcertifications of their integrity are more meaningful.andP;  First, the model isdefined and discussed.andP;  Then, a specific mechanism is described thatimplements this model.andP;  With this mechanism, the determination of theintegrity of an answer is a process analogous to the determination of theanswer itself.andM;For Correspondence: Computer Science Department, University of SouthernCalifornia, University Park, Los Angeles, CA 90089-0782.andM;Using Semantic Knowledge of Transactions to increase ConcurrencyandM;Abdel Aziz Farrag and M. Tamer  OzsuandM;When the only information available about transactions is syntacticinformation, serializability is the main correctness criterion forconcurrency control.andP;  Serializability requires that the execution of eachtransaction must appear to every other transaction as a single atomic step(i.e., the execution of the transaction cannot be interrupted by othertransactions).andP;  Many researchers, however, have realized that thisrequirement is unnecessarily strong for many applications and cansignificantly increase transaction response time.andP;  To overcome this problem,a new approach for controlling concurrency that exploits the semanticinformation available about transactions to allow controlled nonserializableinterleavings has recently been proposed.andP;  This approach is useful when thecost of producing only serializable interleavings is unacceptably high, Themain drawback of the approach is the extra overhead incurred by utilizing thesemantic information.andP;  We examine this new approach in this paper and discussits strengths and weaknesses.andP;  We introduce a new formalization for theconcurrency control problem when semantic information is available about thetransactions.andP;  This semantic information takes the form of transaction types,transaction steps, and transaction breakpoints.andP;  We define a new class of&quot;safe &quot; schedules called relatively consistent (RC) schedules.andP;  This classcontains serializable as well as nonserializable schedules.andP;  We prove thatthe execution of an RC schedule cannot violate consistency and propose a newconcurrency control mechanism that produces only RC schedules.andP;  Our mechanismassumes fewer restrictions on the interleavings among transactions thanpreviously introduced semantic-based mechanisms.andM;For Correspondence: A.A.andP;  Farrag, Department of Mathematics.andP;  Statistics, andComputing Science' Dalhousie University, Halifax.andP;  Nova Scotia, Canada B3H3J5; M.T.andP;  Ozsu, Department of Computing Science, University of Alberta,Edmonton, Alberta,  Canada T6G 2H1.andM;Query Processing Techniques in the Summary-Table-by-Example Database QueryLanguageandM;Gultekiti Ozsoyoglu, Victor Matos, and Z. Meral OzsoyogluandM;Summary-Table-by-Example (STBE) is a graphical language suitable forstatistical database applications.andP;  STBE queries have a hierarchical subquerystructure and manipulate summary tables and relations with set-valuedattributes.andM;The hierarchical arrangement of STBE queries naturally implies atuple-by-tuple subquery evaluation strategy (similar to the nested loops joinimplementation technique) which may not be the best query processingstrategy.andP;  In this paper we discuss the query processing techniques used inSTBE.andP;  We first convert an STBE query into an &quot;extended&quot; relational algebra(ERA) expression.andP;  Two transformations are introduced to remove thehierarchical arrangement of subqueries so that query optimization ispossible.andP;  To solve the &quot;empty partition&quot; problem of aggregate functionevaluation, directional join (one-sided outer-join) is utilized.andP;  We give thealgebraic properties of the ERA operators to obtain an &quot;improved&quot; ERAexpression.andP;  Finally, we briefly discuss the generation of alternativeimplementations of a given ERA expression.andM;STBE is implemented in a prototype statistical database management system.andO;We discuss the STBE-related features of the implemented system.andM;For Correspondence: Department of Computer Engineering and Science and Centerfor Automation and Intelligent Systems, Case institute of Technology, CaseWestern Reserve University, Cleveland, OH 44106.andM;On the Effect of Join Operations on Relation SizesandM;Daniele Gardy and Claude PuechandM;We propose a generating function approach to the problem of evaluating thesizes of derived relations in a relational database framework.andP;  We present amodel of relations and show how to use it to deduce probabilistic estimationsof derived relation sizes.andP;  These are found to asymptatically follow normaldistributions under a variety of assumptions.andM;For Correspondence: D. Gardy, Laboratoire de Recherche en Informatique, CNRSUA, Bat.andP;  490, Universite de Paris-Sud, 91405 Orsay, Cedex, France; C. Puech,Laboratoire d'Informatique de l'Ecole Normale Supdrieure, Ecole NormaleSuperieure, 45 Rue d'Ulm, 75230 Paris Cedex 05, France.andM;ACM Transactions on Programming Languages and Systems January 1990andM;A Mechanism for Environment integrationandM;Geoffrey Clemm and Leon OsterzweilandM;This paper describes research associated with the development and evaluationof Odin-an environment integration system based on the idea that tools shouldbe integrated around a centralized store of persistent software objects.andP;  Thepaper describes this idea in detail and then presents the Odin architecture,which features such notions as the typing of software objects, composingtools out of modular tool fragments, optimizing the storage and rederivationof software objects, and isolating tool interconnectivity information in asingle centralized object.andP;  The paper then describes some projects that haveused Odin to integrate tools on a large scale.andP;  Finally, it discusses thesignificance of this work and the conclusions that can be drawn aboutsuperior software environment architectures.andM;For Correspondence: G. Clemm, Evolutionary Software, 55 Commonwealth Road,Watertown, MA 02172; L. Osterweil, Department of Information and ComputerScience, University of California at Irvine, Irvine, CA 92717,andM;Interprocedural Slicing Using Dependence GraphsandM;Susan Horwitz, Thomas Reps, and David BinkleyandM;The notion of a program slice, originally introduced by Mark Weiser, isuseful in program debugging, automatic parallelization, and programintegration.andP;  A slice of a program is taken with respect to a program point pand a variable x; the slice consists of all statements of the program thatmight affect the value of x at point p. This paper concerns the problem ofinterprocedural slicing-generating a slice of an entire program, where theslice crosses the boundaries of procedure calls.andP;  To solve this problem, weintroduce a new kind of graph to represent programs, called a systemdependence graph, which extends previous dependence representations toincorporate collections of procedures (with procedure calls) rather than justmonolithic programs.andP;  Our main result is an algorithm for interproceduralslicing that uses the new representation.andP;  It should be noted that our workconcerns a somewhat restricted kind of slice: rather than permitting aprogram to be sliced with respect to program point p and an arbitraryvariable, a slice must be taken with respect to a variable that is defined orused at p.)andM;The chief difficulty in interprocedural slicing is correctly accounting forthe calling context of a called procedure.andP;  To handle this problem, systemdependence graphs include some data dependence edges that representtransitive dependences due to the effects of procedure calls, in addition tothe conventional direct-dependence edges.andP;  These edges are constructed withthe aid of an auxiliary structure that represents calling andparameter-linkage relationships.andP;  This structure takes the form of anattribute grammar.andP;  The step of computing the required transitive-dependenceedges is reduced to the construction of the subordinate characteristic graphsfor the grammar's nonterminals.andM;For Correspondence: Computer Sciences Department, University ofWisconsin-Madison, 1210 W. Dayton St., Madison, WI 53706.andM;Production Trees: A Compact Representation of Parsed ProgramsandM;Vance E. WaddleandM;Abstract syntax trees were devised as a compact alternative to parse trees.andO;because parse trees are known to require excessive amounts of storage torepresent parsed programs.andP;  However, the savings that abstract syntax treesactually achieve have never been precisely described because the necessaryanalysis has been missing.andP;  Without it, one can only measure particular casesthat may not adequately represent all the possible behaviors,andM;We introduce a data structure, production trees, that are more compact thaneither abstract syntax trees or parse trees.andP;  Further, we develop thenecessary analysis to characterize the storage requirements of parse trees.andO;abstract syntax trees, and production trees and relate the size of all threeto the size of the program's text.andP;  The analysis yields the parameters neededto characterize these storage behaviors over their entire range.andP;  We fleshout the analysis by measuring these parameters for a sample of &quot;C&quot; programs.andO;For these programs, production trees were from 1/15 to 1 /23 the size of thecorresponding parse tree, 1/2.7 the size of a (minimal) abstract syntax tree.andO;and averaged only 2.83 times the size of the program text,andM;For Correspondence: IBM T.J.andP;  Watson Research Center, P.O.B.andP;  218, YorktownHeights, NY 10598.andM;A Modular Technique for the Design of Efficient Distributed Leader FindingAlgorithmsandM;E.andP;  Korach, S. Kutten, and S. MoranandM;A general, modular technique for designing efficient leader findingalgorithms in distributed.andP;  asynchronous networks is developed.andP;  Thistechnique reduces the problem of efficient leader finding to a simplerproblem of efficient serial traversing of the corresponding network.andP;  Themessage complexity of the resulting leader finding algorithms is bounded by[(f(n) + n)(log[.sub.2]k + 1) (or (f(m) + n)(log[.sub.2]k + 1)], where n isthe number of nodes in the network [m is the number of edges in the network],k is the number of nodes that start the algorithm, and f(n)[f(m)] is themessage complexity of traversing the nodes [edges] of the network.andP;  The timecomplexity of these algorithms may be as large as their message complexity.andO;This technique does not require that the FIFO discipline is obeyed by thelinks.andP;  The local memory needed for each node, besides the memory needed forthe traversal algorithm, is logarithmic in the maximal identity of a node inthe network.andP;  This result achieves in a unified way the best-known upperbounds on the message complexity of leader finding algorithms for circular,complete, and general networks.andP;  it is also shown to be applicable to otherclasses of networks, and in some cases the message complexity of theresulting algorithms is better by a constant factor than that of previouslyknown algorithms.andM;For Correspondence: Department of Computer Science, Technion, IsraelInstitute of Technology, Haifa, Israel 32  00,andM;A Distributed Deadlock Detection Algorithm for CSP-Like CommunicationandM;Shing-Tsaan HuangandM;An algorithm for detecting deadlocks in distributed systems with CSP-likecommunication is proposed.andP;  Unlike previous works, the proposed algorithmavoids periodically sending deadlock-detecting messages by the processes andrequires no local storage for the processes with size predetermined by thenumber of processes in the system.andP;  The algorithm is proven to have thefollowing properties: (0) it never detects false deadlocks; (1) it has onlyone process in a knot report the deadlock; and (2) it detects every truedeadlock in finite time.andM;For Correspondence: Institute of Computer Science, National Tsing-HuaUniversity, Hsinchu, Taiwan (30043), R.O.C.andM;A Correctness Proof for Combinator Reduction with CyclesandM;William M. Farmer, John D. Ramsdell, and Ronald J. WatroandM;Turner popularized a technique of Wadsworth in which a cyclic graph rewritingrule is used to implement reduction of the fixed point combinator Y. Weexamine the theoretical foundation of this approach.andP;  Previous work basconcentrated an proving that graph methods are, in a certain sense, sound andcomplete implementations of term methods.andP;  This work is inapplicable to thecyclic Y rule, which is unsound in this sense since graph normal forms canexist without corresponding term normal forms.andP;  We define and prove thecorrectness of combinator head reduction using the cyclic Y rule; thecorrectness of normal reduction is an immediate consequence.andP;  Our proofavoids the use of infinite trees to explain cyclic graphs.andP;  Instead, we showhow to consider reduction with cycles as an optimization of reduction withoutcycles.andM;For Correspondence: The MITRE Corporation, Burlington Road, Bedford, MA01730.andM;Journal of the Association for Computing Machinery October 1989andM;Learnability and the Vapnik-Chervonenkis DimensionandM;Anselm Blumer, Andrzej Ehrenfeucht, David Haussler, and Manfred K. WarmuthandM;Valiant's learnability model is extended to learning classes of conceptsdefined by regions in Euclidean space E&quot;.andP;  The methods in this paper lead toa unified treatment of some of Valiant's results, along with previous resultson distribution-free convergence of certain pattern recognition algorithms.andO;It is shown that the essential condition for distribution-free learnabilityis finiteness of the Vapnik-Chervonenkis dimension, a simple combinatorialparameter of the class of concepts to be learned.andP;  Using this parameter, thecomplexity and closure properties of learnable classes are analyzed, and thenecessary and sufficient conditions are provided for feasible learnability.andM;For Correspondence: A Blumer, Department of Mathematics and Computer Science,Tufts University, Medford, MA 02155; A. Ehrenfeucht, Department of ComputerScience, University of Colorado at Boulder, Boulder, CO 80302; D. Hausslerand M.K.andP;  Warmuth, Department of Computer and Information Sciences,University of California at Santa Cruz, Santa Cruz, CA 95064.andM;P-Uniform Circuit ComplexityandM;Eric W. AllenderandM;Much complexity-theoretic work on parallelism has focused on the class NC,which is defined in terms of logspace-uniform circuits.andP;  Yet P-uniformcircuit complexity is in some ways a more natural setting for studyingfeasible parallelism.andP;  In this paper, P-uniform NC (PUNC) is characterized interms of space-bounded AuxPDAs and alternating Turing Machines with boundedaccess to the input.andP;  The notions of general-purpose and special-purposecomputation are considered, and a general-purpose parallel computer for PUNCis presented.andP;  It is also shown that NC = PUNC if all tally languages in Pare in NC; this implies that the NC = PUNC question and the NC = P questionare both instances of the ASPACE(S(n)) = ASPACE, TIME(S(n).andP;  S(n)[.sup.o[1]])question.andP;  As a corollary, it follows that NC = PUNC implies PSPACE =DTIME(2[.sup.n[.sup.O(1)]] ).andM;For Correspondence: Department of Computer Science, Rutgers University, HillCenter, New Brunswick, NJ 08903.andM;Distributed BisimulationsandM;Ilaria Castellani and Matthew HennessyandM;A new equivalence between concurrent processes is proposed.andP;  It generalizesthe well-known bisimulation equivalence to take into account the distributednature of processes.andP;  The result is a noninterleaving semantic theory;concurrent processes are differentiated from processes that arenondeterministic but sequential.andP;  The new equivalence, together with itsobservational version, is investigated for a subset of the language CCS, andvarious algebraic characterizations are obtained.andM;For Correspondence: I. Castellani, INRIA, Ecole des Mines, SophiaAntipolis,06565 Valbonne Cedex, France; M. Hennessy, Computer Science, Mathematics andPhysics Building, University of Sussex, Falmer, Brighton, Sussex BN1 9QH,EnglandandM;Finding Minimum-Cost Circulations by Canceling Negative CyclesandM;Andrew V. Goldberg and Robert E. TarjanandM;A classical algorithm for finding a minimum-cost circulation consists ofrepeatedly finding a residual cycle of negative cost and canceling it bypushing enough flow around the cycle to saturate an arc.andP;  We show that ajudicious choice of cycles for canceling leads to a polynomial bound on thenumber of iterations in this algorithm.andP;  This gives a very simple stronglypolynomial algorithm that uses no scaling.andP;  A variant of the algorithm thatuses dynamic trees runs in O(nm(log n)min{log(nC), m log n }) time on anetwork of n vertices, m arcs, and arc costs of maximum absolute value C.andO;This bound is comparable to those of the fastest previously known algorithms.andM;For Correspondence: A.V.andP;  Goldberg, Department of Computer Science, StanfordUniversity, Stanford, CA 94305; R.E.andP;  Tarjan, Department of Computer Science,Princeton University, Princeton, NJ 08544.andM;Passes, Sweeps, and Visits in Attribute GrammarsandM;Joost Engelfriet and Gilberto FileandM;Theoretical results are presented on multi-pass (both left-to-right andalternating), multi-sweep, and multi-visit attribute grammars.andP;  For each ofthese, a pure type and a simple type are distinguished: The pure attributegrammars are defined by nondeterministic attribute evaluators, and the simpleones by the corresponding (usual) deterministic evaluators.andP;  The timecomplexity of deciding membership in these classes of attribute grammars isstudied.andP;  In general, this is harder for the pure classes than for the simpleones, for which it is either polynomial or NP-complete.andP;  The expressive powerof the eight classes is compared by studying the translations they cancompute.andP;  It is shown that sweeps are more powerful than passes, and visitsare more powerful than sweeps.andM;For Correspondence: J. Engelfriet, Department of Computer Science, LeidenUniversity, P.O. Box 9512, 2300 RA Leiden, The Netherlands; G. File, Facoltadi Matematica, Universita di Padova, Via Belzoni 7, 35100 Padova, Italy.andM;On the Design of Some Systolic AlgorithmsandM;Jan L.A.andP;  Van de Snepscheut arid Johan B. SwenkerandM;The design of systolic algorithms is discussed, that is, algorithms that mayefficiently be executed by a synchronous array of cells that perform localcommunications only.andP;  Systolic algorithms are designed through techniquesdeveloped in the context of sequential programming.andP;  Heuristics are giventhat guide the programmer in the design of a variety of efficient solutions.andM;For Correspondence: Department of Mathematics and Computing Science,Groningen University, The Netherlands.andM;A Uniform Approach toward Handling Atomic and Structured information in theNested Relational Database ModelandM;Marc Gyssens, Jan Paredaens, and Dirk Van GuchtandM;The algebras and query languages for nested relations defined thus far do notallow us to  flatten&quot; a relation scheme by disregarding the internalrepresentation of data.andP;  In real life, however, the degree in which thestructure of certain information.andP;  such as addresses, phone numbers, etc., istaken into account depends on the particular application and may even vary intime.andP;  Therefore, an algebra is proposed that does allow us to simplifyrelations by disregarding the internal structure of a certain class ofinformation.andP;  This algebra is based on a careful manipulation of attributenames.andP;  Furthermore, the key operator in this algebra, called  copying,&quot;allows us to deal with various other common queries in a very uniform manner,provided these queries are interpreted as operations on classes ofsemantically equivalent relations rather than individual relations.andP;  Finally,it is shown that the proposed algebra is complete in the sense of Bancilhonand Paredaens.andM;For Correspondence: M. Gyssens and J. Paredaens, Department of Mathematicsand Computer Science, University of Antwerp (UIA), Universiteitsplein 1,B-2610 Antwerp, Belgium: D. Van Gucht, Computer Science Department, IndianaUniversity, Lindley Hall 101, Bloomington, IN 47405-4101.andM;A Transaction-Based Approach to Relational Database SpecificationandM;Serge Abiteboul and Victor VianuandM;An operational approach to database specification is proposed andinvestigated.andP;  Valid database states are described as the states resultingfrom the application of admissible transactions, specified by a transactionalschema.andP;  The approach is similar in spirit to the modeling of behavior bymethods and encapsulation in object-oriented systems.andP;  The transactionsconsidered are line programs consisting of insertions.andP;  deletions, andmodifications, using simple selection conditions.andP;  The results concern basicproperties of transactional schemas, as well as the connection withtraditional constraint schemas.andP;  in particular, the expressive power oftransactional schemas is characterized.andP;  Although it is shown thattransaction-based specification and constraint-based specification areincomparable, constraints of practical interest that have correspondingtransactional schemas are identified.andP;  The preservation of constraints bytransactions is also studied.andM;For Correspondence: S. Abiteboul, I.N.R.I.A., Domaine de Rocquencourt, 78153Le Chesnay, France; V. Vianu.andP;  CSE Department, MC 014, University ofCalifornia at San Diego, La Jolla, CA 92093.andM;The Periodic Balanced Sorting NetworkandM;Martin Dowd, Yehoshua Perl, Larry Rudolph, and Michael SaksandM;A periodic sorting network  consists of a sequence of identical blocks.andP;  inthis paper, the periodic balanced sorting network, which consists of log nblocks, is introduced.andP;  Each block, called a balanced merging block, mergeselements on the even input lines with those on the odd input lines.andM;The periodic balanced sorting network sorts n items in O([log n][.sup.2] )time using (n/2)(log n)[.sup.2]  comparators.andP;  Although these bounds arecomparable to many existing sorting networks, the periodic structure enablesa hardware implementation consisting of only one block with the output of theblock recycled back as input until the output is sorted.andP;  An implementationof our network on the shuffle exchange interconnection model in which thedirection of the comparators are all identical and fixed is also presented.andM;For Correspondence: M. Dowd, Department of Computer Science, RutgersUniversity, New Brunswick, Nj 08903; Y. Perl, Department of Computer Science,New jersey Institute of Technology, Newark, NJ 07102; L. Rudolph, Departmentof Computer Science, Hebrew University, jerusalem, israel; M. Saks,Department of Computer Science and Electrical Engineering, University ofCalifornia at San Diego, La Jolla, CA.andM;Spacefilling Curves and the Planar Travelling Salesman ProblemandM;Loren K. Platman and John J. Bartholdi, IIIandM;To construct a short tour through points in the plane, the points aresequenced as they appear along a spacefilling curve.andP;  This heuristic consistsessentially of sorting, so it is easily coded and requires only 0 (N) memoryand O(N log N) operations.andP;  Its performance is competitive with that of otherfast methods.andM;For Correspondence: School of Industrial and Systems Engineering, Georgiainstitute of Technology, Atlanta, GA 30332 Using Temporal Hierarchies toEfficiently Maintain LargeandM;Temporal DatabasesandM;Thomas DeanandM;Many real-world applications involve the management of large amounts oftime-dependent information.andP;  Temporal database systems maintain thisinformation in order to support various sorts of inference (e.g., answeringquestions involving propositions that are true over some intervals and falseover others), For any given proposition, there are typically many differentoccasions in which that proposition becomes true and persists for some lengthof time, In this paper, these occasions are referred to as time tokens.andP;  Manyroutine database operations must search through the database for time tokenssatisfying certain temporal constraints.andP;  To expedite these operations.andP;  thispaper describes a set of techniques for organizing temporal information byexploiting the local and global structure inherent in a wide class oftemporal reasoning problems.andP;  The global structure of time is exemplified inconventions for partitioning time according to the calendar and the clock.andO;This global structure is used to partition the set of time tokens tofacilitate retrieval.andP;  The local structure of time is exemplified in thecausal relationships between events and the dependencies between plannedactivities.andP;  This local structure is used as part of a strategy for reducingthe computation required during constraint propagation.andP;  The organizationaltechniques described in this paper are quite general, and have been used tosupport a variety of powerful inference mechanisms.andP;  Integrating thesetechniques into an existing temporal database system has increased, by anorder of magnitude or more in most applications, the number of time tokensthat can be efficiently handled.andM;For Correspondence: Department of Computer Science, Brown University,Providence, Rt 02912.andM;Journal of the Association for Computing Machinery January 1990andM;Asymptotic Expansions for Large Closed Queuing NetworksandM;Charles Knessl and Charles TierandM;In this paper, a new asymptotic method is developed for analyzing closed BCMPqueuing networks with a single class  chain) consisting of a large number ofcustomers, a single infinite server queue, and a large number of singleserver queues with fixed (state-independent) service rates.andP;  Asymptoticapproximations are computed for the normalization constant (partitionfunction) starting directly from a recursion relation of Buzen.andP;  The approachof the authors employs the ray method of geometrical optics and the method ofmatched asymptotic expansions.andP;  The method is applicable when the servershave nearly equal relative utilizations or can be divided into classes withnearly equal relative utilizations.andP;  Numerical comparisons are given thatillustrate the accuracy of the asymptotic approximations.andM;For Correspondence: Department of Mathematics, Statistics, and ComputerScience, University of Illinois at Chicago, M/C 249, Box 4348, Chicago, IL60680.andM;Minimal and Complete Word UnificationandM;Joxan JaffarandM;The fundamental satisfiability problem for word equations has been solvedrecently by Makanin.andP;  However, this algorithm is purely a decision algorithm.andO;The main result of this paper solves the complementary problem of generatingthe set of all solutions.andP;  Specifically, the algorithm in this papergenerates, given a word equation, a minimal and complete set of unifiers.andP;  Itstops if this set is finite.andM;For Correspondence: IBM Thomas J. Watson Research Center, P.O. Box 218,Yorktown Heights, NY 10598.andM;Completeness of Rewrite Rules and Rewrite Strategies for FPandM;Joseph Y. Halpern, John H. Williams, and Edward L. WimmersandM;This paper treats languages whose operational semantics is given by a set ofrewrite rules.andP;  For such languages, it is important to be able to determinethat there are enough rules to be able to compute the correct meaning of allexpressions, but not so many than the system of rules is inconsistent.andP;  Aformal framework is developed in which to give a precise treatment of thesecompleteness and soundness issues, which are then investigated in the contextof an extended version of the functional programming language FP.andP;  Therewrite rules of FP are shown to be sound and complete with respect to threedifferent notions of completeness.andP;  The latter half of the paper considersrewrite strategies.andP;  In order to implement a language based on rewrite rules,it does not suffice to know that there are &quot;enough&quot; rules in the language; agood strategy for determining the order in which to apply them is alsoneeded.andP;  But what is &quot;good?&quot; Corresponding to each notion of completeness,there is a notion of a good rewrite strategy.andP;  These notions of goodness areexamined and characterized, and examples of a number of natural goodstrategies are given.andP;  Although these results are presented in the context ofFP, the techniques (some of which are nontrivial extensions of techniquesfirst used in the context of [lamba]-calculus) should apply well beyond therealm of FP rewriting systems.andM;For Correspondence: IBM Almaden Research Center, 650 Harry Road, San jose, CA95120-6099andM;Nondeterministic Polynomial-Time Computations and Models of ArithmeticandM;Attila MateandM;A semantic, or model-theoretic, approach is proposed to study the problems P=? NP and NP =? co-NP.andP;  This approach seems to avoid the difficulties thatrecursion-theoretic approaches appear to face in view of the result of Bakeret al.andP;  on relativizations of the P =? NP question; moreover, semanticalmethods are often simpler and more powerful than syntactical ones.andP;  Theconnection between the existence of certain partial extensions of nonstandardmodels of arithmetic and the question NP =? co-NP is discussed.andP;  Severalproblems are stated about nonstandard models, and a possible link between theDavis-Matijasevid-PutnamRobinson theorem on Diophantine sets and the NP =?andO;co-NP question is mentioned.andM;For Correspondence: Department of Mathematics, Brooklyn College of The CityUniversity of New York, Brooklyn, NY 11210.andM;Some Computational Aspects of CircumscriptionandM;Phokion G. Kolaitis and Christos H. PapadimitriouandM;The effects of circumscribing first-order formulas are explored from acomputational standpoint.andP;  First, extending work of V. Lifschitz, it is shownthat the circumscription of any existential first-order formula is equivalentto a first-order formula.andP;  After this, it is established that a set ofuniversal Horn clauses has a first-order circumscription if and only if it isbounded (when considered as a logic program); thus it is undecidable to tellwhether such formulas have first-order circumscription.andP;  Finally, it is shownthat there are first-order formulas whose circumscription has a coNP-completemodel-checking problem.andM;For Correspondence: P. G. Kolaitis, Computer and Information Sciences.andO;University of California, Santa Cruz, Santa Cruz, CA 95064; C. H.andO;Papadimitriou, Department of Computer Science and Engineering, University ofCalifornia, San Diego, La Jolla, CA 92093-0114.andM;Polynomial-Time implication Problems for Unary inclusion DependenciesandM;Stavros S. Cosmadakis, Paris C. Kanellakis, and Moshe Y. VardiandM;Unary inclusion dependencies are database constraints expressing subsetrelationships.andP;  The decidability of implication for these dependenciestogether with embedded implicational dependencies, such as functionaldependencies, are investigated.andP;  As shown by Casanova et al., theunrestricted and finite implication problems are different for the class offunctional and unary inclusion dependencies; also, for this class and for anyfixed k, finite implication has no k-ary complete axiomatization.andP;  For bothof these problems, complete axiomatizations and polynomial-time decisionprocedures are provided: linear time for unrestricted implication and cubictime for finite implication.andP;  It follows that functional and unary inclusiondependencies form a semantically natural class of first-order sentences withequality, which although not finitely controllable, is efficiently solvableand docile.andP;  Generalizing from these results, it is shown that theinteraction between functional and inclusion dependencies characterizes: (1)unrestricted implication of unary inclusion and all embedded implicationaldependencies; (2) finite implication of unary inclusion and all fullimplicational dependencies; (3) finite implication of unary inclusion and allembedded tuple-generating dependencies.andP;  As a direct consequence of thisanalysis, most of the applications of dependency implication are extended,within polynomial-time, to database design problems involving unary inclusiondependencies.andP;  Such examples are tests for lossless joins and tests forcomplementarity of projective views.andM;For Correspondence: S. S. Cosmadakis, IBM Thomas J. Watson Research Center,P.O. Box 218, Yorktown Heights, NY 10598; P. C. Kanellakis, Department ofComputer Science, Brown University, P.O. Box 1910, Providence, RI 02912; M.andO;Y. Vardi, IBM Almaden Research Center, 650 Harry Road, San jose, CA95120-6099.andM;ACM Transactions on Graphics October 1989andM;Blending Algebraic SurfacesandM;Joe WarrenandM;new definition of geometric continuity for implicitly defined surfaces isintroduced.andP;  Under this definition, it is shown that algebraic blendingsurfaces (surfaces that smoothy join two or more surfaces) have a veryspecific form.andP;  In particular, any polynomial whose zero set blends the zerosets of several other polynomials is always expressible as a simplecombination of these polynomials.andP;  Using this result, new methods forblending several algebraic surfaces simultaneously are derived.andM;For Correspondence: Department of Computer Science, Rice University, Houston,TX 77251.andM;The Displacement Method for implicit Blending Surfaces in Solid ModelsandM;Alyn P. RockwoodandM;To date, methods that blend solids, that is, B-rep or CSG models, withimplicit functions require successive composition of the blending functionsto handle an arbitrary solid model.andP;  The shape of the resulting surfacesdepends upon the algebraic distances defined by these functions.andP;  To achievemeaningful shapes, previous methods have relied on blending functions thathave a pseudo-Euclidean distance measure.andP;  These methods are abstracted,resulting in some general observations.andP;  Unfortunately, the functions usedcan exhibit unwanted discontinuities.andP;  A new method, the displacement form ofblending, embeds the zero surface of the blending functions in a form forwhich algebraic distance is C' continuous in the entire domain of definition.andM;Characteristics of the displacement form are demonstrated using thesuperelliptic blending functions.andP;  Intuitive and mathematical underpinningsare provided.andM;For Correspondence: Silicon Graphics Computer Systems, 2011 N. ShorelineBlvd., Mountain View, CA 94039-7311.andM;On Local implicit Approximation and its ApplicationsandM;Jung Hong Chuang and Christoph M. HoffmannandM;A method is proposed for computing an implicit approximant at a point to aparametric curve or surface.andP;  The method works for both polynomially andrationally parameterized curves and surfaces and achieves an order of contactthat can be prescribed.andP;  In the case of nonsingular curve points, theapproximant must be irreducible, but in the surface case additionalsafeguards are incorporated into the algorithm to ensure irreducibility.andP;  Themethod also yields meaningful results at most singularities.andP;  In principle,the method is capable of exact implicitization and has a theoreticalrelationship with certain resultant-based elimination methods.andM;For Correspondence: Department of Computer Science, Purdue University, WestLafayette, IN 47907.andM;Automatic Parameterization of Rational Curves and Surfaces IV: AlgebraicSpace CurvesandM;Shreeram S. Abhyankar and Chanderjit L. BajajandM;For an irreducible algebraic space curve C that is implicitly defined as theintersection of two algebraic surfaces, f(x, y, z) = 0 and g(x, y, z) = 0,there always exists a birational correspondence between the points of C andthe points of an irreducible plane curve P, whose genus is the same as thatof C. Thus C is rational iff the genus of P is zero.andP;  Given an irreduciblespace curve C =  f [Intersection] g), with f and g not tangent along C, wepresent a method of obtaining a projected irreducible plane curve P togetherwith birational maps between the points of P and C. Together with [4], thismethod yields an algorithm to compute the genus of C, and if the genus iszero, the rational parametric equations for C. As a biproduct, this methodalso yields the implicit and parametric equations of a rational surface Scontaining the space curve C.andM;The birational mappings of implicitly defined space curves find numerousapplications in geometric modeling and computer graphics since they providean efficient way of manipulating curves in space by processing curves in theplane.andP;  Additionally, having rational surfaces containing C yields a simpleway, of generating related families of rational space curves.andM;For Correspondence: S. S. Abhyankar, Department of Mathematics, PurdueUniversity, West Lafayette, IN 47907; C. L. Bajaj, Department of ComputerScience, Purdue University, West Lafayette, IN 47907.andM;Rational Continuity: Parametric, Geometric, and Frenet Frame Continuity ofRational CurvesandM;Michael E. Hohmeyer and Brian A. BarskyandM;The parametric, geometric, or Frenet frame continuity of a rational curve hasoften been ensured by requiring the homogeneous polynomial curve associatedwith the rational curve to possess either parametric, geometric, or Frenetframe continuity, respectively.andP;  In this paper, we show that this approach isoverly restrictive and derive the constraints on the associated homogeneouscurve that are both necessary and sufficient to ensure that the rationalcurve is either parametrically, geometrically, or Frenet frame continuous.andM;For Correspondence: Computer Science Division, Department of ElectricalEngineering and Computer Sciences, University of California at Berkeley,Berkeley, CA 94720.andM;A Generalized Ball Curve and its Recursive AlgorithmandM;H.andP;  B. SaidandM;The use of Bernstein polynomials as the basis functions in Bezier's UNISURFis well-known.andP;  These basis functions possess the shape-preserving propertiesthat are required in designing free-form curves and surfaces.andP;  These curvesand surfaces are computed efficiently using the de Casteljau Algorithm.andP;  Balluses a similar approach in defining cubic curves and bicubic surfaces in hisCONSURF program.andP;  The basis functions employed are slightly different fromthe Bernstein polynomials.andP;  However, they also possess the sameshape-preserving properties.andP;  A generalization of these cubic basis functionsof Ball, such that higher order curves and surfaces can be defined and arecursive algorithm for generating the generalized curve are presented.andP;  Thealgorithm could be extended to generate a generalized surface in much thesame way that the de Casteljau Algorithm could be used to generate a Beziersurface.andM;For Correspondence: School of Mathematical and Computer Sciences, UniversitiSains Malaysia, 11800 Penang, Malaysia.andM;ACM Transactions on Graphics January 1990andM;Extending the Radiosity Method to include Specularly Reflecting andTranslucent MaterialsandM;Holly E. Rushmeier and Kenneth E. TorranceandM;An extension of the radiosity method is presented that rigorously accountsfor the presence of a small number of specularly reflecting surfaces in anotherwise diffuse scene, and for the presence of a small number of specularor ideal diffuse transmitters.andP;  The relationship between the extended methodand earlier radiosity and ray-tracing methods is outlined.andP;  It is shown thatall three methods are based on the same general equation of radiativetransfer.andP;  A simple superposition of the earlier radiosity and ray-tracingmethods in order to account for specular behavior is shown to be physicallyinconsistent, as the methods are based on different assumptions.andP;  Specularbehavior is correctly included in the present method.andP;  The extended radiositymethod and example images are presented.andM;For Correspondence: H. E. Rushmeier, The George W. Woodruff School ofMechanical Engineering, Georgia Institute of Technology, Atlanta, GA 30332;K. E. Torrance, Sibley School of Mechanical and Aerospace Engineering, UpsonHall, Cornell University, Ithaca, NY 14853.andM;Performing Geometric Transformations by Program TransformationandM;Robin A. Nicholl and Tina M. NichollandM;Problems in geometry often possess symmetry properties that may be exploitedin order to develop solutions.andP;  Algorithms based on these symmetry propertieswill frequently use geometric transformations to transform one case intoanother (symmetric) case.andP;  One advantage of this approach is that thealgorithm avoids enumeration of cases and thus is shorter and generallyeasier to read.andP;  One disadvantage is that some additional execution time isrequired to perform these transformations, We describe how simple programequivalences may be used as program transformations to eliminate thisadditional execution time from programs that use geometric transformations.andO;This approach has been used to develop an efficient implementation of a newalgorithm for the two-dimensional line-clipping problem.andM;For Correspondence: Department of Computer Science, The University of WesternOntario, London, Canada N6A 5B7.andP;  Knot insertion for Beta-Spline Curves andSurfacesandM;Barrry JoeandM;Discrete Beta-splines arise when a Beta-spline curve is subdivided; that is,extra knots are inserted so that the curve is expressed in terms of a largernumber of control vertices and Beta-splines.andP;  Their properties and analgorithm for their computation are given in &quot;Discrete Beta-Splines&quot; by joe(Computer Graphics, vol.andP;  21, pp.andP;  137-144).andP;  We prove a stronger version ofone of these properties, from which a new algorithm for computing discreteBeta-splines is obtained.andP;  This algorithm can also be used to computediscrete B-splines.andP;  We give a comparison of operation counts for thisalgorithm versus other algorithms, and for two methods to compute the newcontrol vertices of Beta-spline and B-spline curves and surfaces.andM;For Correspondence: Department of Computing Science, University of Alberta,Edmonton, Alberta, Canada T6G 2H1.andM;Simulation of Simplicity: A Technique to Cope with Degenerate Cases inGeometric AlgorithmsandM;Herbert Edelsbrunner and Ernst Peter MuckeandM;This paper describes a general-purpose programming technique, calledSimulation of Simplicity, that can be used to cope with degenerate input datafor geometric algorithms.andP;  It relieves the programmer from the task ofproviding a consistent treatment for every single special case that canoccur.andP;  The programs that use the technique tend to be considerably smallerand more robust than those that do not use it.andP;  We believe that thistechnique will become a standard tool in writing geometric software.andM;For Correspondence: Department of Computer Science, University of Illinois atUrbana-Champaign, 1304 West Springfield Ave., Urbana.andP;  IL 61801.andM;The implementation of an Algorithm to Find the Convex Hull of a Set ofThree-Dimensional PointsandM;A.andP;  M. DayandM;A detailed description of the implementation of a three-dimensional convexhull algorithm is given.andP;  The problems experienced in the production andtesting of a correct and robust implementation of a geometric algorithm arediscussed.andP;  Attention is paid to those issues that are often brushed over inthe theoretical descriptions but cause errors in a real computation.andP;  Theseinclude degeneracies such as coplanar points, floating-point errors, andother special, but not necessarily degenerate, cases.andM;For Correspondence: School of Information Systems, University of East Anglia,Norwich NR4 7TJ, England.andM;ACM Transactions on Computer Systems February 1990andM;Performance of Firefly RPCandM;Michael D. Schroeder and Michael BurrowsandM;In this paper we report on the performance of the remote procedure call (RPC)implementation for the Firefly multiprocessor and analyze the implementationto account precisely for all measured latency.andP;  From the analysis andmeasurements, we estimate how much faster RPC could be if certainimprovements were made.andP;  The elapsed time for an intermachine call to aremote procedure that accepts no arguments and produces no results is 2.66 msThe elapsed time for an RPC that has a single 1440-byte result (the maximumresult that will fit in a single packet) is 6.35 ms.andP;  Maximum intermachinethroughput of application program data using RPC is 4.65 Mbits/s, achievedwith four threads making parallel RPCs that return the maximum-size resultthat fits in a single RPC result packet.andP;  CPU utilization at maximumthroughput is about 1.2 CPU seconds per second on the calling machine and alittle less on the server.andP;  These measurements are for RPCs from user spaceon one machine to user space on another, using the installed system and a 10Mbit/s Ethernet.andP;  The RPC packet exchange protocol is built on 1P/UDP, andthe times include calculating and verifying UDP checksums.andP;  The Firefilesused in the tests had 5 MicroVAX II processors and a DEQNA Ethernetcontroller.andM;For Correspondence: Digital Equipment Corporation, Systems Research Center,130 Lytton Avenue, Palo Alto, CA 94301.andM;A Logic of AuthenticationandM;Michael Burrows, Martin Abadi, and Roger NeedhamandM;Authentication protocols are the basis of security in many distributedsystems, and it is therefore essential to ensure that these protocolsfunction correctly.andP;  Unfortunately, their design has been extremely errorprone.andP;  Most of the protocols found in the literature contain redundancies orsecurity flaws.andP;  A simple logic has allowed us to describe the beliefs oftrustworthy parties involved in authentication protocols and the evolution ofthese beliefs as a consequence of communication.andP;  We have been able toexplain a variety of authentication protocols formally, to discoversubtleties and errors in them, and to suggest improvements.andP;  In this paper wepresent the logic and then give the results of our analysis of four publishedprotocols, chosen either because of their practical importance or becausethey serve to illustrate our method.andM;For Correspondence: M. Burrows and M. Abadi, Systems Research Center, DigitalEquipment Corporation, 130 Lytton Avenue, Palo Alto, CA 94301: and R.andO;Needham, University of Cambridge Computer Laboratory, Corn Exchange Street,Cambridge CB2 3QG, U.K.andM;Lightweight Remote Procedure CallandM;Brian N. Bershad, Thomas E. Anderson, Edward D. Lazowska, and Henry M. LevyandM;Lightweight Remote Procedure Call (LRPC) is a communication facility designedand optimized for communication between protection domains on the samemachine.andP;  In contemporary small-kernel operating systems, existing RPCsystems incur an unnecessarily high cost when used for the type ofcommunication that predominates-between protection domains on the samemachine.andP;  This cost leads system designers to coalesce weakly relatedsubsystems into the same protection domain, trading safety for performance.andO;By reducing the overhead of same-machine communication, LRPC encourages bothsafety and performance.andP;  LRPC combines the control transfer and communicationmodel of capability systems with the programming semantics and large-grainedprotection model of RPC.andP;  LRPC achieves a factor-of-three performanceimprovement over more traditional approaches based on independent threadsexchanging messages, reducing the cost of same-machine communication tonearly the lower bound imposed by conventional hardware.andP;  LRPC has beenintegrated into the Taos operating system of the DEC SRC Fireflymultiprocessor workstation.andM;For Correspondence: Department of Computer Science and Engineering,University of Washington, Seattle, WA 98195.andM;A System for Computer Music PerformanceandM;David P. Anderson and Ron KuivilaandM;A computer music performance system (CMPS) is a computer system connected toinput devices (including musical keyboards or other instruments) and tographic and audio output devices.andP;  A human performer generates input eventsusing the input devices.andP;  The CMPS responds to these events by computing andperforming sequences of output actions whose intended timing is determinedalgorithmically.andP;  Because of the need for accurate timing of output actions,the scheduling requirements of a CMPS differ from those of general-purpose orconventional realtime systems.andM;This paper describes the scheduling facilities of FORMULA, a CMPS used bymany musicians.andP;  In addition to providing accurate timing of output actionsequences, FORMULA provides other basic functions useful in musicalapplications: (1) per-process virtual time systems with independentrelationships to real time; (2) process-grouping mechanisms andlanguage-level control structures with time-related semantics, and (3)integrated scheduling of tasks (such as compiling and editing) whosereal-time constraints are less stringent than those of output actioncomputations.andM;For Correspondence: D. P. Anderson, Computer Science Division, EECS Dept.,andO;University of California, Berkeley, CA 94720; R. Kuivila, Music Department,Wesleyan University, Middletown, CT 06457.andM;ACM Transactions on information Systems October 1989andM;Work at Home for Computer Professionals: Current Attitudes and FutureProspectsandM;Margrethe H. OlsonandM;The subject of this paper is work performed in the home with computer andcommunications technology, also known as telecommuting.andP;  The article reportson two studies of work at home: a quasi-experimental field study oforganizational telecommuting pilot programs, and an attitude survey comparingcomputer professionals who work at home to employees doing similar jobs intraditional office settings.andP;  The results of the field study demonstratedthat working in the home had little impact on employee performance; however,supervisors were not comfortable with remote workers and preferred theiremployees to be on site.andP;  In the survey, work in the home was related tolower job satisfaction, lower organizational commitment, and higher roleconflict.andP;  The survey also included computer professionals who worked at homein addition to the regular work day.andP;  The author suggests that performingadditional unpaid work in the home after regular work hours may be animportant trend that merits further investigation.andP;  The studies demonstratethat while computer and communications technology have the potential to relaxconstraints on information work in terms of space and time, in today'straditional work environments, corporate culture, and management style limitacceptance of telecommuting as a substitute for office work.andM;For Correspondence: DMR Group Melbourne, Level 8, 1 Southbank Blvd.,andO;Riverside Quary, South Melbourne 3205, Victoria, Australia.andP;  The 3DIS: AnExtensible Object-Oriented informationandM;Management EnvironmentandM;Hamideh Afsarmanesh and Dennis McLeodandM;The 3-Dimensional Information Space  3DIS) is an extensible object-orientedframework for information management.andP;  It is specifically oriented towardsupporting the database requirements for data-intensive information systemapplications in which (1) information objects of various levels ofabstraction and modalities must be accommodated, (2) descriptive andstructural information (metadata) is rich and dynamic and (3) users who arenot database experts must be able to design, manipulate, and evolvedatabases.andP;  In response to these needs, the 3D[S provides an approach inwhich data and the descriptive information about data are handled uniformlyin an extensible framework.andP;  The 3DIS provides a simple, geometric, andformal representation of data which forms a basis for understanding,defining, and manipulating databases.andP;  Several prototype implementationsbased upon the 3DIS have been designed and implemented and are inexperimental use.andM;For Correspondence: H. Afsarmanesh, Computer Science Department, CaliforniaState University, Dominguez Hills, Carson, CA 90747; hamideh@lyra.usc.edu; D.andO;McLeod, Computer Science Department, University of Southern California.andP;  LosAngeles, CA 90089-0782: mcleod@pollux.usc.edu.andM;C-TODOS: An Automatic Tool for Office System Conceptual DesignandM;B.andP;  Pernici, F. Barbic, M. G. Fugini, R. Maiocchi, J. R. Rames, and C.andO;RollandandM;Designers of office information systems, which share various features withinformation systems and software development, need to carefully considerspecial issues such as document and communication flows, user roles, userinterfaces, and available technology.andM;The ESPRIT Project, Automatic Tools for Designing Office Information Systems(TODOS) proposes an integrated environment for office design with tools forrequirements collection and analysis, conceptual design, rapid prototyping,and architecture selection.andM;Conceptual design is a central phase of office system design: It providescorrect and complete functional requirements from which the office prototypewill be developed and the final architecture chosen.andP;  C-TODOS, the conceptualdesign support tool developed within TODOS, is presented in this paper.andP;  Thepurpose of C-TODOS is to give the designer tools for supporting conceptualmodeling activities with the goal of obtaining correct, consistent, and goodquality office-functional specifications.andM;This paper presents C-TODOS within the TODOS development environment anddescribes the basic features of the tool: the TODOS Conceptual Model, theSpecification Database, and the Modeling, Query, and Consistency CheckingModules.andP;  The use of C-TODOS, through illustration of the development of atest case, and possible future research are discussed.andM;For Correspondence: B. Pernici, F. Barbic, and R. Maiocchi, Politecnico diMilano, Dipartimento di Elettronica, Piazza L. da Vinci, 32, 1-20133, Milan,Italy: Telefax (39) 02-23993587; M. G. Fugini, Politecnico di Milano, Milan,Italy and Universiti di Brescia, Brescia, Italy; J. R. Rames, Thom'6Telesystemes, Paris, France; C. Rolland, Universite de Paris I, Paris,France.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-759-492  </DOCNO><DOCID>07 759 492.andM;</DOCID><JOURNAL>Patricia Seybold's Unix in the Office  Sept 1989 v4 n9 p1(9)* Full Text COPYRIGHT Seybold Office Computing Inc. 1989.andM;</JOURNAL><TITLE>The double standard: DOS under Unix moves to the next generation.andO;(includes related articles on Video performance and X-window andPhoenix Technologies)</TITLE><AUTHOR>Marshak, David S.andM;</AUTHOR><DESCRIPT>Company:   Phoenix Technologies Inc. (products)Insignia Solutions Inc. (products).andO;Topic:     Operating SystemsMS-DOSOS-2UNIXMultitaskingEmulationX Windows (Standard).andO;Feature:   illustrationchart.andO;Caption:   Phoenix coprocessor board. (chart)Phoenix software coprocessor logical components. (chart)Phoenix portable emulation software. (chart)andM;</DESCRIPT><TEXT>The Double StandardandM;WE ARE ENTERING a major period of transition, one in which we will be movingfrom a singl dominating operating system on the desktop--DOS--to a multitudeof desktop systems--DOS, Macintosh, OS/2, and Unix.andP;  As these last two morepowerful multitasking systems vie for leadership in market share and ininnovative applications, users will still want access to the DOS environment.andO;As they migrate, users cannot afford to be cut off from the popular DOSprograms which have not yet been ported to or rewritten for new platforms,not to mention their favorite, homegrown DOS applications.andM;Parallel with this transition is a movement in the way access is provided.andO;Emulation technology is quickly evolving from the traditional hardwarecoprocessor, to use of the Virtual 8086 mode on the Intel 386, to the newestgeneration of software coprocessors based on high-performance workstations.andM;In this article, we will examine the current methods of providing DOS access,their strengths and weaknesses, and where they are going.andP;  We will then takea peek into the future, examining the role that emulation technology willtake in the next-generation distributed network computing environment.andM;Approaches to DOS EmulationandM;DOS emulation technologies fall into three specific categories:andM;* Hardware coprocessorsandM;* PC emulation using the Intel 286/386 chipsandM;* Software coprocessorsandM;Each of the technologies attempts to accomplish the same essential task: tocreate an environment that looks and behaves exactly like a PC running DOS.andO;The look and behavior of the environment must be indistinguishable both fromthe user and from the DOS application.andM;As we shall see, there are a number of elements that emulation technologiesmust address in simulating a DOS PC.andP;  These include the Intel 8086 processorand its instruction set, the other supporting chips that make up a PC, theBIOS (Basic Input Output System) that allows communication with peripherals,and DOS and its file system.andM;These can be handled in hardware, software, or a combination of the two.andP;  Aswe examine each of the technologies, we will see that each levelconceptually, as well as historically, follows the preceding technology, aseach level operates at a higher level of abstraction, i.e., at a levelfurther removed from the hardware.andM;Hardware CoprocessorsandM;Hardware coprocessing is nothing new.andP;  In the pre-PC era, one could pruchasea Z-80 coprocessor for an Apple II in order to run &quot;industry standard&quot; CP/M.andO;And CP/M on a Z-80 coprocessor was a popular option for the early IBM PC.andO;With the dominance of DOS and the PC, Intel-based coprocessors were developedfor host- and workstation-based non-Intel systems, as well as some kludgedproducts such as the infamous Wang PC.andM;Current hardware coprocessing solutions, such as that offered by PhoenixTechnologies (Norwood, Massachusetts), include all the facilities required torun the PC environment concurrently with or as a task under the hostoperating system (see Illustration 1).andP;  The Phoenix coprocessor alsointegrates the DOS file system with the host's operating system.andP;  Under Unix,for example, all PC software and data structures are translated by Phoenix'semulation software into Unix file formats, allowing file-sharing among usersof the different systems.andM;The hardware coprocessor recreates the PC environment mainly in the hardwareitself, with both the CPU and the associated chips found on the board.andM;The advantage of hardware coprocessing is that all CPU and associated chipoperations run at full processor speed.andP;  The downside of hardwarecoprocessing includes the cost--two CPUs instead of one--and theinflexibility of having to install a specific piece of hardware.andM;The hardware coprocessor solution is still available, though it tends to berelegated to niche situations and little new work is being done in the field.andO;The current hardware coprocessors (for example, those shipped by Apollo),based on 286- or 386-level chips, are specifically aimed atultrahigh-performance needs.andM;The future of the hardware coprocessing emulation option is dim, as thetechnology is already on the decline and will become less important assoftware simulation becomes more advanced.andP;  (However, other types of hardwarecoprocessing, particularly those based on an intelligent bus technology suchas the BusMaster technology of IBM's MicroChannel Architecture or MCA, holdgreat promise for high-performance workstations.andP;  An example here might be aPS/2 with an i486 processor with Intel's  i860 RISC chip as a graphicscoprocessor.)andM;PC Emulation: Building on Intel'sandM;Built-In Emulation CapabilitiesandM;Conceptually, the next step up from a separate hardware processor is havingthe system processor itself do the emulation.andP;  This was made possible withIntel's introduction of the 80286, and made feasible in terms of performancewith the 80386.andP;  (To avoid confusion, we will refer to the 286/386/486...lineas the 386, unless a distinction is necessary.)andM;The 386 32-bit processor can run a 32-bit multitasking operating system suchas Unix.andP;  The resulting machine can be used either as a host for a smallmultiuser system or as a powerful single-user workstation.andP;  In a very shorttime, it has become the most popular platform for delivering Unix systems,having captured, according to IDC, 50 percent of the Unix market last year.andM;The 386 also has one capability not found in any non-Intel processor: It canrun one or more Virtual 8086 modes while running other applications in itsown Protected mode.andP;  And this can all be under the control of the nativeoperating system.andP;  In other words, the instructions of a DOS application canbe executed directly on the hardware, without any translation.andP;  This is done(if it is the only task running) at the full processor speed.andP;  And, since thenative operating system is itself multitasking, the DOS application can runas one of many concurrent Unix tasks.andM;This points out one of the advantages that Unix has vis-a-vis OS/2 inproviding DOS emulation.andP;  Since OS/2 runs in the Protected mode of the 286instruction set rather than the 386, it can only use the 8086 Real mode torun DOS software.andP;  Since the Real mode does not have the Virtual mode'sability to isolate each environment, the 286 (and any operating system builtupon it) is limited to a single DOS task at a time--the  compatibility box.andO;Unix, on the other hand, makes full use of the 386's Protected mode,permitting multiple Virtual 8086s simultaneously, each with its own virtualenvironment.andP;  The next generation of OS/2, (OS/3?, OS/386?) should also havethis ability.andM;This is not to say that running DOS under a 386 version of Unix is automaticor even easy.andP;  With any emulation technology, be it hardware, virtual, orsoftware, the emulation of the CPU instruction set is only the beginning.andO;The resulting PC environment must include (or appear to inclue) a completesubset of PC hardware, including all I/O subsystems, as well as the systemsoftware.andM;Hardware systems that must be addressed, in addition to the microprocessor,include:andM;* Video controllerandM;*KeyboardandM;* Interrupt controllerandM;* Hard disk file systemandM;* MouseandM;* Serial and parallel ports controllerandM;* RT/CMOSandM;* Floppy diskette controllerandM;* MemoryandM;* DMA controllerandM;In terms of system software, the PC environment must contain implementationsof MS-DOS and the ROM BIOS (Read-Only Memory Basic Input Output System).andP;  TheROM BIOS is what determines a system's ability to support various PC-basedperipherals, hardware components, value-added features, and softwareapplications that write directly to the hardware.andP;  In order to accomplish allof this, the 386 machine requires an emulation facility, whose basic role isto make the DOS OS and application think that they are running on a dedicatedmachine.andM;In today's Unix 386 market, virtually all systems come with or have asoptions one of two emulation facilities: VP/ix, codeveloped by PhoenixTechnologies and Interactive (Santa Monica, California), or Merge 386 fromLocus Computing Corporation (Inglewood, California).andM;VP/ix AND MERGE 386.andP;  Although a great debate is currently raging on which ofthese products does a better, more flexible, or easier-to-use job of providngDOS access under Unix, the two resemble each other much more than theydiffer.andP;  The products share the same approach, basically provide the samecapabilities, and, in those areas where one may have a current advantage(such as Merge 386's X-Window support or VP/ix's SunRiver workstationsupport), the other is, as we shall see, moving rapidly to catch up.andM;Both VP/ix and Merge 386 provide DOS environments that look, feel, and actlike any AT.andP;  Both can run all 8088/86 applications and all applications thatrun in the Real mode of the 286.andP;  The only applications that cannot be runare those that address the 286's Virtual mode: Desqview, Windows 386, andOS/2 (Windows 2.0 runs just fine, thank you).andP;  In order to run these, as wellas to create an emulated OS/2 environment, this technology will have to waitfor Intel to provide 286 or (even better) 386 Protected mode emulation in the386/486 line sometime in the future.andP;  We hear that Intel is working on this,but we suspect that it is not high on the company's agenda.andP;  Thus, we may notsee this capability in the 586 or even the 686.andM;Most important of all, both VP/ix and Merge 386 address the four key issuesof this type of technology: emulation, access, integration, and performance.andM;DOS Emulation.andP;  VP/ix and Merge 386 both run as tasks within the Unixenvironment.andP;  The user must log in and run DOS as he or she would run anyother application (this, of course, can be part of a script or the user'sstartup profile).andP;   When the user types the command to begin DOS, it is as ifa PC had just been issued a warm boot.andP;  The local config.sys and autoexec.batfiles are read, and the user is presented with a C:andgt; prompt (Z:andgt; with VP/ix).andO;The user then has access to what appears to be a complete PC, including, ifso configured, expanded and extended memory.andM;The user can then run any DOS application from either a directory on the harddrive or from a floppy, if the system is configured to allow floppy access.andO;(Note that this is still a Unix system, and therefore requires a power useror an administrator to do the optimal configurations.)andM;DOS users will see very little difference in using the DOS application underVP/ix or Merge 386, with performance and look-and-feel quite acceptable.andM;While this application is running, the user can hot-key to another loginprompt (or an already active session), and run another DOS session or a Unixapplication.andP;  This can be done for as many active Unix sessions as the hostwill support.andM;Running multiple DOS sessions will impact performance in the same way thatrunning any othr Unix tasks simultaneously does.andP;  Two tasks will cutperformance to about half, three to  about one-third, etc.andP;  (This is adifficult concept for some DOS users.)andP;  In our experience, performance cansuffer significantly after three or more simultaneous DOS sessions arelaunched, particularly in some of the emulated areas such as keyboard ormouse activity.andM;DOS Access.andP;  The emulation discussion in the previous section refersspecifically to a 386 Unix workstation, where DOS is being run from theconsole (i.e., the workstation's own keyboard and monitor).andP;  This isbasically a single-user environment where the user has access to both Unixand DOS sessions.andM;When we move to multiuser access, things change quite a bit.andP;  Running a DOSsession from a terminal is far more removed from the traditional PC DOSenvironment than running DOS from the console.andP;  This has a lot to do with thenature of the terminal used, as well as the performance degradation oneexperiences with asynchronous communication.andM;Both VP/ix and Merge 386 provide multiuser DOS access on the 386 platform,and, in fact, one of the strong markets for them is the small workgroup witha 386 and a number of terminals &quot;running&quot; DOS.andP;  The types of devicessupported range from simple ASCII terminals to high-performance specialtyunits linked by fiber optic technology, such as those produced by SunRiver.andM;The standard ASCII terminal solution specifically addresses the low-costscenario where a number of terminal users can share a single CPU and,frequently, a single copy of the application.andP;  While cost is on the side ofthis solution, its implementation has two specific drawbacks.andP;  The first isthat the DOS application will run in a character-only mode, or the IBM MDA(Monochrome Display Adapter) mode.andP;  This could come as quite a shock to userswho have become comfortable with CGA (color graphics adapter) or EGA(extended graphics adapter), as well as preventing access to thoseapplications (MS Windows, etc.) that require graphics.andM;The second problem is that standard terminals do not map well to PCs,generally supporting a 24-line display--as opposed to the PC's 25 lines--andnot providing AT-style keyboards, which necessitates relearning orreassigning keys as well as some octave-plus reaches.andP;  A middle ground isprovided by some terminals, known as PC Scancode terminals, that have beenspecifically developed for use with DOS applications.andP;  These support the 25lines and the AT keyboard, but do not support any additional graphicscapabilities.andM;On the high end, there are some terminals, most notably from SunRiver, whichpermit multiple users to access graphics-based DOS applications on the samehost.andP;  Priced at around $2,000, these terminals (a standard PC keyboard andEGA or VGA monitor) connect via fiber optic cable to a board that sits in thehost machine.andP;  This board provides both the fiber-based connectivity and thevideo emulation, making multiuser performance acceptable.andP;  Currently, theSunRiver technology is supported by VP/ix only (providing Phoenix one area ofof differentiation), although Locus has announced that similar support willbe available in the next release of Merge 386 (Release 2.0), due for initialshipment next month.andM;X-Window Access.andP;  One more form of access will become increasingly importantas DOS implementations under Unix move from small, multiuser configurationsto integrated networked environments.andP;  This is the ability for an X-Windowworkstation (or X terminal) to open one or more DOS windows within the Xenvironment.andP;  In a networked environment, the X clients (remember that, in Xterminology, the client is the application often running on the host, and theserver is the user's display station) could run any machine on the network(see Photo 1).andP;  Thus, a single 386 machine (or more, if usage warrants it)could be a DOS server for multiple Unix or X terminal users.andM;Here is one important point of differentiation between Merge 386 and VP/ix:Merge provides X-Window client support, whiel VP/ix currently does not.andP;  Thismeans that, when the Merge 386 window is opened, it can display fullmonochrome or CGA graphics; with VP/ix, the window can only look like anASCII terminal.andP;  Phoenix plans to introduce X client support within VP/ix bythe end of the year.andM;We will further examine the relationship between DOS emulation technology andX-Window as we discuss the future role of DOS emulation in the distributednetwork computing model.andM;DOS-Unix Integration.andP;  In today's market, it is not sufficient to simplyprovide DOS emulation under Unix.andP;  Users of the different operating systemsneed a way to easily move from one environment to the other, as well asneeding a way to share files and resources across operating systems,particularly in a networked environment.andM;With current Intel-based emulation, as well as with the software coprocessingtechnology, high priority is placed on integrating the emulated DOSenvironment with the host system.andP;  This integration occurs on a number oflevels: file systems, command and application access, shared peripherals, andapplication-to-application communications.andM;File system integration involves three areas: physical access, file naming,and file translation.andP;  Physical access to the hard disk is privided to boththe DOS and Unix environments by mapping the DOS system on top of theexisting Unix system.andP;  Thus, DOS users have access to the existing Unixdirectory structure (given the proper permissions), while directories andsubdirectories created within DOS (using the DOS MkDir command) are actuallycreated as Unix subdirectories, with both systems having access to the fileswithin them.andM;Translating filenames between systems can create problems.andP;  Since DOSfilenames are limited to eight characters with three character extensions,longer Unix filenames must be modified to be viewed from DOS.andP;  Each systemhandles this slightly differently, but both make it clear to the user thatthe modification has taken place.andP;  File-naming, from the point of view of theUnix system, is not a problem, as any DOS filename can be given the same Unixfilename.andM;VP/ix and Merge 386 both permit users to run DOS commands from the Unixenvironment, and Unix commands from the DOS prompt (though, in the case ofMerge 386, these can only be noninteractive applications).andP;  Thus, a DOS usercan run either DIR or LS and see essentially the same results, albeit in theformat of the system from which the comman comes.andP;  Where identical Unix andDOS commands exist, and where they do not take the identical actions, theapplication from the system where the user is currently residing will takeprecedence, unless the user specifically designates that it comes from theother system.andP;  This designation varies between the products.andP;  Both productsprovide utilities to translate Unix files to DOS and vice versa.andM;One of the most powerful features of these systems is their ability to allowapplications from the different environments to &quot;talk to each other.&quot;andP;  Thisis done via the Unix Pipes mechanism.andP;  The results of one application--a sortor a query, for example--can be piped as input for another application.andO;Under VP/ix and Merge 386, the DOS and Unix applications can be piped to eachother interchangeably and transparently.andM;Performance = Video Performance.andP;  Performance is the bugaboo of emulationtechnology.andP;  Users are not willing to run emulated DOS applications ifperformance does not at least approach that of the common PC platforms.andP;  Thismeans that the original XT-like speeds must now be upped to near-AT speeds.andM;For the virtual 8086 emulations, the processor speed is not a question.andP;  Asnoted above, a single DOS application will appear to run at the nativeprocessor's speed.andP;  Rather, the greatest problem lies in emulating the videooutput of the PC.andP;  This emulation takes both a portion of the processor'spower and a great amount of memory.andP;  As the emulated resolution increases,performance decreases.andM;Both VP/ix and Merge 386 currently support monochrome, Hercules, CGA, EGA,and VGA (for Merge 386, VGA is with the next release).andP;  On the console,performance on graphics up to CGA is fine, with acceptable EGA and VGAperformance now being reached.andM;However, the video performance issues are compounded when running theemulation software u nder X-Window.andP;  The additional amount of information tobe moved, coupled with the additional instructions required by EGA and VGAemulations, make adequate X-Window performance above CGA very difficult (see&quot;Video Performance and X-Window,&quot; above).andM;We are just beginning to see some attempts to use high-end processors (RISCand 68040) and software coprocessing emulators (see &quot;Software Coprocessors: The Next Generation&quot; below) to support EGA and VGA in X-Window, but this isnot currently possible (in a usability sense) on the Intel platform.andP;  Rather,the companies who do their emulation on the Intel platform are working onforms of hardware assistance at the display station itself.andP;  Currently, theresearch is into customized chips which would both emulate EGA or VGA and dothe translation-to-host format.andM;VP/ix VS.andP;  MERGE 386.andP;  The choice between VP/ix and Merge 386 is not reallyleft up to the end user.andP;  Both products are OEM-ed through hardware andsystems vendors, and the user gets whichever product runs on the system he orshe purchases.andP;  For example, VP/ix is included with Sun's 386i, while Merge386 is available on the IBM PS/2 Model 80 running AIX.andM;This is not to deny the real battle between the products.andP;  Each is trying tosecure its position with its own OEMs while hoping to woo away some of thecustomers of the other.andP;  Thus far, the tide seems to favor Locus, with therecent announcement of Merge 386 as the standard DOS emulation technology forSCO's Open Desktop.andM;This announcement hits Phoenix on two fronts: First, Open Desktop promises tobe an exciting and potentially very lucrative offering for those companiesinvolved.andP;  Second, SCO was one of the largest, if not the largest, resellersof VP/ix, having included it in its Xenix offerings as soon as VP/ix wasfirst available.andP;  According to John Harker, SCO manager of Networking SystemsProduct Marketing, the decision to go with Merge 386 for Open Desktop was notrelated to the relative merits of the two companies or products.andP;  Rather, itwas made because SCO had already settled on Locus's PC XSight Server (whichallows DOS PCs to act as X terminals) as the DOS X-Window implementation forOpen Desktop.andM;At the same time that it seems to be on the defensive with its VP/ix product,Phoenix has turned more attention to its software coprocessing technology,with which the company believes it can reach a broader market.andM;Software Coprocessors:andM;The Next GenerationandM;As more and more powerful desktop workstations become the norm, they willtend to be based on two types of processors: 386/486 and RISC (ReducedInstruction Set Computers).andP;  While the Virtual 8086-based emulation solutionworks fine for the 386 platform, the need for a software-only DOS emulation,a need which has already existed on the Motorola 68020/30 platform, willgreatly increase.andM;Because of this need, and specifically because of the industry's currentfocus on RISC, muc attention is being given to bringing out a new generationof software-based emulation products.andM;The great advantage of software coprocessing is its flexibility.andP;  It is notbound to a single processor architecture.andP;  Once running on one architecture,it can be ported, with the ease (or difficulty) of any other application, toother architectures.andM;The great disadvantage is speed, and the reason for this is quite simple.andP;  Inthe hardware coprocessor or virtual 8086  emulation, the instruction set runsdirectly on the chip.andP;  With a software coprocessor, in its simplest form,each instruction has to be read, its native counterpart located, and thisinstruction (or set of instructions) is then executed.andP;  In real life, this ismore complex, and performance can typically take a 5 to 1 or even 10 to 1hit.andM;Software coprocessors can have an advantage in video performance,particularly EGA and VGA.andP;  This is due to their ability to optimize the DOSvideo calls (see &quot;Video Performance and X-Window,&quot; page 7).andM;Other than the CPU instruction set performance issue, software coprocessingoffers the same abilities--emulation, access, and integration--that are foundin the Intel-based solution.andP;  With the two current products--SoftPC fromInsignia Solutions and the Software Co-processor from PhoenixTechnologies--the 80286 in Real mode is emulated (see Ilustration 2).andP;  Thereis no reason why the 286 or 386 Protected mode could not be emulated, thuspermitting OS/2 emulation under Unix.andP;  For both of these companies, the issueis lack of market demand rather than the technical challenge.andM;The development of software coprocessing technology can be looked at ashaving three generations, the first being a straightinstruction-by-instruction translation, the second bringing more power andcertain optimization techniques, and the thrid bringing an architecture thatassures portability of both the system to be emulated and the system on whichthe emulation is to be run.andM;FIRST GENERATION: INTERPRETATION.andP;  The first level of emulation is termed&quot;static CPU&quot; by the British company Insignia Solutions, one of the pioneersin software emulation.andP;  It is essentially an exercise in interpretation,translating the instruction set from one processor to another, thoughperformance an be somewhat enhanced by techniques such as caching and codebuffering.andP;  This generation can, on 68020-class machines, emulate DOS atapproximately XT speeds.andM;The first viable DOS software coprocessor of this class was introduced byInsignia Solutions for the Motorola 68000 family, first the SoftPC for theSun3 in 1987 and then for the Macintosh in early 1988.andP;  These coprocessorsare sold basically as a retail, end-user, or reseller add-on to the nativeOS.andP;   Insignia also produced some &quot;first generation&quot; products for the OEMmarket.andM;The first-generation products are limited both by theirinstruction-by-instruction approach and by the relatively low power andfunctionality of the processors and systems (i.e., lack of virtual memorysupport) on which they run.andM;SECOND GENERATION: MORE POWER, MORE SPEED, MORE ARCHITECTURE.andP;  The secondgeneration of software-based emulation products is marked by two distincttrends: (1) the use of faster, more powerful processors, and (2) are-architecting of the concepts of emulation technology.andM;In one sense, the second generation is simply a function of the availabilityof faster and faster chips.andP;  When one has access to a 10 to 20 MIPS machine,a 10 to 1 performance loss does not look all that slow, when compared to thePC's native environment.andP;  With today's first processors.andP;  AT-like speeds areconsistently being reached.andM;Parallel to the increase in processing power, the second generation has seenthe development of new intelligent simulation techniques aimed at speeding upand enhancing the emulation process.andP;  The enhanced emulator, called &quot;DynamicCPU&quot; by Insignia, is able to optimize the code by &quot;learning&quot; what the mostfrequently used instructions are, providing a more direct route to theinstructions, and caching the most heavily used routines in fast main memory.andO;(For a look at how this is done, see &quot;Anatomy of a Software Simulator,&quot; page10.)andM;The goal of the second-generawtion architecture is to move as far as possiblefrom an interpretive to a compiled process.andP;  This is done by implementingsome expert system-based learning techniques.andP;  The implementation is layered(see &quot;Anatomy of a Software Simulator&quot;), so that each level uses informationgleaned from the level below it in order to eliminate a stage in theinstruction processing.andP;  Learning is done each time a section of the code isexecuted.andP;  The more frequently a routine is executed, the more it can beoptimized.andP;  This is particularly nice, since it is precisely the mostfrequently executed routines that one would liek to see run faster.andM;With the Phoenix system described in &quot;Anatomy of a Software Simulator,&quot;learning, once it has occurred, is saved for the next execution of thatparticular application.andP;  Insignia's product uses a similar simulationlearning technique.andP;  However, the learning is not saved from one session toanother, though this feature, according to Insignia, could be easily added tothe product if an OEM requested it.andM;The second-generation architectures do have some limitations.andP;  First, sincethe expert systems rely on optimizing code that is repeated exactly, theycannot deal at an optimized level with code that modifies itself.andP;  Second,this architecture is particularly effective with sections of code that arerepeated frequently.andP;  Thus, it tends to benchmark very well, as mostbenchmarks involve multiple iterations of processes, though it does notnecessarily give an equivalent performance boost to the everyday user.andP;  Oneof the goals of future generations of simulation technology is to be able tooptimize all, not just recurring, instructions.andP;  This is an area where a lotof work is currently taking place.andM;CURRENT SOFTWARE COPROCESSORS.andP;  The two companies OEM-ing softwarecoprocessors, Insignia and Phoenix, have both taken similar approaches inimplementing second-generation products.andP;  Both products provide the full setof emulation, access, file integration, and integration with the nativewindowing system.andP;  As with the Intel-based emulation, the battle between themis being fought over OEMs, rather than for the end users.andM;THIRD GENERATION: PORTABLE SOFTWARE, PORTABLE EMULATION ARCHITECTURE.andP;  We arebeginning to see the appearance of some of the third generation's features,and portability is one of its hallmarks.andP;  Specifically, Phoenix isimplementing a fourth level of its simulation model (see &quot;Anatomy of aSoftware Simulator&quot;).andP;  This level is noninteractive.andP;  Rather, it acts as acompiler that creates the most optimized version of an application andcompiles it to run directly as a host processor task.andM;This capability will be useful in two areas.andP;  First, it will allow end usersto create optimized software versions for themselves.andP;  Second, the technologyhas potential as a quasi-porting tool for software developers.andP;  This wouldenable developers to sell optimized versions of their existing software torun on the new platforms, rather than writing or recompiling them, with theadvantages of lower cost and quicker time to market.andP;  But it would also havethe disadvantage of not being able to make the most fo the capabilities ofthe new platform.andP;  In other words, a highly optimized emulated DOS version of1-2-3 running under Unix is still a DOS version.andM;Phoenix has taken portability one step further.andP;  The company has architectedits simulation technology so that it is portable both as to the target andthe source platforms (see Illustration 3).andP;  The process is built aroundPhoenix's Translation Engine Assembly (TEA), which is a compiler that takesthe 286 instruction set and generates the code for the target platform.andO;Additional target modules can be written without changing the TEA, providingportability of the 286 instruction set across platforms.andM;The architecture is modular, with the source instruction set and the targetsnot having to know about each other.andP;  Therefore, other instruction sets couldbe substituted for the 286 instruction set without having to modify eitherthe target modules or the TEA itself.andP;  For Phoenix, this architecture notonly has more flexibility than a traditional coding and porting routine, butit also has produced better performing simulators can each platform.andP;  Phoenixplans to offer the Translation Engine Assembly and its architecture tostandards bodies for certification as a standard way to provide portabilityof simulations.andM;This points out the potential for emulations other than DOS.andP;  As much of theUnix world moves away from 68000-based software to RISC (for example, 88000),not all of the current software can or should be ported.andP;  Emulation of the68000 chip family will become a useful bridge between systems.andP;   Thus, theuser who has upgraded to an 88000 could open an emulated 68000 window.andP;  Otherpossibilities include VAX emulation for Digital's RISC machines, OS/2 underUnix (here, the current lack of market demand is an inhibiting factor), orMacintosh emulation (which may be subject to some legal issues).andM;The Future RoleandM;of Emulation TechnologyandM;Today, DOS emulation technology, in all three of its forms, serves one basicrole: to give DOS access to users of non-DOS systems.andP;  For the most part,this is occurring in small multiuser and workstation environments.andM;Tomorrow, while these environments will still exist, the emphasis will be onproviding DOS emulation in a distributed network computing (DNC) environment.andO;The combination of the client-server networking model and the X-Windowdistributed display capabilities will enable any user from an X displaystation on the network, be it a powerful workstation or an X terminal, toopen a window and launch a dOS application.andP;  The DOS window will be availablejust as any window would be to run a Unix or VMS application.andP;  And thoseusers who need EGA and VGA for more than occasional use will have hardwareassistance on their workstations to provide performance equal to the standardstandalone DOS PC.andM;While X-Window and DNC enable the access to processes throughout the network,these processes have to run somewhere.andP;  For DOS, they will have to run asemulated tasks on a non-DOS machine, since DOS, as a single-tasking operatingsystem, cannot function as a server for anyone else.andP;  Thus, the roles of bothIntel- and non-Intel-based machines will become DOS servers, generallyrunning a native Unix with a DOS emulation technology as one of its tasks,or, in some cases, as its primary task.andP;  The choice between the Intel andnon-Intel architectures will depend somewhat on how the capabilities of eachdevelop--particularly the processor vs.andP;  video performance trade-off.andO;However, both will play an essential part in the mixed environment network.andM;As we move further into the future and away from DOS,andM;the situation will again change.andP;   There will no longer be a singleandM;system that must be emulated on all platforms such as DOS is today.andP;  Rather,there will be a multiple of operating systems and processor architectures,and the role of emulation technology, particularly software coprocessing,will be to provide both a migration path and real-time bridge between them.andM;Video Performance And X-WindowandM;IN ORDER TO understand why achieving good video performance via X-Window isso difficult, particularly for EGA (extended graphics adapter) and VGA (VideoGraphic Array), we must take a closer look at how video emulation is actuallyaccomplished.andM;CGA (color graphics adapter) and Hercules emulation is accomplished bycreating two &quot;shadow&quot; video memories in RAM.andP;  Each of these buffers is animage of what appears on the screen.andP;  The first is IBM compatible, and itappears to DOS as video memory.andP;  DOS applications can write directly to it,eliminating the necessity for the emulation software to intercept every DOSinstruction and determine whether it affects the screen.andM;Periodically, the emulation software compares this shadow to the othershadow, which is essentially the previous version of what was on the screen.andO;When changes are detected, the emulation softwre first writes the changes tothe second shadow screen, then translates this to the host system-compatiblevideo, and, finally, uses the host system's windowing system (which itselfmay not be that speedy) to output it to the screen.andM;Since EGA and VGA emulations require much more information to be moved, theywill naturally run slower.andP;  But this is only part of the story.andP;  The shadowmemory technique employed for CGA and Hercules that allows DOS to writedirectly to a screen image will not work for EGA and VGA.andP;  This is becauseEGA and VGA are three-dimensional, not like the two-dimensional CGA andHercules implementations, which can be mapped to a specific place in RAM.andM;EGA and VGA are planar, operating on four distinct planes in addition to thescreen map.andP;  This allows for very dense pixel representations and a whole lotof colors, but makes emulation very difficult.andP;  It forces the emulator torevert to trapping each instruction to examine whether the particularinstruction affects the screen, and, generally, to implement aninstruction-by-instruction translation and updating of the windowing system.andO;Currently, with the Intel-based emulation products, this process is just tooslow to make it usable.andP;  It is unlikely that adequate performance will bepossible without some customized hardware assistance at the display-stationlevel.andM;There is more hope of supporting EGA and VGA within X-Window with thesoftware coprocessors.andP;  First, the very high speeds of some of theseprocessors can alleviate some of the video performance issues, with adequateperformance being obtained from Insignia Solutions' SoftPC, for example,running on Hewlett-Packard precision architecture and 68040.andP;  Second, theoptimizing techniques being employed by the current generation of softwareemulators should go a long was toward &quot;batching&quot; the video instructions,reducing the problems of the instruction-by-instruction inspection,translation, and implementation.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-191-264  </DOCNO><DOCID>08 191 264.andM;</DOCID><JOURNAL>MacWEEK  Feb 27 1990 v4 n8 p20(1)* Full Text COPYRIGHT Coastal Associates Publishing L.P. 1990.andM;</JOURNAL><TITLE>Overcoming the scripting Tower of Babel. (establishing a standardlanguage for customizing applications)(StackWeek) (column)</TITLE><AUTHOR>Michel, Steve.andM;</AUTHOR><SUMMARY>Allowing users the ability to tailor applications to theirparticular needs with either scripting or programming hascontributed to the success of several software packages.andO;Microsoft Excel, 4th Dimension, Microphone and Wingz can attributea large part of their success to to their scripting capabilities.andO;Powerful programs become even more powerful when users cancustomize and automate procedures.andP;  But, no two scriptinglanguages are compatible with each other.andP;  They hardly resembleeach other.andP;  Common tasks are handled in myriad ways.andP;  HyperTalkis a good example for a model scripting language that can be usedby many programs.andP;  The time is right for the creation of astandards committee for the HyperTalk language.andP;  Compatibilityoffers faster learning time and easier transition betweenapplications.andM;</SUMMARY><DESCRIPT>Topic:     Software ModificationHypertextCompatibilityStandardizationApplications ProgrammingUser Aids.andM;</DESCRIPT><TEXT>Overcoming the scripting Tower of BabelandM;Issues andamp; trendsandM;Looking at the history of personal computers, it's clear that giving usersthe ability to customize applications through either programming or scriptinghas made a number of software packages successful.andM;Certainly, the popularity of Lotus 1-2-3, dBASE and WordPerfect in the MS-DOSworld can be traced in part to their macro or scripting capabilities.andP;  Thesame holds true for a number of Mac applications, including ACIUS Inc.'s 4thDimension, Microsoft Excel, Software Ventures Corp.'s MicroPhone and InformixSoftware Inc.'s Wingz.andP;  Virtually everyone agrees that powerful programsbecome more powerful and offer greater utility when users can customizeprograms and automate procedures.andM;So what's wrong with this picture?andP;  If you do a lot of scripting and need towork in more than one program, the problem becomes crystal clear: No twoscripting languages are compatible with each other.andP;  In fact, they rarelyeven resemble one another.andP;  Moving from, say, HyperCard to Wingz toFoxBASE+/Mac can be, if not a nightmare, a significant nuisance.andM;Handling common tasks.andP;  It's ridiculous that common tasks are not handled ina common way by scripting languages.andP;  Here's an example chosen almost atrandom: figuring out the day of the week (Monday, Tuesday and so on) underprogram control.andP;  In HyperCard you could use a statement such as &quot;item 1 ofthe long date&quot; that returns &quot;Thursday.&quot; In Wingz, the statement&quot;dayname(now())&quot; does the same.andP;  In Excel, it's &quot;weekday(now()).&quot; MicroPhoneII uses the &quot;dayOfWeek&quot; function and in FoxBASE you use &quot;cdow(date()).&quot;andM;While none of these procedures is particularly arcane, the myriad approachesand syntaxes for arriving at the same end illustrate the problem.andP;  Movingfrom one program to another requires a significant amount of gear shifting,which in turn exacts a high price: Learning curves are lengthened for eachnew package, and routines that might be copied and pasted from one program toanother have to be re-thought and recoded.andP;  The upshot is a lot of wastedtime.andM;What is to be done?andP;  HyperTalk would be an excellent model for a corescripting language for use by a variety of programs.andP;  True, many of itsfeatures -- especially those directly relating to its stack/card metaphor --cannot be applied to such things as communications programs.andP;  But HyperTalkitself is extensible.andM;Just as Apple took the lead in developing the Macintosh user interface, Applecould be working harder at making HyperTalk or something like it a standardfor scripting languages.andP;  At the SuperCard announcement in January 1989,Jean-Louis Gassee proposed the creation of a standards committee for theHyperTalk language.andP;  To all appearances, nothing has come of this proposal.andM;It's time to start up (or revive) this language committee.andP;  But don't limitits focus to HyperCard compatibles; instead, such a committee should agree ona core set of routines, along with a core method for structuring commandsand, perhaps most useful, a method for extending the language.andM;Clear benefits.andP;  It's clear what compatibility among languages offers users:faster learning time and an easier transition when moving from application toapplication while developing complex projects.andM;Developers would benefit, too.andM;Such compatibility would, for example, establish greater acceptance among theinstalled base, require less effort in supporting and educating users, andadd marketing muscle by saying, &quot;If you know HyperTalk, you know ourlanguage.&quot;andM;And the benefits are equally clear for Apple.andP;  By defining a scriptinglanguage as part of its user interface, Apple would be extending thestandards for other user interactions with the machine.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-178-196  </DOCNO><DOCID>08 178 196.andM;</DOCID><JOURNAL>PC Week  Feb 26 1990 v7 n8 p56(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>Change is key in wild, wacky computer world. (Net Assets) (column)</TITLE><AUTHOR>Gerber, Barry.andM;</AUTHOR><SUMMARY>Network managers are frequently suspicious of new technology whilesuffering unwarranted fears about the reliability ofcurrently-installed systems.andP;  Users should study the status quowhen new technology becomes available, noting changes that mayimprove the stability of existing computers and networks.andP;  Earlycomputer systems were extremely slow and suffered from frequentdowntime, which network managers cannot afford.andP;  New, improvedsoftware often makes it possible to salvage antiquated hardware,and new hardware can make old software more useful.andM;</SUMMARY><DESCRIPT>Topic:     MicrocomputersReliabilityData SecuritySystem DesignNetwork ManagementSystem SelectionSoftware Selection.andM;</DESCRIPT><TEXT>Change Is Key in Wild, Wacky Computer WorldandM;In her column last week, Diane Danielle pointed out that some networkmanagers are prone to a kind of three-to five-year itch.andP;  The symptoms are anunwarranted lack of surety about the performance and stability of one'scurrent networking technology, and a nagging, but mostly unfounded, fear thatsomething better might be lurking around out there.andM;Any network manager who &quot;scratches&quot; such an itch is, to put it mildly, afool.andM;After 25 years in the computing biz, however, I have to point out that thereare good reasons to view the status quo with a careful eye, especially in thewild and wacky world of computing.andP;  Whether your interest is in keeping yourorganization as competitive as possible or simply in holding onto your job,you can't ignore change.andM;I did my first computing back in the early '60s on an old IBM mainframe.andP;  Itwas one of those whizbangs that used punched cards.andP;  None of this interactivestuff--just hand the cards to the operator and pray.andM;I used the IBM for number-crunching, and it took forever for even thesimplest stat job to be completed on that gutless wonder.andM;Blindly feeding punched cards to that early IBM, I'm sure, planted the seedsof what has developed into a burning passion for user-friendly computingsystems.andP;  It also taught me something about the limits of CPU power and theimpact such limits can have on users.andM;By the early '70s, I decided to learn programming so I could write my owninteractive stat packages for an old Control Data host.andP;  I was teaching atthe time, and it seemed to me that students could learn much faster if theydidn't have to endure the turnaround time that came with punched cards.andM;It worked.andP;  My students were able to focus more on the substance of what theywere learning and less on the mechanics of computing.andM;But there were some problems.andP;  First, my FORTRAN programs sometimes wanderedoutside of their allotted memory partition.andP;  This would total not only myprogram, but the whole machine.andP;  Second, when a group of five or six studentssubmitted their jobs simultaneously, the CDC machine went to sleep.andM;From that experience, I learned to respect and, frankly, to fear multitaskingenvironments.andP;  My interest in high-performance platfroms was also heightened,and my commitment to user friendliness became even stronger.andM;By the mid-1970s I was working seriously with micros.andP;  In early 1977, Iplanned and implemented the first multiuser microcomputer database systemsupported by a federal contract.andP;  At the same time, I began porting mystatistical programs over to a number of micros.andP;  An Apple II and a TRS-80Model 1 were my first victims.andP;  Were they slow!andM;Being fully responsible for a few key computing systems significantlyheightened my awareness of the issue of system stability.andP;  Sure, I'd beenaffected by downtime in the past.andP;  But now, if the micro supporting thedatabase or running my stat package should fail, it was my head, myresponsibility.andM;Then came the '80s and networking.andP;  I put up my first Novell network at amajor insurance company seven years ago.andP;  I turned to NetWare, because OrchidTechnology's old network adapters failed miserably with Orchid's own netoperating system but worked fine with NetWare.andP;  An important lesson:Sometimes you can salvage bad hardware with new and improved software, orvice versa.andM;For the last five years I've been responsible for a large network including850 PCs, an IBM mainframe and an increasing number of connections into theUnix world.andP;  All the lessons of the past have been reinforced by newexperiences.andM;New technology should be evaluated very carefully, but it should beevaluated.andP;  Network managers and the companies for which we work can't affordto do otherwise.andO;</TEXT></DOC>
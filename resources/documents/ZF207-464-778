<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-464-778  </DOCNO><DOCID>07 464 778.andM;</DOCID><JOURNAL>Patricia Seybold's Unix in the Office  June 1989 v4 n6 p1(8)* Full Text COPYRIGHT Seybold Office Computing Inc. 1989.andM;</JOURNAL><TITLE>Thoroughly modern UNIX: the shape of new operating systems.andO;(includes related articles on the Mach operating system)</TITLE><AUTHOR>Brown, Laure; Portante, Tom.andM;</AUTHOR><DESCRIPT>Topic:     UNIXOperating SystemsSystem DesignResearch and DevelopmentCarnegie-Mellon UniversityDistributed Operating Systems.andO;Feature:   illustrationtablechart.andO;Caption:   System architecture model. (table)Local message communication in Mach. (chart)Network message communication in Mach. (chart)andM;</DESCRIPT><TEXT>NOT LONG AGO, one of our analysts, elbow-deep in research, kept stumbling over the term modem operating system.&quot; It leapt out from articles, from the mouths of Unix gurus she interviewed, even from her own notes.andP;  And alongwith  it came some intriguing prospects: power, next-generation applications,performance, flexibility, scalability, advanced programming tools,portability  ...andP;  you get the picture.andP;  Higher computing plateaus requirebetter  operating systems.andP;  And while work is being done in operating systemsdesign,  the commercial market hasn't seen much of it.andP;  But what plagued ouranalyst-and  what has prompted this article-was less a question of timingthan of  definition.andP;  Just what is a modem operating system?andP;  What's notmodem about  today's commercial Unix operating systems? What are we missing?andM;Operating systems have adapted over the years to the changes in quality, quantity, and the nature of the resources they must control and the services they must offer.andP;  Today they face the demands of standards, distributednetwork  computing (DNC), and object management.andP;  DNC is most notably drivingUnix to its  next generation.andP;  Operating system designers confront thechallenges of  multivendor and multi- and parallel-processing machinesrunning distributed  applications over high-speed networks.andP;  While Unix hasbeen tinkered with to let  it play in these environments, the hacking hasexacted a performance toll.andP;  New  solutions have been called for.andM;Operating system Randamp;D-especially in the academic world-is a source of innovation for Unix.andP;  Some valuable prototypes have been under developmentfor  years.andP;  The Mach operating system, developed at Carnegie MellonUniversity, is  perhaps the most well-known.andP;  But Mach is certainly not in aclass by itself.andP;  Other research projects are equally instrumental, amongthem the V kernel at  Stanford University and the Sprite system at UCBerkeley.andP;  Stanford has taken a  novel approach with V. It is a distributedsystem that's been designed from  scratch and is not intended to becompatible with Unix  although most simple  programs can be ported).andP;  V'sVersatile Message Transaction Protocol (VMTP) is  gaining attention becauseit provides very speedy remote file-read operations.andP;  Sprite is areimplementation of BSD 4.3.andP;  Its focal point is the  file system, whichmakes a network of workstations appear  to the end user as a single machine.andM;However, operating system design is an international  effort, not a NorthAmerican phenomenon.andP;  Europe has  made some worthwhile inroads.andP;  There is,for instance,  the Chorus system, originally  developed at INRIA (InstitutNational de Recherche en Informatique et  Automatique) in France, and theAmoeba system, developed at Vrije University  and the Centre for Mathematicsand Computer Science, both in Amsterdam.andP;  The  goals of these systems aresimilar to those of Mach.andP;  They support DNC with  sophisticated techniques ofmemory management and process control, and with  small, modular kernels.andO;They don't aspire to be fully-featured operating  systems; their kernels areminimal, and additional services are implemented outside the kernelandM;The systems we've mentioned (and more abound; these really make up just anandM;operating system sampler) are at various stages of development, and none areandM;ripe.andP;  They're all considered experimental systems.andP;  Be that as it may, MachhasandM;been pushed into the commercial limelight, mainly because of its affiliationsandM;with NeXT.andM;The following pages serve as a road map through the design of modemandM;operating systems.andP;  We refer along the way to Mach as an example of theandM;advances being made in operating system architectures, not because Mach hasandM;the best solutions, but because of its commercial impact.andP;  In the process, weandM;also wound up with a road map of Mach.andP;  But that's okay.andP;  Together, the mapsandM;should put the future of operating systems into perspective: One shows youandM;where systems are headed; the other shows you one way of getting there.andM;The Face of a New Operating SystemandM;The progress being made in the realm of operating systems has to do withandM;functionality and structure.andP;  As mentioned, DNC is driving functionality.andM;Structurally, the momentum is toward microkernels as opposed to themonolithicandM;environments in place today.andM;FunctionalityandM;DISTRIBUTED NETWORK COMPUTING.andP;  The distributed horsepower necessary todevelopandM;next-generation, multiprocessing, distributed applications under UnixrequiresandM;an operating system specifically designed for multiprocessing andandM;distribution.andP;  Furthermore, complex, interconnecting computing paradigms makesecurity, data integrity, and reliability criticalandM;issues.andP;  What is needed is an appropriate balance of distribution andsecurity.andM;WHY NOT UNIX? Frankly, the level of performance inandM;today's Unix isn't high enough for heavy-duty, commercial distributedandM;applications.andM;Most Unix systems don't support thousands of  simultaneous networkconnections.andP;  The typical means of communication  in Unix (e.g., pipes,sockets, and signals) are not  the most efficient ways to conquer demandingcommercial  applications.andM;Furthermore, Unix was written to operate on uniprocessors.andP;  Vendors who havepulled off multiprocessor versions of Unix have done so by  creating complexextensions that deal with Unix's architecture.andP;  As each vendor  extends Unixwith its own set of services, a lack of consistency emerges.andP;  What  a systemlike Mach offers is something   less confining.andP;  The functionality necessaryfor distribution and  multiprocessing is the very essence of the operatingsystem itself, not an  exclusive collection of extensions.andM;GETTING THERE FROM HERE.andP;  The key to multiprocessingandM;is parallel processing and better memory management andandM;communication facilities.andM;Execution and Memory Management.andP;  The prototype operating systems we lookedatandM;have advanced mechanisms for parallel processing and memory management.andM;Memory is treated as a single address space, which means that applicationsandM;can access memory without knowing it's distributed.andM;Most Unix configurations don't support parallel processing onandM;shared-memory multiprocessors.andP;  They should.andP;  For effective DNC, severalandM;processes need to run at the same time.andP;  Many commercial systems useandM;multithreading (described below) to accomplish this-but Unix systems don't.andM;The multiprocessing Unix systems you see today depend on very com-andM;plex layers of software outside the kernel.andP;  However, most experts agree thatparallel processing should be the kernel's responsibility.andM;Interprocess Communication.andP;  Object-oriented message-passing is apparentlytheandM;only way to go.andP;  There needn't be any knowledge about the content of messageandM;objects to pass them between nodes, and it doesn't matter whether an objectisandM;local or distributed.andP;  A well-implemented IPC mechanism will support thisandM;dynamic form of message-passing.andM;The newly formed Object Management Group (OMG) may help steer the courseandM;here.andP;  Its goal is to create an object-oriented, application-to-applicationandM;communication foundation based on distributed computing.andP;  Once the foundationandM;is in place, programmers and users can take advantage of modules no matterandM;where they are or who created them.andP;  Perhaps we'll soon have the equivalentofandM;integrated circuits for software: morsels of code that can be used over andandM;over again.andM;Communications must also be secure.andP;  In many cases, IPCs tackle securityandM;with the concept of object capabilities or access rights, which control theandM;permissions of a particular object: who can operate on it and at what level.andM;Virtual Memory.andP;  Virtual memory is certainly no new idea.andP;  Support forvirtual memory has becomeandM;an important element of several operating systems, among them IBandM;M's MVS andandM;VM, Digital's VMS, and Apollo's Aegis.andP;  Currently, both System VandM;and most BSDandM;variations of Unix also offer varying degrees of memory-sharing.andP;  In BSDandM;4.3, you can only share a copy of a program.andP;  System V's virtual memory isandM;more flexible.andP;  Users can map part of a file into the address space ratherandM;than bringing it into the buffer memory.andP;  Structure  THE MICROKERNEL.andP;  Wecould describe the structure of a modem operating system in  one word: small.andO;Next-generation kernels offer only minimal functionality for  distribution:multiprocessing and interprocess communications.andP;  That way, they  don't hogafl the room in your system.andP;  This is completely unlike most of  today's Unixsystems, where additional functionality has been pumped into the  kernel.andO;Unix has picked up a lot of excess baggage over the years.andP;  Furthermore,  aseach vendor has made extensions to Unix, it has lost its consistency.andP;  Each implementation has its own idiosyncrasies and winds up looking to the enduser  more like a proprietary system.andP;  MODULARITY.andP;  Modularity is the realgoal of a  smaller kernel.andP;  Services live outside the kernel as objectsinstead of being  contained in the kernel itself.andP;  The system is then fasterand much more maintainable; each service is implemented as an    individualchunk that's easy to manage and debug.andP;  MOdularitY also allows aandM;module to be reused in various systems and thus saves design, programming,andandM;maintenance cost.andM;Professor Alfred Spector of Carnegie Mellon University (CMU) has devotedandM;substantial energy to the design of distributed environments, including theandM;Camelot project (see box above).andP;  He's among many modularity proponents,andM;suggesting that the real significance of Mach lies in its potential to becomeandM;a very clean kernel with services layered outside.andP;  In fact, Spector hasandM;devised a layering model for distributed systems .andP;  His paradigm isandM;conceptual, but it should give you an indication of what systems will lookandM;like in the not-too-distant future.andM;FLEXIBILITY: OPERATING SYSTEM KITS.andP;  Customizability is another advantage ofandM;modularity.andP;  Ideally, you can add, change, or remove whatever services youwant Expanding onandM;that theme, Dr. Ira Goldstein, vice president of Research and AdvancedandM;Development at OSF, brought up the notion of operating system kits.andP;  InandM;essence, you can make your system behave like any existing operating systembyandM;adding the proper set of services.andP;  For instance, you could set up a systemandM;that imitates Berkeley Unix or System V by choosing the right kit.andO;InterestingandM;idea.andP;  However, common implementation technology needs to evolve before we'llandM;see it happen.andM;If we are to reach the point where we can mix and match and reuse modulesandM;on various systems, we need full suites of services that map to aandM;slew of systems, and that's one of the hurdles of newer operating systemandM;designs.andP;  Without them, such streamlined kernels are limited.andP;  As a result,andM;current implementers of Mach, like NEXT, Encore, and Mt. Xinu, are BSDandM;derivatives; lots of Unix code is still in the kernel.andM;Conclusion: Reality CheckandM;You'll be hard-pressed to find an operating system quite like theandM;one we'veandM;defined.andP;  Even so-called modem prototypes are really only research systems.andM;However, this is the way we expect Unix to evolve.andP;  And commercial systemsareandM;taking notice.andP;  Some vendors, like Data General, Arix, and HewlettPackardhaveandM;made significant advances in multiprocessing-even if they don't handleandM;multiprocessing inside the kernel.andP;  More systems are offering preemptiveandM;scheduling and better virtual memory mechanisms, and modularity is becomingandM;more of a focal pointandM;A SMALLER KERNEL IS NOT ENOUGH.andP;  Although the prevailing design tends towarda smaller kernel, focusing only onandM;that is a mistake.andP;  We've talked about the lack of services.andP;  The kandM;ind ofandM;modular, consistent services that minimal kernels need is notandM;availableandM;today.andP;  We're in somewhat of a Catch-22.andP;  Unix has become a dumping groundforandM;features that are not conveniently implemented outside the kernel.andP;  Since theandM;kernel handles them, why would they exist as separate entities? However,andM;without them, these very basic kernels simply don't contain enoughandM;functionality.andM;In the meantime, current Mach implementers have gutted partsandM;of theirandM;operating systems and replaced them with Mach code.andP;  This is aandM;convenient andandM;practical approach, but it's not really an ideal situation.andP;  In fact, Sun'sandM;Bill Joy maintains that Mach has been  violently oversold and is bigger,andM;slower, and barely more functional than System V.4.andP;  Actually, in many ways,andM;it is less functional.&quot; Of course, that's Bill Joy, but he does have a point.andM;He added that the real issues in distributed commercial programs have to doandM;with applications, not operating systems.andP;  And he's right.andP;  But before theandM;applications appear, the proper languages and tools need to be available.andM;LANGUAGES AND TOOLS.andP;  The real catalyst behind next-generation applicationsandM;will be programming languages.andP;  The kind of software we look forward toandM;requires languages that specifically address distribution arid objectandM;orientation.andP;  And they're out there.andP;  You hear a lot about SmallTalk and C++,andM;but there are others-Eiffel and Actor, for instance.andP;  NUT's Argus and CMU'sandM;Avalon are languages aimed at distributed object management.andP;  The continuedandM;refinement and proliferation of these kinds of languages are really criticalandM;to application evolution.andP;  Furthermore, programmers need to think in theseandM;languages.andP;  It doesn't take long to learn C++, but it may take months beforeandM;its programming principles sink in.andM;Finally, we need migration tools: tools that ease the transition toandM;applications written in these next-generation languages, tools that helpandM;developers effectively distribute existing prograins, tools that manageandM;distributed objects.andP;  The operating system is just a foundation.andP;  What weneedandM;are developments beyond the kernel.andP;  C)andM;MULTIPROCESSING Unlike standard Unix environments, where pandM;articularandM;processes typically run on single processors, modem operating systems wereandM;meant to run in multiprocessor environments.andP;  The kernel itself isresponsibleandM;for distributed processing and interprocess communication.andP;  At the core ofMachandM;are two sets of abstractions for multiprocessing   The first set deandM;scribes howandM;the kernel executes processes and manages memory; the secondandM;describes itsandM;communication techniques.andM;MACH KERNEL ABSTRACTIONS: Execution And Memory ManagementandM;Task:               An address space and collection ofandM;system resourcesandM;Thread:             The basic unit of execution within aandM;taskandM;Memory object:      Unit of virtual memory that can beandM;mapped into the address space of aandM;taskandM;CommunicationandM;Port:               A protected communication channelandM;Message:            A typed collection of data objectsandM;PARALLEL PROCESSING AND MEMORYandM;MANAGEMENTandM;TASKS.andP;  Mach separates the typical notion of a Unix process intoandM;tasks andandM;threads.andP;  The task, which encompasses threads, is the primary unit of theandM;system's shared resources.andP;  Tasks include sets of virtual addressees alongandM;with the access rights to processors and ports.andM;THREADS.andP;  Threads run within a task.andP;  They are lightweight processes-basicandM;units of CPU-and they can execute simultaneously.andP;  In a multiprocessorandM;environment, threads of a single task can execute concurrently, each on aandM;separate processor.andP;  All threads within a task have access to the task'sandM;physical resources, including files and resource memory.andP;  To put theandM;task/thread paradigm in familiar terms, think of a Unix process as aandM;single-threaded task.andM;MEMORY OBJECT.andP;  Included in tasks are sets of virtual addresses along withtheandM;access rights to processors and ports.andP;  Address spaces are assigned by theandM;operating system to particular tasks.andP;  Each address space is represented as aandM;memory object Data pointed to by a memory object can be provided and managedandM;by either the kernel or a user application.andM;MESSAGE-PASSING While communication and control processesandM;in Unix takandM;eandM;place through a variety of mechanisms such as pipes, signals,andM;pseudo-terminals, and sockets, Mach's approach has been to simplify theandM;landscape.andP;  The basic means of message transportation in Mach is the port.andM;PORTS.andP;  Ports are Mach's communication vehicles: They send and receiveandM;messages.andP;  You can think of them as queues for Mach objects (e.g., tasks aridandM;d&quot;); a &quot;send&quot; operation from a task adds a message to the queue, and aandM;receive&quot; operation takes it off.andP;  There are also access rights involved withandM;Mach's porting mechanism.andP;  For example, to receive a message from a port, aandM;task must have receive rights.andP;  Ports can have several senders but only oneandM;receiver.andP;  MESSAGES.andP;  Messages are collections of data: simple data, typedandM;data, or pointers to other objects within the Mach system.andP;  Tasks and threadsandM;communicate by sending message objects via ports.andP;  This encapsulation of dataandM;structures controls tasks and threads throughout a multiprocessor orandM;distributed physical environment.andM;The Mach kernel has no knowledge of networks.andP;  As far as the kandM;ernel isandM;concerned, messages are always passed between tasks on the sameandM;host.andM;Communication is provided by separate message servers that run on eachandM;machine (see illustrations above and at right).andP;  When a message is sent to aandM;remote port, it's intercepted by the message server and is then forwardedandM;appropriately.andM;Often, operating systems based on this sort of message-passinandM;g haveandM;severe efficiency trade-offs.andP;  For the most part, Mach has avoidedandM;them byandM;extending the facility with virtual memory management (described below).andP;  YouandM;can move entire files and even address spaces via a single message with aUandM;the efficiencies of a single memory remapping.andM;VIRTUAL MEMORYandM;Generally speaking, there is usually a very closeandM;correspondence betweenandM;the efficiency of a system's memory management arid the physical architectureandM;of the computer.andP;  In contrast, Mach makes very few assumptions aboutandM;underlying memory hardware.andP;  Instead, it draws a clear and inviolateandM;distinction between information that must be specific to the computer'sandM;architecture and all the other encoded memory management instructions thatandM;reside in machine-independent data structures.andM;This approach results in a number of benefits.andP;  One is that Mach dealsandM;with memory objects rather than directly with the hardware, and afl primaryandM;and secondary memory can be dealt with as a single-level store.andP;  This meansandM;that gigabytes of memory can be mapped as though they were part of theandM;machine's core.andP;  Executing tasks and threads can access these addresses-viaandM;messages being sent to ports--without the potentially confining and I/0boundandM;buffer caches of most existing Unix systems.andP;  A second benefit of machineandM;independence is the ability to perform within both distributed- andandM;parallel-processing environments.andM;With Mach, sharing at the page level can occur at write time.andP;  Rather thanandM;having to copy data into memory, you can logically copy information by usingandM;pointers.andP;  In essence, this becomes virtual memory for multiproceandM;ssors.andP;  OnlyandM;pages that are changed are copied, and only data that isandM;specifically calledandM;is transferred to another location.andP;  This process cuts down on time andmemory.andP;  Distributed Transaction Processing Mach and the Camelot ProjectandM;SHOULD YOU EVER find yourself engrossed inandM;a discussion about modem operating systems (hey, you never know), you'llandM;hear  distributed processing&quot; mentioned over and again.andP;  A technology thatandM;supports distributed applications is transaction processing (TP).andM;Transactions help programmers cope with the problems of distributedandM;applications  e.g., failures and concurrency).andP;  They also let programs reachandM;data from multiple sites in a single play.andP;  Consider, for example,andM;withdrawing money from an out-of-town automatic teller.andP;  One transactionandM;executes the withdrawal at that remote site and updates your account atandM;home.andM;You'd think Unix would be great for transaction processing.andM;It'sandM;hardware independent; it's a standard operating system; it'sandM;easy toandM;program; and it runs on inexpensive terminals instead of special purposeandM;machines.andM;But Unix isn't robust enough to take on the demands of distriandM;buted TP.andM;Yes, there are Unix implementations of TP, but it's only beenandM;managed byandM;modifying the operating system.andP;  Basic Unix doesn't have sufficientandM;large-scale, commercial network capabilities, and crash recovery can beandM;slow.andP;  Furthermore, Unix is single-threaded and doesn't support parallelandM;processing on shared-memory multiprocessors.andP;  In essence, Unix just needsandM;too much software (e.g., for permanent data, crash recovery, transactionalandM;locking, security, and distributed operations) to efficiently supportandM;distributed transaction management.andM;CAMELOT.andP;  The research community is making signficantandM;developments to pave the way for commercial TP underandM;Unix.andP;  To wit: the Camelot project, a three-year-old distributedandM;transaction processing facility being developed at CarnegieandM;Mellon.andP;  Its designers set out to build a flexible, high-performanceandM;facility not only for typical commercial TPandM;applications (like hotel reservation or automatic teller systems),andM;but also for an assortment of distributed applicationsandM;that access shared data.andM;Camelot developers began with some notions aboutandM;transaction facilities:andM;*Distributed operation is a must.andM;*Your basic Joe Programmer shouldn't have any problemandM;implementing them.andM;*TP should accommodate existing applications and standard,andM;open computing environments-you know, the typicalandM;mishmash of hardware and networks you find in mostandM;organfttions.andM;*TP should support user-defined shared objects and nestedandM;transactions to maintain parallelism and to control failureandM;pitfalls.andM;*Transactions should execute with increased performance.andM;*TP shouldn't be confined to costly, special purpose machines.andM;Camelot takes care of recovery, synchronization, and communicandM;ation inandM;distributed transactions.andP;  It provides simple interfaces (viaandM;macros and CandM;library calls) for running transactions and defines servers that encapsulateandM;potentially large permanent data objects.andP;  How Mach Fits In.andP;  Camelot doesn'tandM;use Unix as its foundation.andP;  It uses Mach, and it runs on aH the machinesandM;that Mach supports.andP;  Thus, Camelot has the advantages of Unix  its low costandM;and wide availability) without getting muddled in performance problems.andM;Camelot developers didn't mess with the Mach kernel; you might say that doingandM;so would have been against their ethics as software writers.andP;  (Actually,andM;commercial operating systems with Mach-like features such as AIX and SunOSandM;would need very little tweaking to run a system like Camelot) Instead,andM;Camelot is a collection of facilities layered outside the operating system.andM;Mach gives Camelot its basic building blocks for distributedandM;applications:andM;* Mach's tasks and threads support parallel processing onandM;uni- and multiprocessors.andM;* Interprocess communication is handled by Mach.andP;  Thus,andM;message-passing inandM;Camelot has the advantages of location independency, security, and data-typeidentification.andM;* Camelot uses Mach's memory manager for write-ahead logging (WAL), whichandM;helps in recovery.andP;  (Basically, WAL lets crucial portions of the recovery logandM;be updated in advance.)andM;* Camelot programs communicate both locally and remotelyandM;via Mach RPCs to shared servers.andM;* Mach allows for virtual shared memory among tasks.andM;CONCLUSION.andP;  Camelot's impact lies not only in online transaction processing,andM;but also in distributed programming.andP;  TP contains features like failureandM;atomicity (i.e., an &quot;undo&quot;  feature; should the hardware crash in the midstandM;of a transaction, it won't go through only partially completed), permanence,andM;and synchronization which help programmers deal with the data integrity,andM;concurrency, and failure issues inherent in distributed applications.andP;  Thus,andM;software writers can concentrate on the application at hand and let theandM;transaction facility take care of distributed operations.andP;  Camelot is a modelandM;for implementing distributed transactions in a Unix-like environment.andP;  ItsandM;developers suspect that, in time, all Unix systems will use transactions,andM;which will simplify the whole process of developing distributed applications.andM;(As we went to press, we learned that Camelot has helped spawandM;n a newandM;software company.andP;  And it's good to see a worthwhile piece ofandM;research beingandM;adapted for the commercial market)andM;MODULARITY There are two possible paths for the growth andandM;continuedandM;development of the Mach operating system.andP;  The more expedient routeandM;has beenandM;the one taken by the earlier adopters of Mach, such as NeXT and BBN.andP;  ForandM;these, the procedure was, in essence, to go into the current BSD 4.3 UnixandM;kernel and selectively replace chunks of code with Mach kernel coding.andP;  TheandM;result is a hybrid operating system that offers a sizable share of Mach'sandM;increased functionality and efficiency as well as compatibility (to aandM;bug-for-bug level of compatibility) with existing BSD standards.andM;There is an alternate, more ambitious path that this operating system isandM;taking.andP;  It attempts to provide a set of powerful, device-independentprimitives for (continued)andM;data communication and manipulation-a groundwork for hardware and softwareandM;evolution.andP;  The kernel should be very small, much smaller, in fact, thanandM;Unix's kernel.andP;  The system's extensibility will rest on having many complexandM;functions that are typically associated with the kernel reside outside thatandM;kernel as objects to which messages are passed.andP;  With this version, BSD runsandM;completely independent of the Mach kernel and shares no memory with it.andM;While there are no commercial products built around this version of theandM;kernel, CMU does have a full, binarycompatible BSD 4.3 environment running onandM;top of it.andP;  It should go into production use at CMU later this year and isandM;receiving attention from commercial vendors.andM;A SCHEMATIC OF &quot;PURE&quot; MACH LAYERING:andM;User processes   !andP;    user interfaceandM;!    system servicesandM;!    network protocolsandM;!    Unix compatibility file systemandM;-------------------!-----------------------------------Kernel           !andP;    virtual memory managementandM;!    interprocess communicationandM;!    multiprocessor schedulingandM;LICENSINGandM;Mach is licensed by CMU.andP;  There is no charge for the license andandM;no royalty or  distribution fee.andP;  Mach can be obtained through the CMU MachProject, School of  Computer Science, Carnegie Mellon University, Pittsburgh,PA 15213.andP;  @@@074648667 0UIOHya0020SSAandM;WE ORIGINALLY intendedandM;this editorial to be about theandM;fact that OSF and Unix InternationalandM;became members ofandM;X/Open, but we changed ourandM;minds (we're allowed).andM;When we put on the hat of theandM;applications developer in theandM;Unix environment, we can'tandM;get too excited about thisandM;event.andP;  Yes, it is important,andM;and yes, it will help-in theandM;long run.andP;  But, for the applicationsandM;developer working hardandM;to provide next-generationandM;software, there is a more importantandM;and immediate concern.andM;Despite the advantagesandM;of Unix in terms of portability,andM;all is not rosy for developers.andM;Why the problems?andM;Man of these software de-andM;velopers are small businesses with limited resources.andP;  Therefore, when theyandM;begin to port their applications to various platforms, they are frustrated byandM;the proprietary hooks that vendors place in their operating systems to gainandM;the strategic edge.andP;  One developer recently spoke of the problems she facedandM;when trying, at the request of a customer, to port an application to an earlyandM;release of AIX for the 370.andP;  After many months of effort, she discovered thatandM;the job couldn't be done.andP;  In the meantime, a lot of time and money had beenandM;wasted.andP;  We believe that this developer isn't alone.andM;Thus, we revised the topic for this editorial to read: X/ Open as aandM;unifying force.andP;  If X/Open can continue to leverage its position as thecommonandM;denominator, it could help developers to have a common operating system forandM;porting applications.andP;  This goal will not be easy to achieve, however.andO;DespiteandM;the clout that X/Open has gained in recent years, the standards environmentin which vendors must compete does not lendandM;itself to conformance.andP;  For example, will IBM and DigitalandM;really be willing to forego proprietary hooks in theirandM;operating systems? How will these companies react if their customers began toandM;port theirandM;strategic software to other hardware?andM;The dilemma is clear-and so is the challenge for X/andM;Open: to convince vendors that they have more to gainandM;from standards than they have to lose.andP;  In June, X/OpenandM;will take a step in this direction by sponsoring a meetingandM;in which sophisticated end users and independent software vendors (ISVs) willandM;tellandM;the organization what its requirements are for the nextandM;five years.andP;  The meeting,  which will involve over one hundred users andISVs, will handle issues such as  user interface, connectivity, systemsadministration, portability, development  tools and languages, andhuman-computer interface, to name a few.andP;  ISVs are  particularly concernedabout the impending onslaught of graphical user  interfaces.andP;  Vendors are notonly facing the prospect of writing applications to  a bit-mapped display,but also the possibility of having to write to many  different interfaces.andO;The consensus of this group should provide X/Open with  the ammunition toconvince vendors that it is in their best interest to conform  to standardsat the operating system and network levels.andM;The problem remains: How soon will all of this standardization take? How much longer will our friend with the small software company be forced towrite  and rewrite software for 200 different versions of Unix? For companieslike  this, the solution cannot come too soon.andP;  We only hope it doesn't cometoo late.andP;  @@@074649086 0UIOHya0040SDIandM;WE'VE BEEN TALKING a lot about Mach,andM;the most commercially visible U.S.andP;  researchandM;operating systems.andP;  AlthoughandM;Europe's developments don't have theandM;same degree of recognition, they are estimable.andP;  In manyandM;ways, France's Chorus and Amsterdam's Amoeba are followingandM;in the footsteps of Mach.andP;  Each system has uniqueandM;features, but when you look at the three side-by-side, you'llandM;see an overlapping of purpose and design.andP;  Each has a systemandM;call interface to Unix but also stretches Unix for programmersandM;who want to build more meaty applications.andP;  Furthermore,andM;each features a small kernel and caters to modularandM;architectures.andP;  Chorus and Amoeba are considered less matureandM;in some aspects than Mach (or V or Sprite, for thatandM;matter).andP;  All the same, we thought it a good idea to sampleandM;these European contributions.andM;Distribution with AmoebaandM;AMOEBA DESIGN: AN OVERVIEW.andP;  Amoeba's structure is object based.andP;  Each objectandM;in an Amoeba system has a &quot;capability,&quot; which determines access rightsandM;(i.e., who can use the object and what that user can do with it).andP;  EveryandM;object in the system carries its capability around with it as it moves fromandM;site to site.andP;  Objects are manipulated by services scattered throughout theandM;system.andP;  However, users need not be concerned with communicationimplications;andM;the operating system takes care of interprocess communications usingandM;transactions.andM;The Kernel.andP;  The Amoeba kernel is small and sits on each processor in theandM;network.andP;  Like the Chorus nucleus, it's only responsible for multiprocessingandM;and interprocess communication-both locally and globally.andP;  The kernel handlesandM;transactions, sending and receiving messages (including splitting longandM;messages into packets), server location, setting timers, handlingandM;retransmission, etc.andP;  Just about everything else (process management, fileandM;system, system accounting-all the traditional operating system functions) isandM;done outside the kernel.andM;Transactions.andP;  All interprocess communication in Amoeba is done byandM;transactions.andP;  Clients send request messages (which carry the objectcapabilityandM;and operation code) to servers that perform the operation and respond with aandM;reply.andP;  Processes are divided into subprocesses that enable servers in anandM;Amoeba system to handle multiple requests and enable clients to handleandM;multiple transactions.andM;Single Address Space.andP;  The final pertinent characteristic of Amoeba is thatitandM;lets multiple processes operate within a single address space.andP;  The systemusesandM;a task cluster model for implementing multiple threads and to allow serverstoandM;work on several requests simultaneously.andP;  The model contains:andM;* Tasks, or lightweight processesandM;* Clusters of tasksandM;* Segments, the part of the system's virtual address space inandM;which a cluster executesandM;The kernel manages clusters and provides communication between tasks.andM;Mere are no preemptive tasks within a cluster; one task has to be finishedandM;before another can begin.andP;  This won't quite hack real-time processing, whichandM;relies on preemptive capabilities.andM;COMMERCIAL IMPACT.andP;  We can't predict how much the solutions found throughandM;Amoeba will affect the commercial market.andP;  It's still considered very muchandM;experimental technology.andP;  We assume that future Unix systems win adopt trans-andM;actional capabilities to better handle distribution.andP;  Perhaps Amoeba willandM;stimulate more transactional activity in the industry.andM;The Chorus Distributed Operating SystemandM;Chorus began life as a research project at INRIA in 1982.andM;However, sinceandM;1987, it's been a product of Chorus Systems, where it continues to beandM;refined.andP;  Chorus developers have rewritten the operating system four times,andM;searching for better performance and the semantic accuracy of its UnixandM;interface.andP;  However, Chorus is not intended to be strapped to Unix.andP;  At theandM;moment, it maps to System V, but other interfaces-including one forandM;OS/2-are in the works.andP;  Chorus is written mostly in C++, so it's portableandM;and it allows for classes and inheritance.andP;  (Perhaps some quick-and-dirtyandM;definitions are appropriate here.andP;  A class is a general category of similarandM;objects.andP;  Objects created within a class, by definition, inherit the basicandM;attributes common to that class.) It's completely distributed; it runs on aandM;variety of multiprocessor; and it has real-time capabilities.andM;A SKETCH OF CHORUS.andP;  Chorus has three main characteristics:andM;* A minimal nucleus (a.k.a.andP;  kernel) that can underlie a varietyandM;of operating systems, providing distributed processing andandM;communicationandM;* Real-time services with multithreading and fixed-priorityandM;preemptive schedulingandM;* A machine-independent, modular architecture that supportsandM;parallel and multiprocessing systemsandM;Influences.andP;  If you look closely at Chorus, you'll see shades of relatedandM;research projects.andP;  For instance, it handles message-passing, as doesandM;Stanford University's V System.andP;  Its distributed virtual memory and threadsandM;are similar to Mach's, and its network addressing uses ideas from Amoeba.andM;Architecture.andP;  The focal point of Chorus is its nucleus, which is basic andandM;controls only distributed processing and communication.andP;  The nucleus liesandM;underneath the host operating system and extends it.andM;The Chorus architecture is layered, and it separates functioandM;ns that areandM;usually part of the kernel (i.e., process management, fileandM;system, andandM;device management) into an independent set of software services.andP;  Once theseandM;services split up, the system becomes more modular, portable, and scalable.andM;At a glance, the Chorus nucleus seems more simple than curreandM;nt MachandM;kernel implementations.andP;  But the Chorus nucleus is overlaid atandM;boot timeandM;with System V support code-as are today's versions of Mach-that runs inandM;kernel state and shares memory with the Chorus nucleus.andP;  In this sense,andM;running Chorus is not very different from running a commercial Mach system;andM;both have a basic kernel layer and both support Unix compatibility within thekernel (as opposed to the more pure MachandM;version, which is completely independent of BSD and shares rio memory withandM;it.)andM;The Nucleus.andP;  The Chorus nucleus has both local and global responsibilities .andM;On a local level, it has three components:andM;* Real-time Executive, which provides preemptive, fixed-priority schedulingandM;and synchronization * Virtual Memory Manager (VM Manager), which directsandM;local memory allocation and structures virtual memory address spacesandM;* Hardware Supervisor, which provides dynamic loading ofandM;external events (such as interrupts, traps, and exceptions)andM;On a global level, there is the IPC Manager, which issues messagesandM;transparently to any node in the system.andP;  The IPC Manager keeps track ofandM;where messages are going and delivers them via RPCs and asynchronous messageandM;passes.andP;  Sometimes, external system servers are called upon to supportvariousandM;network protocols.andM;The Chorus nucleus structure hides its distributed nature from thoseandM;using it.andP;  Local services compute locally, and global services rely on theandM;cooperation among nuclei to cope with distribution.andP;  The IPC is the onlyandM;communication tool; all sites use it rather than dedicated protocols.andM;LICENSING.andP;  Chorus Systems is licensing Chorus at three levels.andP;  Each levelandM;includes source code for Chorus V3.1.1, development utilities (i.e.,andM;debuggers and the Chorus simulator), user documentation, implementationandM;documentation, and services (maintenance, training, and support).andM;Chorus Systems is located at 6 Avenue Gustave Eiffel,andM;78182 Saint-Quentin-En-Yvelines Cedex, France.andP;  TelephoneandM;33 (1) 30 57 00 22.andP;  @@@074649663 0UIOHya013MOTFandM;It's no longer a question of whether or not Unix will become a commercialandM;operating system.andP;  Unix is an operating system of commercial quality today,asandM;a growing roster of corporate users attests.andP;  But when will Unix take itsandM;place alongside IBM's MVS and Digital's VMS as a major commercial player?andM;&quot;On the Road to Commercial Unix,&quot; the first Executive UniForum SymposiumandM;April 26-28), provided some answers.andP;  The symposium, cosponsored by PatriciaandM;Seybold's Office Computing Group and /usr/group, the international UnixandM;organization, brought together 40 speakers and 200 attendees to chart Unix'sandM;course toward widespread commercial use, identifying barriers as well as fastandM;lanes.andM;The symposium arrived at the following conclusions:andM;* Unix is a viable commercial operating sandM;today.andM;* Unix's position as the centerpiece of a growingandM;open systems movement is the source of muchandM;confusion and misinformation.andP;  Openness is, inandM;fact, limited to the choice of hardware.andP;  Also,andM;preoccupation with standards may be impedingandM;innovation.andM;* The economics of Unix has prevented innovationandM;in applications at a level equal to that in theandM;DOS world.andP;  A key factor is that users aren'tandM;backing their demands for standards-based systemsandM;with their budgets.andM;* The split between the Open Software FoundationandM;(OSF) and Unix International (UI) is rapidlyandM;becoming a mere political sideshow.andP;  TheandM;stage is set for the two bodies to, at minimum,andM;cooperate.andP;  X/Open's emergence as a clearinghouseandM;of standards-de jure and de factoandM;alike-is promoting convergence on a single setandM;of standards in the Unix world.andM;* Unix will become an important enabling technologyandM;for distributed network computing, objectandM;orientation, and other new technologies.andM;BEYOND VIABILITY IS MARKET ACCEPTANCE.andP;  It's useful to remember that Unix isandM;20 years old.andP;  This fact implies a maturity that OS/2 certainly doesn't have.andM;It also implies, as noted by Bill Joy, Sun Microsystems' vice president ofandM;Randamp;D, that Unix is huge.andP;  Unix has too much [function],&quot; he said.andP;  Ideally,andM;I'd like a white wall to hang my picture on.&quot; Joy's dream of starting overandM;with an object-oriented version of Unix has been put on indefinite hold,andM;because the Unix International consortium has become the guardian of theandM;future of ATandamp;T's System V Unix.andM;Acceptance by commercial users hasn't been easy for Unix.andP;  Pete Peterson,andM;CEO of WordPerfect, characterized Unix with an extended metaphor: &quot;If yourandM;daughter brought home a boyfriend and the boyfriend was DOS, he'd be a niceandM;kid with a terminal disease.andP;  If he was OS/2, he'd be nice but still lookingandM;for a job.andP;  If he was a proprietary system, he would have been born with aandM;silver spoon in his mouth and never have had to work very hard for anything.andM;If he was Unix, he'd be a hard worker, and his suit would be frayed at theandM;edges.&quot;andM;So it is for Unix's rapid for its users, who struggle to come to gripsandM;with Unix's rapid progress in the commercial world.andP;  Timing is tricky.andO;SalomonandM;Brothers, the big Wall Street firm, was burned two years ago when it made aandM;commitment to IBM's Unix program before the program was mature, related PeterandM;L.andP;  Bloom, senior operating officer.andP;  Steven A. Ruegnitz, director of UnisysandM;Corporation's Open Systems Marketing Team, remembered jumping throughandM;technical hoops while on the U.S.andP;  Army's systems staff to meetcommunicationsandM;requirements under Unix.andP;  There were easier ways in proprietary environments,andM;but, in the Army, you have two choices: Unix or Unix.andM;Ruegnitz had no choice, but most users do.andP;  Still, they too oandM;ftenandM;underestimate the effort needed to implement Unix in commercial applications.andM;There are barriers at every level.andP;  Judith Hurwitz, editor-in-chief of UnixinandM;the Office, noted that professionals in the typical commercialandM;data processing shop are afraid of Unix.andP;  They've become accustomed toandM;thinking of the Unix operating system as a scientific and academic operatingandM;system not fit to work in the real world,&quot; she says.andM;At the user level, said Paul Ely, president of the Network CoandM;mputingandM;Group at Unisys, Unix is a shock.andP;  &quot;When you approach it, it acts like you'reandM;bothering it,&quot; said Ely.andP;  &quot;It is the misbehaving child of the operatingandM;systems world.&quot;andP;  REPORTS FROM THE FRONT.andP;  The fact is that converting aandM;business to Unix is a major effort.andP;  William H. Pigott, vice president of MISandM;at DHL Worldwide Express, is happy with the Unix systems he oversees today.andM;DHL has Pyramid systems in the United States, Pyramid and NCR in the UnitedandM;Kingdom and Africa, NCR in Latin America, and Hewlett-Packard in Europe.andM;Applications can be easily moved to any of these platforms.andM;But this environment was five years in the making.andP;  It all staandM;rted whenandM;DHL's largest shareholder mandated Unix as the worldwideandM;corporate standard.andM;Pigott's staff began writing lots of C code to build under Unix DHL's coreandM;business applications.andP;  Pigott now says this was a bad idea.andP;  Use aandM;fourth-generation language (4GL) instead, he advises.andP;  The additional cyclesandM;you bum are less expensive than C programmer time.andM;Clearly, packaged software can reduce the implementation painandM;of Unix.andM;Applications are plentiful in some specialized areas.andP;  Geoffrey K.andM;McDowell,andM;manager of MIS at Four Seasons Hotels Limited, had some 30 Unix packages toandM;choose from when he initiated a three-year program to replace the hotelandM;chain's back office accounting systems.andP;  The chain also wrote some of its ownandM;software with Zanthe's Zim 4GL.andP;  Still, McDowell cautioned, Unix does requireandM;more in-house expertise.andM;Vendors that help will find a receptive market.andP;  Four SeasonsandM;HotelsandM;uses Hewlett-Packard (HP) equipment and is &quot;smothered&quot; withandM;support, McDowellandM;reports.andP;  Even so, however, HP's Unix support at first operated at a deepandM;technical level, which was not appropriate for his staff.andP;  HP is adjusting.andM;THE POWER SURGE IN UNIX.andP;  Unix users do not sacrifice anything in terms ofandM;platform power.andP;  Representatives of Pyramid Technology, Sequent, Arix, andandM;Data General assured UniForum Symposium attendees that Unix supports powerfulandM;machines.andP;  Each of the vendors is migrating from a host-based model ofcomputing to a model that al-andM;lows workstations to access their machines as servers on a network.andP;  Each isandM;investing heavily in networking to support this shiftandM;These vendors are delivering impressive platforms under Unix.andP;  Pyramid'sandM;new MIServer is rated at 140 MIPS, and supports up to 64 GB of disk storage.andM;Sequent stresses its performance in relational database applications.andP;  Arix'sandM;design features independent I/O processors and can be implemented in avarietyandM;of chips, including RISC (Reduced Instruction Set Computers) chips.andM;RISC is the new force in the platform arena.andP;  Data General's newandM;processors are based on the Motorola 88000, and Arix can utilize RISCdesigns.andM;Sun's Bill Joy noted that we've only begun to realize the potential of RISC.andM;The coming of binary interfaces for Sun's SPARC and the 88000 varietiesandM;improve software portability.andP;  And the power of RISC chips will enableandM;innovation in new applications, said Joy.andP;  OPEN SYSTEMS: CONVERGENCE AND CON-andM;FLICT.andP;  Unix and the open systems movement are closely associated.andP;  That'sgood.andM;But too many users miss the distinction between Unix, the architecture at theandM;heart of the standards-based environment, and the &quot;Unix of a hundredvariants&quot;andM;that exists in the real world.andP;  This is a potential barrier to commercialandM;acceptance because it raises user expectations.andP;  In fact, Unix users do notandM;deal with the cohesive, monolithic entity suggested by the existence of theandM;Posix interface definitions, noted Dr. Pamela Gray, a /usr/group director.andM;Posix contributes much to Unix's evolution.andP;  It is a rigorously definedandM;standard that OSF and Unix International have both agreed to follow.andM;Long-term, Posix also will open up some proprietary operating systems.andO;WilliamandM;Heffner, director of software systems at Digital Equipment, told of a formalandM;plan to allow VMS to service Posix system calls.andP;  Completion date? Years fromandM;now.andP;  X/Open: The Best Hope.andP;  But Posix is also a political document.andP;  ItsmanyandM;options actually don't help promote convergence in the variousimplementationsandM;of Unix.andP;  Fortunately, X/Open's Common Applications Environment (CAE) and theandM;Federal Information Processing Standard (FIPS)    based on Posix help byselecting from among Posix's many options.andP;  Gray single dandM;out the X/ Open Consortium as the best hope for convergence upon a single setandM;of standards in the Unix world.andM;There are several reasons why X/Open plays a special role in the standardsprocess.andP;  First, itsandM;board is balanced between OSF and UI members, with Nokia Data of FinlandandM;remaining neutral.andP;  Both OSF and UI have agreed to follow the formal and deandM;facto standards recognized by X/Open.andP;  (This balance could be threatened byandM;HP's recent acquisition of Apollo Computer.andP;  If Apollo ceases to be an OSFandM;board member, OSF will be one vote short of a balance with UnixandM;International on the board.andP;  At press time, the situation hadn't beenandM;resolved one way or the other.) On a positive note, both organizations haveandM;become X/Open members.andM;Also, X/Open is moving aggressively to become the clearinghandM;ouse forandM;Unix user requirements, said Bill Bonin, vice president forandM;North AmericanandM;operations.andP;  X/Open's 20-member international User Advisory Council meetsandM;quarterly and articulates a direction for Unix development in theandM;commercial market.andP;  Openness Conflict #1.andP;  Despite these standards, the userandM;seeking openness via Unix confronts a central conflict between one vendor'sandM;real value-added and another's superficial differentiators.andP;  Paradoxically,andM;too many Unix extensions blow away the user's freedom of choice.andM;Vendors must innovate because Unix doesn't answer every neeandM;d.andP;  Today'sandM;innovation is tomorrow's standard,&quot; offered Digital's BillandM;Heffner.andP;  &quot;WeandM;add value to push the state of the art,&quot;  said William Filip, viceandM;president of the advanced workstation division of IBM.andP;  And so, for example,andM;Gould has added important security extensions, and HP has spearheadedandM;internationalization technology.andP;  Some of these preserve the user's optionandM;to select from many hardware vendors, some don't.andP;  Users must acknowledgeandM;that vendors will always seek proprietary leverage over standards; noandM;vendor willingly becomes a supplier of commodities.andM;The solution to this paradox differs for each situation.andP;  UsandM;ers mustandM;decide, based on corporate requirements, the degree to whichandM;openness isandM;important.andP;  Proprietary lock-ins are rife in the Unix market, noted MichaelandM;Banahan, president of The Instruction Set Limited, but they may or may notandM;be important in an individual user's scheme of things.andP;  If the corporateandM;requirement is security and the best fit is a proprietary extension, it mayandM;make sense for a user to adopt it anyway.andP;  Keep going back to yourandM;requirements, Banahan cautioned users.andM;Openness Conflict #2.andP;  The open systems movement stalls after providing userswith a choice ofandM;hardware platforms.andP;  Unix software isn't open-particularly DBMSs andhigh-levelandM;programming languages.andP;  Several users among the attendees expressedfrustrationandM;at this state of affairs.andP;  But representatives of three leading relationalDBMSandM;vendors Oracle, Relational Technology, and Sybase-offered no encouragement toandM;those who hope for the suite of standards needed to make DBMSs from differentandM;vendors interoperable.andM;The situation in 4GLs illustrates the point An organization chooses UnixandM;because it wants an operating environment that is owned by no single vendor.andM;When the same organization selects a 4GL to speed development ofapplications,andM;its systems cease being open.andP;  Every 4GL is DBMS-specific, and so ourandM;hypothetical organization has been locked in-despite having selected Unix.andM;This is &quot;lock-in&quot; at a level that's higher than the operating system, butandM;it's lock-in nonetheless.andP;  4GLs are the most glaring example, but not theonlyandM;one in the Unix DBMS market The DBMS vendors acknowledged that currentandM;standards don't support interoperating, heterogeneous DBMSs on a network.andO;SQLandM;alone doesn't provide all of what's needed, and standards that will are inandM;their infancy.andP;  The Open Desktop offering from the Santa Cruz Operation (SCO)andM;implements a version of the international Remote Data Access (RDA) standard,andM;called General Communications Architecture.andP;  But RDA is not complete yetReturnandM;and error codes, dictionaries, and catalogues are other areas where standardsandM;can promote interoperability of databases from several vendors.andM;But don't expect new standards in these areas soon.andP;  Because of fierceandM;competition, major DBMS vendors see no compelling reason to agree on them.andM;Jerry Baker, vice president of Oracle's Unix division, noted that hisdivisionandM;did $100 million in Unix business last year, a 200 percent increase.andP;  GrowthandM;this year is slowing-to about 100 percent Oracle just doesn't encounterandM;demands for heterogeneous databases, according to Baker.andP;  &quot;CorporationsandM;usually standardize on Oracle, and that's that&quot; For the next few years,andM;gateways will be the most prevalent method of connecting different brands ofandM;DBMSs.andM;New standards issues will make the database    arena an open systemscul-de-sac for some time.andP;  Each of the DBMS vendors atandM;the symposium portrayed atransaction processing services, softwareengineeringandM;tools and methods, and support for object-oriented designs as developmentandM;priorities.andP;  Each of these areas requires value added atop the Unix standard.andM;For example, objects comprise data plus theirandM;semantics, a form that relational tables are not adept at storing.andP;  JamesandM;Black, vice president of New Systems and Environments at RTI, noted that, atandM;minimum, the relational vendors need to expand their catalogues to acceptandM;new data types from the object world.andP;  They'll also need to define a newandM;query standard to augment or replace SQL.andP;  SQL doesn't understand theandM;semantic content of an object.andP;  International standards bodies are working onandM;an extension to SQL, but this is a long-term effort.andP;  In the meantime, eachandM;vendor is working on its own extension to SQL and its own extendedandM;catalogues, noted Mark Hoffman, president of Sybase Incorporated.andM;Patricia Seybold, president of the Office Computing Group, asandM;ked theandM;trio if they'd be willing to work with IBM to define a commonandM;standard basedandM;on SQL.andP;  (IBM originally defined SQL.) Only Black displayed any willingnessandM;to do so.andM;OSF VERSUS UI.andP;  The competition between OSF and UI was worrisome toandM;attendees.andP;  The big question was how seriously OSF and its backers wouldandM;disrupt the progress Unix has been making via ATandamp;T's System V. Moreover,andM;some attendees wondered if OSF's output would be of any consequence in theandM;evolution of Unix.andM;Digital's Heffner and IBM's Filip both fielded questions abouandM;t theirandM;commitments to Unix.andP;  Heffner said VMS and Ultrix have equalandM;resourceandM;commitments.andP;  Filip revealed that Michael Serranga, former assistant chief ofandM;IBM's SAA organization, is now working on AIX.andP;  His priority: convergence ofandM;SAA and AIX.andP;  IBM's goal in office applications is a common set of functionsandM;for SAA and AIX, with interconnection between the two environments.andM;Attendees also wanted to know about the plans at IBM and DigiandM;tal toandM;incorporate OSF/1, OSF's first operating system release, intoandM;their brandsandM;of Unix.andP;  Heffner said Digital will put pieces of OSF's releases into itsandM;Ultrix over time.andP;  &quot;The [OSF] virtual memory system is in flux,&quot;  HeffnerandM;noted.andP;  &quot;It is impractical to implement OSF/1 wholesale.&quot; According to Filip,andM;IBM OSF/ 1 and AIX 3.0 won't differ in important ways at firs% and IBM willandM;move AIX along parallel with OSF's releases, mapping AIX to OSF.andP;  Since OSF/andM;1 won't be available to vendors until the end of the year, users won't learnandM;the results of individual vendor's mapping processes until well into 1990.andM;The GUI Cauldron.andP;  The biggest question about OSF concerned the impact of itsMotif graphicalandM;user interface (GUI).andP;  Though based on toolkit technology from Digital andHP,andM;Motif has the look and feel of Presentation Manager, the graphical interfaceandM;for OS/2.andP;  This commonality raises the possibility of a common interfaceacrossandM;industry platforms as diverse as Unix, OS/2, and even IBM's proprietaryandM;systems, which will use Presentation Manager as their interface base.andM;OSF Motif competes with Open Look, which was developed by SunandM;Microsystems and is backed by ATandamp;T.andP;  Lt.andP;  Col.andP;  Terry Elton, communicationsandandM;computer systems manager at the U.S.andP;  Air Force, complained that theexistenceandM;of two standards complicates federal purchasing and could impede applicationsandM;progress.andM;Filip, stressing convergence, said Motif and Presentation Manager willandM;evolve in lockstep.andP;  This common direction isn't as clean as it might be,andM;however.andP;  Lurking in the shadows of IBM's planning is NextStep, the interfaceandM;technology it licensed from NEXT Computer for its AIX platforms.andP;  Don'texpectandM;any action on NextStep, said Filip, until IBM's negotiations with NeXT'sSteveandM;Jobs are concluded.andP;  For Digital, the issue is simple: Motif will be theandM;interface on all of its systems, said Heffner.andM;Will Motif beat out Open Look? This is a question of survival forandM;software developers, although it actually may not be particularly importanttoandM;users.andP;  Graphical user interface is the Unix developer's most critical issue,andM;said X/Open's Bill Bonin, because so much code-half of the typicalandM;application's source code-is required just to support the graphicalandM;environment.andP;  Bonin predicted that &quot;the market' will decide on an interfaceandM;this year, and most attendees seemed inclined to agree.andM;The user view of the interface question is different, however.andP;  Sun's BillandM;Joy offered that the interface wars are &quot;much ado about not much.andP;  A commonandM;user interface [across platforms] doesn't matter,&quot; he said.andP;  &quot;You can learn aandM;new interface within one minute.&quot; What's really important is giving usersandM;interfaces that don't call attention to themselves.andP;  Little things count,saidandM;Joy.andP;  The    shading employed by NextStep to separate active and passivewindows, forandM;example, is very helpful.andM;Things will get even more interesting in graphical interface.andP;  Mofif andandM;Open Look are just window systems-platforms, if you will.andP;  HP, for one, plansandM;to build additional capabilities atop Motif with its NewWave product, saidandM;Willem P.andP;  Roelandts, general manager of HP's General Systems Group.andP;  NewWaveandM;is a window content manager that introduces object-oriented capabilities to awindow manager like Motif.andP;  Expect NewWaveandM;to be at the heart of innovative network management software products fromandM;HP.andM;OSF-UI Convergence.andP;  For every worry expressed about the split in the UnixandM;world, however, a voice was raised citing the convergence of the two camps.andM;X/Open certainly holds this promise.andP;  And Robert Kavner, president of ATandamp;T'sandM;Data Systems Group, held out the possibility of cooperation and even aandM;merger between OSF and UI.andM;ATandamp;T's recent moves have satisfied the demands of licenseesandM;for stable,andM;predictable licensing terms and an impartial developmentandM;organization openandM;to licensee input.andP;  Kavner conceded that OSF was born of ATandamp;T's managementandM;blunders with Unix.andP;  By allying with Sun, ATandamp;T brought &quot;Dennis the Menace&quot;andM;Bill Joy and Company) into power, he noted.andP;  &quot;Sometimes I feel like Mr.andM;Wilson,&quot; quipped Kavner.andM;The stage is set for OSF and UI to get together.andP;  Kavner saiandM;d they'reandM;still talking, and hopes the two can reach an accommodation.andP;  JoyandM;blamed &quot;SunandM;bashing&quot; for the failure of a previous merger proposal, but was confidentandM;some accommodation is in the offing.andP;  These things are like the footballandM;franchises,&quot; he said.andP;  To get accepted by the NFL, you have to first formandM;the AFL, and then get absorbed by the NFL.&quot;andM;Unisys may emerge as the broker of any accommodation.andP;  &quot;I'mandM;not sureandM;the OSF-Unix International split is a disaster,&quot; said Paul Ely,andM;&quot;but we wantandM;a single industry standard.&quot; Watch what Unisys and ATandamp;T do with Motif.andP;  IfandM;they accept Motif as their standard, it will be as a gesture offering OSF anandM;olive branch, Ely suggested.andP;  Unisys's X/Open representatives alreadyandM;support Motif over Open Look, he revealed.andM;The OSF-UI split was a major concern among attendees at theandM;beginningandM;of the symposium, but, by the second day, it had faded.andP;  In a survey ofandM;attendees taken on the second day, 65 percent said they didn't care whenandM;asked if OSF and UI should merge.andM;STANDARDS VERSUS INNOVATION.andP;  Bill Joy was annoyed by the conference's focusandM;on wider standardization as a market-driving force.andP;  The marketplace is notandM;driven by committees,&quot; he said.andM;The marketplace drives itself.&quot; The touchstone for developers in the UnixandM;market should be what business users need to be more competitive, notandM;efforts to achieve wider open-system standards.andP;  Standards today allow usersandM;to choose multiple hardware vendors, and that's enough, offered Joy.andM;Joy is building applications that don't existandM;today, focusing on teleconferencing and voice integration and onandM;anandM;application environment that supersedes the operating system in importance.andM;&quot;I'll go and build something great, but proposing it as a standard may ruinandM;it,&quot; said Joy.andM;Joy's point of view on standards was not widely shared.andP;  But his emphasisandM;on innovation struck a nerve with users at the symposium.andP;  Users wantandM;innovation, and they're dissatisfied with what they find in Unix applicationsandM;for the office environment.andP;  Indeed, Joy's approach was 180 degrees out ofandM;phase with the approach of the other vendors who discussed Unix officeandM;applications.andM;Unix office software is dull.andP;  Karl Klessig, president of QuadratronandM;Systems Incorporated, arid Jeffrey Waxman, president of Uniplex IntegrationandM;Systems, revealed why.andM;The state of the art in DOS- and proprietary-based officeandM;software-graphical user interfaces, procedural automation, compounddocuments,andM;voice integration-is not the state of the market, Waxman told attendees.andM;Functions like procedural automation and compound documents will beandM;requirements three to four years hence, he said.andP;  For the present, UniplexandandM;Quadratron will provide baseline functions within individual program mod-andM;ules-like word processing-and strong integration with other modules.andM;Klessig and Waxman butted heads with Randy Griffin, a vice president atandM;Computer Sciences Corporation (CSC), a big systems integrator, on what usersandM;really require.andP;  CSC is making a nice business of integrating the mostandM;functional individual software packages from different vendors.andP;  Griffin'sandM;customers aren't willing to settle for the lowest common denominator offeredandM;by Quadratron and Uniplex.andP;  Yet Waxman and Klessig held out no hope forandM;innovation in their product lines.andM;What's going on here? Why don't Unix software vendors value innovation asandM;much as DOS vendors do? A big reason is the costs Quadratron and Uniplex bearandM;as major players in Unix.andP;  Both spend considerable amounts of money justandM;porting their software to different versions of Unix.andP;  Both vendors valuehaving a wide variety of Unix platforms to run on, and KlessigandM;noted that his company puts a lot of effort into data interchange software.andM;The Fed Factor.andP;  And then there is &quot;the federal factor.&quot; To listen to federalandM;systems managers, government users don't particularly care about advancedandM;office features.andP;  As Steven Ruegnitz puts it, 80 percent of the users use 20andM;percent of the features.andP;  However, a closer look at this situation re-andM;veals that federal procurement rules virtually prohibit federal users fromandM;obtaining features like procedural automation.andP;  To specify proceduralandM;automation in a contract, a federal department has to be able to obtain itandM;from at least fl= sources, said Ruegnitz.andP;  New features generally aren'tandM;available from three sources.andP;  So, ironically, at the same time the federalandM;government is driving the progress of Unix, it is retarding innovation inandM;Unix applications software!andM;But the feds are only one factor in the market, albeit a largandM;e one.andP;  IfandM;Unix is to achieve widespread commercial acceptance, officeandM;applicationsandM;software written for it is going to have to improve beyond today'sandM;character-based interfaces and features, which are nothing special.andO;SymposiumandM;attendees-even one from the U.S.andP;  Army-made it clear that they'd use advancedandM;features like group calendaring, procedural automation, and compoundandM;documents if they could get them.andP;  There's a clear opportunity forinnovators.andM;Conventional wisdom says DOS application vendors will injectandM;new ideasandM;into the Unix market.andP;  While this is probably true, PeteandM;Peterson, CEO ofandM;WordPerfect, raised the question of how far DOS vendors will go with Unix.andM;When asked what innovations WordPerfect would bring to the Unix market,andM;Peterson replied, &quot;Slick manuals and support.&quot; These are important, but noteandM;that graphical user interface support is low on WordPerfect's priority list,andM;to say nothing of procedural automation, compound documents, and so forth.andM;Peterson did promise support for Motif, Open Look, and NextStep, butandM;downplayed the importance of graphical interfaces in general.andM;UNIX THE ENABLER.andP;  The state of office applications innovation under UnixandM;stands in dismal contrast to the expectations for the operating system.andM;Michael Millikin, vice president and chief technologist for the SeyboldandM;Office Computing Group, asserted that Unix will be at the heart of a broadandM;migration to distributed network computing.andP;  This means transparentandM;distribution of resources across servers and workstations on networks thatandM;are scalable, flexible, and easy to use.andM;Millikin sees Unix servers as well as proprietary servers onandM;theseandM;networks.andP;  And he noted that important common technologies are emerging,andM;particularly LAN Manager for both OS/2 and Unix.andM;Paul Ely of Unisys endorsed this idea with special emphasis oandM;n the needandM;for distributed networks to support existing proprietary systems.andM;Unisys is seeking rapid movement toward the distributed model inandM;both itsandM;Unix investments and its development of its mainframe architectures.andM;Ely believes object-oriented software design will be an imporandM;tant partandM;of achieving the potential of distributed network computing.andP;  &quot;WeandM;need to beandM;able to build applications easily, and object-oriented programming languagesandM;can help,&quot; he said.andP;  For example, network resources like mail systems, faxandM;servers, and printers should be available to users as black boxes.andP;  UsersandM;should be able to send a document to a black box without having to worryandM;about how it works.andM;Unisys joined the Object Management Group (OMG), an industryandM;consortiumandM;formed to promote standards in object applications, to help accelerateandM;development in this area, said Ely.andM;Object orientation also plays a big role in Bill Joy's thinkiandM;ng as heandM;crafts his application environment The notion that users can getandM;at data notandM;by mucking with it but by asking it questions is powerful in its simplicity,andM;he told attendees.andP;  Joy's other major goal: tailorable user interfaces.andO;UsersandM;need a wider range of interface metaphors, he said, and they won't get veryandM;far if window systems keep thrusting their controls into the foreground.andM;CONCLUSIONS.andP;  The first Executive UniForum was loaded with ironies.andP;  Istoday'sandM;innovation tomorrow's standard or tomorrow's lock-in? Users make openness aandM;corporate objective and get locked in by software.andP;  And economics forcesandM;applications software functionality to the lowest common denominator.andM;Each of these illustrates important barriers Unix must overcoandM;me beforeandM;it becomes a commercial heavyweight.andM;Firs% agreement on more and wider standards will help accelerandM;ate theandM;acceptance of Unix.andP;  The fact that openness is so limited is notandM;lost onandM;commercial users.andP;  The major benefit of moving to Unix is freedom of choice.andM;But hardware is the only domain where this freedom is available, and that'sandM;not a wide enough benefit.andP;  Wider standards will also reduce the threat ofandM;vendor lock-in.andM;Second, innovation in Unix software must accelerate.andP;  CommerandM;cial usersandM;have been seduced by the flashy qualities of DOS applications.andM;They won'tandM;rush to settle for less.andP;  A crowd of Unix aficionados confidently dismissesandM;OS/2 as too little too late.andP;  This was an oft-heard remark at the symposium,andM;and it signals an overconfidence on the part of Unix vendors.andP;  This, in andofandM;itself, is the highest hurdle commercial Unix must overcome.andP;  @@@0746501490UIOHya020BADNandM;We've been talking a lot lately about the research developments at CarnegieandM;Mellon University (CMU).andP;  In April, it was the Andrew project; this month,it'sandM;the Mach operating system and the Camelot project.andP;  It's no coincidence.andP;  TheandM;university has put together some valuable distributed network computingandM;solutions under Unix, some of which have helped usher in a newandM;Pittsburgh-based software company called Transarc.andP;  The company is headed byandM;CMU professor Alfred Spector, who has worked closely with both the AndrewfileandM;system (AFS) and the Camelot project, and he brings with him a few AFS andandM;Camelot cohorts.andP;  Thus, the products to come from Transarc will be modeledandM;after CMU prototypes: file system products A la AFS and transactionprocessingandM;products A la Camelot (see  Distributed Transaction Processing&quot; in thisandM;month's feature).andM;IBM's BANKROLL.andP;  Interestingly, IBM is helping foot Transarc's bill (althoughandM;to what extent, neither company will say).andP;  IBM is becoming quite the ventureandM;capitalist these days; this is its seventh venture investment in the past 18andM;months.andM;Since Transarc is pattering itsandM;products after CMU Randamp;D, IBM's interest in the start-up isn't exactlyandM;surprising.andP;  IBM has already pumped over $30 million into the Andrew project,andM;a joint IBM/CMU venture.andP;  Furthermore, it plans to integrate Andrew solutionsandM;into AIX.andP;  IBM also hopes to use Transarc software.andP;  IBM already has rightstoandM;AFS, and obviously Transarc isn't going to simply replicate the CNW system.andM;The remaining question is how much of an advantage will Transarc file systemandM;products have over the AFS original? It's hard to speculate; no products haveandM;been announced (not that we expected any; as we went to press, Transarc wasandM;only a few days old).andP;  However, considering the fact that a few influentialandM;AFS-ers are now on staff at Transarc, the refinements could be considerable.andM;CMU PROTOTYPES.andP;  The Andrew file system has some distinct advantages overandM;Sun's NFS, the de facto standard.andP;  Specifically, AFS's disk-caching schemeandM;makes it a better network decongestant It also has better security and makesandM;systems administration easier.andP;  For the lowdown on AFS, see Vol.andP;  4, No.andP;  4.)andM;Although Transarc plans to extend these AFS benefits, the company says thatandM;its products will support AFS.andM;Camelot has been licensed alongandM;with Mach to Mt Xinu (Berkeley, California).andP;  Since the main CamelotandM;developers are now with Transarc (Camelot is actually Spector's baby), theandM;company plans to keep a consulting relationship with Mt Xinu as long asandM;necessary for the distributed transaction processing facility.andP;  CONCLUSION.andO;AsandM;distributed network computing continues to flourish, better Unix solutionsareandM;vital.andP;  That's what caught our eye about the goings-on at CMU in the firstandM;place.andP;  In the feature, we talk in depth about some of Unix's limitations inandM;the DNC arena (e.g., relatively inefficient communication mechanisms and lackandM;of support for multiprocessing).andP;  We think Transarc has the potential toreallyandM;help out here, but we won't know until some products materialize.andP;  We'll keepyou posted.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-095-418  </DOCNO><DOCID>08 095 418.andM;</DOCID><JOURNAL>Soft-Letter  Jan 10 1990 v7 n14 p1(2)* Full Text COPYRIGHT The Mercury Group 1990.andM;</JOURNAL><TITLE>Open letter: the end of the line. (to Microsoft Chmn Bill Gates)andM;</TITLE><DESCRIPT>Company:   Microsoft Corp. (products).andO;Ticker:    MSFT.andO;Topic:     Word Processing SoftwareFontsSoftware MigrationStandardizationDocument Preparation.andM;</DESCRIPT><TEXT>OPEN LETTER: THE END OF THE LINE To: Bill Gates Chairman, MicrosoftandM;Dear Bill,andM;At Fall Comdex, we dropped in on your side-by-side demonstration of Word forWindows and Word for Presentation Manager, Microsoft's new entries in thegraphical word processor sweepstakes.andP;  As we expected, the two versions madea convincing case for your multi-platform development strategy.andP;  We suspectusers will be delighted to find they can move from a Windows application toits PM counterpart and (eventually) to the Mac without learning a brand-newinterface.andM;But we also noticed a small but disturbing phenomenon.andP;  Despite indenticaltext, identical ruler settings and identical fonts, the line breaks in yourtwo sample Windows and PM documents frequently fell at different points.andP;  Asa result, a fair number of paragraphs ended up a line longer or shorter inone version as compared to another.andM;Curiously, not many people even noticed these mysterious little glitches.andO;But unstable line breaks are an important symptom of a larger problem: therecent proliferation of incompatible font imaging models.andP;  Fontimaging--loosely defined as the system-level technology that draws, measures,and positions letters on the screen--has been one of those arcane subjectsthat most developers and users try to ignore.andP;  Now, however, you've produced(albeit accidentally) a very concrete example of why font imaging anddocument stability are going to become a critical issue for virtually thewhole software industry.andM;The basic problem, of course, is that there is no universal font imagingstandard that has been accepted by the promoters of different graphicalenvironments.andP;  Thus, each environment uses its own algorithms and metrics forcalculating how much text fits on a single line.andP;  The differences in thesecalculations are often very subtle, but there's a domino effect that quicklycascades through a whole document.andP;  A small variation in character widths maybump one word to another line, the paragraph word wrap adds a line or two tothe page, the extra lines force a graphic to move to a new page--and suddenlya carefully construed document ends up completely scrambled.andM;Font imaging isn't just a Windows-PM incompatibility problem, either.andO;Earlier this year, you cut a technology-sharing deal with Apple that wassupposed to create a common font standard for PM and the Mac.andP;  But Apple isalready working on a new Layout Manager feature for System 7.0 to kern textand perform other advanced linesetting functions.andP;  As a result, line breakswill be different between the Mac and PM--and also between System 7.0platforms and machines running earlier System versions.andM;To complicate matters a bit more, Adobe's Display PostScript--the fontimaging model you and Apple have rejected--has won significant support amongworkstation vendors, particularly those who target document-creation andpublishing markets.andP;  Display PostScript has been licensed for the NeXTmachine, IBM's new RT workstations, and DEC's Ultrix systems; it may become acomponent of the OSF Motif environment as well.andM;The bottom line is that font imaging is turning into a jungle.andP;  Thesystem-level incompatibilities in font imaging mean that applicationsdevelopers can't guarantee document stability when users move text from oneenvironment to another.andP;  It's nice that you (and others with multi-platformproducts) can offer common graphical interfaces and even portable fileformats.andP;  But hardcopy output--the final &quot;published&quot; product that most userscreate--is still largely platform-dependent.andM;Unfortunately, we don't see a quick fix for this problem.andP;  More than ever,graphical environments are competing for the support of developers and usersby offering increasingly sophisticated typographical features.andP;  There'salmost no chance, we believe, that any platform vendor--including your owncompany--will accept a truce based on a single lowest-common-denominatorimaging standard.andM;Worse, the industry's lack of sensitivity to the document stability issue isbound to send a misleading message to users.andP;  Right now, it's widely believedthat the only tough problem in document portability is how to make allprinters behave alike.andP;  For instance, Apple recently proclaimed that, &quot;with asingle font standard to support, PC and Macintosh computers will be able toprint an identical page using different printers.&quot;andP;  Sorry, folks, Appledoesn't have &quot;a single font standard&quot; any more, and the new standard willonly work on machines with at least 2MB of memory.andM;What the industry needs, clearly, is an advocate who can raise the visibilityof true document portability as the next great challenge for developers ofmulti-platform systems.andP;  And you're the obvious candidate for the job.andP;  Afterall, microsoft largely calls the shots for system-level standards on the PC,and your applications division has a major presence in the Macintosh,Windows, and PM markets.andP;  We can't think of anybody else with as muchauthority or leverage, or any greater commitment to multi-platform standards.andM;Bill, this is an issue that badly needs your leadership.andP;  You've alreadyhelped convince the industry about the value of portable interfaces, portablecode, and portable applications.andP;  Now we hope you'll start talking about thefinal missing piece--portable documents.andO;</TEXT></DOC>
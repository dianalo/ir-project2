<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-234-348  </DOCNO><DOCID>08 234 348.andM;</DOCID><JOURNAL>Patricia Seybold's Office Computing Report  Feb 1990 v13 n2 p20(3)* Full Text COPYRIGHT Patricia Seybold's Office Computing Group1990.andM;</JOURNAL><TITLE>An alternative to SQL. (Natural Language Inc.'s Natural Languagedatabase access tool)</TITLE><AUTHOR>Brown, Laure.andM;</AUTHOR><SUMMARY>Not all users who require access to data on an SQL-based systemare going to be familiar with SQL, which has created a market fornon-SQL front ends and tools for databases.andP;  Natural LanguageInc's Natural Language is one such tool, providing access toseveral large relational DBMSs, including Oracle, Sybase,Informix, Ingres and Rdb.andP;  Linguistic processing is used in placeof Boolean statements or keyword mapping for querying, with someuse of artificial intelligence.andP;  An internal representation of thequery is developed and deductive reasoning is performed, afterwhich SQL is generated to query the database.andP;  Facilities areincluded in the program for checking the accuracy of queries, anda rendition of the query is provided along with the results.andO;Preconfiguration of definitions for linguistic processing anddeductive reasoning is required; design and use of the program aredescribed.andM;</SUMMARY><DESCRIPT>Company:   Natural Language Inc. (products).andO;Product:   Natural Language 3.1 (Natural language user interface) (design andconstruction).andO;Topic:     Structured Query LanguageRelational DBMSNatural Language InterfacesQuery ProcessingNew TechniqueUtility ProgramsUser Interface.andM;</DESCRIPT><TEXT>An Alternative to SQL We're not all DBMS developers.andP;  Most of us don't knowSQL; most of us don't care to learn it.andP;  Yet an increasing number of casualusers must access databases, and they can't go pestering MIS every time theyneed to do some querying.andP;  Furthermore, both casual and serious databaseusers have been calling for better tools to access and interpret data.andP;  Totake advantage of the broader audience of low-tech users, natural-languagevendors are coming out with non-SQL front ends and tools for databases.andM;THE PROS AND CONS.andP;  There are a number of considerations in building adatabase access tool--namely, the syntax, structure, and semantics of thedatabase design.andP;  Syntactically, users need a way to poke into data withoutknowing SQL.andP;  Structure addresses the join paths and migration around thedatabase--the model the database uses.andP;  Even if you do know SQL, you have toknow the relational model.andP;  Semantics has to do with the focus andorganization of the database.andP;  Is it financially oriented?andP;  Inventoryoriented?andM;Natural-language vendors are always quick to point out the pitfalls of visualdata access (either menu- or forms-based): the frustration of accessing dataindirectly and wading through layers of menus.andP;  On the other hand, the folkswho sell visual programming products are quick to slam natural languageprogramming and data access methods.andP;  And they have a point; most naturallanguage products have their limitations and ambiguities.andM;Our main concern is that you are never quite sure whether your query resultis really the answer to your natural language query.andP;  The ways in which theproduct understands your query may not be the way you intend it.andP;  And thenyou get the wrong data.andP;  For example, you may ask &quot;Which salespeople earnedover $80,000?&quot;andP;  The answer you get back may be total salary when you onlywanted commissions.andP;  You may even get back a list that spans multiple yearswhen you really only wanted last year's results.andP;  And you wouldn'tnecessarily know you were looking at invalid data.andM;Handling the Ambiguities.andP;  Natural Language Incorporated (Berkeley,California) has found ways around some of the ambiguities, but some elementsstill need to be worked out.andP;  The flagship product of NLI--appropriatelycalled Natural Language--provides access to several major relational databasemanagement systems (RDBMSs), including Oracle, Sybase, Informix, Ingres, andRdb.andP;  Natural Language doesn't use Boolean statements or keyword mapping forquerying.andP;  It uses linguistic processing instead, with some underlying AI.andO;Natural Language develops an internal representation of your query, performssome deductive reasoning (i.e., thinks about the query in the context of yourtarget application), then generates SQL to query the database.andP;  Itunderstands your query as an English question first, then maps it to thedatabase.andM;Natural Language also has some helpful features for checking the accuracy ofyour query.andP;  To verify that Natural Language has interpreted your querycorrectly, the system includes its rendition of the query along with itsresults.andP;  For instance, if you ask, &quot;Which salespeople made more last yearthan this year?&quot; it might report that its findings were based on the moreaccurate question &quot;Which salespeople made more in fiscal 1987 than in fiscal1988?&quot;andP;  Furthermore, Natural Language takes a dialogue approach to querying.andO;You may start out asking, &quot;How many products were shipped to Des Moines in1988?&quot;andP;  When you follow that up with &quot;How many were returned?&quot; the systemknows that you're still talking about products shipped to Des Moines.andP;  Thesystem also prompts you when it needs further clarification on a query.andM;But these solutions are not complete.andP;  We still bumped into the ambiguityproblem.andP;  At one point, for instance, we were working with a database thatreached only to 1987.andP;  Just out of curiosity, we asked &quot;Which salespeoplemade more in 1987 than 1988?&quot;andP;  The response was &quot;none.&quot;andP;  Well, that's simplynot accurate.andP;  Instead, the system should have let us know that it had nodata on 1988.andM;At the Back End.andP;  Natural Language requires preconfiguration at the backend--setting up things like definitions for linguistic processing anddeductive reasoning.andP;  This is best handled by the database administrator.andO;NLI offers a knowledge-based, interactive tool called the NLI Connector,which guides you through the implementation of the relationships and conceptsbehind specific database applications.andP;  In addition, the company markets theNLI Gateway for querying data held in different databases and differentmachine architectures.andM;THE COMPETITION.andP;  NLI is certainly not the only vendor putting out naturallanguage front ends for databases.andP;  A similar product comes from Battelle(Columbus, Ohio), called Natural Language Query, or NLQ.andP;  (You'd think thesecompanies could be a little more resourceful in their product names, wouldn'tyou?)andP;  NLQ also lets you query the database in English, and then translatesyour request into SQL to search the database.andP;  And, also like NaturalLanguage, NLQ has a dialogue-driven set-up tool for establishingcommunications protocols, down-loading the database structure, and defininguser vocabulary.andP;  NLQ runs on DOS PCs and is available for Oracle, Ingres,Basis/DM, and DB2 databases.andP;  NLQ supports most server configurations,including IBM, Pyramid, Unix, and VAX machines.andP;  However, unlike NLI,Battelle has no tool for querying multiple databases, and you need a separateNLQ version for each database it supports.andM;Although other natural language products abound, such as Intellect from AICorporation, NLI sees most of its competition coming from other means of dataaccess--4GLs and forms- and menu-based systems.andP;  Some interesting graphicalfront ends are popping up.andP;  Ingres, for instance, recently released agraphical front end to its RDBMS.andP;  While there's no natural language involvedin it, the product gives you graphical views of data and a visual queryeditor.andP;  Instead of typing lines of SQL statements, you point and click onthe information you need.andP;  (The product, incidentally, was developed with Sunand is only available for Sun workstations.)andP;  Either way, the point is tosimplify database access.andP;  We hope to see more of the same--and perhaps moresophisticated tools as well.andO;</TEXT></DOC>
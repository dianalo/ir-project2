<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-755-222  </DOCNO><DOCID>07 755 222.andM;</DOCID><JOURNAL>PC User  Sept 13 1989 n115 p59(3)* Full Text COPYRIGHT EMAP Business and Computer Publications1989.andM;</JOURNAL><TITLE>The next generation. (the growing use of Structured QueryLanguage)</TITLE><AUTHOR>Jackson, Peter.andM;</AUTHOR><SUMMARY>Structured Query Language (SQL) is a simple, effective way ofcontrolling relational data bases and extracting informationefficiently.andP;  It is also seen as the answer to controllingdistributed data bases on networks with multi-vendor hardware, butno standards exist for transmitting SQL queries on a network.andO;Implementing a distributed SQL data base should be done with care.andO;Front-end clients must be compatible with back-end servers.andO;Standards for SQL transmission are being slowed by the physicalhardware problems in aging microcomputer architecture, widelydifferent server standards and the tendency for front-enddevelopers to form alliances with just one server vendor or toavoid SQL.andP;  Despite the problems, distributed SQL databases areexpected to forge their way into the micro market.andM;</SUMMARY><DESCRIPT>Topic:     Structured Query LanguageDistributed Data BasesClient/Server ArchitectureQuery ProcessingRelational DBMS.andM;</DESCRIPT><TEXT>The next generationandM;The PC industry is full of things which are used to do jobs for which theywere never designed.andP;  The use of the RS232 'standard' to drive printers andlink up computers, and the use of the CGA graphics standard for wordprocessing are just two examples.andP;  But the main application ofinappropriation technology over the next few years will be the use of alanguage designed to extract data efficiently from relational databases, as akind of lingua franca which lets different applications on different types ofhardware communicate freely.andP;  In other words, IBM's Structured QueryLanguage, sometimes called Sequel or SQL, is being press-ganged into doing ajob that didn't even exist when it was first developed.andM;SQL began at IBM's San Jose Research Laboratory with the proposal of therelational database model by Ted Codd.andP;  A fundamental part of the model wasthe use of a non-procedural language to perform all database operations andCodd defined a language called Alpha to do this.andP;  The first commercialrelational database packages to emerge from the research, such as RelationalTechnology's Ingres and Britton-Lee's IDM, invented their own language calledQuel and IDL respectively.andP;  IBM produced a language called Square and, in1974, a sucessor to Square called Squad.andM;Finally, via prototypes like System R, IBM launched its first relationaldatabase in 1982.andP;  The database, called SQP/DS, used a language developedfrom Sequel called SQL.andP;  The same language was then implemented in thecompany's second relational package, DB2, which was launched in 1985.andP;  SQLhas now become an industry standard in its IBM form and an official ANSIstandard.andM;Although SQL is a very simple language, with just 12 commands, it's veryflexible and can control every aspect of a relational database.andP;  Oracledescribes it as a &quot;structured query, update, data definition, control,consistency, concurrency and dictionary language&quot;.andP;  The simplicity of thelanguage cmes from the fact that in relational database the relationshipsbetween data items don't need to specified when the database is created andthe actual data stored is completely independent of how and where the data isstored.andP;  If an SQL program needs data from a number of related files in thedatabase, if doesn't have to worry about whether the query is legal in termsof links between files, since the relational model does a lot of the work onits behalf.andM;The basic commands in SQL are Select, Update, Delete and Inserts, whichretrieve and add data to relational data tables; Create, Alter, Drop andIndex create tables, indexes and views on the data; Grant, Revoke, Commit andRollback maintain integrity and security by giving and removing rights to adddata and alter definitions.andM;These simple commands, combined with a few other reserved words, are allthat's required.andP;  But writing SQL programs or using SQL interactively isn'tas easy as it might look.andP;  Long and complex SQL command lines can be producedfrom a few words just as sentences are created from an alphabet of 26letters.andP;  While experienced database programmers who've written customqueries and report generators in C, or worked extensively in dBASE will getalong with raw SQL, most users won't.andP;  They'll need assistance fromapplications developers to get the benefits from distributed SQL database.andM;Fortunately, SQL provides a perfect vechile for application developers,avoiding many of the problems involved in accessing remote databases fromPCs.andP;  Using PCs as dumb terminals into mainframes or minicomputer databaseapplications works -- but it requires users to learn how to operate thedatabase using native commands.andP;  Getting the data into a local PC applicationwould require careful analysis and format conversion.andM;SQL promises to end that by separating bacck-end database from front-endapplications which require access to stored data.andP;  Back-ends, or databaseservers, are available to all clients and concentrate on storing andretrieving data as fast as possible.andP;  Front-ends can be any type ofapplication, including familiar PC applications with user interfaces like1-23, dBASE III and IV, or HyperCard on the Apple Macintosh.andM;These applications request data from the server by sending it SQL commandswhich are executed on the server machine.andP;  The resulting data is sent back tothe client and presented inside the front-end application.andP;  For example,1-2-3 users can request data from a DB2 mainframe database and find therequired data in the right spreadsheet cells without worrying about theoriginal of the data.andM;The data integrity and security features of SQL are used by the server tomaintain the database without clients knowing about it.andP;  The server can applyerror-checking rules to accept or reject SQL messages and only allowstransactions to alter database data when they're completely finished.andP;  Thisremoves the danger of corruption.andM;The architecture eliminates some of the problems with traditional networkeddatabase, where dumb fileservers simply relay files of data to workstations.andO;In this setup there's no central control or no way to implement it, sincedata recovery, transaction management and file and record locking mechanismsare the responsibility of the individual database application running onindividual PCs.andM;Another advantage comes from the reduction in network traffic, as onlyrelevant data is sent by the database back-end in response to a short SQLquery from the workstation.andP;  There's also a reduction of data duplication onPCs on a network.andP;  The SQL queries must be generated by front-endapplications in response to user actions, so SQL functions must either bebuilt into the application or provided as optional commands in programmableproducts.andM;For example, a dBASE IV program or an Excel macro could include SQL commandswhich are broadcast over a network as well as to local database storage.andO;Alternatively, SQL command libraries can be added to existing standardprogramming languages like C and Pascal, so that custom programs can bewritten with SQL-based access to database servers.andM;In theory, it means that PCs hooked up to a network can use SQL to extractdata from any SQL-compatible database on the network, whether the server isIngres on a VAX, DB2 on an IBM mainframe or Informix on a Unix workstation.andO;The query goes out and the data comes back into the familiar PC application,without users having to do anything.andP;  Theory and practice, however, don'talways coincide, and even if everything is linked up and communicatessuccessfully, there are often data management problems.andM;Distributing data storage around a network of machines from various vendorsis fine as long as everything works correctly.andP;  If a system goes down,however, the distributed database manager must be able to restructure thedatabase so back-up files remain transparently available.andP;  There may beproblems in deciding where to perform SQL operations such as merging two datafiles.andP;  It's better to merge a small database file on a PC with a largemainframe file on the mainframe rather than the PC.andM;The SQL distributed database needs an efficient optimizer and an overallmanager to take responsibility for this type of configuration and maintenancework.andP;  It also needs efficient communications and networking engineers.andP;  Themain problem with implementing SQL servers in a multi-vendor, multi-servernetwork with different front-end applications as clients, is that there's nostandard for transmitting SQL queries around a network.andP;  The founder of GuptaTechnologies says this is like speaking English with different accents; thelanguage is the same, but the different dialects cause a certain amount ofconfusion.andM;One solution is to go for traditional database vendors across the board andto do PC applications development in-house.andP;  For example, Oracle can run onevery type of machine and SQL connectivity will work as long as the physicalconnections are correct and users do programming work at the front-end togenerate custom C programs.andP;  The same goes for Relational Technology's IngresStar, which also works across a range of machines from PCs upwards.andP;  However,users wanting to move up the database chain using existing work should runone or more PC-based SQL database servers on a LAN, using custommulti-tasking or OS/2 as a foundation and running their existing applicationson workstations.andM;Perhaps they'll accept front-end application upgrades to add SQLconnectivity, but they certainly shouldn't be expected to learn anything newlike SQL commands and shouldn't have to throw away existing databasedevelopment expertise.andP;  There are now a variety of solutions for this, noneof which are physically compatible with the others, even if their SQLimplementations are precisely the same -- which they're not.andM;The major server names in this market are Sybase, which has linked up withMicrosoft and Ashton-Tate to produce the SQL Server package; GuptaTechnologies, which has Lotus in its corner although 1-2-3 Release 3.0 usesDataLens (formerly Blueprint) technology rather than SQL; Oracle, withdifferent front-ends, in addition to Oracle on the PC; IBM, with OS/2Extended Edition's Database Manager and Novell with Netware SQL.andP;  Theconnections between the server makers and the front-end producers, as withthe Microsoft/Ashton-Tate/Sybase and Lotus/Gupta deals, show that buildingSQL command generators into front-ends isn't enough in itself.andP;  Lotus'DataLens will need separate drivers for every server it has to access, anddBASE IV users won't be able to automatically access both Gupta SQLBaseservers and Sybase SQL Server systems.andM;Some front-end products, however, will be able to access multiple servers.andO;Borland's Paradox for SQL, when it finally arrives to add SQL support toParadox 3.0, is scheduled to support SQL Server, Oracle, OS/2 ExtendedEdition and Netware SQL.andP;  Wordtech's dBXL and Quicksilver dBASE clones andcompilers have been extended to access Gupta and Oracle servers.andP;  Microsoft'sExcel, with the Q + E add-on, can access the SQL Server and OS/2 ExtendedEdition, possibly showing the graphics-based shape of things to come.andM;To complicate things further, Gupta is touring the US to demonstrate apackage combining SQLBase with Nantucket's Clipper compiler, SQL libraryroutines from Planet Software and programming templates from Wallsoft.andP;  Guptaalso has a Windows-based front-end, SQLWindows, which can be used as agraphics-based aid for SQL applications.andM;Meanwhile, MS-DOS database vendor DataEase is working on front-ends for SQLServer, Oracle and OS/2 Extended Edition.andP;  Borland's approach with Paradox isinteresting, as multi-server support is one of its main aims.andP;  Earlierversions of Paradox will be made to act as front-ends by converting theirQuery-By-Example (QBE) queries into SQL and using a new communicationspackage to send the queries over a network to a server running a Paradox'agent' alongside the server software itself under OS/2.andM;Using the agent approach means that the server interface looks the same toParadox applications and users - only the agent needs to know the details ofthe particular SQL 'accent' used by each server.andM;Despite all this activity by third parties, it's clear that customers willneed to take care in implementing distributed SQL databases to make sure thatback-ends and front-ends are compatible.andP;  Front-end producers will also haveto take care, since implementing server support on PCs which are alreadyloaded with networking software places stiff demands.andM;Ashton-Tate's decision to split the next dBASE IV upgrade, Version 1.1, intovanilla and Server Editions has largely been made because of these demands.andO;It turned out to be impossible to fit SQL Server support alongside otherfeatures of Version 1.1 in 640Kb RAM.andP;  As a result, the Server Editionrequires the use of Rational Systems DOS Extender software to let thesoftware access memory above the 1Mb line on 80286 and 80386 systems.andM;The need for extra memory is clear, since an MS-DOS-based front-end clientwill need more than 50Kb of RAM for MS-DOS, another 50 to 90Kb for networksoftware and another 50 to 120Kb for the SQL requester, depending on theimplementation.andP;  For example, the Gupta requester requires 110Kb in realmode, but can load 60Kb of itself into Extended memory if available, whilethe Novell Netware SQL requester needs 75Kb on top of the 54Kb taken by thelow-level network software.andP;  On a normal MS-DOS machine with 640Kb RAM, thisdoesn't leave much room to run the front-end application.andP;  For programs likedBASE IV, which even in Version 1.0 used every fraction of the MS-DOS 640Kbto run, this overhead is too much.andP;  For IBM it's not a problem, as theDB2-compatible OS/2 Extended Edition can act as a server, but doesn't allowmixed MS-DOS and OS/2 workstations on a network.andM;In networks using the OS/2 LAN Manager from Microsoft (the underlyingtechnology of SQL Server) mixed MS-DOS and OS/2 networks are supported andthis makes life difficult for front-end applications developers.andP;  There's nodoubt, however, that distributed SQL databases are on the way in the PCmarket; their advantages are too clear for that.andP;  They point towards newnetwork architectures where particular database processing tasks aredistributed to those machines best able to handle them and where individualusers sitting at PCs running MS-DOS, OS/2, or Unix, at Macintoshes, at Unixworkstations and at minicomputer terminals, all running differentapplications, are accessing and using the same data.andP;  This, with levels ofdata and transaction security is more commonly found in the mainframe worldthan in PC-based LANs.andP;  Getting between the two is more of a problem.andM;The divergence of server standards, the tendency of front-end applicationdevelopers to enter limiting alliances with server vendors or to take theirown non-SQL routes, and the sheer physical hardware problems caused by theageing PC architecture, will slow things down despite the simplicity of SQLand its being nailed down as a standard by IBM and ANSI.andM;When faced with the Gupta/Nantucket/Planet/Wallsoft combination on tour anddespite the package working as promised, the noted database guru and dBASEconsultant Adam Green is quoted as saying, &quot;it's a mess&quot;.andP;  It's a messbecause the simplicity of SQL is getting lost in a mass of conflictingcommunication and server standards and in the confusion that still surroundsmixed MS-DOS and OS/2 networking in general.andM;For the near future, development tools for use with SQL-supporting front-endapplications like dBASE IV, Paradox and Fox Software's Fox Server, mustadvance rapidly in the direction indicated by some of the Windows-basedsoftware from Gupta.andP;  Then users will get the type of transparent distributeddatabase access, using familiar applications as front-ends, that the SQLstandard has always promised.andP;  The distributed database ideal has beenstarted up, but it needs to be tuned to run more smoothly, before new andexciting markets open up in the next decade.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-514-521  </DOCNO><DOCID>09 514 521.andM;</DOCID><JOURNAL>IBM Systems Journal  Sept 1990 v29 n3 p384(14)* Full Text COPYRIGHT International Business Machines Corp. 1990.andM;</JOURNAL><TITLE>Object storage hierarchy management. (direct-access storagedevice, optical disk storage) (technical)</TITLE><AUTHOR>Harding, W.B.; Clark, C.M.; Gallo, C.L.; Tang, H.andM;</AUTHOR><SUMMARY>The Object Access Method (OAM) component of MVS/Data FacilityProduct is responsible for the storage, retrieval, and managementof objects in IBM MVS/ESA ImagePlus systems and in otherapplications.andP;  The OAM Storage Management Component is thesubcomponent of OAM that provides storage management for objectsstored within an object storage hierarchy.andP;  Storage management isa cyclic procedure which assures that data are stored inconformity to a policy defined by the data processing storageadministrator.andP;  During a storage management cycle, the OAM StorageManagement Component (OSMC) selects objects for processing basedon requirements for backup, expiration, or service level changes.andO;This paper describes the concepts of object storage managementusing a storage hierarchy that contains DASD and optical diskstorage.andP;  (Reprinted by permission of the publisher.)andM;</SUMMARY><DESCRIPT>Company:   International Business Machines Corp. (products).andO;Ticker:    IBM.andO;Product:   MVS/Data Facility Product 3.2 (Search software) (usage)MVS/ESA (Operating system) (usage)IBM ImagePlus High-Performance Transaction System (Imageprocessing equipment) (usage).andO;Topic:     Storage HierarchiesDirect Access Storage DevicesOptical DisksImaging Technology.andO;Feature:   illustrationtablechartgraph.andO;Caption:   Relationship of OSMC to SMS. (table)Synchronous. (chart)Overview of access to object storage. (chart)Object storage hierarchy characteristics. (chart)Processing flow for object services. (chart)Asynchronous. (chart)Relative cost of storage media. (graph)Volume of data. (graph)Data access frequency as objects age. (graph)andM;</DESCRIPT><TEXT>Object storage hierarchy managementandM;The introduction of images as a data type for computer storage and processinggenerated a requirement for convenient services to enable the development ofapplications that use images.andP;  It was soon recognized that images were onlyone of many kinds of data that are currently not subject to computerprocessing simply because of the volume and cost of storage.andP;  Individualitems of these data, such as images or voice recordings, began to bediscussed as &quot;objects&quot; to identify them as data elements that do not haveconventional record structure.andP;  An object can be treated as a named bitstream of known length, whose size can vary from a few bytes to megabytes.andO;This application development requirement led to the design of the ObjectAccess Method to provide for storing, retrieving, and managing objects.andM;The Object Access Method (OAM) consists of three parts.andP;  The first of these,the Object Storage and Retrieval subcomponent, provides an applicationprogramming interface for storing, retrieving, and deleting individualobjects and changing the management policy for those objects.andP;  It providesthese functions for applications developed to operate in a number ofenvironments on MVS/ESA[TM] systems.andM;The second part of OAM, the Library Control System subcomponent, writes andreads objects on optical disk storage, manages the optical disk volumes onwhich the objects reside, and controls the associated hardware resources.andM;The OAM Storage Management Component (OSMC), the third part of OAM,determines where objects should be stored, manages object movement within anobject storage hierarchy, and manages object expiration and backup based onthe storage management policy of the installation.andP;  The need for storagemanagement is defined by the large volume of data anticipated, and the rangeof performance requirements in accessing the data, along with the expectationthat the access requirements of the data will change as the data age.andP;  Theemerging concepts of systems-managed storage were applied and extended toprovide the basis for OSMC.andM;OSMC provides two critical functions in the Object Access Method.andP;  Itinterprests the storage management policy, and it provides an automaticmanagement capability for the stored objects.andP;  Figure 1 illustrates therelationship between OAM, an application program, and an object storagehierarchy.andP;  The figure shows that an application program requests servicesfrom OAM to access the object storage hierarchy through an applicationprogramming interface.andP;  OAM uses database services and a storage managementpolicy as needed to process the request.andM;The definition of the object storage heirarchy considered the diversecapacity, performance, and cost characteristics of DASD, magnetic tape, andoptical disk.andP;  Figure 2 relates the cost and access time of DASD, opticaldisk, and magnetic tape storage, and shows that DASD has very low access timeat a cost that is higher than optical disk or magnetic tape, whereas opticaldisk storage provides faster access than is available with magnetic tape, ata slightly higher cost.andM;Many applications require the subsecond access time of DASD for short-termstorage so that DASD must be included as the highest level of the hierarchy.andO;However, the volume of object data and the expected cost objective forobject-processing applications effectively preclude retaining objects on DASDstorage permanently.andP;  Recent development of optical storage has provided anew large-capacity storage medium with cost and performance characteristicsthat are intermediate to magnetic tape and magnetic disk.andP;  Optical storagemay actually cost and more than magnetic tape storage, but its direct accesscapability makes it preferable for a wide variety of applications.andP;  The medialife of optical storage is suitable for long-term storage, and the cost makesit possible to store a very large quantity of data at a fraction of the costof magnetic DASD.andP;  For this reason, an optical disk library was selected asthe next level in the hierarchy.andP;  The third level of the hierarchy is theshelf storage that is used to store the optical disks that have been removedfrom a library to make space available for storage of additional objects.andO;Although the media cost of magnetic tape storage is less than that of opticalstorage, when the cost of moving vast amounts of data is considered, it ispreferable to retain the data on the optical disks.andM;To provide the flexibility required for a large variety of applicationsinvolving objects, and to provide access times necessary to meet theperformance requirements of those applications, OAM was designed to allowpartial hierarchy configurations.andP;  A configuration may have only one level ofstorage, or may have two levels, as long as it supports the applicationrequirement and is consistent with the storage management policy.andM;A system-managed storage hierarchy thus provides both near-term and long-termstorage for large amounts of data at a reasonable cost and performance.andO;Optical disk cartridges stored on external shelves and mounted on astand-alone optical disk drive by an operator can provide essentiallyunlimited long-term storage with a response time that is manageable.andP;  Acombination of DASD, library-resident optical disks, and shelf-residentoptical disks as an object storage hierarchy can provide a cost-effectivemeans for storing large volumes of object data, while providing reasonableresponse times for many applications.andP;  This is shown in Figure 3.andP;  The arrowsshow that performance and storage cost increase at the higher levels of thehierarchy, whereas object age and storage capacity increase at the lowerlevel of the hierarchy.andM;Objects in an object storage hierarchy are managed by placing them at thehierarchy level appropriate to their current usage.andP;  They reside on DASD whenthey require short response time, on a library-resident optical disk formoderate time, or on a shelf-resident optical disk for the longer responsetime acceptable for long-term storage.andP;  Many object processing applicationsare expected to deal with very large numbers of objects--from hundreds ofthousands to millions per day.andP;  The daily volume along with the dataretention requirement can easily result in an inventory of hundreds ofmillions of objects.andP;  Figure 4 illustrates the cumulative distribution ofobject data by age.andP;  The figure shows that the number of objects in theobject storage hierarchy grows until the maximum object retention time isexceeded and then remains constant since the deletion of older objectsoffsets the storing of new ones.andP;  An automated storage management facility isa necessity for dealing with an inventory of this size in a timely andefficient manner.andM;The next section on storage management concepts describes the use of astorage management policy to manage objects using logical and physicaldefinitions.andP;  Other sections of the paper discuss the performance and designconsiderations for implementation of both the OAM Storage ManagementComponent and the optical library interface.andM;Storage management conceptsandM;MVS/Data Facility Product (MVS/DFP[TM]) Version 3 Release 1 introduced theStorage Management Subsystem (SMS) and the concept of managing the data setstorage for an installation according to a policy defined by anadministrator.andP;  The storage management policy identified the systems beingmanaged, provided lists of characteristics for data sets and grouped DASDvolumes, and allowed the storage administrator to define selection routinesthat associated management criteria with data sets.andM;For OAM, the storage management policy is a description of the volume andlife cycle of object data used for a business application.andP;  For example, abusiness may wish to capture its incoming mail as image data and replacecurrent paper handling procedures with automated processes using images.andO;After initial processing, the data may never be referenced again but must bekept a specified length of time for legal purposes.andP;  The responserequirements for the current mail may be very high, but those for olderdocuments much less stringent.andP;  Another business, or segment of the samebusiness, may wish to capture and archive paper documents that may never bereferenced.andP;  In each case, there is a need to describe how documents aregrouped and to manage how those groups of documents are stored throughouttheir expected lifetime.andP;  These examples are illustrated in Figure 5.andP;  Thecurve represents an application where objects are frequently referenced whenthey are new, but the reference frequency declines as the object ages.andP;  Thedashed line represents an archive application where objects are rarelyreferenced, regardless of age.andM;The implementation of system management for object storage required additionsto the system catalog and to the definition of a storage management policy.andO;The system catalog was extended to provide for cataloging of collections ofobjects.andP;  The storage management policy was enhanced to include the means todefine an object storage hierarchy with a relational object directorystructure, [1] and to extend the range of performance and managementparameters to provide for object placement and movement within that storagehierarchy.andM;The Storage Management Subsystem (SMS) provides several key functions forOSMC.andP;  It provides services to define, store, control, and access storagemanagement policies for objects managed by OSMC.andP;  SMS also invokes theautomatic class selection routines as requested by OSMC to define or changethe class or storage group.andM;A storage management policy is stored in an SMS source control data set.andP;  Acomplete storage management policy for OSMC has definitions for the storageclass, management class, and storage group constructs, and a set of automaticclass selection routines.andP;  The storage class construct is used primarily todetermine whether the performance objective of an object will toleratestorage on an optical volume, and has been extended to include a parameterthat defines the maximum allowable access delay.andP;  The management classconstruct is used to determine backup and expiration requirements and controlthe timing of storage and management class changes.andP;  It has been extended toprovide for the definition of transition criteria.andP;  The storage groupconstruct provides the definition of physical storage, including thedesignation of the databases and optical libraries that can be used forselected objects.andP;  This construct has been extended to include new types ofstorage groups, definition of optical libraries eligible for object storage,and definition of storage management cycle start times.andP;  The automatic classselection (ACS) routines are used to assign storage class, management class,and storage group for a collection, and to validate or override storage classand management class assignments requested by an application.andP;  The ACSservices have been extended to provided the environments needed for objectstorage management, and to provide for the collection name, object nameconvention used for identifying objects.andM;OSMC usage of SMS constructs is summarized in Table 1.andP;  OSMC uses parametervalues from the named SMS construct or service to determine the action to betaken for the object being processed.andM;Storage classes for objects.andP;  Storage class allows the storage administratorto define a level of service for data sets and objects.andP;  Levels of serviceare based on the performance objectives for an application.andP;  This allows thestorage administrator to define device-independent performance levels thatOAM can use to determine the best fit to the available hardware.andM;While SMS manages only permanently mounted media for data set storage, OAMmanages an object storage hierarchy which can contain permanently mountedDASD volumes and mountable optical volumes.andP;  The mountable optical volumescan reside either inside an optical library where mechanical location andmounting is available or outside an optical library where an operator mustlocate and mount the volume.andM;The storage class construct was extended for OAM to differentiate betweenpermanently resident DASD and mountable optical volumes within a library oron a shelf.andP;  This allows the storage administrator to expand the performancerange for object read or write operations to include a new factor in thatperformance--the delay the application can tolerate before the initialavailability of the data.andM;For example, an application may require a short response time for new objectsbut can accept a longer response time for objects as they age and are lesslikely to be referenced.andP;  The storage class is used by OSMC to determine theperformance objective for an object and to influence where the object isplaced within an object storage hierarchy.andP;  Assigning different storageclasses to an object over time can be a means to define a series of steps formoving the object to slower, less expensive devices in the object storagehierarchy.andM;Management classes for objects.andP;  Management class parameters are provided toallow a storage administrator to define retention, backup, and classtransition criteria for object management.andM;The retention characteristic of an object is used to determine when an objectreaches its expiration date.andP;  When an object expires, all reference to thatobject is deleted.andM;The backup parameter of the management class assigned to an object determineswhether a backup copy of the object is required.andP;  Creation of a backup copyof an object may be completed during the first storage management cycle afterthe object is entered into the system, or it may be deferred until themanagement class assignment is changed.andP;  Because objects do not change, onlyone backup copy of an object is ever written.andM;The changing logical characteristics of objects are recorded within OAM bychanging the storage class and management class assignments.andP;  The process ofchanging the class assignments is called class transition.andP;  Storage classtransition can imply movement of objects between different levels of anobject storage hierarchy since the different levels of the hierarchy havedifferent performance characteristics.andP;  Management class transition impliesthe immediate application of new management criteria.andP;  Both transitions canoccur at the same time.andP;  The results of a class transition are determined byrunning the storage class and management class automatic class selectionroutines at the time the transition occurs.andP;  That time is determined by usingthe object class transition criteria specified in the management classcurrently assigned to the object.andP;  The automatic class selection routines arediscussed in a later section of the paper.andM;OAM recognizes three mutually exclusive class transition criteria: 1) thetime since the object as created, 2) the time since the object was last used,and 3) a periodic calendar function.andM;Time since creation and time since last use are both specifiable in years,months, and/or days.andP;  For example, a class transition could be scheduled for30 days after the object was last referenced or 2 years, 3 months, and 15days after the object was created.andM;A periodic class transition cass be requested either on the first, last, ornth day of the month, the quarter, or the year; or on the first, last, or nthday of the mth month of the quarter or the year.andP;  For example, if today isOctober 12th, an object whose management class had scheduled a classtransition on the last day of the first month of the quarter would undergo aclass transition on October 31st.andM;When the class transition criteria for an object are met, the automatic classselection routines are called to determine the new storage class and/ormanagement class for the object.andP;  After the class transition, the object ismanaged according to its new storage class and/or management class.andP;  Thisincludes the possible movement of the object to a new level in the storagehierarchy.andM;Storage groups for objects.andP;  For data sets, a storage group is one or morevolumes that are treated as if they were a single volume, OAM defines two newtypes of storage groups for objects--the OBJECT storage group and the OBJECTBACKUP storage group.andP;  An OBJECT storage group defines an object storagehierarchy.andP;  An OBJECT BACKUP storage group defines where an optical backupcopy can be written.andM;Each OBJECT storage group has one or more types of data storage device.andP;  TheDASD level of an OBJECT storage group and the object directory are defined byselecting one of the 100 possible OBJECT storage group qualifiers.andP;  Thequalifier identifies a database containing an object directory, objectstorage, and their associated indexes.andM;The object directory is included as an indexed database within the storagegroup because it provides the performance, recoverability, and relationalcapability required for handling the very large number of objects expected byOAM.andM;The OBJECT storage group can optionally contain optical storage.andP;  Itsdefinition can include either one to eight optical libraries or all of thestand-alone optical drives (pseudolibrary) associated with the system.andP;  Thestorage group definition only include those optical devices to which objectscan be written.andP;  Once written, an object can be read using any optical drivecapable of reading the media.andM;Differences in the physical geometry of the devices within an object storagehierarchy are handled by OAM by segmenting objects, as needed, for writing toDASD or to optical disk.andP;  The only device characteristics of concern to theapplication developer and storage administrator are the quantity andperformance of available storage.andM;Automatic class selection routines for objects.andP;  Automatic class selection(ACS) routines determine SMS classes and storage groups for objects andcollections of objects.andP;  ACS routines are run for objects in four casas asfollows:andM;1.andP;  When the first object is stored in a new collectionandM;2.andP;  When a storage class and/or management class is specified on a request tostore a new objectandM;3.andP;  When an explicit request is made to change the storage class and/ormanagement class for an objectandM;4.andP;  When a class transition event occurs for an objectandM;When the first object is stored in a collection, the ACS routines are invokedto assign the collection to a storage group and to assign a default storageclass and management class for all objects in the collection.andP;  Once assignedto a storage group, a collection and all objects in that collection remain inthat storage group.andM;When an object is stored, its initial storage class and management class canbe determined by using the default storage class and management classassigned to the collection, or by specifying either or both of themexplicitly and running the storage class and management class ACS routines toapprove or alter the request(s).andP;  If there are no explicit classes specifiedon a request to store an object, the ACS routines are not invoked for theobject.andM;There are two ways to alter the storage class or management class assignmentof an object after the object has been stored.andP;  The user can request a changefor that object or a class transition can occur.andP;  When a user requests achange for an object through the OAM application programming interface, theACS routines invoked depend on the type of change requested.andM;When a class transition even occurs, as defined in the current managementclass of the object, OSMC invokes the ACS routines to determine if the objectshould be assigned to a new storage class and management class.andP;  Theperformance level requested under the new storage class definition mayrequire that the object be moved to a different level in the object storagehierarchy defined for its storage group.andP;  The management criteria associatedwith a new management class establish the criteria for the next classtransition.andP;  They may also cause a backup copy to be made or cause the objectto be deleted.andM;OAM storage managementandM;The implementation of automatic storage management and application processingfor objects required the creation of additional linkages and structuresincluding:andM;* A means for locating very large numbers of objects without overwhelming theexisting catalog structureandM;* A secondary catalog structure for data about individual objectsandM;* An OAM interpreter for SMS storage management constructsandM;* A way to track and select objects for automatic storage managementandM;The techniques used to address these object storage management requirementsare described in the following sections.andM;Collections.andP;  The ability to locate existing objects in storage isfundamental to any data processing system.andP;  The facility that carries out thelocate function for data sets in an MVS system is the catalog.andP;  [2]  TypicalMVS systems may have tens or even hundreds of thousands of data set entriesrecorded in an hierarchy of catalogs.andM;In contrast, OAM must be able to manage hundreds of millions of objects,which if individually cataloged would require an excessively large catalog.andO;Because an inventory of objects already exists for each storage group in itsobject directory, and because the object directory contains locationinformation for each object, an object can be located simply by looking inthe correct storage group directory.andM;The storage group, however, is an internal storage management concept used bythe storage administrator to designate distinct physical devices or datavolumes, and is used by OAM to determine which databases and optical volumesare to be used for which objects.andP;  It is undesirable to require anapplication to have knowledge of the storage group assignment of an object.andO;It is even more undesirable to require the end user to specify the storagegroup assignment of an object, since the end user should only need to beconcerned with the logical characteristics of the data.andP;  This results in arequirement for an application-related, logical classification of objectsthat is easily mapped to a storage group.andP;  The classification is theassignment of objects to collections.andP;  A collection is a set of objects thatreside in a single storage group and that have the same default storage classand management class assignments.andM;The system catalog was extended through the concept of collections to handlethe large numbers of objects expected for image applications.andP;  A catalogentry is defined for each collection, and provides the default storage classand management class assignments for objects stored in the collection, andthe identifier of the storage group where the collection is physicallystored.andP;  A storage group may have any number of collections.andP;  A collectioncannot span multiple storage groups.andM;Every object must belong to a collection because this provides the entry tothe procedure to locate the object.andP;  Object names must be unique within acollection, but different collections may have objects with the same name.andO;The objects themselves must be unique, not simply alternate pointers to thesame object.andM;A typical application would require one or more collections, depending on thevariety of objects used by the application and the management requirements ofthe objects.andP;  If objects used in different applications are assigned to thesame collection, a change in performance or management requirements forobjects used by one application would also affect objects used by the other.andM;The object directory.andP;  As noted in the discussion of collections, OAMintroduces a supplementary catalog structure, the object directory, to locateand tract the hundreds of millions of objects expected for OAM applications.andO;Each OBJECT storage group includes a separate object directory to reduce thesize of the individual directories.andP;  This also allows physical separation ofthe databases where required for improved performance and to provide betterrecovery characteristics.andP;  An object directory in a storage group also allowsautomatic storage management to be readily handled at the storage grouplevel.andM;Each object directory is an indexed table in the database that is part ofeach OBJECT storage group.andP;  The relational characteristics and multiple indexcapability of the database allow objects to be selected and updated indifferent ways for different types of storage management with the expectationof reasonable performance.andP;  Efficient selection of objects that requireprocessing is the key to automatic object storage management.andP;  In addition,using a database provides serialization, backup, recovery, and othernecessary facilities that would otherwise have to be provided by OAM.andM;OAM storage management construct interpretation.andP;  Each SMS Source ControlData Set contains the description of one storage management policy for agroup of MVS systems.andP;  Activating a specific Source Control Data Set providesthe Active Control Data Set to be used at a particular time.andP;  The OAM StorageManagement Component uses SMS facilities to access the SMS constructdefinitions it needs for object storage management.andP;  It also interprets theconstructs and runs the appropriate ACS routines, as needed, for specific OAMobject management functions.andM;Storing objects.andP;  The OAM Storage Management Component locates the catalogentry for the collection specified in the request and extracts the defaultstorage class and management class assignments from the entry.andP;  For a newcollection, when storing the first object in the collection OSMC creates acatalog entry.andP;  If the request includes storage class and/or management classassignments to override the defaults, OSMC will invoke the automatic classselection routines to confirm, change, or reject the request.andP;  After thestorage class and management class constructs have been assigned, OSMCdecides where the object should be stored based on its construct definitionsand the storage group identified by its catalog entry.andM;Retrieving and deleting objects.andP;  For object retrieval and object deletionrequests, the OAM Storage Management Component simply locates the catalogentry, and through it the storage group, for the collection specified in therequest.andM;Changing information about objects.andP;  For a request to change the storageclass, management class, or expiration for an object, the OAM StorageManagement Component locates the catalog entry for the collection specifiedin the request.andP;  If the request includes new storage class and/or managementclass assignments, the automatic class selection routines are run to confirm,change, or reject the request.andM;Selecting objects for automatic processing.andP;  The major function of OSMC isautomatic storage management.andP;  To accomplish this, it must identify allobjects requiring storage management processing for a particular storagegroup at the time processing occurs.andP;  A specific object may need to be movedwithin the object storage hierarchy (a storage class transition).andP;  Amanagement strategy for an object could change because the object has notbeen referenced for a long time (a management class transition), or theobject could have expired and may need to be deleted.andP;  In all cases, anindividual object meets a requirement for automatic storage managementdefined in the storage management policy of the installation.andM;OSMC uses the definition of the management class assigned to an object todecide when the object needs to be managed.andP;  The expected date for the nextautomatic management for each object is set each time the object isprocessed.andP;  During automatic storage management this date, the pending actiondate, is set based on either the expiration or class transition criteriaspecified in the current management class--whichever occurs first.andP;  Thesecriteria, in turn, may be based on when the object was stored (its creationdate), the last time the object was referenced, a specific calendar date, orsome periodic calendar function.andM;Objects are always scheduled for automatic storage management on the day theyare stored, changed, or retrieved by changing their pending action date tothe current date.andP;  When storing an object, object backup is deferred unti thenext storage management cycle, rather than being performed while the storerequest is being processed.andP;  This allows lengthy storage managementactivities, such as backup, to occur at a time when response time is lesscritical.andP;  At the same time, a new pending action date can be set using thecurrent characteristics of the object.andP;  For example, a class transition maybe postpned because the object was referenced if the transition is based onthe number of days since the last reference to the object.andM;OAM Storage Management Component structureandM;Automatic storage management can be considered as two basic functions:selecting objects that need processing and deciding what processing isrequired, and performing the services required to process each object.andO;Objects are selected when their pending action date indicates they needprocessing.andP;  The type of processing required may be deleting the object,creating a backup copy of the object, changing its location in the objectstorage hierachy, or setting a new pending action date.andP;  For example, anobject that resides on DASD may be moved to the optical library, be backedup, and have its pending action date reset during a single storage managementcycle.andM;Basic processing flow.andP;  The processing flow for the most common objectservice requirements (shown in Figure 6) has the following steps:andM;1.andP;  Select an object to be processed.andM;2.andP;  Read the object from DASD (if write required).andM;3.andP;  Write the backup copy of the object (if required).andM;4.andP;  Write the optical library copy of the object (if required).andM;5.andP;  Verify that the volume expiration date is later than the objectexpiration date.andM;6.andP;  Delete the DASD copy of the object (if required).andM;7.andP;  Update the object directory table.andM;8.andP;  Repeat steps 1 to 8 until all objects have been processed.andM;Initial performance concerns.andP;  Several performance concerns became apparentearly in the design of the OAM Storage Management Component.andM;* Each of the steps in the process described above was suspect as a possiblebottleneck in the process.andM;* Performance of object selection at step 1 and of object directory updatesat step 7 was essentially unknown, and there would be contention between thetwo steps since they would operate on the same data in a close time sequence.andM;* Reading of objects from DASD at step 2 and deletion of DASD-residentobjects at step 6 were both estimated to process between 5 to 10 objects persecond, and there would be contention between the two steps.andM;* Writing data to the optical devices was estimated to have a maximumeffective data rate of about 160 KBS per active path, pointing to the needfor parallel operation of optical devices.andM;Early performance estimates concluded that if a serial process wasimplemented, the elapsed time for processing an object would be too slow, somultitasking alternatives were investigated.andP;  The alternative of attaching atask for processing of each object was soon rejected because of the perceivedoverhead of task creation, and the design effort was directed towardparallel, or pipeline, designs.andM;Pipeline designs.andP;  The use of pipeline designs is well known, and pipelinesare frequently used in the design of high-speed processors.andP;  Severalvariations exist in the control of pipeline operations.andM;Synchronous.andP;  Figure 7 illustrates the basic concept of a synchronouspipeline.andP;  Initially, the pipeline is empty and no processing occurs.andP;  Ateach successive interval, a work element is introduced into the first processstep (e.g., reading an object), and each work element in the pipeline isadvanced to the next step.andP;  The advantage of this design is that aconsiderable amount of overlap is allowed between the process steps.andP;  Theprimary disadvantage is that the interval must be fixed at a value that issufficiently large to allow completion of worst case processing for allsteps.andP;  If the worst-case step completion time is much larger than theaverage step completion time, there is an unnecessary processing delay.andP;  Thisdisadvantage resulted in the rejection of a synchronous pipeline design forOSMC.andM;Variable interval synchronous.andP;  This variation of pipeline design is the sameas the previously described synchronous design except that the interval isvariable.andP;  An interval is complete when all of the steps in the pipeline havecompleted processing.andP;  A simple counting of completion of processing by allthe subtasks is sufficient to determine the completion of the interval.andP;  Theadvantage of thid design is that any unnecessary delays in the interval toprovide for worst case completion have been eliminated.andP;  Each interval may beof a different length, depending only on the processing time required by eachsubtask.andP;  The primary disadvantage of this design is that each work elementmust move through each process step, even if the step is not required forthat work element.andM;Queued asynchronous.andP;  For an alternative pipeline design, the synchronizationbetween subtasks is eliminated.andP;  In this design, each subtask has its ownqueue of work elements for objects to be processed.andP;  Each task executes at arate determined entirely by the processing performed, and the availability ofsystem resources to the task.andP;  Further, the sequence of steps can be variedso that an object work element is only routed through the specific stepsrequired.andP;  This has the advantage of allowing each of the tasks to processonly the objects that require its specific service, and to processasynchronously relative to the other tasks.andP;  The disadvantage is that therouting of work elements is no longer a simple stepping down the pipeline.andO;An intelligent router is needed to determine the next processing step for awork element, and to place the work element on the correct work queue.andM;The OAM Storage Management Component is designed as a queued asynchronouspipeline, like the one shown in Figure 8, which provides the followingcharacteristics:andM;* Processing steps or services operate asynchronously with respect to eachother.andM;* Each step or service task operates from its own work queue.andM;* An intelligent router passes completed work from one service task to theappropriate work queue for the next service task required.andM;* The router may be called from each service task, effectively providingdistributed intelligence.andM;Optical library interfacesandM;The Object Access Method can include an optical library unit andfree-standing optical disk drives as parts of its object storage hierarchiesand as object backup devices.andP;  [3]andM;Capacity and performance concerns.andP;  The device characteristics of the opticaldisk drives allow large variations in capacity and performance depending onthe method chosen for writing the data.andP;  The data rate is relatively slow andthe device uses a fixed block recording method in which data are alwayswritten in 1K sectors.andP;  Multiple optical volume table of contents (OVTOC)entries can be included in a sector.andP;  To make efficient use of opticalstorage for small objects of 4K in length, each OVTOC sector must contain themaximum number of object entries, otherwise the OVTOC wil be filled beforethe data recording area, and the maximum recording capacity of the opticaldisk will not be used.andM;With one OVTOC entry recorded in a sector, each object actually requires 5Kof optical space, 4K for the object and 1K for its OVTOC Entry.andP;  Thus, 20percent of the space is used for OVTOC entries.andP;  Because the OVTOC sectorsare separated from the data sectors on the disk, the effects on performanceare more dramatic.andP;  The recording of an OVTOC sector requires a seek,rotational delay, write, seek, and rotational delay sequence.andP;  The timerequired to write a OVTOC entry is roughly one-half second.andP;  If the OVTOCprocessing was not optimized, the time to write a 4K object and its OVTOCentry would be 16 ms for the data and 500 ms for the OVTOC, a total of about516 ms.andP;  About 97 percent of the time would be consumed writing the OVTOC,.andO;and the resultant data rate would be about 7.7 KBS.andM;Chaining write requests.andP;  Because of the above concerns, the OAM StorageManagement Component uses chained write requests to improve the data rate andspace utilization for objects written during the storage management cycle.andO;Multiple objects are chained in a write request, to provide a total length ofdata that can be written in about ten seconds, so that the time to write theOVTOC sectors amouns to less than 10 percent of the total write time.andP;  Thenumber of objects in a chain is usually a multiple of the number of OVTOCentries in an OVTOC sector, so that no OVTOC space is wasted.andP;  This providesfor complete utilization of the data-recording area of the optical disk.andM;Considering the 4K objects from the previous example, grouping the maximumnumber of OVTOC entries in a single sector reduces the space used for OVTOCentries from 20 percent to approximately 2 percent.andP;  Writing a chain of 360objects would require about 9010 ms for data and 500 ms for the OVTOC.andP;  Thisproduces a total of 9.51 seconds, of which only about 5.2 percent is for theOVTOC, and a data rate of about 151 KBS.andM;Volume expiration.andP;  When an object is entered into the system, it has anexpected lifetime that is used to determine an expiration date for the data.andO;As objects are written for storage to an optical disk volume, the expirationdate of the volume is determined form the expiration date of the objects toassure that the volume does not expire until all the objects have expired.andO;If there is a requirement to retain an object for a longer period, anexplicit request is made to assign the new expiration date.andP;  The expirationdate of th object is compared to the expiration date of the optical volume.andO;If the expiration date of the object is later, the volume expiration date ischanged to the expiration date of the object.andM;As time passes, objects and volumes eventually reach their expiration dates.andO;When an object reaches its expiration date, it is deleted, and furtherreference to the object is no longer possible.andP;  When a volume reaches itsexpiration date, all objects must have expired or there has been an error inprevious processing.andP;  A check is made to determine whether objects stillreside on the volume.andP;  Normally, the result will be that no objects are foundand the volume expires.andP;  However, when an object is found, the expirationdate for the volume is adjusted to the latest object expiration date of allof the objects still residing on the volume.andM;SummaryandM;The Object Access Method was developed to provide convenient services for thedevelopment of application programs that process and store objects in astorage hierarchy.andP;  An object storage hierarchy utilizing DASD and an opticallibrary provides a cost-effective way to provide a large-capacity storagesystem that can satisfy a wide range of performance requirements.andP;  The verylarge storage requirement and the need to satisfy performance requirementsthat change as objects age within the system led to the development of theOAM Storage Management Component.andM;OSMC was designed to provide system managmeent for objects.andP;  It uses existingsystem-manged storage concepts and extends those concepts to include objects.andO;The storage group definition expands to include object hierarchies, thestorage class to include mountable optical disk cartridges, and themanagement class to allow planned performance and management transitions.andO;The large number of objects to be managed by OAM led to the design of atwo-level catalog structure that uses the MVS catalog to map objectcollections to a storage group, and a relational object directory to locateobjects within a storage group.andM;OSMC provides automatic storage management for objects.andP;  Objects are selectedon the date they require processing by means of a pending-action date setduring previous processing.andP;  When an object is selected, object services areperformed according to the storage management policy of the installation.andM;In anticipation of the large volume of data to be processed during a storagemanagement cycle, OSMC was designed as a queued asynchronous pipeline toreduce bottlenecks in the process, to adapt automatically to a variedworkload, and to maximize the performance of the storage management process.andM;Cited reference and notesandM;[1] The object directory and other database structures discussed in thispaper were implemented using IBM DATABSE 2[TM] (DB2[TM]).andM;[2] MVS/DFP Version 3 Release 2: Managing Catalogs, SC26-4555, IBMCorporation; available through IBM branch offices.andM;[3] The optical library system and the stand-alone optical disk drivediscussed in this paper are the IBM 9246 Optical Library Unit and the IBM9247 Optical Disk Drive, respectively.andM;General referencesandM;J.andP;  P. Gelb, &quot;System-Managed Storage,&quot; IBM Systems Journal 28, No.andP;  1, 77-103(1989).andM;MVS/DFP Version 3 Release 2: Object Access Method Application Programmer'sReference, SC35-0119, IBM Corporation; available through IBM branch offices.andM;MVS/DFP Version 3 Release 2: Object Access Method Planning, Installation, andStorage Administration Guide, SC35-0120, IBM Corporation; available throughIBM branch offices.andM;MVS/ESA Version 3 Release 2: Storage Administration Reference, SC26-4566, IBMCorporation; available through IBM branch offices.andM;MVS/ESA ImagePlus: General Information Manual, GC38-2024, IBM Corporation;available through IBM branch offices.andM;MVS/ESA Storage Management Library: Managing Data Sets and Objects,SC26-4657, IBM Corporation; available through IBM branch offices.andM;MVS/esa Storage Management Library: Storage Management Subsystem MigrationPlanning Guide, SC26-4659, IBM Corporation; available through IBM branchoffices.andM;Warren B. Harding IBM General Products Division, 9000 South Rita Road,Tucson, Arizona 85744.andP;  Mr. Harding joined IBM as a programmer in Endicott in1956 and has been working in the Tucson Programming Center since 1982.andP;  Hehas been assigned to the development of the OAM Storage Management Componentsince 1987 and has received an IBM First Level Invention Achievement Awardand an IBM Outstanding Technical Achievement Award in recognition of hiscontributions to the design and development of AOM.andM;Connie M. clark IBM General Products Division, 9000 South Rita Road, Tucson,Arizona 85744.andP;  Ms.andP;  Clark joined IBM as a microprogrammer in Endicott in1974 and has been working in the Tucson Programming Center since 1979.andP;  Shewas assigned to the development of the OAM Storage Management Component in1987 and  received an IBM First Level Invention Achievement Award inrecognition of her contributions to the design and development of OAM.andM;Cindy L. Gallo IBM General Products Division, 9000 South Rita Road, Tucson,Arizona 85744.andP;  Mrs. Gallo joined IBM in Poughkeepsie, New York, in 1981 witha B.S.andP;  in computer science from California State College.andP;  She was aprogrammer in MVS Development and for the 3090 Processor Controller beforetransferring to Tucson in 1984.andP;  She joined the OAM Storage ManagementComponent development in 1987 and is currently manager of the Object AccessMethod Test department.andM;Horace Tang IBM General Products Division, 9000 South Rita Road, Tucson,Arizona 85744.andP;  Mr. Tang joined IBM in 1986 and is a senior associateprogrammer working on the design and development of the OAM StorageManagement Component.andP;  He received his B.B.A.andP;  in management informationsystems from the University of Hawaii in 1983, and his M.S.andP;  in managementinformation systems from the University of Arizona in 1985.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-749-830  </DOCNO><DOCID>07 749 830.andM;</DOCID><JOURNAL>PC Week  Oct 9 1989 v6 n40 p84(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>AD/Cycle repository opens door to standard design. (AppliedIntelligence)(IBM Repository part 2) (column)</TITLE><AUTHOR>Martin, James.andM;</AUTHOR><SUMMARY>IBM's Repository, a standard for computer-aided softwareengineering (CASE) design specifications, is a critical componentof the company's AD/Cycle CASE environment.andP;  Four levels ofAD/Cycle compliance are support for a common user interface;compliance with External Source Format (ESF), an IBM specificationlanguage for importing and exporting front-end CASE designs toCross System Product/Application Development (CSP/AD); compliancewith Common Programming Interface (CPI) services; and user of theAD/Cycle specification itself.andP;  AD/Cycle Repository helps providethe integration necessary for a truly open developmentenvironment.andP;  It defines support for all phases of the softwarelife cycle.andP;  ESF is a published Cross System Product interface,while CSP/AD generates code that can be executed across manyplatforms.andP;  Repository contains definitions of entities,relationships, and data and process models.andM;</SUMMARY><DESCRIPT>Company:   International Business Machines Corp. (products).andO;Ticker:    IBM.andO;Product:   AD/Cycle (CASE software) (design and construction).andO;Topic:     Computer-aided software engineeringProgram Development ToolsProgram Development TechniquesSAA.andO;Feature:   illustrationchart.andO;Caption:   Four ways to comply with AD/Cycle. (chart)andM;</DESCRIPT><TEXT>Second of a series of articles on the IBM Repository, a significant componentof IBM's applications-development strategy for the 1990s.andM;The IBM Repository, announced last month, establishes a common standard fordesign specifications generated by computer-aided software engineering (CASE)products and other development tools.andP;  As described in last week's article,the Repository represents a critical component of AD/Cycle, which provides astandard development environment within IBM's Systems ApplicationArchitecture (SAA).andM;Users demand an open software-development environment in which tools frommany vendors can be used interchangeably, sharing specifications from acommon repository of design information.andP;  In defining a repository standard,IBM is taking a major step toward providing support for an opensoftware-development environment.andM;Many vendors of software-development tools claim compliance with IBM'sapplication-development standards; still, it's important to determine thelevel of commitment that the vendor intends to make to the standard.andM;As the figure shows, there are at least four levels of compatibility with theAD/Cycle standard for an applications-development environment standard:andM;-- Compliance with CUA.andP;  Entails support for a common user interface for allapplications, using the Common User Access services specified by SAA.andM;-- Compliance with AD/Cycle.andP;  Entails use of a common standard for designspecifications, as defined by the AD/Cycle Repository.andM;-- Compliance with External Source Format (ESF).andP;  ESF is an IBM specificationlanguage used to import/export design specifications from front-end CASEtools to Cross System Product/Application Development (CSP/AD), thedesignated SAA application generator.andM;-- Compliance with Common Programming Interface (CPI) services.andP;  Suchservices are direct interfaces with the programming languages, presentationand dialogue services, communication interfaces and database interfacesprovided by the CPI component of SAA.andM;As for the standard itself, the AD/Cycle Repository is a key integratingfactor in providing an open development environment.andP;  The Repository definesthe objects required to support all phases of the development life-cycleprocess.andP;  To be fully compliant with AD/Cycle, tools from third-party vendorsmust incorporate repositories that are based on the same meta-data model thathas been defined by IBM for the AD/Cycle Repository.andM;IBM recognizes that its current Repository contains only a fraction of theinformation required for complete CASE development, such as that stored inthe CASE Encyclopedia of Texas Instruments' Information Engineering Facilityor KnowledgeWare's Information Engineering Workbench.andP;  IBM is workingintensively to expand its current Repository design so that it willeventually provide all the facilities required by powerful, high-end CASEtools.andM;One of the more pivotal considerations is compatibility with the ESF.andM;Currently, CSP/AD runs as a development tool only on S/370 mainframes.andO;However, it generates code that can be executed on AS/400 midrange machinesand PCs.andP;  IBM has announced that CSP/AD version 3 will be available on thePS/2 workstation in June 1990 as an SAA application-generation facility.andM;ESF is a published interface to the Cross System Product that enablesthird-party vendor tools to connect with CSP/AD.andP;  It is represented as aGeneral Markup Language (GML), which is a human-readable language consistingof tags and attributes (hence, the common designation of ESF as a taglanguage).andP;  ESF can be used to export design specifications from design andanalysis components of CASE tools to build complete or partial applicationsusing the CSP/AD code generator.andP;  Specifications can also be imported fromother applications-development tools and application models.andP;  ESF can be usedwithin an integrated project-support environment to import/export designspecifications to a variety of library and configuration-management tools.andM;To date, several vendors of applications-development tools have announced ESFsupport, including Index Technology Corp., KnowledgeWare Inc., McDonnellDouglas Corp., Nastec Corp., Sage Software Inc. and Texas Instruments Inc.andO;These vendors are committed to producing an ESF tag language to interfacewith CSP/AD.andM;When CSP/AD version 3 is available on the PS/2 as an SAA applicationgenerator, it will be used to generate executable code for all SAAenvironments.andP;  Any CASE vendor can use CSP/AD version 3 in that role throughthe mechanism of ESF.andM;A vendor might decide not to use CSP/AD as the code generator because thereare other application-enabling techniques that may be more powerful.andP;  IBM'sstrategy is to encourage the use of CSP/AD as the application generator forAD/Cycle.andP;  However, if a vendor develops a more powerful code generator, IBMdoes not want to preclude its use.andP;  Rather, IBM's intent is that other codegenerators, as well as CSP/AD, may be used, provided that they conform to theRepository standard, obey SAA standards and create code that's portablewithin SAA environments.andM;Many users view the introduction of the IBM Repository and the AD/Cycleapplications-development environment as the first steps toward thedevelopment of a software-backplane capability.andP;  The objective of a softwarebackplane is one of enabling users to select a variety of compatiblefront-end analysis and design tools, code generators, project-managementfacilities and other support tools that share design information from acommon Repository.andM;A hardware backplane is based on the concept of plugging standardizedhardware modules into a common backplane structure.andP;  Similarly, a softwarebackplane uses the concept of plugging standardized software modules into acommon design database.andP;  However, the database needs to store more than justdesign information; it needs to be a knowledge base containing all the ruleprocessing associated with objects in the database.andP;  The design repositoryshould be an object-oriented database that stores both data and rules.andP;  Ifall vendors use the same object-oriented database with rule-based processing,then they can share design information.andM;Common Knowledge BaseandM;The Repository contains definitions of all of the objects that are specifiedby a CASE tool -- entities, relationships, data models, process models,normalized database schemes, procedural code.andP;  The attributes of theseobjects are then defined in the form of a normalized relational database.andM;Next, the rules that must be obeyed by all of the objects and attributes aredefined.andP;  The database provides the structure of a software backplane.andP;  Inthis way, it will be possible to use CASE tools from different CASE vendors,all of which interact with a common knowledge base of design information.andM;There will be a diversity of ideas from different vendors and a wide range ofviews on what constitutes the most powerful tools; however, the tools must beportable, they must interconnect, and they must have integration down thevalue train across the corporation.andP;  One application in the value train mightbe built with one tool; a different application might be built with anothertool.andP;  However, the tools must integrate across applications.andP;  Building acomputerized corporation requires the acceptance of standards, as well as afully integrated development environment.andM;Next week, I will describe a strategy for CASE based on the most powerfulsoftware-development technology.andM;----------To learn more about the subject of these articles, please call The JamesMartin Report, an information service updated quarterly, at (800) 242-1240.andO;For information on seminars, please contact (in the United States and Canada)Technology Transfer Institute, 741 10th St., Santa Monica, Calif.andP;  90402(213) 394-8305.andP;  In Europe, contact Savant, 2 New St., Carnforth, Lancaster,LA5 9BX United Kingdom (0524) 734 505.andO;</TEXT></DOC>
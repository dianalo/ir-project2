<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> ZF32-067-104 </DOCNO><DOCID>11 276 305</DOCID><JOURNAL>Communications of the ACM  Sept 1991 v34 n9 p82(9)* Full Text COPYRIGHT Association for Computing Machinery 1991.andM;</JOURNAL><TITLE>An interview with Fernando Jose Corbato. (interview)</TITLE><AUTHOR>Frenkel, Karen A.andM;</AUTHOR><SUMMARY>Fernando J. Corbata pioneered the use of time-sharing as a way toavoid machine congestion.andP;  Time-sharing was developed at theMassachusetts Institute of Technology (MIT) in the early 1960'swith funding under Project Mac.andP;  Project Mac was an attempt tocoordinate research in the area of computer science.andP;  By thespring of 1963, the first successful time-sharing system calledthe Compatible Time-Sharing System (CTSS) was in operation andbeing demonstrated to computer science specialists from around theworld.andP;  Several companies became involved in developing thenext-generation time-sharing system, Multics.andP;  As a reaction tothe potential success of Multics, IBM developed the VM operatingsystem.andP;  Today's personal computers have essentially evolved outof small time-sharing systems in that the user interacts with thesystem.andP;  User interfaces are becoming more sophisticated and willfurther evolve as color, sound, and video are used more often.andO;Computer science as a field will continue to diversify.andM;</SUMMARY><DESCRIPT>Company:   International Business Machines Corp. (History).andO;Ticker:    IBM.andO;Topic:     InterviewHistory of ComputingTime SharingMassachusetts Institute of Technologym System design.andO;Feature:   illustrationportrait.andO;Caption:   Fernando Jose Corbato. (portrait)Person:    Corbato, Fernando J. (Interviews).andM;</DESCRIPT><NOTE>Only Text is presented here; see printed issues for graphics.andO;</NOTE><TEXT>Karen A. Frenkel: How did your interest in the field evolve and who were theearly influences in your way of thinking?andM;Fernando Jose Corbato: I was probably conceived in Berkeley.andP;  My parents wereboth graduate students in Spanish at Berkeley.andP;  But I was born in Oakland,which is across the city line.andP;  My father's first position was as a facultymember.andP;  They were then enlarging UCLA, so we moved down to Los Angeles whenI was five.andM;One of the more influential events in my life was World War II.andP;  I was inhigh school when Peal Harbor occurred.andP;  One of the effects was that the mostable-bodied men were drafted.andP;  To accommodate the number of high schoolstudents joining the work force, high schools went into double sessions.andP;  Idiscovered that by being clever I could take extra courses, so I completedhigh school in two years, rather than the usual three.andP;  I took theopportunity to go to UCLA.andP;  I don't know if I had a major at that point, butsomewhere before the end of the first year at UCLA I was approached by a Navyrecruiter to join a new program started by Naval Commander Eddy.andP;  The programwas to train a whole generation of electronic technicians to maintain thesudden rush of deployed electronic systems needed aboard ships during thewartime effort.andP;  Since that seemed like a way to get further education andnot just become canon fodder, I enlisted.andP;  I was 17 at the time.andM;As a result, I spent almost a year learning to be an electronic technician.andO;The following year I was assigned to a destroyer tender as an electronictechnician.andP;  Our responsibilities were radar systems--both short- andlong-range--Loran systems, radio systems, sonar systems, and depth findersystems.andP;  The word 'systems' is in all of these terms.andP;  It was a fantasticeducation about what it takes to make big systems work, how to debug them,and how to look for trouble.andP;  There were also little lessons to be learned.andO;We wondered why they were so ferocious about putting covers on junctionboxes, for example, and then we got aboard ship and discovered that the saltwater corroded everything in sight.andM;KF: So you were dealing with the unexpected.andM;FC: Yes, dealing with the unexpected, subtle bugs, and so forth.andP;  It was avery deep background of anticipating things going wrong, trying to planahead, and figuring out what went wrong.andP;  It was very valuable.andM;When I came back from the service, I used the GI Bill to go to Cal Tech andspent four happy years there.andP;  The great challenge at that time was inphysics.andP;  I decided to be a physicist, and after receiving my Bachelor'sdegree, continued studying physics at MIT.andM;The next important twist in my life was that one of the professors, PhilipMorse, who died a few years ago, was a theoretical physicist who liked to doa lot of different things.andP;  He started an operations research effort, which Ididn't have much to do with, but that was one of the strings in his bow.andO;Another string in his bow was that he picked up on computation.andP;  Inparticular, he recognized that computers were becoming powerful tools (thiswas in about 1950).andP;  He organized some of the infrastructure in terms ofgraduate student assistantships and getting commercial computers for MIT,which could be used by students in research.andP;  He recruited me to become oneof his research assistants in computation.andP;  That gave me the opportunity tobecome a user of the pioneering Whirlwind computer.andP;  It was a fantasticvehicle for learning about what a real computer might be able to do.andM;WhirlwindandM;Architecturally, Whirlwind was what we now call a classic Von Neumannmachine.andP;  But it had one key difference.andP;  The designers--Jay Forester inparticular--had recognized the value of having a real-time system.andP;  Thisprobably stemmed from its original purpose, which was to be an aircraftsimulator.andP;  The idea was that they were going to fly aircraft on the basis ofa parameterization of the design to see how it felt.andP;  They started outthinking they would just use an analog computer, but very quickly recognizedthat they needed a very powerful general-purpose computer.andP;  They backed intocreating one of the early digital computers.andP;  It was fast for its day.andO;Moreover, they did some very innovative engineering.andP;  They managed to createa memory system with vacuum tubes, which was a charge retention system thatwas actually fairly reliable compared to the Williams tubes being used onsome of the other systems.andP;  But it was not good enough.andP;  As people began tothink about using computers like Whirlwind for air defense, they developedcore memories.andP;  These were a crucial technological development and thebackbone of a computer's reliability for a period of 25 years.andM;When I finally got my Doctorate in '56, Phil Morse recruited me to becomepart of the research and administrative staff in his newly formed computationcenter.andP;  Its primary mission was the administration of an IBM-704, which hehad managed to persuade IBM to install.andP;  MIT got one shift of use andadministered a second shift for the benefit of a cluster of associated NewEngland colleges.andP;  IBM retained the third shift for itself.andM;KF: Was the administration of the computer center the beginning of your ideaof ambitious systems that will fail?andM;FC: No.andP;  I think that subconsciously, any programmer working on a largesystem knows there are bugs, glitches and problems and you think of fightingfires.andP;  Anybody in the practice expects that.andP;  It is viewed as part of thenormal daily activities of running a big complicated system.andP;  When you backoff and ask, &quot;Why do bugs keep happening?&quot; you see that first of all, peoplefind new ways to use a system that had not been explored before.andP;  So it isclearly a discovery process.andP;  That's one reason bugs keep showing up.andP;  Asecond reason is that people keep shifting their assumptions, or pushingsystems in new directions that were not anticipated.andP;  It isn't so much thatthe bug was there as that the usage just warps the original expectations.andO;That was part of the background.andP;  I think where it came to a head was in thedevelopment of time-sharing.andM;The Dawn of Time-SharingandM;KF: Was that the next thing that you did at the center?andM;FC: It was in that environment that time-sharing came about.andP;  John McCarthywas also drawn to the center.andP;  After Dartmouth, he joined the MIT faculty andthe computation center's research activities.andP;  John realized that computertime at the center was free to the users, except for their own efforts inpreparing programs for it.andP;  We were trying to encourage people to learn touse this new tool in multidisciplinary applications.andP;  At first we had a hardtime, but gradually we became more successful.andP;  Then it became too successfulin the sense that the machine was jammed from morning to night with jobs torun.andP;  It became so congested that we began finding new ways to use themachines more efficiently--to squeeze more out of the operating systems andto batch up the jobs on tapes.andP;  We used every strategy you can think of toget more effective use of the computers.andP;  Some of it was counterproductive ofcourse, because the more we squeezed things into mass production runs on acomputer, the more we had to take precautionary core dumps.andP;  So there was alittle bit of thrashing going on there too.andM;People were incredibly frustrated in that environment.andP;  You could not programeffectively.andP;  A trivial slip hurt.andP;  This meant good programmers were workingvery hard and with great mental strain to program accurately because mistakeswere so costly.andP;  McCarthy came up with the idea of using a computer in adifferent style.andP;  That of course struck a bell with anyone who had used someof the earlier computers, such as Whirlwind, which had begun as a giganticpersonal computer.andP;  You had paper tape input and a graphical display output.andO;You also had punch paper tape output and so forth.andP;  You even had audio outputin the sense that you could hear the program because there was an audioamplifier on one of the bits on one of the registers--so each program had asignature.andP;  You could hear the tempo of how your program was running.andP;  Youcould sense when it was not running well, or when it was doing somethingsurprising.andP;  Those things got lost in the mass production 704 operation.andM;McCarthy sent a memo to Phil Morse in January of '59 in which he outlined howyou might begin to do a time-sharing system.andP;  Phil Morse encouraged people tolook into it.andP;  In particular, we got IBM to go to a lot of trouble to makevarious changes in the equipment.andP;  There were some local IBM people whoworked very hard for us.andM;Time-Sharing and VendorandM;PartnershipandM;One of the other faculty, Herb Teager, who died last year, began to thinkabout a very ambitious new time-sharing system.andP;  The trouble was that Herb'ssystem was so ambitious that it had to be years before he could get it towork.andP;  Herb was going to do an entirely new language and even was bold enoughto think about making handwriting input one of his key features--something weare almost ready to do today.andP;  Herb had a very great vision, but he was notthe kind of person to draw a group of people around him.andP;  He was trying to doit all himself, and it looked like a long way before anything would happen.andM;To exhibit the idea, I elected to create a demo version system, which woulduse the existent systems as much as we could to get something up and running.andO;We had discovered that industrial people, like those at IBM, were veryunenthusiastic about the idea.andP;  They were used to making money by sellingmainframes and most of their customers were running factory-like computingcenters.andP;  The notion of optimizing people rather than the machines was justnot on their minds.andP;  We began to realize we had a major problem trying tosell the idea that something different than batch processing was a valuableand exciting way to use a computer.andP;  That was why the demonstration systemwas so important.andP;  As I said in my lecture, there were a lot of otherventures.andP;  People were chipping away at interaction, but they were workingwith special-purpose systems.andP;  You had to do something differently.andP;  You hadto switch languages.andP;  There was a BASIC system, for example, and there was aJOSS system.andP;  Each forced you into a different mold that did not allow you tobuild on past work.andP;  So, one of the keystones of the design decision was tobuild on past work.andM;The initial system we built, CTSS, the Compatible Time-Sharing System, wasbasically patched together.andP;  The hardware did not anticipate this directionof use.andP;  We did not have good typewriter input/output.andP;  We did not even havegood typewriters.andP;  Lower case was unheard of.andP;  We already were thinking ofsomething that could be supportive in the human application sense and wantedto be able to write with text.andM;We were fighting many of the problems of the day and also trying to changethe mindsets of vendors--particularly IBM.andP;  IBM already dominated the field.andO;They had between 65-85% of the market and, of course, whatever they did wasimportant.andP;  We had indeed persuaded some of the people in IBM, like LorenBullock, who worked closely with us, that we were on the right track.andP;  Heworked his heart out trying to make it happen.andP;  But I think IBM faced aproblem that many big companies have, which was that they were making moneyhand over fist doing what they had always been doing.andP;  They therefore did notsee any reason to change.andM;We have seen that in the automobile industry.andP;  In fact, some of the computercompanies that have had difficulty lately in Massachusetts like Wang and DataGeneral have had to face some of those same problems.andP;  They rode their oldproduct line too long and did not innovate quickly enough.andM;KF: Why do you think then, that your project appealed to ATandamp;T Bell Labs andto GE?andM;FC: That is not quite the way it worked.andP;  There was the effort within MITspurred by McCarthy, me, and others.andP;  MIT reacted by creating a committeecalled The Long Range Study Committee, with Herb Teager as the appointedchair.andP;  We kicked around ideas about how we might acquire a big time-sharingsystem for MIT.andP;  And Herb pushed for an IBM STRETCH.andP;  The committee rebelledand said, 'No, that's not what we need.andP;  We need to build our own system, orencourage vendors to try to supply one to our specs.'andP;  That was ourinspiration, but we had no way to funding it.andP;  And the MIT administration didnot veiw it as something MIT ought to fund directly.andP;  In that climate,McCarthy got very frustrated, in fact, that was one of the reasons he leftMIT and allowed himself to be recruited by Stanford, where he has been eversince.andM;ARPA Joins inandM;KF: Wasn't Joseph Licklider an influence?andM;FC: Licklider had been at Bolt, Beranek and Newman, and he too had picked upon the inspiration of time-sharing.andP;  He was quick to recognized how valuableit would be.andP;  In fact, he helped nurture a small time-sharing system aroundthe DEC PDP-1, which he, McCarthy, Ed Ed Fredkin, and Shelly Boiler actuallygot into operation.andP;  And Jack Dennis at MIT also developed time-sharingsystems around a PDP-1 and the TX-0 computer which MIT acquired from LincolnLaboratories.andP;  There were a lot of activities going on.andM;At about that time, the Cuban missile crisis occurred and some of this may beapocryphal, but the so-called command-and-control systems that were in usethen were so ineffective that the Department of Defense--the way I've heardit at least--was shaken by the inadequacies of its ability to manageinformation and on-line systems.andP;  There is a story about how some General gotso frustrated that he demanded they pull the plug on a computer in the midstof the crisis because it was giving out so much misinformation.andP;  Licklidersaw an opportunity to go down to Washington and join the informationprocessing techniques office of what was then called ARPA, now DARPA.andP;  He hada lot of license to nurture research.andP;  In particular, he saw it as anopportunity to nurture time-sharing.andP;  So he went around the country lookingfor people who might be interested in developing interactive computing.andP;  Andwe were ripe and ready to do it.andM;Project MacandM;That gave Bob Fano, who was at MIT, an opportunity.andP;  He had been followingthe ferment going on in the Long Range Study Committee.andP;  He saw we had agreat opportunity, but at that point we were Balkanized.andP;  There were about adozen different groups doing computer science research.andP;  So what came to becalled Project Mac gradually jelled in his mind.andP;  Fano did a wonderful job ofdrawing people together around the common theme of man-machine interaction,using time-sharing as a vehicle.andP;  That gave us both an opportunity to work ontime-sharing and an opportunity to work on the intelligent exploitation oftime-sharing.andP;  Project Mac has subsequently been renamed the Laboratory forComputer Science.andP;  It also spawned off the Artificial IntelligenceLaboratory.andM;We worked furiously on CTSS.andP;  We kludged together a system, which wedemonstrated.andP;  It took us about six months with just three of us working onit and later there were about half a dozen.andP;  The system had only four crudeterminals that Herb Teager offered us, we did not have mass storage, we hadto sneak out 5K of memory from the 32K that a program usually had, whichmeant that not all programs could run.andP;  And we did a demo.andM;But this was November '61, and there was a lot of turmoil still.andP;  We werescheduled to change from a 709 to a 7090 the following spring.andP;  We knew wehad to do a better job with the terminals.andP;  And most important, in order todo the job with any reasonableness we needed to get an extra bank of memory.andO;So our machine was a special one.andP;  Instead of the normal maximum of 32Kwords, we had 64K words in two banks.andP;  That allowed us a whole bank for thesupervisor, and more important, a whole bank for all the old user programs sothey did not have to be heavily modified to run in our environment.andP;  We alsogot an IBM 7750 line controller for better handling of terminals.andP;  The finalcritical ingredient we got was mass storage, and it was the IBM 1301 diskfile, which had very modest mass storage by today's standards.andP;  In addition,we got some changes made, which were not put in the 709, but were put intothe 7090, to allow memory bound registers and trapping of I/O instructions.andO;We added a calender clock and we had an interval timer.andP;  So we had all thekey ingredients to put the system together.andP;  And we managed to get thatenhanced and ready to go by spring 1963, when we had our Project Mac summerstudy.andM;That was the first major use of CTSS by people who did not build it, and itwas very successful.andP;  We were capable of running about 16 terminals at atime.andP;  We invited up to 200 prominent computer people from around the countryand the world to visit for two to several weeks and explore what it meant tohave interactive computing.andP;  It was a very influential period.andP;  I think wepersuaded most people including Doug Englebart, that it was a good cause, Iam pleased to note.andP;  And Project Mac was off and running.andM;Multics and Vendors'andM;ReactionsandM;One of Project Mac's goals was to develop the next-generation time-sharingsystem that would be done &quot;right.&quot;andP;  And that is where Multics came in.andP;  TheMultics effort began as an exploration to find suitable hardware to supportthe next system.andP;  We shopped around at many different companies, includingIBM and DEC.andP;  There were a lot of complicated circumstances.andP;  For instance,IBM had launched the development of the IBM 360 and it was a monstrousundertaking.andP;  In their zeal to guarantee success, they had targeted it to bea batch-processing system.andP;  And they tried to claim to their management, ofcourse, that it could do anything.andP;  But, in fact, it was aimed to optimizebatch processing and the problems they foresaw at that date.andP;  The developmenthad begun somewhere in the early '60s and it was finally announced on April7, 1964.andP;  We were disappointed because the system was so locked into theolder way of doing computing.andP;  It had many flaws, from our vantage point.andP;  Wetried to tell this to IBM, but they sort of patted us on the head, saying'That's nice, but why don't you use our equipment anyway?'andP;  Moreover, theywere too pre-occupied with all the growing pains of getting this vastundertaking out the door to be very concerned about us.andP;  They offered ushardware alternatives, but they priced them out of sight.andP;  It was clear theydid not view us as anything but a special-purpose customer, at best, andcertainly not people to mess with their product plans, which they jealouslyguarded.andM;We tried other companies.andP;  DEC did not think they were big enough to take onsomething as ambitious as what we were trying to do.andP;  We tried Burroughs.andO;They were pretty tied up with military systems.andP;  We tried Univac and had asimilar experience.andP;  Then we hit the computer department of GE.andP;  They hadjust developed a new batch-processing system, but it had an architecturalaspect which we found very attractive--asynchronous signaling between boxes.andO;The system was modular with multiple memories and multiple processors andmany of the right properties.andP;  GE was very hungry to see their system adoptedand we got the attention of one of their top designers--John Couleur.andP;  He waseager to make changes to his computer so that it would be acceptable to asmany different people as possible.andP;  He saw this as a great opportunity.andM;KF: So GE was flexible, whereas IBM was not.andM;FC: Right.andP;  They were hungry.andP;  So eventually we began work with GE.andP;  Itturned out that Bell Laboratories was simultaneously looking for a newsystem.andP;  They too were attracted by the direction GE was going in.andP;  So theydecided to become customers too.andP;  And of course, since we had commoninterests, we all decided to band together to create the operating system forthis new environment.andM;At that point I think we were all very naive about having commissioned agiant venture.andP;  People were underestimating the effort required--MIT probablybecause we had so much success with CTSS, and if we did it once we could doit again--and, similarly, Bell Laboratories because their staff had developeda fancy operating system, which had a lot of neat features.andP;  But what peopledid not recognize is that most of these neat features had beenembellishments.andP;  People were not starting from scratch.andP;  Again, theirmanagement did not recognize the level of discipline and development that wasnecessary.andP;  They saw it more as a research effort.andP;  And yet somehow peopledid not recognize that you just do not jump from research to operationalsoftware.andP;  Bell Labs in particular was expecting this system to become theworkhorse for computing at Bell Laboratories, so they expected commerciallevel quality.andM;The GE people did not recognize it.andP;  They initially thought we were justmaking a modest enhancement to their system which would draw in some newcustomers.andP;  What they did not recognize right away--although they didrecognize it within a few months--was that we had changed the hardware sodrastically that in effect we had a different product line from what theywere already selling.andP;  So one of the tensions that went on for years wasbetween the old batch-processing product line, and the new potential product,Multics, which was obviously a competitor.andM;KF: How did this tension play itself out in terms of the kinds of decisionsyou had to make?andP;  And how great was the tension?andM;FC: We were friendly, but the stress showed up when we began to have delays.andO;Eventually, it led Bell Laboratories to abandon the system because it was notcoming on line to replace their 7090 machines, which they had expected toreplace a few years earlier.andP;  They suddenly had to abandon Multics and reverteither to the GE batch system GECOS or go back to other things.andP;  So they leftMultics with a relatively bad taste.andM;The GE people never quite got out of the mindset of making Multics more thana special-purpose system for special customers, like the military.andP;  It wastreated as a Cadillac-type product that would only be bought by a few, andthe marketing was terrible.andP;  Therefore, the customer had to convince GE thathe or she wanted the system.andP;  And it was priced high.andM;Multics, Bell Labs and UnixandM;KF: Who were the Bell Labs people?andP;  Were Thompson and Ritchie part of theteam?andM;FC: There were a lot of names: Vic Visotsky, who was the leader of theeffort, Peter Neumann, Ken Thompson, and I think Ritchie was involved, andJoe Ossanna, who did a lot of the early work on I/O.andP;  After Bell pulled outof the Multics effort, the management directed their people to work on otherthings.andM;KF: When did they pull out?andM;FC: To my recollection it was '69.andP;  Furthermore, we went through some moreturmoil when GE sold their computer department to Honeywell in about '70.andP;  Wehad to keep reselling the ideas and the likelihood of success to people.andM;KF: So even though you said there are about 77 systems and some are stilloperating, you are suggesting that it was perhaps not the commercial successit could have been because these two companies could not get over theirinitial visions and they were not flexible enough to see how things wereevolving.andP;  For that time, was 77 systems a success?andM;FC: No.andP;  It was so-so.andP;  It did not establish huge market share.andM;KF: Who was supplying those systems?andM;FC: Honeywell.andP;  They made it a product.andP;  Then they allied with Bull in Europeand Bull became much more enthusiastic about it than the domestic Honeywell.andO;They pushed it all over France, so a lot of the sites are in Europe.andP;  Now theproblem is that about a year ago or so, Bull decided the system was notmaking enough money and abandoned further development.andP;  It is a dying systemfrom a development point of view.andP;  One of the customers--the University ofCalgary--has become a key site in keeping it rolling.andP;  And I think Bull isdelegating a lot of the maintenance to them.andM;KF: People have said that Unix was a reaction to Multics.andM;FC: Let me add something else.andP;  One of the reasons there was a violentreaction by IBM when we decided to work with GE was they thought GE had verydeep pockets and was a powerful company.andP;  They feared GE as a competitor andreacted by commissioning their own time-sharing project, which they did underforced draft, and built special hardware--the 360 Model 67.andP;  They stillcalled it a 360, but it was radically different.andP;  They tried to force thetime-sharing system onto it and the quick result was they came up lame.andP;  Theyhad to abandon the system--ceasing to support it as a product for a while.andO;They let their customers either run the special hardware as an ordinary 360computer, or, run with the VM operating system.andP;  Like CTSS, VM had beenstarted as a demo of multiplexing a 360 model 65 into a bunch of individualuser model 40s.andM;KF: This seems to be a pivotal point, and it shows the flavor of thecompanies today.andP;  Do you agree that some of the attitudes at IBM back thenremain today?andM;FC: IBM still struggles with big-company thinking.andP;  It is easier forcompanies to reject new ideas than it is for them to try out dangerously newideas.andP;  That is a classic problem.andP;  DEC did not get into workstations quicklyenough.andP;  They are still paying the price.andP;  Sun has sprung up because of it.andM;KF: But in the case of Bell Labs, the problem seems to have been more one ofimpatience when there were delays, right?andM;FC: The people that were supporting Multics at Bell Labs took a terriblebeating from their peers internally because they were not delivering what hadbeen promised.andP;  That was a terrible toll.andM;KF: I would like to get back to the question of Unix.andM;FC: My understanding of the situation was that Bell Labs people werebasically ordered not to work on Multics.andP;  They were instead given a PDP-7 toplay with.andP;  Ken Thompson decided to build basically a system for himself andhis buddies and he did a very shrewd thing.andP;  He began to build it small.andP;  Itwas a little time-sharing system.andP;  He put in ideas as he felt they werenecessary.andP;  I do not think he worried about security at all in the beginning.andO;He did not try to build in paging and segmentation initially--perhaps paging,but not segmentation.andP;  He put ideas in as he saw how to implement them easilyand cleanly.andP;  It gradually grew.andP;  Ken has terrific taste and judgment and hetook the best of the ideas that he saw.andP;  He also did not deliberately turnhis back on Multics ideas.andP;  He used similar language, similar nomenclature.andO;I am sure he would admit that Multics had an influence on him, but he did notcreate Multics, as much as start over on the basis of his Multics experience.andO;One decision was to run Unix on standard hardware, rather than specialhardware, which is one reason Multics couldn't migrate to any other machine.andM;Interactive ProgrammingandM;KF: How different is it to write interactive programs compared to batch ones?andM;FC: The key difference is that the interface to CTSS and Multics was havingdriven serial teletypes or serial typewriters.andP;  Initially, it was on pageprinters, so that was your memory.andP;  CRTs came later.andP;  On a page printer youcan reach back a page or two and see what you just typed without too muchtrouble.andP;  But the minute you get to a CRT, that suddenly pushes you intowanting to scroll back and look at some of the previous screenloads.andP;  If youhave not put that into software, you are struck.andP;  You can see the evolutionmost strongly when you look at personal computers, because in a sense, thatis where the extra computing horsepower was available to do it much better.andO;The earliest Apple IIs and the like, and the software, were basically areplication of what was being done on time-sharing systems--some text with aquestion mark, you type in an answer, you type a carriage return, and soforth.andM;Now we are in an age in which CRTs are the norm and typewriters are almostunheard of.andP;  You can not only pop information up at any point on the screen,you can put information in at any point on the screen.andP;  The evolution hasbeen largely influenced by the Englebart-SRI-Xerox PARC-Macintosh evolutionand it continues as X Windows today, pasted onto the Unix system.andP;  In thisprocess, the interface has gone from being one-dimensional totwo-dimensional.andP;  Furthermore, the tempo of what is a reasonable interactionperiod has changed.andP;  When we were doing time-sharing systems it took one tosix seconds to get a reaction.andP;  Today, on a personal computer it literallytakes a few milliseconds for many purposes.andP;  Some things take longer.andM;To project into the future, people are beginning to explore the sensible useof the senses.andP;  Color is becoming a more important cue in the way ofpresenting information without distraction.andP;  Speech and sound are getting inthe picture and probably video has a role to play.andM;KF: I am interested in your answer to that question (after the Lecture) aboutwhat ambitious system you would want to work on.andM;FC: One of the huge application areas coming down the pike is all-digitalsimulations.andP;  No modern aircraft is first flown by a pilot sitting in thecockpit of the plan.andP;  Pilots all go through a rigorous training that is asrealistic as possible with a simulation of the plane.andP;  It attempts in everyway possible to replicate the behavior of the plane so that the pilot feelsright at home when he steps into the cockpit of a real one.andP;  He knows what toexpect.andP;  And that is true of both commercial airliners and fighter planes.andM;There are many, many situations you can imagine in the future where havingsimulators for virtual realities makes a lot of sense.andP;  It takes a hugeamount of computing to generate all the aspects of the scene.andP;  One can go asfar as one wants.andP;  It begins to resemble Disney World.andP;  From the point ofview of education and training, there are many opportunities for whichspecialized versions of that facility, if not too expensive, would beimportant.andP;  That is one almost open-ended direction that computing can go in.andM;KF: So do you see virtual reality and the ultimate interactivity asoriginating from the beginning of interactive programming?andM;FC: It is one of the threads, yes.andM;Some Ambitious SystemsandM;that FailedandM;KF: In your lecture you explained how ambitious systems can go beyond thedesign domain originally conceived.andP;  And you spoke about the importance ofmetaphors.andM;FC: One can get trapped.andP;  If one does not have a broad understanding of thesituation, one can easily get suckered into not spotting a change incircumstance.andP;  The example I gave is the Takoma Narrows Bridge.andM;KF: I did not quite make the connection between going from being a bridgebuilder to aeronautics.andP;  Can you to relate it back a little bit more tosystems that are too ambitious.andM;FC: It was like somebody getting blind-sided by a phenomenon they had notthought about.andP;  Initially, bridge builders worried about just making bridgeshang together under gravity.andP;  It is clear that at some point in the evolutionof bridge building, somebody had to begin to worry about vibrations anddynamics.andP;  To a first approximation, no one worried about the wind as much ofan issue.andP;  But as they engineered more carefully and more precisely,materials got thinner and more flexible.andP;  They built higher bridges and theybecame aerodynamically unstable.andM;KF: In the case of the Tacoma Narrows bridge, the designer stepped into a newdesign domain without knowing it.andP;  In software engineering, are theresituations in which you step into a new design domain without meaning to?andP;  Oris there a way that we can be more self-conscious and avoid doing that?andM;FC: Being blind-sided shows up in privacy and security.andP;  Occasionally peopleproduce systems that have a catastrophic goof or way of being beaten.andP;  In thetelephone system, when they began automatic switching, it was decided back inthe late '30s, not to include the extra mechanism to allow the callee to knowwho had called him.andP;  It made good sense from an economic point of view--theydid not need that information.andP;  But they discovered gradually, as thetelephone system matured in the United States, that anonymous and crank phonecalls were a problem--not to the company maybe, but to the customers.andP;  Andthey could not do anything about it.andP;  Even the president of the U.S.andP;  couldnot trace a crank call (without a great deal of effort).andP;  They had to tracecalls by commandeering special teams at every office listening to what wentthrough.andP;  It was a ferocious process.andP;  It took over a half an hour to trackthe call, I am told.andP;  They had not thought through the way their system wouldbe used.andM;On the Importance ofandM;MetaphorsandM;KF: You said in your lecture that the value of metaphors should not beunderestimated.andP;  Can you elaborate?andM;FC: I was trying to suggest that people say, &quot;Oh, you mean like aspreadsheet?&quot;andP;  And immediately people understood because they know what aspreadsheet is.andP;  When you say, &quot;like something,&quot; people immediately have awhole set of images.andP;  When we were first developing CTSS, we worried thatpeople would not make the transition early.andP;  For example, one of our initialtext editors had each line correspond to an IBM punch card, and that wasnecessary for only about the first two months.andM;KF: How do you know to choose the proper metaphor?andP;  Even if you do choose theproper metaphor, people interpret metaphors differently anyway.andM;FC: Good point.andP;  Metaphors are dangerous because they imply everything is thesame, and of course that is rarely the case.andP;  And sometimes you can have abad metaphor.andP;  They only suggest properties, but again you must be carefulthat they don't mislead.andP;  So it is a judgment call.andM;KF: When you talk about using constraints, you advocate the use of constraintlanguages.andM;FC: Yes.andP;  Now that is important.andM;KF: Isn't that controversial?andM;FC: No, not if it is understood properly.andP;  For example, one of the wonderfulsuccesses of Fortran was that suddenly people didn't make mistakes in acouple of areas in which they had always made mistakes in using machinelanguage.andP;  The first was storage allocation.andP;  Fortran worries for you aboutwhere to put storage elements.andP;  That is true of any compiler nowadays.andP;  Butit was novel then.andP;  Second, in the specification of iterative loops and testsin machine language there were lots of ways of counting and comparing.andP;  Itwas easy to get &quot;greater than or equal&quot; to be just &quot;greater than.&quot;andP;  It waseasy to slip up by one in counts because there were so many ways of doing it.andO;Fortran put it out in the open--DO something from 1 to N--and it was muchharder to make a mistake.andP;  What you are trying to do is just be moretransparent and avoid a bizarre means of expression.andM;When you get into things like designing VLSI, you tend to use libraryprograms to do most of the operations because you don't want to redosomething.andP;  The likelihood of doing it correctly increases if you can usestandard things.andP;  So you are deliberately not allowing yourself to do strangethings.andP;  If you ever hope to prove something about programs, it is mucheasier to prove that the tool you are using does not allow you to dosomething than it is to prove that the result does not do something.andM;The Transition fromandM;Mainframes to WorkstationsandM;and PCsandM;KF: Earlier, you have mentioned Sun's success.andP;  There has been a debate aboutwhether the mainframe is dying and what it means to have distributedprocessing and networked workstations.andP;  Do you think we are really going inthat direction?andM;FC: It is a natural evolution from time-sharing to have gone to networks anddistributed workstations.andP;  The economics of computing technology allowed aredistribution of where the computing horsepower is.andP;  I see it as aprogression.andP;  The Xerox PARC example was very seminal.andP;  It showed the way forthe rest of the world to follow.andP;  It was another step in the progression.andO;The personal computers of today are yet another step where people have done awonderful job of demonstrating how effective you can make hardware be, whenyou focus on trying to make the personal interface a good one.andM;But I see it more as a question of diversity.andP;  There will be mainframes doinglargely centralized database activities.andP;  Occasionally, they will be doingultra-high-performance computing activities where speed is essential--Crays,and so on.andP;  But I don't see mainframes as suddenly vanishing, as much as thegrowth being with the workstations, which are sufficient to accommodate thetask at hand.andP;  People don't bother to try to put this task on olderequipment.andP;  So, it is a withering away or a reduction in market share, butnot a disappearance.andM;KF: You have presented recommendations or suggestions to those creatingambitious systems.andP;  Do you have any advice or recommendations to studentsabout the field of computing in general and how they can become the bestsoftware engineers?andM;FC: They should have as broad a knowledge as they can about the world and thepeople in it because a large part of both the visions and dreams that peoplehave revolve around the uses of equipment and the new applications to supportthose visions and dreams.andP;  That requires knowing how to mesh the systemsthemselves with the individuals.andM;KF: People have been telling me that the direction of computing is now towardapplications.andM;FC: It is fair to say that we are diversifying a lot.andP;  Applications areobviously one major current, and in some cases, like graphics, they havebecome almost an end in themselves.andP;  In other situations, people are stillexploring the architectural aspects of how to organize computers.andP;  So thereis still some computer science that is very important.andP;  We are a long wayfrom having that clean a vision of how to build reliable software.andP;  There aremajor needs, which are not mined out.andM;CR Categories and Subject Descriptions: C.2 andlsqb;Computer-CommunicationNetworks]: General; C.4 andlsqb;Computer Systems Organization]: Performance ofSystems; D.4 andlsqb;Software]: Operating Systems; H.5 andlsqb;Information Systems]:Information Interfaces and Presentation; K.2 andlsqb;Computing Milieux]: History ofComputing</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-335-856  </DOCNO><DOCID>07 335 856.andM;</DOCID><JOURNAL>Computer Language  June 1989 v6 n6 p111(13)* Full Text COPYRIGHT Miller-Freeman 1989.andM;</JOURNAL><TITLE>Six CASE products for the Macintosh.andO;</TITLE><AUTHOR>Modell, Howard.andM;</AUTHOR><SUMMARY>Several CASE products that run on Macintosh computers arecompared.andP;  Most of these products have several components, supportat least one method of structured systems analysis, and share theMacDraw-style user interface.andP;  All possess a data-flow diagrameditor and accompanying data dictionary, produce reports of somekind, and can be useful to systems analysts and developers.andP;  Theproducts are Advanced Logical Software's ANATOOL 3.0, Peat MarwickAdvanced Technology's Silver Run system, Deft Inc's Deft 3.1,Starsys Inc's MacBubbles, and Iconix Software Engineering Inc'sPowerTools SD 2.03.andP;  All of these packages are consideredworthwhile, but PowerTools and Deft provide the widest ranges oftools and are considered the best.andM;</SUMMARY><DESCRIPT>Product:   Apple Macintosh (Microcomputer) (computer programs).andO;Topic:     Software PackagesComputer-Aided Software Engineering.andM;</DESCRIPT><TEXT>Six CASE products for the Macintosh Virtually every commercial process is nowcomputer assisted--computer-aided instruction (CAI), design (CAD),manufacturing (CAM), and software engineering (CASE).andP;  This last discipline,also called computer-aided systems engineering, uses computer technology todesign and implement new software projects.andP;  CASE has evolved from programsthat create and maintain the kinds of simple flowcharts most of us drew inschool to programs that create data- and control-flow diagrams,state-transition and program structure charts, entity-relationship diagrams,and other graphic representations of system structure.andM;All these diagram and chart applications help software and system designersdefine the parts of a program (or a hardware and software system) and theinterrelationships and interactions among those parts.andP;  The creators of theproducts reviewed here claim their respective products can be used in theinitial design of an application or system.andP;  Some provide either pseudocodeor code editors to take the application or system partially toimplementation.andP;  A few of the packages even include the means to take anapplication design produced on the Macintosh and port it to a mainframe forfurther use or processing with resident databases.andP;  All provide a MacPaint-or MacDraw-style graphic design environment.andM;CASE tools track the flow of data into, through, and out of a system; examinethe processes and processors within a system to decide how they shouldperform their functions; integrate the user interface and databaseapplications; and analyze the components of a system to determine theirefficiency and relevance within the system.andP;  Most of the products heresupport one or more of the various flavors of structured systems analysis(methods pioneered by CASE proponents Tom DeMarco, Edward Yourdon, DerekHatley, Imtiaz Pirbhai, Stephen Mellor, Paul Ward, Chris Gane, and TrishSarson).andM;Most of the products reviewed here have several components.andP;  ANATOOL 3.0 fromAdvanced Logical Software contains a data-flow diagram editor and adata-dictionary editor integrated into a single program.andP;  MacBubbles fromStarSys Inc. provides the same services distributed between two separateapplications.andP;  Peat Marwick Advanced Technology provides three applications,which make up its Silver Run system: Silver Run-LDM (database schema), SilverRun-ERM (which creates entity-relationship models), and Silver Run-DFD.andP;  DeftInc. sells a set of applications that includes data-flow,entity-relationship, and program-structure editors; screen and form editors;and a design compiler to bind them all together in a form usable with anIngres database.andP;  Finally, Iconix Software Engineering Inc.'s PowerTool 2.0collection includes FreeFlow (which produces data flow diagrams, minispecs,and data dictionaries), FastTask (a state-transition diagram editor),SmartChart (a program design language editor with a language-sensitiveeditor), PowerPDL (a pseudocode processor), and ASCII Bridge (which providesimport, export, merge facilities, and Macintosh-to-mainframe connectivity).andM;All these packages and products assume some degree of familiarity with CASEand systems analysis methodologies.andP;  They do not rely heavily on thisfamiliarity, however, and most provide some minimal introduction tostructured systems analysis as part of their documentation.andM;Advanced Logical SoftwareandM;ANATOOL v. 3.0andM;ANATOOL is a single application that provides an integrated environment fordata-flow analysis and pseudocode design.andP;  As described in the review of v.andO;2.0 (COMPUTER LANGUAGE, May 1988, pp.andP;  105-109), it implements structuredsystems analysis, which, in the case of ANATOOL, is an amalgam of theDeMarco, Yourdon, and Gane and Sarson methodologies.andM;ANATOOL 3.0 works on all Macintoshes from 512K up.andP;  A system specificationbegins with a data-flow diagram specifying the inputs to a system, theprocesses that act upon them, and the outputs after processing.andM;The user interface, which is common to all the diagram editors included inthis evaluation, is similar to that of MacDraw.andP;  The work area is treated asa drawing surface onto which the user draw shapes from the tool palette atthe left edge of the screen.andP;  The various shapes represent the differenttypes of entities that can appear in a data-flow diagram: external datasources and sinks, data stores, processes, data flows, and connectors.andP;  Ingeneral, you select a shape and drag it to the desired place in the workarea.andP;  Shapes are connected by flow lines.andP;  Textual labels must be added toall shapes and data flows, and can be explicitly created and edited via thetext tool from the palette.andP;  All text can be displayed in any font ortypeface available on the host Macintosh.andM;ANATOOL automatically tracks all entity names used, incorporating them into adata dictionary from which it can verify the consistency of the diagrams.andO;The data dictionary validates consistent use of entities and allows data tobe described by type, general usage, access keys, and other parameters oraliased to other existing names.andP;  To get into the data dictionary, you canuse a menu task or double-click on either a data-flow or data-store icon.andM;The initial window into the data dictionary shows all items in alphabeticalorder.andP;  A palette displaying icons represents the item types plus someavailable operations (such as a trash can for destroying an item definition).andO;If you click on an item name in the list, the corresponding type icon ishighlighted if the item has been categorized.andP;  Double-clicking on a name,category, or the dictionary access icons puts the item into adictionary-definition window.andM;ANATOOL recognizes five data types: alias, basic data, data structure, datastore, and known data.andP;  Alias data is simply a mechanism for referring to thesame item by different names, really just a pointer to the base name.andP;  Basicdata is similar to what Pascal programmers call scalar or scalar subrangedata, which is not intended to be decomposed further (such as integers andcharacters).andP;  Structure data is similar to C structures and Pascal recordtypes.andP;  Data stores can be thought of as files--places to stash data until itis needed again, though they need not be strictly implemented as systemfiles.andP;  Known data consists of items whose definitions are presumed to begenerally agreed upon, such as social security number, age, or atomic number.andO;Each item type has a different definition form, and the complexity of theform is directly related to the complexity of the type.andM;Structure definitions utilize a syntax similar to binary normal forms todescribe the composition of the structure object, such as:CUSTOMER-INFORMATION = CUSTOMER-NUMBER + Customer-name + CUSTOMER-ADDRESSandM;The plus symbol indicates neighboring fields.andP;  A definition can also usecurly braces to enclose a repeated field or set of fields, a vertical bar toseparate either-or choices, and parentheses to enclose optional fields.andM;ANATOOL allows up to nine levels of decomposition and elaboration diagrams.andO;To expand a process, you simply double-click on the icon for the process, andthe program asks if you wish to create a new diagram or specification.andP;  Onthe specification level, below the data-flow diagram, the process isdescribed in a minispec in either free text or a form of pseudocode calledstructured English.andP;  These features are the same as in v. 2.0.andM;New features in v. 3.0 inclued the ability to import and mergedata-dictionary information into the design, export data-dictionaryinformation for use in other data-flow diagrams, and merge minispecs into asingle export file.andP;  The latter exported specification is in a format thatcan be accepted by Excel Software's MacDesigner application for display as achart.andM;ANATOOL is a fine utility, providing more than ample facilities fordiagramming the flow of data through a system.andP;  It is explicitly limited toonly the data-flow-analysis phase of system design, but is well-suited to thesubdomain.andM;Peat Marwick Advanced TechnologyandM;Silver Run-LDM, -ERM, -DFDandM;The Silver Run system consists a number of different applications: SilverRun-DFD, Silver Run-ERM, and Silver Run-LDM.andP;  The system is integrated; allcomponents work with one another, and all three utilities provide the sameMacDraw-like environment already described.andP;  Silver Run-DFD performs roughlythe same data-flow diagrams and data-dictionary functions as ANATOOL.andM;Whereas ANATOOL uses a generalized structured systems analysis methodology,Silver Run-DFD implements a superset of Gane and Sarson; differences appearin the way processes are displayed.andP;  In addition to the numeric identifierand textual label, the Silver Run process icon shows the names of resourcesthat execute the function identified.andP;  This resource could be a person,program, company, or department.andP;  The Silver Run system also distinguishesbetween processes that only transform information and those that transformboth information and materials.andP;  They are distinguished in the diagram and bydifferences in icon shape.andM;Another important feature of Silver Run-DFD is its transfer function.andP;  Thisfacility is used to exchange the contents of the data-dictionary (whichencapsulates the model) between other Silver Run programs or programs outsidethe Silver Run system.andP;  This function allows users to access datadictionaries elsewhere on the Macintosh or on other computers, includingmainframes.andM;It is also possible to export the data dictionary so it can used by SilverRun-ERM to create an entity-relationship model from it.andP;  In the place of thesingle dictionary list in ANATOOL, the items are segregated in the Silver Runsystem by type (process, external entity, data store, data flow, dataelement, structure, and resource).andP;  Each type has its own menu-accessoperation and corresponding definition window form.andP;  Also, instead ofallowing data to be defined in terms of basic or known types, the Silver Runsystem simply lets the designer use his or her own codes, so the designermust keep track of what the codes represent, though there are places toindicate the byte size and alias of any item.andM;Structured data is defined in a recursive manner by opening an emptystructure below a given name and then filling in the field names in thewindow form provided.andP;  Silver Run-ERM provides the same developmentenvironment as Silver Run-DFD but produces entity-relationship modeldiagrams.andP;  The difference between data-flow and entity-relationship diagramsis the view of the system being used.andP;  In a data-flow diagram, the system isdefined in terms of data and the processes that transform it while it flowsthrough the system.andP;  In the entity-relationship approach, the system isdefined as a collection of entities and the relationships between them, plustheir common attributes.andM;An entity is any concrete or abstract thing in the system.andP;  Examples ofentities are specific people, purchase orders, and consumer goods (such as acar of a particular make, model, and serial number).andP;  A relationship is anassociation between entities, such as John (an entity) lives in(relationship) Amsterdam (another entity).andP;  Finally, an attribute is aproperty of an entity, relationship, or association of entities.andP;  If personis an entity, some attributes of person might be name (Howard), age (35),weight (215), or social security number.andP;  The items in parentheses are valuesof the attributes, and differentiate two instances of an entity from oneanother.andM;The Silver Run-ERM program is similar to the data-flow diagram programs inoperation.andP;  A work area is provided and shapes are pulled from a palette ontothe work area.andP;  These shapes are automatically numbered and can be named,linked to attributes, and linked among themselves with lines and arcs.andP;  Thelink line between two shapes shows the parity of the relationship (one toone, one to many, one to zero or one, or one to zero or many) as an orderedpair of numbers at the line head (called the cardinality of the relationship.andO;For example, John is-son-of Mary is indicated one way, while Johnis-boyfriend-of Mary is indicated a different way (depending on how manywomen named &quot;Mary&quot; John knows).andM;The dictionary manager in Silver Run-ERM follows the same general pattern asin Silver Run-DFD: one window is provided for entity definition, one forrelationships, and one for attributes.andP;  An interesting mechanism associatesentities and relationships with attributes.andP;  When both the attribute list andentity-relationship diagram windows are open, you select the desiredattribute name, drag it to the entity or relationship with which it isassociated, and drop it in place.andM;The third member of the Silver Run system is Silver Run-LDM, which interfacesto database managers.andP;  This tool allows the system designer to create recorddescriptors for either relational or network databases.andM;The Silver Run system is a well-designed package.andP;  The three applications arenicely integrated; together they provide the means to specify a great deal ofinformation about a system and the data that flows through it.andP;  All threeprograms can produce either high-quality diagrams or formatted reports andcan import and export the data dictionary for use with other applications.andO;If you are willing to do without automated code generation, this is a goodchoice for the analysis and design phases of a system.andM;Deft Inc.andM;Deft v. 3.1andM;This package comes in two parts: the Deft Editor Set and the Deft Utilities.andO;Versions 3.0 and 3.1 were provided.andM;The Deft Editor Set consists of an entity-relationship diagram,program-structure, forms, and data-flow diagram editors.andP;  The last facilitysupports both Yourdon and Gane and Sarson charting methodologies.andP;  In v. 3.0,these were found in two separate editors; in v. 3.1, they are combined in asingle, integrated editor.andM;The Deft Utilities consist of a design compiler and dictionary merge.andO;Although Deft has no explicit data-dictionary editor, all of the Deft editorsprovide several means of accessing the dictionary via a central dictionaryutility integral to each editor.andM;As in most of the editors reviewed here, the data-flow diagram editorsprovide a graphical, MacDraw-like, chart-editing environment.andP;  The work areawindow contains a palette of tool shapes representing the symbols andconnectors in the data-flow diagram chart.andP;  Since two slightly differentstyles of chart are supported, two slightly different palettes are provided.andO;They have the same number and kind of shapes and differ only in minordetails.andM;The tools work identically regardless of the method chosen.andP;  You select ashape on the palette and either drag it to the work area and drop it at thedesired place or, in the case of connection lines, use the tool to draw aline or arc between two shapes in the work area.andP;  One nice shortcut in theDeft editors is that icons in the tools palette can be selected from thekeyboard.andP;  Use Command-1 to select the top icon, Command-2 for the next, etc.andM;You can cut and paste objects in the document or copy them to the Macintoshclipboard for pasting copies of objects.andP;  Deft's data-flow diagram editorsupports a duplicate option that is separate from the copy command.andP;  This isdifferent from other editors in that duplicated objects are affected bymodifications to any of them, whereas copied objects are must be separatelychanged.andP;  The purpose of duplicating rather than copying objects is to neatenthe diagram (so you can have the same object in two or more places on thedata-flow diagram and avoid intersections between flow lines).andP;  Only externalentity and data store objects can be duplicated.andM;Like ANATOOL and Silver Run, the Deft package does not contain an explicitdata-dictionary editor.andP;  Instead, the individual Deft applications can eachaccess and edit the data dictionary.andP;  In the data-flow diagram editor, youaccess the dictionary by double-clicking on an object, which can containeither a data flow or data store.andP;  The data dictionary in the data-flowdiagram editor does not decompose an object to much depth, allowing the datastructure to be represented by the names of its component attributes (similarto Pascal record fields).andM;Unlike ANATOOL, which limits the number of diagram levels to nine, the Deftdata-flow diagram editor claims to allow an unlimited number of levels.andO;Since each level is saved in its own file, the claim is probably true withinthe limits of disk space and everyday usage of the term &quot;unlimited.&quot;andP;  Onenice feature of the Deft data-flow diagram editor is its ability toautomatically annotate diagrams with respect to flows imported from andexported back to the next level up (from 1.1 back to 1, for instance).andO;Special import and export connector symbols can be inserted into the diagramfor that purpose whenever a process is exploded (expanded into a new diagramlevel to show the inner workings).andP;  The data-flow diagram editor produces atextual description of the data-flow diagram document upon request, includingas much or as little of the diagram as desired.andM;The Deft entity-relationship diagram editor provides similar chartingfunctions for entity-relationship diagrams, as does Silver Run-ERM.andP;  Theunderlying methodology used here is a mixture of several techniques,including those of Chen, Bachman, and Martin.andP;  The actual chartingmethodology is slightly different from that of the Silver Run editor.andP;  In theDeft editor, relationships are represented by the lines and arcs connectingshapes in the diagram (as opposed to being shapes themselves); they connectentities and/or views.andP;  In addition, the cardinality of a relationship isshown by the number and kinds of arrowheads on the connection lines ratherthan by an ordered pair, as in Silver Run charts.andM;One new feature of the Deft entity-relationship diagram editor is the abilityto define indices for entities.andP;  This feature is useful when using theGateway interface to a mainframe Ingres database, where entities representtables and data attributes represent columns in the table.andP;  Theentity-relationship diagram editor can make work with SQL hosts and non-SQL,non-QUEL hosts.andM;The Deft program-structure diagram editor provides a graphical drawingenvironment in which to chart the behavior of a module of software in termsof logical tasks.andP;  Starting from a root task representing the module, eachlevel of the chart refines and expands the module's processing into more andmore subtasks.andP;  Tasks are all represented by rectangles and have foursubtypes: normal (executed once, unconditionally), conditional (executed onceif the associated condition is true), loop (executed one or more times untilsome associated condition is true), and subprogram (simply a collection oftasks, executable as control-flow demands).andM;A program-structure diagram is not quite a flowchart.andP;  The main difference isthe degree of detail incorporated.andP;  In flowcharting, the designer expandstasks until they represent single program statements.andP;  This degree ofverbosity is not expected of a program-structure diagram.andP;  The documentationfor the program-structure diagram editor states that in designing a system,would generally create a program-structure diagram for each unexplodedprocess in the data-flow diagram, where a lower data-flow diagram level wouldbe cumbersome or impractical.andM;In addition to the information represented by the task block itself, theprogram-structure diagram editor allows information to be attached to a taskdescribing input or output parameters.andP;  This information is propagated intothe central data dictionary maintained by all the Deft tools.andM;Another piece of information specifiable in a program-structure diagram isthat a particular subprogram task is an asynchronous system trap, which is aroutine invoked automatically by a computer's operating system when aparticular event (such as completion of an I/O operation) occurs.andP;  Other thanthe differences in invocation, asynchronous system traps behave exactly likesubprograms.andM;The Deft forms editor provides facilities for the design of the data accessand entry interfaces to a database, primarily to Relational Technology'sIngres database, which typically resides on either a DEC VAX or an IBMmainframe running CMS.andP;  The form contains data attributes from the datadictionary according to the rules of the Ingres VIFRED Forms Editor.andP;  Theforms editor can also be used to design access forms for non-Ingres databasesor even take such a form design and output it as plain text suitable forinclusion by a word processor.andM;To use the forms editor, open a window list into a dictionary, selectattribute names, drag them to the work area, and deposit them on the formdesired.andP;  Each attribute name is accompanied by a data field that shows (atleast) the expected size of the entry.andP;  Attributes can be moved singly or inwhole tables, in which case the attributes become columns on the form.andM;At this point, I encountered a documentation flaw.andP;  In the section dealingwith the DISPLAY FORMAT item of the OPTION menu, the manual obligingly showswhat the dialogue looks like without explaining the different buttons andcheck boxes on it.andP;  Referring back through the manual to theentity-relationship editor document, I found a similar dialogue with betterlabeling that can be mapped onto the one in the forms editor.andP;  Still, a userdocument should explain things better.andM;The form can be printed out in its graphic format or a textual report can begenerated.andP;  In any event, the information that describes the form goes intothe dictionary along with everything else and can be processed by the designcompiler.andM;The Deft design compiler acts as the final arbiter of the correctness of asystem design.andP;  It can process the documents produced by any of the Defteditors and validate them against each other and against the information inthe central data dictionary.andM;The Deft editors were designed with deliberate fuzziness in what they wouldaccept in a design.andP;  Within the limits of the particular methodology (ormethodologies) supported by a particular editor, they allow you to create adesign withconstructs or information that shouldn't be allowed in a rigorousdocument.andP;  As suggested by the design compiler manual, some people might useone or another of the Deft editors for business planning, in which case itemsmight be included in a chart that wouldn't necessarily belong in one used forsystem analysis or design.andP;  The intent was to allow more flexibility in theinitial stages of a design, then tighten it with the design compiler, whichis far more rigorous.andM;A second purpose of the design compiler is to combine all the informationgenerated while creating charts and produce object files that encapsulateeach central dictionary in a form suitable for upload to another computer,possibly a mainframe.andP;  The design compiler can thus not only perform syntaxchecks on a set of design documents but can produce the upload file and evenperform the actual upload operation, including possible translation and/orcode generation if Deft Gateway to Ingres is used.andM;The operation of the design compiler is relatively simple.andP;  From the initialopen window, one successively opens Deft documents (via a standard MacintoshOPEN dialogue), which causes the associated dictionary to be added to the onethe compiler is accumulating.andP;  A nice feature here is a toggle that causesthe compiler to open secondary focuments when it opens the primary programstructure.andP;  For each document opened, a line is added to the window, showingthe document type (for example, entity-relationship diagram or form), name,and date and time of last modification.andP;  Documents can also be selected onthe desktop and opened automatically, along with the compiler, bydouble-clicking.andM;After at least one document has been opened, the compiler can perform itsvalidation functions.andP;  Regardless of whether syntax check or compile designis requested, the compiler opens an error window in which to displayinformation and error messages it may generate.andP;  This window has buttons thatallow pausing and cancelling the checking operation in progress.andP;  If compiledesign is selected, as each document is processed, it will be added to thedeveloping object file if it is error-free (you will be prompted for a namefor the file when it is created, along with the location where it will bestored and the name for the database represented.andP;  The compiler also supportsa find feature to allow the message window to be searched for specificstrings.andM;A really nice feature of the design compiler is the ability to take an Ingresdatabase design, download it with the Deft Gateway utility, andreverse-engineer it to produce Deft editor documents.andP;  The file menu of thedesign compiler (and indeed several of the other Deft editors) includes atransfer item that allows you to switch from the current program to any otherprogram, Deft or otherwise.andP;  To fully support this feature, a significantamount of free memory is required: in excess of 600K (more likely, more thana megabyte to be fully useful).andM;The kind of errors the design compiler can trap include undefined andless;objectandgt;,island andless;objectandgt; (isolated or unconnected), unlabeled andless;objectandgt;, missing dataflow, andless;objectandgt; not found in data store, flow not imported, and joininconsistent, to name a few.andP;  The program correlates information fromprogram-structure diagrams with that from data-flow and entity-relationshipdiagrams as well.andM;The documentation for the Deft package is a decent-sized manual in alooseleaf binder.andP;  It is full of screen captures from each of the programs,though these pictures are not always self-explanatory nor explained by theaccompanying text.andM;Even without the Gateway Utility, this is a well-rounded package thatprovides a wide set of tools, not just a data-flow diagram editor.andP;  Theprogram-structure diagram editor, in particular, is especially useful incontexts beyond system analysis and design.andP;  While it doesn't directlysupport code creation, the features it provides beyond mere flowchartcreation are impressive enough to warrant its use in general program design.andO;Deft's is one of the two best packages covered in this review.andM;Starsys Inc.andM;MacBubblesandM;MacBubbles consists of two disks: College Version and Demo Data.andP;  The latterdisk contains many electronic documents, including several different orderforms and documents of general interest to system designers and otherpotential users.andP;  No external documentation or manual is provided.andM;MacBubbles consists of two programs: MacBubbles and MacBubbles DataDictionary.andP;  The former is a data-flow diagram editor and the latter permitsdirect maintenance operations on the data dictionary.andP;  The data-flow diagrameditor supports Yourdon-DeMarco system analysis with Ward-Mellor andHatley-Boeing real-time extensions.andM;The name of the product comes from its use of circles (bubbles) in place ofthe rectangles used by other data-flow diagram editors to representprocesses.andP;  The other symbols used are similar to those of other data-flowdiagram editors.andP;  Data flows use one- or two-headed arrows like those inentity-relationship diagrams.andP;  Unlike other editors, the MacBubbles flowlines are fluid and can be placed wherever the designer wishes to enhanceclarity.andP;  The program supports 11 levels of data-flow diagram decomposition.andO;One unique aspect of the MacBubbles system is that it can only send dataoutput to Postscript-compatible printers and HP 7475 plotters.andM;The data-dictionary utility will load data-flow diagrams and build a datadictionary from the information in it.andP;  The utility can parse through aminispec document and build a data dictionary from its contents.andP;  The usercan build data-dictionary entries on the fly, but there must be a data-flowdiagram or minispec to relate the name to.andP;  The data-dictionary utility canbe used to merge multiple data dictionaries into a single file and export thedata-dictionary information as ASCII text.andM;MacBubbles supports very large dictionaries and diagrams with largepopulations of objects.andP;  The programs require 800K or better RAM and will runon a Macintosh Plus.andM;MacBubbles compares favorably with the other data-flow diagram editorsreviewed, though it would have been easier to use if it had a manual (thecompany has promised a manual to everyone who buys the product, thoughrepresentatives admit they are late in producing one).andP;  It suffers incomparison with the others because of its memory requirements and itslimitation to Postscript output devices (a lot of analysts use ImageWritersor other non-Postscript printers).andP;  In general, you'll do better with aproduct where the data-dictionary features are integrated with the data-flowdiagram editor so changes to the data-dictionary are automatically reflectedin the editor.andM;Iconix Software Engineering Inc.andM;PowerTools SD v. 2.03andM;This package ties Deft for the title &quot;Best Package Reviewed.&quot;andP;  It consists offive products, each on its own disk: FreeFlow v. 2.0, a dataflow diagram,control-flow diagram, and minispec editor; FastTask v. 1.0, astate-transition diagram editor; SmartChart v. 1.3, a program-structure charteditor that comes with a language-sensitive editor; PowerPDL, a pseudocodeeditor; and ASCII Bridge v. 2.0, a utility for converting PowerTool files toand from flat ASCII text.andP;  The package has no explicit data-dictionaryutility, distributing the capabilities among the various editors instead.andO;Each program can be purchased separately or all five can be purchased as thepackage PowerTools.andM;After a brief overview of the program, the manual provides a helpfuldiscussion of structured analysis and design, including differences among thevarious approaches and guidelines for effective system analysis.andP;  FreeFlowand FastTask support system analysis, while SmartChart supports system designand PowerPDL is for system implementation.andM;This is the only package reviewed here that is copy-protected.andP;  Each programin the package must be installed using an obnoxious procedure similar to thatrequired by Lotus 1-2-3.andP;  The program master disk must be kept secure sinceit retains a copy count and is necessary to uninstall the program.andP;  Iconixgoes so far as to recommend that you uninstall the program before doing ahard disk backup and reinstall it, an irksome requirement for a professionaldeveloper.andM;As with the other data-flow diagram editors, the user selects a tool from thepalette, drags it to the work area, and either drops it into place (if it's ashape tool) or uses it to connect shapes (if it's a line or an arrow).andP;  Atool for adding labels and other informative text to the picture is included.andO;The big difference between FreeFlow and its competitors is that the programsupports the creation of both data-flow control-flow diagrams.andM;Actually, rather than complicating the process by supporting separatediagrams, FreeFlow simply provides toggles for displaying data flow, controlflow, or both.andP;  The difference is essentially which flow lines are visible;data-flow lines are solid lines and represent data objects being passedbetween external entities (also called terminators), data stores, andprocesses; control flow lines are dashed and represent signals travellingtogether that can take on a finite number of states.andM;Expanding and embellishing a process is the same as in the other editors.andO;The user either selects the process symbol (the manual refers to it as a&quot;process bubble&quot;) and chooses an open child from the DIAGRAM menu or simplydouble-clicks on the symbol.andP;  As in the other editors, FreeFlow automaticallynumbers and labels the new diagram so the parent-child relationship ismaintained.andP;  Each level of diagram is saved as its own disk file, sopotentially unlimited levels are supported.andP;  Whenever a process can no longerbe expanded into smaller processes, it can be expanded into a textualminispec.andP;  When a minispec is created, it is automatically initialized withthe inputs and outputs derived from the process diagram from which it wascreated.andP;  In addition, the minispec is automatically formatted with cues forthe PowerPDL pseudocode processor.andM;FreeFlow automatically adds symbol and flow names to the data dictionary, butonly when the diagram is saved to disk.andP;  The data dictionary can be accessedfor viewing or editing either by double-clicking on a flow or store in thediagram or via the edit dictionary item of the DICTIONARY menu.andP;  Entries inthe data dictionary conform to an extended DeMarco binary normal form syntaxsimilar to that used by ANATOOL.andP;  Thus, the definition might look like:account_info = account_number + account_balance.andP;  + account_balance.andM;When a new name is added to the data dictionary, a type is selected for itfrom among these options: data flow, control flow, event, process, primitive,action, store, terminator, and state.andP;  (If some of these do not seemappropriate, remember that the data dictionary is common to all the PowerToolprograms.)andP;  Entries can be edited and supplied with a structure definition orgeneral comments.andP;  One nice feature of the data dictionary editing level isthat you can select an entry and request a quick report giving all the otherentries that reference the selected one as a component.andM;The FastTask editor supports the creation of the description of finite-statemachines, especially those that model time-dependent characteristics.andP;  Such astate-transition diagram captures the sequential movement from state tostate, events that precipitate an action, and the resulting actions.andM;Unlike most of the other editors, FastTask doesn't use the MacDraw-styleenvironment but provides a user-interface similar to MacProject's.andP;  Insteadof a palette of graphic tools, the chart designer is limited to rectanglesand arrow-headed lines.andP;  The mouse is depressed at the spot on the work areawhere a state box is desired, and the shape grows as the mouse is moved withthe mouse button depressed.andP;  If the mouse button was originallydouble-clicked instead of merely held down, line drawing is initiated.andP;  Linesare drawn with straight segments, use 90-degree turns to change direction,and end either by clicking the mouse when the line reaches the edge of a boxor double-clicking if the cursor is in a blank area.andM;Each box represents a state and each line (ignoring turns) represents anevent-action ordered pair.andP;  An event causes a different state to be enteredand the action is what to do during the process of moving between states.andO;For example, the action for the specific event INVALID_ACTION might beGET_NEW_TRANSACTION.andP;  Each state, event, and action name is automaticallyentered into the data dictionary automatically as it is created.andM;As the diagram is developed, the program simultaneously creates tables in thebackground.andP;  These tables capture the same state-transition informationrepresented in the diagram, but with a different focus.andP;  The types of tablescreated are &quot;state table,&quot; &quot;state/event matrix,&quot; and &quot;from state to state&quot;matrix.andP;  The state table shows the events, actions, and next state for eachstate represented in the diagram.andP;  The state/event matrix has states acrossthe top, events along the side, and actions in the matrix cells.andP;  The &quot;fromstate to state&quot; matrix shows &quot;from&quot; states down the side, to states along thetop, and events and actions in the matrix cells.andM;Once the data-flow, control-flow, and state-transition diagrams have beencreated with FreeFlow and FastTask, the information they have put into thedata dictionary can be output for further use in the system design andimplementation phases using the SmartChart and PowerPDL applications.andP;  Thisprocess starts in FreeFlow by choosing &quot;Create PDL&quot; on the MINISPEC menu.andO;The output file created contains skeletal specifications, suitable forrunning through the PowerPDL processor to produce a program-design language,table of contents, and data cross-reference listings for use in designing andimplementing the system.andP;  These skeletal program-design language files can beenhanced and embellished with SmartChart to add pseudocode using thelanguage-sensitive editor built into it and PDL templates.andM;SmartChart also aids in the creation of program-structure charts.andP;  Thiscapability depends on PowerPDL having been first used to process the skeletalPDL file to produce a structure chart file.andP;  This file contains a modulenesting tree that encapsulates all the control functions defined in the otherdiagrams and indicates the who-calls-whom relationships for them.andP;  The onlypurpose of this charting capability is display, not active design.andP;  The chartdisplayed cannot be edited by the application; any changes in the structuresrepresented must be done in the underlying PDL.andP;  This editing can be done inSmartChart using its language-sensitive editor.andM;The SmartChart language-sensitive editor can be used either to editprogram-design languages created by PowerPDL or as a text editor in its ownright to create and edit program source files in PDL, Ada, C, Modula-2,Pascal, FORTRAN-77, LISS, or PROLOG.andP;  If non-PDL languages and PowerPDLcomments are used, the PowerPDL processor can still be used to create PDLlistings from the comments, greatly enhancing the maintainability of sourcefiles since a direct, automated tie-in exists between the source and itsdocumentation.andM;One nice feature of the language-sensitive editor is the ability to use mixedcase, all uppercase, or all lowercase keywords.andP;  The language-sensitiveeditor also uses the auto-indent feature common to an increasing number ofsource-code editors, computing indentation for new lines based upon theindentation of the previous line and the keywords in it (if any).andM;The best feature of the language-sensitive editor is the inability to uselanguage templates in designing code.andP;  Templates are essentiallyprefabricated language statements with placeholders, as in this Pascaltemplate: IF (andless;expressionandgt;) THEN andless;statementandgt; ELSE andless;statementandgt;:andM;In this example, andless;expressionandgt; and andless;statementandgt; are placeholders, indicatingwhere the programmer should insert variables, constants, expressions, andother language statements.andP;  The andless;statementandgt; placeholders can be expanded withother templates in their turn.andP;  The result of this systematic templateexpansion is a program that should be a lot closer to being error-free thanone developed in the traditional manner.andP;  If nothing else, thelanguage-sensitive editor can guarantee fewer syntax errors in code.andM;Another nice feature of the language-sensitive editor its search capability.andO;In addition to allowing traditional string searches, the language-sensitiveeditor supports regular expression searches a la UNIX.andP;  A regular expressiondiffers from a simple string in that certain characters of a regularexpression specify complicated search requirements (for example, match startof string, match any single character from the set which follows, match anycharacter except linefeed, and match one or more of the preceding subpattern.andO;This capability, which originated in and has evolved in UNIX systems over theyears, is very powerful.andM;The documentation for PowerTools is a single, looseleaf binder, with onechapter representing each component product and an appendix containing thevarious listings produced by PowerPDL for a sample system.andP;  As statedearlier, the chapters for each of the editors include a brief introduction tostructured systems analysis and design.andP;  These overview chapters wereparticularly useful and helpful.andP;  The product descriptions are well writtenand make using the product easy.andM;Despite the lack of an entity-relationship diagram editor (which the manualindicates will be available in a forthcoming release), PowerTools 2.0 is anexcellent package.andP;  The edition of the program design language processors tothe data-flow diagram and state-transition diagram editors more tha offsetsthe lack of entity-relationship diagram capabilities since they only add tothe analysis information, while the program-design language and code-editingcapabilities allow developers to easily and naturally segue from systemanalysis and design into system implementation without losing any of thedesign information.andM;More alike than differentandM;These products are similar enough to make choosing between them difficult.andO;The common denominator seems to the data-flow diagram editor and accompanyingdata dictionary, but even there the packages differ.andP;  Not radically, to besure; most of the editors reviewed hereshare the MacDraw-style userinterface, which is a good one, particularly when coupled with automaticcapture of object definitions into a dictionary.andP;  The fine details of eachuser interface differ from product to product, but users who have masteredone system should have no difficulty quickly learning any of the others.andM;All the products can produce reports of some kind, even if that only meanssupporting printing of the diagrams.andP;  For some users, this may be sufficient.andM;The best packages are PowerTools and Deft.andP;  Both provide the widest range oftools, including provisions for interacting with other computers, and cantherefore support more of the software development life cycle than theircompetitors.andP;  PowerTools may be the best package, because it has componentsthat support the design and implementation phases, not just the analysisphase.andP;  Using an integrated set of products with a guaranteed common datadictionary throughout dramatically improves the development process.andM;All the packages reviewed here are worthwhile and can be useful to systemsanalyst and developers.andP;  All can provide meaningful, internally consistentdocumentation of the structure of a system.andP;  The lack of such documentationis probably the single biggest hindrance to producing a quality system in thefirst place, much less maintaining it.andP;  These packages provide much-neededautomation to the software-engineering task.andO;</TEXT></DOC>
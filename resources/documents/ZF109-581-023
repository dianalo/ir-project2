<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-581-023  </DOCNO><DOCID>09 581 023.andM;</DOCID><JOURNAL>UNIX Review  Nov 1990 v8 n11 p92(5)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Short takes. (Daemons and Dragons) (column)</TITLE><AUTHOR>Kolstad, Rob.andM;</AUTHOR><DESCRIPT>Topic:     ProgrammingSecurityKernelsDisk StorageStorage MediaReliabilityFailure Rate.andM;</DESCRIPT><TEXT>DAEMONS AND DRAGONSandM;This month's column contains a few mini-columns, no one of which is longenough to merit its own treatment.andP;  The short essays are musings, opinions,and interesting facts which you may find applicable for your every daytasks--or not.andP;  I have not drawn too many conclusions or presented too manyprescriptions: the data is there for you to digest in any way you wish.andM;PrestigeandM;My first exposure to computing was as a youth when I learned the Go-Golanguage at the University of Oklahoma.andP;  I used a Bendix G-15 (drum memory,2183 words of 29 bits each [that's seven hex digits plus sign, of course],vacuum tubes, a speed range of 0.00003 MIPS to 0.0015 MIPS depending on howyou laid out your instructions on the drum, and a scientific speed rating of0.000001 to 0.000007 MFLOPS--no kidding).andP;  It was not a &quot;screamingprocessor.&quot;andP;  It was really cool to a seventh grader, though: it would doprecisely what I told it to, which no one else in my world was doing at thattime.andM;Go-Go (so clever a name), was later renamed to ALPS (the AlgebraicProgramming System) and formed the target of studies by early computerscience students or even non-computer students (for calculations and allthat).andP;  We had but two G-15s at the time, and they were single-user machines,of course.andP;  I was always fascinated by the smart guys hanging around the lab.andM;At the G-15 lab, the smart guys knew better (and faster) programminglanguages.andP;  They knew Intercom 550 (and even Intercom 1000DP--adouble-precision language.andP;  Wow!).andP;  Unlike Go-Go, which resembled BASIC orFORTRAN in some ways (at least it had algebraic statements and some loopingconstructs), the Intercom languages resembled single-address machine language(like Knuth's MIX, which was named for the G-15's following, the G-20, amongother computers).andP;  Unlike MIX, the Intercom languages were completely numeric(as opposed to symbolic).andP;  A program at location 0900 to add twofloating-point numbers stored at locations 1000 and 1001 and store the resultback into location 1000 looked like this (from memory, 25 years later):andM;0900: 421000 0901: 431001 0902: 191000andM;in contrast to the C language's:andM;a += b;andM;which many people find a bit more readable.andP;  It only took me a couple yearsto want to be a &quot;smart guy&quot; and learn the Intercom languages.andM;I learned the Intercom languages.andP;  I was a cool guy.andP;  Except, the reallysmart guys were working in machine lanaguage (which must be said reverently,in a lower pitch of voice).andP;  The G-15 machine language interface was calledPPR (the Program Preparation Routine).andP;  It assembled decimal fields ofinstructions into the hexadecimal (actually, sexadecimal--a term eventuallytoo racy for the conservative computer types of the world) instructionsexecuted by the G-15's vacuum tubes.andP;  The key to succeeding in PPR was theconstruction of a program to list other programs.andP;  While this may be obviousto us here in the 1990s, Harold Wiebe wrote the first practicating listingprogram for the G-15s--and this was not until ten years after they werereleased to (unleashed upon?) the marketplace (and eight years after theywere completely obsolete).andM;Mr.andP;  Wiebe's listing program was remarkable because not only did it list theinstrucions in decimal and typed them at the maximum speed of the typewriter,it listed them in order.andP;  This was the state of computing in those dark ages.andO;Until then, prgrammers kept their listings on coding forms, laboriouslyupdated by hand (and with a special matrix on the left side of the form forkeeping track of which drum locations had been used).andP;  Each G-15 instruction,you see, had a field for the locations of the next instruction.andP;  This way,you could optimize your programs with respect to the drum spinning.andP;  Once aninstruction had completed, could pick up the next one quickly, instead ofwaiting for the drum to spin completely around again.andP;  Imagine a languagewhich not only had GOTOs, it required every statement to contain a GOTO!andM;After learning machine language.andP;  It acquired a red felt-tip pen.andP;  This wasright after such pens were invented, and they were quite the vogue formarking computer listings (I had begun moving up to an IBM 1130 withFORTRAN--a high-level language compared to ALPS, Intercom 550, and PPR).andP;  Iwanted to be cool like the smart guys, who also all had red felt-tip pens.andM;As the years went by, I wanted to be cool by having programs that wouldn'tfit into a single box of cards, having programs that could use the plotter,being the PDP-10 operator that performed dumps, and all those sorts ofthings.andP;  there was always a new changllenge for growth on the horizon.andP;  Iwanted to be the cool guy.andM;These days, the cool guys are obvious.andP;  At user sites, they are thesuperuser.andP;  The &quot;root&quot; can do anything to the system--even crash it (I don'tknow why that's such an attractive idea, but it is).andP;  And once you're asuperuser, you know what the next step is.andP;  You want to be a kernel hacker.andO;They're the dudes getting all the chicks at the beach (or the chicks gettingall the dudes).andP;  They're the cool people who really know &quot;where it's at.&quot;andO;This goes on, of course.andP;  there are hierarchies within kernel hackers (&quot;I dovirtual memory,&quot; ad nauseaum).andM;I bring all this up to point to a couple intersting stories from the lastUsenix system administrator conference.andP;  A standard problem at many sites isthat users wish to have root access--to become the superuser at will.andP;  It isdifficult to explain to them (that is, a vice president or a full professor)that they are not qualified or that they lack some good skill to be asuperuser.andP;  It's even more difficult to explain that it is a guaranteed badidea, which it so often is.andM;At a BOF for system administrators at the Anaheim Usenix conference (Summer1990) two interesting suggestions were made.andP;  One administrator renamed rootto clerk.andP;  No eminent professors or globe-trotting VPs wanted to have clerkaccess.andP;  Isn't that fascinating?andM;Another administrator had a unique response to user requests for superuseraccess.andP;  &quot;No problem, as soon as I can order your beeper we've get you allfixed up.&quot;andP;  Universal reply &quot;Never mind.&quot;andM;I think these two schemes are a fascinating study of human nature vis a viscomputing.andM;Primary Storage ReliabilityandM;Every year the disk manufacturers supply us data storage consumers withbetter and better disks.andP;  The last couple years have seen a dramatic increasein transfer rate (the new IPI disks run at 6 MB per second) in addition to anice increase in storage capacity (2 GB disks are available and will becomemore common).andP;  To top it all off, the prices really haven't gone up on aspindle basis and have declined a lot on a per-megabyte basis.andP;  This is greatfor consumers.andM;It's been so great that many consumers have purchased new disk storage andutilize it on a continuos basis.andP;  Where hundreds of megabytes a few yearsago, 4 GB is common now.andP;  Those gigabyte-sites of yore now have eight or tenor more gigabytes.andP;  It's really cool (assuming you can back it up, which isthe subject of a different essay).andM;I finf the statistics that surround secondary storage devices to beinteresting, since I am often in the business of figuring out how to make thesecondary storage pool highly available and reliable.andP;  If the disks neverbroke, i would eliminate one major source of problems in the availabilityarena.andM;Unfortunately, disks do break.andP;  When they break, they sometimes lose all thedata on their platters (or they render in unrecoverable orunrecoverable-for-a-month, which is just as bad).andP;  Disk drive vendors producea statistically large sample of disks and are in a fine position to do allkinds of reliability curve plotting and prediction about their disks.andM;The newest smaller disks (mostly used in smaller systems like microcomputers)have a MTBF (mean time between failure) of up to 150,000 hours or more.andP;  Theunits program tells us that is 17 years and 43.57339 days, more or less.andO;Wow!andP;  There's nothing to worry about there, is there?andP;  Of course, the disksthat you and I use have MTBFs more likk 50,000 hours (just under six years).andO;Note, of course, that disks work 24 hours a day, unlike myself and so manyother employees.andP;  So what's so interesting here?andM;Well, suppose you have ten of these 50,000-hour MTBF disks.andP;  The way thestatistics work, you have reduced your system's disk MTBF from 50,000 hoursto 5000 hours (just under seven months).andP;  This means that you should planahead to lose one or two gigabyters of data every seven months or so (not ona calendar, of course, but in the span of those months).andP;  My restore programrequires ten hours to restore a gigabyte.andP;  If your vendor offers diskstriping, you may have to restore multiple gigabytes (since losing one diskof a stripe is tantamount to losing them all) and thus spend one or twocomplete days in the restore process.andM;Obviously, if you have 20 disks then reliability halves again: 2000 hours isjust under 12 weeks.andP;  Imagine those people at the large governmentlaboratories with hundreds of disks.andP;  I have been an administrator at a sitewhich had enough disks to enter into the realm of statistical validity forthe pool as its own group.andP;  My pool hit the number dead-on.andM;The way those MTBF statistics work is very interesting.andP;  If statistics worksthe way it's supposed to (which happens with predictable regularity), halfthe disks will exceed the rated MTBF.andP;  Half won't.andP;  It is a most unfortunatecircumstance that choosing which half will or won't is impossible, a priori.andO;An article in EEE Times from March or so points out another interesting fact:10 percent of the disks will fail within 10 percent of their MTBF.andP;  Ins'tthat terrible?andP;  No complaints, though: disk reliability is truly fantasticand is improving every year.andP;  Planning ahead can mitigate almost alldisasters associated with disk failure.andM;True SecurityandM;We all talk about being secure in one way or another.andP;  &quot;One network isimpenetrable,&quot; you might hear people say.andP;  &quot;COPS gives our system an A +,&quot;say others.andM;Let's suppose that someone really wanted to break into your shop.andP;  They don'twant to mess around and read mail or show you how clever they are; they areindustrial spies who want to steal your company's secrets (or your researchdata or whatever is important at your site).andP;  I figured out (while working atanother company, several years ago) that the answer for that site wastrivial.andM;Here's a two-minute scenario which gets: all the chip designs, all theschematics, all the documentation, all the secret source software, and allthe internal documents and electronic mail.andP;  This is for illustrativepurposes only; do not try this on behalf of yourself or any agent.andP;  Use thedescription to learn how to protect yourself better against such attacks.andM;First, obtain a brick.andP;  A standard house brick will do.andP;  You don't need to goto the hardware store, you can substitute a medium size rock or any otherobject of that heft.andP;  Wait until pretty late at night when most people havevacated the building (our target).andP;  Drive your car to the window adjacent tothe machine room.andP;  Exit the car, leaving it running and leaving the driver'sside door open.andP;  Try the outside door, just in case the company is company isreally insecure.andP;  Assuming it's closed, use your brick (or substitute) tosmash through the window.andP;  In a quick, continuous motion, follow the brickthrough (you have roughly one minute until the security guard arrives).andO;Scoop up the five Exabyte dump tapes sitting next to the main machine (grabmore if you want to be sure).andP;  Scramble back out the window to your car andtake off.andP;  You spent les that a minute inside the building.andP;  You now have ina package weighing less than three pounds (and which fits nicely into a cigarbox) that contains all the company's secrets.andP;  Wasn't that easy?andM;Easy as it was, it doesn't meet the requirements of a &quot;good heist&quot; because itwas not covert.andP;  People will be looking for you and will demand not onlytheir data back but also that you go to jail.andP;  This is bad (for you).andP;  Ofcourse, you have committed a number of major felonies, which is also bad, andfor which you probably deserve to go to jail.andM;Movies like &quot;Topkapi&quot; and others depict perfect crimes: no one searches forthe perpetrator because the crime is undetected.andP;  Were you to be able toenter the machine room with a set of blank (or garbled) Exabyte tapes, youmight be able to switch them covertly and no one would ever be the wiser.andO;Would you as system administrator be able to detect such an attack at yoursite?andP;  What if the tapes that were swapped were from the ones you keep inyour off-site backup set?andM;Imagine the cost of damage to your organization and try to envision whatsorts of costs for a preventive (such as machine room door locks or lockingtapes in a safe) might be justified.andM;Rob Kolsted is busy preparing jeep tour maps and step logs for the LISAconference (which will have happened by the time you read this).andP;  ColoradoSprings is a great departure point for so many neat things to see inColorado: Pikes Peak (drive to the top), the Air Force Academy, aspens onGold Camp Road and Phantom Canyon Road, the Cripple Creek gold camp, theRoyal Gorge, and more.andP;  Contact Rob at kolstad@sun.com with any suggestionsfor future columns.andP;  Remember that it takes at least three months to turn asuggestion into a column.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-167-976  </DOCNO><DOCID>08 167 976.andM;</DOCID><JOURNAL>Software Magazine  Feb 1990 v10 n2 p8(2)* Full Text COPYRIGHT Sentry Publishing Company Inc. 1990.andM;</JOURNAL><TITLE>GUIs made easy. (graphical user interfaces) (Forum) (column)</TITLE><AUTHOR>Kahn, R. Douglas.andM;</AUTHOR><SUMMARY>Graphical user interfaces (GUIs) are intended to allownon-technical users to interact with many sophisticatedapplications and access information on corporate host-basedsystems via microcomputers.andP;  GUI users are unfamiliar with thedesign and operation of large systems, unlike systems analysts andMIS personnel, and their primary concern is use.andP;  Among thePC-based GUIs introduced since 1985 are the Macintosh Hypercard,Microsoft Windows, Presentation Manager, Hewlett-Packard'sNewWave, ATandamp;T's Open Look and DEC's DECwindows.andP;  The promise ofeasy learning and use of computers via GUIs made them popular withend users, but building GUI-based applications is difficult,requiring a background in systems software.andP;  Developers need a GUIdevelopment tool in a higher-level language representing a GUIDevelopment Environment (Guide); such an environment is described.andM;</SUMMARY><DESCRIPT>Topic:     Program Development TechniquesProgram Development ToolsApplications ProgrammingGraphical User InterfaceMicro-Mainframe CommunicationNew TechniquePrototype.andM;</DESCRIPT><TEXT>GUIs MADE EASYandM;Like any term in the computer industry, graphical user interface or GUI isbecoming overused but, at last, better understood.andM;An explosion of graphical user interface technology is taking place, and oneof the biggest needs it addresses is ease of use.andP;  GUI technology approachesthe ultimate solution--enabling non-technical end users to interact with amultitude of sophisticated applications.andM;This growing legion of non-technical users, from shop floor workers to chiefexecutive officers, uses personal computers to get vital information fromcorporate, host-based systems.andP;  But unlike systems analysts and other MISpersonnel, these users are unfamiliar with the parameters or characteristicsof those systems.andP;  System descriptions are of little consequence to them;their primary focus is on usage.andM;EASY TO LEARN AND USEandM;In the past five years, many PC-based graphical interfaces have beenintroduced.andP;  These include Hypercard on the Mac, Microsoft Windows,Presentation Manager, HP New-Wave, ATandamp;T's Open Look and Digital's DECwindows.andM;Yet the GUI concept gained market momentum even before these offeringsachieved large installed bases, mainly because GUIs are easier to learn andto use, from an end-user perspective.andM;But for the average application developer, GUIs pose a steep learning curve.andO;Even with GUI toolkits, GUI-based applications are hard to build.andP;  Developingsoftware for PC-based systems that interact with host-based applications canbe laborious if it requires writing code in C or difficult, low-levellanguages.andM;Since few application-level programmers have expertise in these systemsoftware specialties, development must be carried out by scarce, highlyskilled software engineers.andP;  Inevitably, either application backlogs pile upor development costs soar, or both.andM;The logical solution is to provide developers with not just an interfacedevelopment tool, but a higher-level language: one that represents afull-featured Graphical User Interface Development Environment (Guide).andP;  AGuide interface does not compete with standard GUIs.andP;  Rather, it complementsthem, using and enhancing their graphics capabilities, and giving thedeveloper easier access to their extensive functionality.andM;Guide produces a program that is:andM;* Non-procedural.andP;  Development is modular; changes are easy to make.andM;*Event-driven.andP;  Developers don't have to bother with sequences; they simplyassign responses to actions.andM;* Object-oriented.andP;  Screen objects retain their attributes when actions areapplied to them and can also &quot;inherit&quot; attributes from previously definedobjects.andM;* Designed for optimal prototyping.andP;  Developers can create a prototype thatruns isolated from the application, test portions of the interface with endusers, easily incorporate changes, then use the prototype code as thestarting point for the final application.andM;* Device-independent.andP;  Applications can be created without regard for thepointing device--mouse, touchscreen, lightpen, keyboard or other method--theend user chooses to interact with the interface.andM;At its core, a Guide is a high-level programming language which includes alllow-level routines.andM;PROTOTYPING TOOLandM;Freed from having to deal with low-level languages or system calls,application programmers can prototype quickly, involve end users from startto finish and develop intuitive, effective interfaces in as little asone-tenth the time required by standard interface tools.andP;  Not surprisingly,development cost savings can be substantial, and development times greatlyshortened.andM;But speed and cost are not the only reasons to develop with Guide.andP;  Any GUIcan create objects statically, but Guide can also create objects dynamically&quot;on the fly.&quot;andP;  By defining their contents and attributes based on informationavailable only at runtime, variable user choices can then be made availableat runtime.andM;For example, a Guide might query the mainframe application to determine whichreports are currently available.andP;  It then generates objects that representthose reports to the end user.andP;  Thus, the user has updated options.andM;The most compelling reason to develop with Guide is its ability to providecompatibility across different operating systems.andP;  Interfaces can be builtwithout regard to user platform or workstation.andP;  A single interfacespecification will execute on a variety of hardware and software.andM;SIMULTANEOUS EXECUTIONandM;In addition, applications can execute multiple remote or local applicationssimultaneously.andP;  All communications can be invisible to the user, who neednot know what computer resources--host-based, LAN-based or local--areutilized.andM;By providing programming interface consistency across multiple platforms andmulti-vendor networked environments, Guide technology will one day evolve toan industry standard, or set of standards.andM;For MIS management and application developers who want fast developmentturnaround, and users who want easy to learn and easy to use GUIs, the keyquestion will soon be, &quot;How did I do without it?&quot;andM;Kahn is president of Interactive Images, Inc., Woburn, Mass.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF206-948-780  </DOCNO><DOCID>06 948 780.andM;</DOCID><JOURNAL>PC Magazine  Feb 14 1989 v8 n3 p321(6)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>Comparing DOS and OS-2 file systems. (Power Programming) (column)</TITLE><AUTHOR>Duncan, Ray.andO;AttFile:   PCMAG\V08N03\QFN.ASM;0 Program:  QFN.ASM  QFN.ASM OS/2 version.andO;PCMAG\V08N03\QFN.C;0 Program:  QFN.C  QFN.C OS/2 version.andM;</AUTHOR><SUMMARY>Complaints about the DOS file system and how they were used in thecreation of OS-2 file systems are shown and compared.andP;  Astep-by-step look at file system terminology and file allocationtables helps to shown the differences between the MSDOS style andthe OS-2 approach.andP;  The OS-2 equivalents of QFN.C and QFN.ASMprograms which qualify filenames are the concluding installment ofthe Power Programming Library updates.andP;  Versions 1.0 and 1.1 ofOS-2 use the DOS like FAT file system but IBM and Microsoftpromise that OS-2 will be upgraded to support what they term an'installable file system.' While few words of explanation havebeen offered, how Microsoft has dealt with CD-ROM extensionsindicate where they are going with future file systems.andM;</SUMMARY><DESCRIPT>Topic:     MSDOSOS-2AnalysisComparisonDisk Space AllocationDisk Space UtilizationFile ManagementType-In Programs.andO;Feature:   illustrationtableprogram.andO;Caption:   DOS disk structure. (table)The OS-2 version of QFN-ASM, which qualifies filenames. (program)andM;</DESCRIPT><TEXT>COMPARING DOS AND OS/2 FILE SYSTEMSandM;Much carping and not a little criticism has been directed at DOS's so-calledFAT (file allocation table) file system lately.andP;  In the early days of MS-DOS,the superiority of the FAT file system over its historical predecessor (theCP/M file system) was so glaringly obvious that few programmers were inclinedto complain.andP;  At that time, too, few users knew of anything better.andP;  But, asfixed disks have grown larger and users familiar with more-sophisticated filesystems on workstations and minicomputers have come into the microcomputerworld, the Panglossian attitude toward the FAT file system has begun to fade.andM;The gripes about the DOS file system focus onandM;* the 8- and 3-character limitations on filenames and extensions;andM;* the 64-character limit on paths;andM;* file access performance on large fixed disks;andM;* the tendency of files to become fragmented (to be assigned to disk sectorsthat are not adjacent, which slows file access);andM;* the limited amount of information maintained in the disk directory; andandM;* the infamous 32MB volume limit.andM;The adventurous group of early OS/2 users and software developers are themost recent addition to the peanut gallery of FAT critics.andP;  On one hand,these people are relieved that OS/2 can read and write disks formatted byDOS, making moving files between the two environments effortless.andP;  On theother hand, they had apparently hoped (in defiance of common sense) that OS/2could provide this media compatibility and simultaneously offer adramatically better file system.andM;Thus the FAT file system has become the file system that people love to hate.andO;Before jumping on the bandwagon though, let's take a quick look at filesystem terminology in general, at the FAT file system's classic limitationsand the reasons for them in particular, and at some possibilities for thefuture.andM;FILE SYSTEM TERMINOLOGYandM;&quot;File system&quot; is a nasty, overloaded computer term that can have twocompletely different meanings.andP;  When used in connection with a volume ofstorage, such as a floppy disk, &quot;file system&quot; refers to the interdependenttables, control areas, and storage areas written on the disk.andP;  Takentogether, the various elements of a file system define the locations of allfiles, their contents, and the disk's free space.andM;As shown in Figure 1, the file system on a DOS disk is made up of the bootsector, the root directory, the file storage area, and the file allocationtable, which describes the usage of each allocation unit (cluster) in thefile storage area.andP;  The file storage area also contains all of thedirectories other than the root directory.andP;  These various areas areinitialized by the FORMAT program, and the boot sector contains a tablecalled the BIOS Parameter Block (BPB), which completely describes the disk'scharacteristics (heads, tracks, sectors per track, sectors in the rootdirectory, and so on).andM;When used in connection with an operating system, the term &quot;file system&quot;refers to those internal routines that translate application program requeststo manipulate files into appropriate directives to the system's disk devicedriver.andP;  The driver is the module that issues the actual hardware-dependentcommands to the disk itself.andP;  In both DOS and OS/2, the file system convertsapplication program file function calls into requests for the transfer oflogical disk sectors.andP;  The file system then uses the information it finds onthe disk in the boot sector, FAT, and directories, as illustrated in Figure2.andP;  The driver, in turn, converts logical sector numbers into physical unit,head, cylinder, and track addresses.andM;FAT FILE SYSTEM PROBLEMSandM;Many of the limitations of the FAT file system have their origins in othersystems.andP;  When Tim Paterson was writing 86-DOS (which later evolved into DOS1.0), he adapted the file allocation table concept from Microsoft'sstandalone BASIC, which was the first high-level language to run on thefamous Altair microcomputer.andP;  The use of a centralized table in which eachentry represents a disk allocation unit and the entries are chained togetherto represent files--the FAT--was ideal for floppy disks.andP;  In a floppy disksystem the number of allocation units was small enough that the entire FATcould be kept in memory at all times.andM;As multiple drive systems and large fixed disks have become common, however,the FAT design has become an impediment to good file-system performance.andO;Since each FAT can be quite large, it's simply not practical to keep theentire FAT for each drive resident in memory.andP;  The memory is needed for theexecution of application programs, instead.andP;  Consequently, since theoperating system must also read in FAT sectors in order to locate the file'sdata, successive file accesses often require time-consuming disk headmovements--even when the data in the file itself is stored in contiguoussectors.andM;Moreover, when a file is being created or extended, the FAT must be searchedsequentially for a free slot to be assigned to each chunk of data as it iswritten.andP;  Since there is no guarantee that free slots will be well localized,performance is degraded both when the file is written and when it is accessedlater.andP;  Pieces of the file are likely to be scattered all over the disk.andM;The 8-character limit on DOS filenames and the 3-character limit onextensions descends directly from Digital Research's CP/M operating systemfor 8080-and Z-80-based microcomputers.andP;  Paterson wanted to make it as easyas possible to port existing CP/M application programs to 86-DOS, so hecloned the file control blocks (FCBs) used in CP/M to open, create, read,write, and delete files.andP;  The FCBs have fixed-length fields for filenames andextensions, which were propagated by Paterson into the format of diskdirectory entries.andP;  Even though most DOS programs today use the more-powerful&quot;handle&quot; file functions (introduced in MS-DOS, Version 2.0) instead of FCBs,the 8-plus-3 limit is still with us because of the structure of diskdirectories.andM;Little is known about the origin of the 64-character limit on pathnames.andO;This limit appeared in DOS 2.0 (the first DOS version to support ahierarchical directory structure) and has remained unchanged in subsequentversions.andP;  The number appears to be completely arbitrary, and was probablyone of those implementation decisions that &quot;seemed reasonable at the time.&quot;andM;That old bugaboo, the 32MB limit on volume sizes, has a very clear and simplebasis, however.andP;  The file system in the DOS kernel issues its requests forlogical sectors to the disk driver by passing the driver a pointer to aninformation structure called a request packet.andP;  The request packet field thatholds the sector number is 16 bits long, which allows 65,536 sectors to beidentified: 0 through 65,535.andP;  65,536 times 512 bytes (the standard sectorsize in IBM-compatible systems) is 32MB.andM;In Compaq DOS 3.31, and now in IBM and Microsoft DOS 4.0, the definition ofmany internal disk-related tables and structures, the BIOS Parameter Block,and the disk driver read/write request packets have been changed to support32-bit sector numbers.andP;  DOS 4.0 can theoretically, therefore, support volumesas large as 2 gigabytes.andP;  The new limiting factor is the 32-bit file pointerused in the system file table and by interrupt 21h, function 42h.andM;FUTURE FILE SYSTEMSandM;Versions 1.0 and 1.1 of OS/2 use a FAT file system just like that of DOS.andO;OS/2 Version 1.1 supports volumes larger than 32MB in the same manner as DOS4.0.andP;  In response to the other criticisms of FAT file systems, Microsoft andIBM have stated that OS/2 will be upgraded to support something called an&quot;installable file system,&quot; but they have revealed few details.andP;  Let's try toimagine what they have in mind.andM;As far as the operating system goes, we can easily predict that thefile-system logic will simply be segregated into a separate, replaceablefile.andP;  This would be loaded into memory as the result of some CONFIG.SYS filedirective, much like a device driver.andP;  The operating system kernel would pass&quot;logical&quot; file manipulation requests (in terms of opens, closes, reads,writes, and so forth) to the file system module, and the file system modulewould request disk sector reads and writes from the disk driver via thekernel.andP;  Figure 3 illustrates such a hypothetical future system.andM;Once some such mechanism is in place, there is no reason why multiplefile-system modules can't be loaded at once, each assigned to a differentlogical drive.andP;  That will allow an OS/2 program to read or write disks in anyimaginable format.andP;  The operating system needs a &quot;default&quot; file system sothat it can boot itself off the disk, presumably, the FAT file system.andM;&quot;Externalization&quot; of the file system from the operating system kernel in thismanner will open up a whole new range of opportunities for software houses.andO;Assuming the interface between the kernel and the file system is published, anew file system can be written by anyone willing to go to the trouble, justas a new device driver can be written now.andP;  A period of rapid file systemevolution is bound to follow.andP;  Competition between software houses willensure that better access methods for the FAT file system, as well as new,superior file systems, will appear in short order.andM;Installable file systems sound very attractive, but how likely is it thatthey will arrive in our lifetimes?andP;  Pretty likely, I'd guess, and here's why:in a thinly disguised form, installable file systems have been supported inDOS for quite a while!andP;  The network redirector, which first appeared in DOSVersion 3.1, is really just an installable file system.andP;  It interceptsrequests from application programs for file operations on logical drivesassigned to a network device, and it sends the requests across the network sothat they can be serviced by another machine.andP;  There is no particular reasonwhy the network server needs to have a FAT-format disk; in fact, you can mixXenix and DOS servers on the same network rith now.andM;The CD-ROM extensions, which Microsoft has been selling for some time now,are another example of an installable file system.andP;  The structure of a CD-ROMdisk is nothing at all like that of a FAT-format disk.andP;  This is partlybecause CD-ROM disks are so enormous (500MB), their seek times are so long,and their data transfer rates are so slow that FAT access methods areimpractical.andP;  It is also because for non-volatile data there are much betterways to lay out files and directories.andM;In short, knowing that DOS has served as an installable file system test-bedfor a couple of years, and knowing that OS/2 already has network and CD-ROMextensions under development, we can deduce that OS/2 support for installablefile systems is in the bag.andP;  The transition from supporting one installablefile system to supporting as many as you like should be a much simpler stepthan the original, major step that was taken in DOS 3.1--going from noinstallable file system at all to one installable file system.andP;  It would benice to think that Microsoft and IBM will see fit to generalize and publishthe installable-file-system hooks in DOS too, so that the huge installed baseof DOS machines will not be denied the advantages of new, superior filesystems.andM;Microsoft has also announced that it not only plans to allow for installablefile systems but will actually develop a new file system (operating systemmodule and disk format) that will eliminate many of the FAT file systemrestrictions.andP;  Gordon Letwin (the author of Inside OS/2 and one of OS/2'sdesigners) is said to be spearheading the effort.andP;  I can only hope thatLetwin, who is a Unix devotee from way back, won't incorporate too many Unixconcepts into this wonderful new file system.andP;  Unix file systems arenotoriously fragile--so fragile that Unix automatically runs a file systemfixup program called &quot;fsck&quot; each time it is booted.andP;  In Unix environments,total trashing of the file system requiring a complete reload from backups iscommonplace; Unix fans take this for granted and forget to mention it whenthey are explaining how much better Unix is than DOS or OS/2.andM;In any event, what can we learn about the apparently forthcoming &quot;improved&quot;file system by examining the existing OS/2 file function calls?andP;  It'sinteresting that many of the OS/2 functions can return file information thatis not present in FAT file-system directories.andP;  For example, the OS/2functions that search for matching filenames provide for the return of nofewer than three sets of times and dates for each file: the time and date offile creation, of the last write, and of the last access.andP;  They also allowfor a 16-bit file attribute (FAT file system directories contain 8-bitattributes), and for the return of a separate file allocation size andcurrent file size.andP;  The OS/2 function that creates a file allows the programto specify an initial allocation, and its documentation states that &quot;whenpossible,&quot; OS/2 will pre-allocate the space to minimize access times.andM;With regard to naming limitations, there is nothing &quot;wired into&quot; OS/2function calls that requires a path, filename, or extension to have anyspecific length.andP;  If a program provides a path, name, or extension that istoo long for the type of file system being accessed, OS/2 returns an error;no name is ever silently truncated, as happens in DOS.andP;  If an OS/2 program isobtaining a pathname (such as the &quot;current directory&quot;) from the operatingsystem and the buffer it provides is too small, OS/2 will return an erroralong with the length required for the buffer.andM;OS/2 also has distinct function calls that get, add, or change the volumelabel.andP;  This is very unlike current versions of DOS, which force you to usevariants of the file search, create, and rename functions.andP;  That seems toindicate that future file systems will place the volume label somewhere otherthan in the root directory, and may be capable of associating otherinformation with the label (perhaps access rights and passwords).andP;  DOS 4.0may be trying to tell us something here; it puts a copy of the volume labelin both the root directory and in the disk boot sector.andM;QUALIFYING OS/2 FILENAMESandM;The source listings QFN.ASM (Figure 4) and QFN.C (Figure 5) are the lastinstallments in my OS/2 catch-up campaign.andP;  These routines convert partialdirectory or file specifications into fully qualified pathnames--pathnamesthat include a drive and a complete path from the root directory.andP;  They arethe equivalents of the DOS QFN.ASM and QFN.C routines that were published inthe July and August 1988 issues of PC Magazine; please refer to those issuesfor explanations of how the routines work and are used.andM;The OS/2 versions of TRYQFN.ASM and TRYQFN.C are available for down-loadingfrom PC MagNet.andM;THE IN-BOXandM;Please send your questions, suggestions, and comments to me at any of thefollowing e-mail addresses: PC MagNet: 72241,52 MCI Mail: lmi BIX: rduncan</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-472-941  </DOCNO><DOCID>09 472 941.andM;</DOCID><JOURNAL>Computer Language  Oct 1990 v7 n10 p91(15)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>MS-DOS C++ compilers. (overview of five evaluations of C++compilers and translators) (includes related articles on theEckel-Saks test suite and the testing of C++ UNIX products)(Software Review) (evaluation)</TITLE><AUTHOR>Saks, Dan.andM;</AUTHOR><SUMMARY>In a review of five MS-DOS C++ compilers, the overall winner isBorland International Inc's Turbo C++ Professional 1.0, priced at$299.95.andP;  Zortech Inc's C++ Developer's Edition 2.1, priced at$450, is a close second.andP;  Turbo and Zortech are both fast andconvenient but Turbo scores higher on ANSI C and C++ compatibilityand is also lower in price.andP;  It also usually produces clear errormessages with demangled names.andP;  In testing, measuring compile andrun-time performances is not easy.andP;  This is due to the lack ofstandards for the C++ language, libraries and filenamingconventions, making it difficult to develop programs able to runon all compilers.andP;  All tests are run on a 25-MHz 386 with640Kbytes of conventional memory, 3Mbytes of extended memory and a19ms 170Mbyte hard drive.andM;</SUMMARY><DESCRIPT>Company:   Comeau Computing (products)Borland International Inc. (products)Zortech Inc. (products)Intek Integration Technologies (products)ImageSoft Inc. (products).andO;Ticker:    BORL.andO;Product:   Turbo C++ Professional 1.0 (Compiler)Intek C++ DOS 2.0a (Compiler)Intek C++ UNIX 2.0a (Compiler).andO;Topic:     CompilersC Programming LanguageEvaluationTestingComparison.andO;Feature:   illustrationtable.andO;Caption:   Compiler features. (table)Plum-Hall C validation sampler. (table)Eckel-Saks C++ test suite. (table)andM;</DESCRIPT><TEXT>A year ago, few C++ systems for MS-DOS existed.andP;  Now at least seven areavailable, with more on the way.andP;  This review covers five C++ compilers andtranslators: Comeau Computing's v. 2.1, ImageSoft Inc.'s Glockenspiel v.andO;2.0a, Intek integration Technologies' v.2.0a, Borland International's Turbov. 1.0, and Zortech Inc.'s v. 2.1.andM;The review process was exhilarating and frustrating.andP;  On one hand, I learnedmore about the expressive power of C++ and became more convinced than everthat it's my language of choice.andP;  on the other hand, I found some of theproducts frustrating to install and use.andP;  Three of the compilers occasionallyaborted because of stack overflows, page faults, or bad karma.andM;The lack of standards for the language, libraries, and even file-namingconventions makes it extremely difficult to develop programs that run on allcompilers.andP;  I had real difficulty measuring compile-and run-timeperformances.andP;  For a couple of days I tried to find some moderately large Cor C++ programs that all the compilers could compile.andP;  I found only one.andM;Table 1 [omitted] summarizes features of the compilers I reviewed.andP;  Tounderstand the table, you need a little bit of C++ history.andM;Bjarne Stroustrup developed &quot;C with classes&quot; at ATandamp;T in the early 1980s.andP;  Thename &quot;C++&quot; wasn't coined until 1983.andP;  Stroustrup published the definition ofthe language in 1986 as The C++ Programming Language.andP;  (1)andM;Stroustrup's book describes ATandamp;T's UNIX C++ v.1.0.andP;  The language featuredclasses, single inheritance, polymorphism (virtual functions), overloadedfunctions, and overloading for most operators, as well as a host of minorimprovements over traditional C.andM;ATandamp;T's next major revision, v.2.0, came in June 1989.andP;  It introduced severalnew and powerful features, such as multiple inheritance, protected members,overloaded new and delete operators, and abstract classes.andP;  The current v.2.1refined the language rules but introduced no major features.andM;Stroustrup (along with Margaret Ellis of ATandamp;T) recently published TheAnnotted C ++ Reference Manual  (2) (also known as the ARM).andP;  The ARM is theATandamp;T C ++ 2.andP;  1 Product Reference Manual, along with annotations, commentary,and minor corrections.andP;  This definition of C++ supersedes the earlier book.andM;Interestingly, the ARM includes features that aren't in v.2.andP;  1.andP;  Some, suchas parameterized types and exception handling, are listed as experimental.andO;Others simply haven't been implemented; the ATandamp;T translator (cfront) produces&quot;sorry, not implemented' messages if You try to use them.andM;ATandamp;T licenses the source for its C++ translator to vendors to port tO otherplatforms.andP;  Many C ++ compilers are derived from ATandamp;T implementations.andP;  Threeof the systems examined are ATandamp;T licensees.andP;  Glockenspiel C++ 2.0a and IntekC++ 2.0a are based on ATandamp;T C++ 2.0; Comeau Computing C++ 2.1 is based on ATandamp;TC ++ 2.andP;  1.andM;C++ is being pulled in several directions.andP;  Implementors and users must copewith subtle differences among language dialects, dramatic differences inlibrary support, and various levels of compatibility with existing Cproducts.andP;  These differences are the chaos from which language standardsemerge.andM;The American National Standards Institute (ANSI) recently formed committeeX3J16 to produce a standard for C++.andP;  The committee chose as its base theATandamp;T C++ 2.1 Product Reference Manual and the ANSI C Standard.andP;  The committeehopes to merge the documents and remove as many incompatibilities between C++and ANSI C as possible.andM;Since the standard is still a couple of years away, I decided to test thecompilers for compatibility with each of the base documents.andP;  (I use the word&quot;compatibility&quot; intentionally to avoid the legalistic term &quot;conformance.&quot;)andM;Informal testing for compatibility with ANSI C is easy these days, thanks tothe Plum-Hall validation sampler for ANSI C. (3) These tests were used in thelast two COMPUTER LANGUAGE C compiler reviews.andP;  (4,5) I ran some compilersmore than once to illustrate the effect of different options.andP;  I ran theGlockenspiel compiler once using Glockenspiel's preprocessor and again withMicrosoft's.andP;  I ran the Intek compiler once with Watcom C v.7.0 as the backend and again with Turbo C 2.0.andP;  Turbo C++ and Zortech C++ can be run aseither C++ or ANSI C compilers.andP;  I ran them both ways.andM;Table 2 [omitted] summarizes the results of these tests.andP;  (COMPUTERLANGUAGE's CompuServe forum and Bulletin Board Service network offer acomplete test-by-test report card.) You can compare these results with thelatest C compiler results in the most recent COMPUTER LANGUAGE C compilerreview.andP;  (5) Note that a C++ compiler is not expected to pass all thesetests.andM;Testing for compatibility with the ATandamp;T Release 2.1 Product Reference Manualwas much harder.andP;  I didn't have anything like the Plum-Hall sampler for C++.andO;In cooperation with Bruce Eckel, I created the Eckel-Saks C++ test suiteshown in Table 3 [omitted].andP;  The sidebar &quot;The Eckel-Saks Test Suite&quot; explainsthe origins and structure of the sampler.andM;I had great difficulty finding three medium-sized programs that wouldcompile, link, and execute using all these compilers.andP;  As you can see fromthe benchmark results in Table 4 [omitted], I got close but didn't make it.andO;The matrix and tawk programs were written by Bruce Eckel.andP;  (6) byacc is apublic-domain LALR(1) parser generator.andM;byacc was originally a C program.andP;  My wife (chair of the Math and ComputerScience Dept.andP;  at Wittenberg Univ.) and I converted byacc to a C++ program.andO;We didn't convert the data structures into classes, but we did change thecode to pass the more rigorous type checking of C++.andP;  All we did was convertold-style function headings to prototypes and added or revised functionprototypes in the header files.andP;  We also had to change the user-definedidentifier class to something like _class.andP;  We used the Turbo or Zortechintegrated environments to do the conversion.andP;  They were simply faster andeasier to use than the cfront compilers.andM;The matrix program executes a series of operations on a matrix.andP;  We used theseven-by-seven matrix supplied by Bruce Eckel.andP;  tawk is a simple databaseinterpreter.andP;  I used Eckel's wallet.twk script to process a file with 3,000records, redirecting standard output to a file.andP;  For input to byacc, I usedJim Roskind's yacc-able C++ grammar, a file of over 26,000 bytes.andM;I ran everything on a 25MHz 386 with 640K of conventional memory, 3MB ofextended memory, and a 19ms 170MB hard drive.andP;  Turbo and Zortech wereconsiderably faster than the cfront compilers (no surprise there).andP;  Otherthan that, the results aren't conclusive.andM;One of the nicest features of C++ is type-safe linkage.andP;  In most Cimplementations, you could write a function in module A:andM;int foo(int 1, char *s)andM;but accidentally refer to it from module B:andM;extern int foo(char *s, int i)andM;C++ detects these errors through type-safe linkage.andP;  Since most linkers don'tknow how to represent type information in external names, the C++ compilercombines and deforms (or mangles) the name and parameter types into a singlelong name.andP;  For example, the first foo becomes something like foo_FiPc andthe second one becomes foo_FPci, which is the name seen by the linker.andO;Unfortunately, it's often the name displayed in the linker message.andP;  You haveto learn that the message &quot; Unresolved External: foo_FPci&quot; may indicate atype-safety violation.andM;Comeau and Glockenspiel come with name-demanglers.andP;  You type in the mangledname, and it spits back the C++ declaration.andP;  Neither Intek nor Zortechprovides this tool.andP;  The Turbo C++ linker automatically displays names intheir unmangled form.andM;Suppose you have a C module that includes the function:andM;int foo(int i, char *s)andM;and you want to call it from C++.andP;  The C compiler won't mangle the name, sothe name seen by the linker is just foo or _foo.andP;  How do you get your C++ torefer to the unmangled name? You write:andM;extern  &quot;C&quot; {int foo(int i, char *s);}andM;to turn off the mangling.andM;You can use this technique to access functions in the C standard library fromC++.andP;  The string:andM;extern  C&quot; {andM;#include andless;stdio.handgt;andM;}turns off the mangling for the entire header file.andP;  Unfortunately, if youwrite your C++ source code this way, it won't be compatible with C. Thisproblem has a few different solutions.andM;Turbo and Zortech supply C and C++ headers with their compilers.andP;  The Cheaders follow the layout shown in Listing 1 (p.andP;  110).andP;  The macro _cplusplusis defined only during C++ compilations, so the same header can be includedin both C and C++ source files with just #include andless;string.handgt;.andM;The cfront-based compilers don't provide any C headers; they get them fromthe back-end compiler.andP;  For example, the Comeau C++ installation procedurecreates a new include directory, say: c:\cc\inc, for the C++ headers.andP;  Then,for each header in the Microsoft C directory, say c.\ms\inc\x.h, theprocedure creates a file c:\cc\inc\x.h which is simply:andM;extern  &quot;C&quot; {andM;#include &quot;c:\ms\inc\x.h&quot;andM;}Then you set:andM;set INCLUDE=c:\cc\incandM;so the Comeau compiler will use these headers instead of the Microsoft ones.andM;Intek's installation is very similar, except it actually merges the text ofeach C compiler header into the corresponding C++ header.andM;Glockenspiel's solution to this problem is unacceptable.andP;  It advises you towrite all your C++ using.andM;extern  &quot;C&quot; {#include andless;stdio.handgt;}andM;This code is not portable; none of the other compilers accept it.andP;  I spent anhour or two crafting some simple tools to recreate Comeau's solution to theproblem for the Glockenspiel headers.andM;ECKEL-SAKS TEST SUITEandM;Bruce Eckel (author of Using C+ +, McGraw-Hill, 1989; and The Tao of Objects,Mandamp;T Press, 1990) started collecting small C++ programs about two years ago.andO;He used them to &quot;break&quot; C++ implementations.andP;  These programs usually startedas bugs he discovered while developing programs, but some were also inspiredby comments overheard at computer conferences or via electronic mail.andM;Eckel distilled each program to the smallest piece that would still break thecompiler.andP;  The compiler author received the test code, so it could be fixed.andO;However, Eckel soon discovered that new releases of the compiler didn'tnecessarily fix the problems; he would run across the problems again, trackthem down, and realize he'd discovered the same bug.andM;Eckel archived the bugs into a compiler-breaker test suite so he couldevaluate compilers as soon as they came out.andP;  This system wasn't meant as acomprehensive compiler validation suite, but rather as a group of programs toinvestigate the interesting, tricky, and dangerous parts of the languageespecially the ones the compiler writers would rather you not know about).andO;By the spring of 1990 the collection had grown to 182 programs.andM;I met Eckel at the first ANSI C++ committee meeting in Dec. 1989, and againat other meetings and conferences.andP;  I got permission to turn hiscompiler-breaker suite into something suitable for reviewing C++ compilers,and managed to work my way through about 80 programs, modifying each so ittested only one facet of the language.andP;  I also changed the programs so theresults could be tabulated automatically.andM;Table 3 divides the tests into three groups.andP;  The &quot;Basic Features  Positive)&quot;tests are derived from Appendix B of the ATandamp;T Release 2.1 Product ReferenceManual.andP;  There is one test for each statement in section B. Tests 1-3 testdifferences between C++ and C. Tests 4-9 exercise features added before 1985(v.1.x).andP;  The remaining programs test features added since 1985 (v.andP;  2.x).andO;Each test is positive and should work.andM;The &quot;Compiler Breaker  Positive)&quot; tests are an assortment of programs drawnfrom Eckel's first 80 programs.andP;  Each test exercises a subtle languagefeature that some compilers have had trouble with at one time or another.andO;These positive tests should also work.andM;The &quot;Compiler Breaker  Negative)&quot; is an assortment of programs that shouldfail.andP;  The more failures, the better the score.andM;The Eckel-Saks C+ + test suite has two goals.andP;  First, it's an educationaltool.andP;  The programs illustrate extremely simple examples of unfamiliar syntaxin C ++.andP;  Second, it's a metric to test implementations of C ++; by runningthe tests, you can quickly get a rough idea of how your compiler performsagainst the embryonic ANSI draft standard.andM;Eckel and I will continue to work on the suite as time permits.andP;  We expect todistribute it in some form before the end of the year.andP;  For more informationcontact Bruce Eckel at Revolution2, Box 760, Kennett Square, Pa.andP;  19348, orDan Saks at Saks andamp; Associates, 287 W. McCreight Ave., Springfield, Ohio45504.andM;We wish to express our gratitude to Tom Plum of Plum-Hall Inc. for grantingpermission to adapt the scoring program from the Plum-Hall sampler to oursuite.andM;-Dan Saks</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-080-558  </DOCNO><DOCID>08 080 558.andM;</DOCID><JOURNAL>AI Expert  Feb 1990 v5 n2 p26(6)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>CASE for expert systems. (computer aided software engineering)</TITLE><AUTHOR>Blackman, Michael J.andM;</AUTHOR><SUMMARY>Computer-aided software engineering (CASE) tools and structuredmethodologies are readily applicable to expert-system design, butdevelopers have to decide which tools to develop from scratch andwhich to re-use based on the experience of others.andP;  Informationengineering, a structured methodology that uses object-orientedconcepts and anchors expenditures for data processing inmanagerial plans, incorporates CASE in its development process andadds data modeling to elements drawn from older methodologies.andO;The main activities in CASE-based information engineering forexpert systems are identifying physical and conceptual objects ina decisionmaking process, determining the reasoning process anexpert uses, structuring types and sources of expert knowledge,determining which areas to focus on, and preparing a conceptualdesign.andP;  CASE and information engineering are tools rather thanpanaceas in system design.andM;</SUMMARY><DESCRIPT>Topic:     Computer-Aided Software EngineeringProgram Development ToolsExpert SystemsSoftware DesignArtificial IntelligenceStructured Design Techniques.andM;</DESCRIPT><TEXT>CASE for Expert SystemsandM;The evolution of expert-system technology passed a milestone in the lastthree years.andP;  During 1987-89, dozens of major companies, many from theFortune 500, used expert-system technology to build high-value productionsystems.andP;  These early adopters were the proving ground for expert systems inthe business world; their systems' report cards have very good marks.andO;Digital Equipment Corp. estimates that its landmark expert system, XCON/XSEL,saves the company $40 million a year.andP;  Du Pont deployed 200 systems in 1988at an average annual savings of $100,000 per system or $20 million total eachyear--and that number is still growing.andM;Of course, there were failures.andP;  Some of the pioneers experimenting withLISP, using expensive, specialized hardware and building systems unable tointegrate with the company's existing data and applications, were badlyburned--that's the price of experimentation.andP;  Now, however, robustdevelopment tools built in high-performance languages that run on standardhardware allow access to and integration with corporate databases andapplications.andM;We can be grateful to the pioneers for testing the technology and paving theway for the rest of the business world.andP;  The trial period ended sometimeduring the last two years; now companies must decide how to employ expertsystems.andP;  According to the recent MIT research study Management in the 1990s,&quot;Introducing new information technology in the next decade will be acompetitive necessity rather than a competitive advantage--everyone will bedoing it.&quot;andP;  Companies that spurn the information-technology revolution mayfind themselves left behind.andP;  FFor many organizations, expert systems arealready an important technology for responding to increased competition, butMIS managers still need to know how to integrate them into thesystem-development lifecycle.andM;Expert system have considerably expanded the capabilities of some companiesto compete effectively.andP;  Nonetheless, many of the most successful systemswere built with a &quot;seat-of-the-pants&quot; methodology or by trial and error.andP;  Wecan avoid many mistakes of the past simply by taking a more structuredapproach to expert-systems development.andP;  James Martin wrote in 1986 aboutcomputer-aided software engineering (CASE) and a structuredsystem-development methodology called information engineering: &quot;A basicprinciple of any form of engineering ought to be 'Steal; don't reinvent.'andP;  Ifsomething already exists and works well, it is desirable to use it ratherthan to reinvent an alternative and have to wrestle with new design andimplementation.&quot;andP;  Expert-system developers must decide which of the existing,structured methodologies and CASE tools--if any--is most suitable forexpert-systems planning, analysis, design, and construction.andM;STRUCTURED METHODOLOGIESandM;AI specialists with no background in traditional systems development areslowly discovering that what they described as the &quot;assessment,&quot; &quot;conceptualvalidation,&quot; and &quot;engineering validation&quot; phases are what MIS managers knowas feasibility study, requirements definition, conceptual design (includingdata and processing modeling), prototyping, and internal and external(physical) design.andP;  This discovery is not surprising because:andM;* Expert-system technology and tools are just that--a technology or tool usedfor system developmentandM;*  As a development tool, expert-system technology can be classified withCOBOL or a fourth-generation language (4GL); it's just another language fordesigners and programmers to use in the right situationsandM;* With a few exceptions, the process of systems planning, analysis, andconceptual design is similar whether the resulting system or applicationcalls for the use of COBOL, a 4GL, or an expert-system shellandM;* Once it is established that expert-system technology is valid forconstruction of the system, the principal differences between using COBOL, a4GL, or an expert-system tool are primarily expressed in the physical designand construction phases, and techniques of traditional systems methodologiescan be applied even in the latter two phasesandM;* The requirements definition for an expert system is iterative, which meansthat the methodlogy has a loop (as opposed to a simple sequence of steps).andO;This iterative requirement does not mean that structured techniques are notappropriate, but that they are even more important to control the developmentprocessandM;* In typical expert-system projects, often as much as 50%-75% of the work istraditional system development--designing specialized 3GL- and 4GL-basedroutines that process data and communicate with the expert system, designingdatabases and user interfaces, and developing system and user documentation.andM;Because of these points, the application of traditional systems-developmentmethodologies to expert-systems development is not only natural butnecessary.andP;  However, not all system-development methodologies can be appliedwith equal ease.andP;  Expert systems are a special form of information (in thiscase, knowledge) processing.andP;  They require an analysis and design methodologythat lends itself to expressing the constructs and concepts used for symbolicreasoning, such as classes, objects, object relationship, attributes, frames,or inheritance hierarchies.andM;At least one existing methodology, information engineering, and acorresponding CASE tool, the Information Engineering Workbench (IEW) fromKnowledgeWare Inc., appear custom-made for expert-systems analysis andconceptual design.andP;  IEW's designers used PROLOG, an AI language, to developIEW.andP;  The knowledge-engineering orientation of the developers appears to havefiltered into the language of the CASE tool itself.andM;INFORMATION ENGINEERINGandM;Information engineering is a structured systems-development methodology that:andM;* Uses object-oriented modeling conceptsandM;* Involves the users in system planning, analysis, and designandM;* Anchors data-processing expenditure in top management's needs and goalsandM;* Increases the speed of data-processing developmentandM;* Reduces the time spent on system maintenanceandM;* Identifies how computing can best aid the strategic goals of the businessandM;* Use CASE to manage the development process.andM;Information engineering uses the best elements of older, structuredmethodologies (Yourdon-DeMarco-type process modeling), adds a criticalmissing link--data  modeling, and increases the productivity of the systemsanalysts and the quality of the output through CASE and joint applicationdesign sessions.andP;  The methodology and the CASE tool used (typically the IEW)are divided into four components: planning, analysis, design, andconstruction.andP;  I will focus on using information-engineering analysistechniques (data modeling, process modeling, and joint application design)for expert-systems development.andM;ANALYSIS TECHNIQUESandM;During the initial phase of expert-system development (sometimes called theconceptual validation phase), knowledge engineers conduct knowledgeacquisition sessions to define system requirements and develop a conceputaldesign.andP;  Knowledge engineers define what the system should do.andP;  How thesystem should process knowledge (for example, generate-and-test,opportunistic search, blind search, constraint propagation) is aphysical-design task, and should be left for the physical-design phase.andP;  Thesuitability of CASE-based information engineering for expert-systems analysisand conceptual design is suggested by the parallels between the majorconstructs used by information and knowledge engineers for requirementsdefinition and conceptual design (Table 1).andM;Because one information-engineering construct will have severalknowledge-engineering concepts, a knowledge engineer must recognize whether aparticular process being modeled with the CASE tool should be represented asa rule, procedure, or method associated with a knowledge-base object.andP;  These,however, are &quot;how&quot; questions that are part of the physical design phase.andO;During systems analysis and conceptual design the knowledge engineerestablishes &quot;what&quot; the system should do, not &quot;how.&quot;andM;Let's examine CASE-based information engineering for expert systems.andP;  We cando this by establishing the goals of the knowledge-engineering conceptualvalidation phase (called &quot;systems analysis&quot; or &quot;requirements definition andconceptual design&quot; by most of DP/MIS world) and identifying the informati onengineering techniques suitable for those activities.andM;1.andP;  Identify the physical and conceptual objects that characterize thedecision-making process.andM;Information engineering uses data-modeling techniques to accomplish thisgoal.andP;  Data modeling identifies the physical entities (for example,purchasing agent), conceptual entities (purchase contract), and event orstate entities (purchase) and their relationship to one another.andP;  Theentities and their relationships are captured and documented graphically witha suitable information-engineering CASE tool.andP;  The output is called anentity-relationship model or E-R diagram.andP;  The business experts then critiquethe E-R diagram and revise and expand it with the help of the informationengineer.andM;Ultimately, all or part of the data m odel is used for logicalk databasedesign and for generating the SQL code (via functions of the CASE tool) thatcan be used to produce the database.andP;  Because many production expert systemsreason about existing corporate data, it is easy to see the benefits of usingdata modeling and a CASE tool to create a database automatically thataggregates data from other sources for the expert system.andM;2.andP;  Uncover the reasoning process used by the experts for decision making.andM;E-R models incorporate important semantic information about the applicationor business area.andP;  Thus, an E-R diagram not only identifies all relevantentites and their attributes but also uncovers many of the rules, procedures,and constraints used in decision making.andP;  The rules are represented in aseparate process model; each process can be linked to a &quot;view&quot; or portion ofthe data model.andP;  This link clearly establishes the association between the processes or rules and the data used by those rules.andM;The process model is developed through functional decomposition of the domaininto a h ierarchy of functions and processes, which are further decomposedinto their elemental processes.andP;  At the bottom level of each branch of thisinverted tree are the most elementary processes or activities the expertsperform.andP;  Each of these elementary processes is linked to a separate view ofthe data model to show which data are used by which processes.andP;  Once thistask is completed, the knowledge engineer uses the CASE tool to write processspecifications, or action diagrams, showing both the structure and logic ofeach elementary process, including data accesses.andP;  An action diagram for aportion of a system process called determine discount is shown in Listing 1.andM;An action diagram could be used by a knowledge engineer to create classes orobjects and their attributes for customer and order and to write rules fordetermining discounts.andP;  In fact, the rule syntax in some expert-system toolsis almost identical to this example, although the use of else clauses shouldgenerally be avoided in rule-based programming.andP;  Breaking rules with elseclauses into several separate rules is a better approach because it allowsthe inference engine to evaluate only necessary ones.andP;  (Rules with else willalways be evaluated completely, which may decrease performance andcomplicated knowledge-base maintenance.)andM;3.andP;  Indentify the types and sources of knowledge the experts use.andM;An expert system incorporates three basic types of knowledge: factual (data,)judgment (rules), and procedural or control knowledge (processes).andP;  Event,process, and data modeling are all information-engineering techniques used toidentify the facts, rules and procedures.andP;  Event modeling helps to identifythe  sources of knowledge by having the interviewees think in terms ofexternal, temporal, and internal events that trigger a preplanned response bythe business.andP;  Process modeling breaks down the functions into elementalprocesses, which are further described through action diagrams.andP;  Datamodeling identifies the factual knowledge and describes therelationships--business rules--that govern the data.andP;  These relationships areused to identify some of the expert-system rules and constraints anddetermine data supertypes and subtypes (class and object inheritancehierarchies).andM;4.andP;  Identify and categorize all subareas of the knowledge domain.andM;Functional decomposition, data modeling, and subject-area definition are theinformation-engineering techniques used to accomplish this goal.andP;  Functionaldecomposition is used not only to partition the business area by processesperformed, but can also be used to partition a business area intodata-subject areas.andP;  In expert-system develoment, it is critical to define arealistic scope for the prototype, pilot, and production system.andP;  Realisticusually means defining a sufficiently narrow scope for the initial system.andO;Functional decomposition--by process or subject--will help to partition mtheproblem so the client can select a suitable domain (functional area) for theproject.andP;  Subareas in the selected domain can be categorized further bydeveloping a matrix of processes and the dat used by those processes.andP;  Atechnique called affinity analysis is used to group common processes with thedata created or used by those processes.andP;  The resulting groups would besubdomains of the total expert system, and the knowledge engineers would usethese groups as focus areas for further analysis and design.andM;5.andP;  Agree on which subareas prototyping and subsequent development will befocused.andM;Joint application design is a structure and technique for group interviewingthat is effective for defining system requirements and establishing consensusamong sources of potentially conflicting knowledge.andM;6.andP;  Produce a conceptual design of a system that represents the agreed-uponcoverage of the knowledge.andM;All of the information-engineering analysis techniques mentioned so far,including joint application design, would yield can completed data model,process model, and process specifications as the final output to satisfy thisgoal.andP;  An information-engineering CASE tool is used to increase productivityduring analysis and document the results.andM;These goals are not unique to expert systems and may ber recognized as someof the same goals of systems analysis in any systems project, regardless ofthe technology ultimately used to prototype and implement the system.andP;  By nowit should be clear that conceptual validation is the same as requirementsanalysis and conceptual design.andP;  Furthermore, information-engineeringanalysis and design techniques can be a custom framework for expert-systemsdevelopment because of the suitability of the techniques to accomplish theknowledge engineer's goals and the similarity of the constructs used torepresent the system requirements and conceptual design.andM;Existing methodologies can provide major improvements in quality andefficiency in at least one other area of expert-systems development.andO;Interviewing the experts, or knowledge acquisition, can be improved by usingtools that aid in asking the right questions and applying interviewingtechniques that improve the overall process.andP;  Automated tools for knowledgeacquisition are slowly appearing on the market; these tools, when used incombination with interviewing, will help to break the so-called knowledgebottleneck.andM;JOINT APPLICATION DESIGNandM;Knowledge acquisition has been described as the botteneck of expert-systemdevelopment, partially because the true human expertise is deeply embedded inthe minds of the experts and partly because some AI specialists are not awareof established, productive methodologies for interviewing experts.andP;  Finding asolution for the second problem will aid in making the first problem easierto manage.andP;  In addition, many expert systems are based on nonexpert knowledgeessential for the success of the business but readily accessible to systemsanalysts without a Ph.D.andP;  in cognitive psychology.andP;  To illustrate theusefulness of information engineering for expert systems w'll explore usingjoint application design as a framework for more effective knowledgeacquisition.andM;Knowledge acquisition is the chief means of gathering information throughoutthe lifecycle of expert-systems development.andP;  Knowledge acquisition sessionare meetings in which the knowledge engineers interview one or two domainapplication experts and a representative from management.andP;  The managementrepresentative is usually interviewed separately and only at the beginning ofthe project.andP;  Thereafter the sessions are conducted with the expert.andM;Knowledge engineers often impose an artificial constraint that there be onlyone expert interviewed for the project or that the experts must all agreewith one another.andP;  This requirement may make the project easier for theknowledge engineers but it often does not exist as a natural condition in thereal world.andP;  Knowledge engineers assign a much higher risk, and usually ahigher cost, to a project with more than one expert because managing conflictand achieving consensus among multiple sources of true expertise isdifficult.andM;Disagreement between experts is not inherently bad and may simply representdifferent and valid approaches to the same problem.andP;  Significant additionalknowledge may be added to the system if these disagreements are explored,clarified, and resolved.andP;  In the case of an order-processing system, relyingon one source of knowledge would assume that only one person in the companyhas sufficient knowledge to contribute to the requirements (possible, but notlikely).andP;  An order-processing system may have to satisfy sales, marketing,engineering, and production requirements.andP;  This knowledge base couldrepresent at least three different sources of knowledge and expertise, eachwith separate and often conflicting goals for the system.andM;Many AI specialists have recognized that the term &quot;expert&quot; is often over-usedwhen describing expert systems.andP;  Many systems represent knowledge that, whileessential for the successful functioning of the business, is readilyavailable and not deeply embedded in the minds of company experts with 20 ormore years of experience.andP;  Such systems are more accurately calledknowledge-based systems, a term that includes advisory systems or knowledgeassistants, as well as true expert systems.andP;  When the domain knowledge is notdeeply embedded and difficult to extract from the minds of experts,significant productivity gains and development cost reductions can beachieved by using proven interviewing techniques.andM;Information engineering's approach to knowledge acquisition, managingconflict, and achieving consensus is to use joint-application designsessions.andP;  This technique, introduced by IBM, was developed as a moreproductive alternative to a series of individual interviews with departmentalexperts or users.andP;  The technique requires a person trained in groupfacilitation, conflict management, consensus development, and an appropriatesystems-development methodology.andP;  Joint-application design techniques are aninformation-gathering framework for a structured methodology, in this caseinformation engineering.andP;  The technique's goals when used during systemsanalysis are the same as those outlined earlier for knowledge acquisitionduring conceptual validation.andP;  Joint-application design results in a systemthat represents the sources of both expert and nonexpert knowledge and meetsthe needs of the users more effectively.andM;During a typical three- to five-day joint-application design workshop, usersand departmental and system experts are guided through the first stage ofrequirements analysis and conceptual design to define the data and processingrequirements of a portion of the system.andP;  Unlike knowledge acquisition, whereconflict is frequently managed by having only one source of knowledge,joint-application design session leaders use expert facilitation techniquesto manage conflict and achieve consensus among several experts and othervaluable but nonexpert knowledge sources.andP;  Consequently, the analysis anddesign can reflect the best ideas of management, multiple experts, and users,which yields a higher quality result.andM;BUILDING A SYSTEMandM;I have focused on using information-engineering techniques for requirementsdefinition and conceptual design of expert systems.andP;  By comparing theconcepts used for systems analysis in information engineering to those usedby knowledge engineers for expert systems and by demonstrating the close fitbetween information engineering techniques and the goals of expert-systemsanalysis and design, it is clear that information engineering and CASE can besuccessfully applied to expert-systems development.andP;  This approach may resultin the same benefits of information-engineering and CASE for traditionalsystem development: significant increases in analysts' productivity andanalysis quality and a consequent reduction in project risk andsystem-maintenance costs.andP;  The result should be a system that best representsthe available knowledge and expertise and meets the needs of the users.andM;CASE and information engineering are not cure-all tools and techniques, but aknowledge engineer trained in such methods would bring significant order,reduction in project risk, and a measurable increase in productivity andquality of results to expert-systems development.andM;Michael J. Blackman is a senior consultant for the West Region InformationManagement Group of Ernst andamp; Young and lives in Seattle, Wash.andP;  He waspreviously a manager in the knowledge-engineering group at Teknowledge Inc.,andO;and specializes in information engineering and CASE.andO;</TEXT></DOC>
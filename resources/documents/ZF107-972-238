<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF107-972-238  </DOCNO><DOCID>07 972 238.andM;</DOCID><JOURNAL>Hewlett-Packard Journal  Dec 1989 v40 n6 p33(6)* Full Text COPYRIGHT Hewlett Packard 1989.andM;</JOURNAL><TITLE>Sharing overlay and image planes in the Starbase/X11 Merge system.andO;</TITLE><AUTHOR>Hiebert, Steven P.; Lang, John J.; Marchington, Keith A.andM;</AUTHOR><SUMMARY>Researchers working on the Starbase/X11 Merge project decided theywould provide full-performance Starbase graphics in X Windowswherever possible.andP;  The X server provides users with fourfundamental display modes in which to configure displays: imagemode, overlay mode, stacked mode and combined mode.andP;  Of the four,the combined mode is the most sophisticated, using all of theplanes of the display system as a single screen and supportingTurboSRX display capabilities, including double buffering andcolor mapping.andP;  In the image mode, the X server renders imagesonly on the planes available on the display device.andP;  In theoverlay mode, X rendering calls use overlay planes from thedisplay device, allowing image screens to be used by otherapplications, while overlay planes and image planes are used asseparate screens in the stacked mode.andM;</SUMMARY><DESCRIPT>Product:   Starbase (Computer graphics software) (usage)X Window System (Computer program) (usage).andO;Topic:     Graphics SoftwareDisplaysCompatibility.andO;Feature:   illustrationcharttable.andO;Caption:   An illustration of the different display modes. (chart)X color map types. (table)The organization of the image planes in the frame buffer. (chart)andM;</DESCRIPT><TEXT>Sharing Overlay and Image Planes in the Starbase/X11 Merge SystemandM;DEPENDING ON THE DISPLAY DEVICE, the X server allows users to configure adisplay in four fundamental display modes: image mode, overlay mode, stackedmode, and combined mode (see Fig.andP;  1).andP;  The display mode determines how thehardware display memory is used.andP;  This article describes the rationale forthe different display modes and how each of them works.andP;  The combined mode isdiscussed in greater detail than the others because it is the mostsophisticated moe and it is available on the TurboSRX 3D graphics acceleratordisplay system.andM;HP offers a wide variety of display hardware for its workstation products.andO;This display hardware ranges from low-resolution monochrome displays tohigh-resolution displays with 16 million colors and 3D acceleration hardware.andO;Using the full range of display capability in the display hardware was one ofthe challenges for the Starbase/X11 Merge design team.andM;One of the underlying philosophies of the X Window System is that is providesthe tools to build different user interfaces, but it does not enforce anyparticular user interface standard.andP;  Thus X provides mechanisms, not policy.andO;To maintain this philosophy, it was decided that the X server would providethe different display modes for the X Window System and allow the user tochoose the display mode most appropriate for the application.andM;Overlay and Image PlanesandM;All display system for HP's workstations have at least one and as many as 24planes of display memory.andP;  In addition, some of the more sophisticateddisplay systems have additional display memory called overlay planes.andP;  Theoverlay planes are so named because they appear on top of, or over, the imageplanes.andP;  For example, if the overlay planes of a display are enabled and eachpixel is set to black, then the image planes would not be visible.andP;  Areas ofthe overlay planes must be disabled or made transparent to view the imageplanes.andP;  Overlay planes can be set to a transparent color so that the imageplanes can be seen.andP;  Existing HP displays have from zero to four overlayplanes.andM;The image planes are used primarily for rendering complex images and usuallyhave moe capabilities than overlay planes.andP;  For example, on the TurboSRXdisplay system, the 3D accelerator can clip to an arbitrary set of rectanglesin the image planes, but not in the overlay planes.andP;  Overlay planes have anumber of uses, but primarily they are used to display information like textand menus.andP;  In this way rendering in the image planes is not damaged by menusor text, and costly redraws of pictures in the image planes are prevented.andO;With some 3D graphics or complicated 2D graphics, such redraws can take manyminutes.andM;The overlay and image planes are located in the frame buffer and, as shown inFig.andP;  2, each plane is organized into on-screen and offscreen memory.andM;Image ModeandM;Every HP display system supports the image mode and all but the TurboSRX willdefault to image mode if the user does not specify a display mode.andP;  In theimage mode, the X server performs all rendering only on the image planesavailable on the display device.andP;  If the display device has any overlayplanes they are set to transparent in this mode.andP;  See Fig.andP;  1a.andM;Overlay ModeandM;The overlay mode is almost identical to the image mode, except that theoverlay planes of the display device are used by X rendering calls, and theimage planes are free to be used by other applications such as Starbasegraphics applications.andP;  A good example of this configuration is the HP 9000Series 300 and 800 SRX (solids rendering acceleration) display system.andP;  The3D acceleration hardware of the SRX is not capable of clipping to windowboundaries, so it is not useful in a window environment.andP;  For the 3Dacceleration hardware to be useful, it must have unobstructed access to thefull, unobscured image planes.andP;  To run with this hardware configuration, awindow-based application can provide all user interface components (.g.,andO;windows and menus) in the overlay planes using the X display driver, and usethe 3D accelerator for more complex rendering in the image planes.andP;  Bycreating a transparent window in the overlay plane, or by setting the windowsystem's root window to transparent, the image planes can be made viewable.andO;On the SRX display, this is the only way to use the 3D graphics acceleratorand a window system such as X at the same time.andM;Stacked Screens ModeandM;In the stacked screens mode the overlay planes are used as one screen and theimage planes as another (see Fig.andP;  1c).andP;  In this way, the window system hastwice as much screen &quot;real estate.&quot;andP;  Stacked screens mode is literally theimage mode and overlay mode running simultaneously.andP;  The screens are stackedone on top of the other with the visible screen being the one where the mousecursor is located.andP;  To get from one screen to the other, the user simplymoves the mouse off the edge of the current screen.andP;  The other screen is madevisible as the mouse enters it.andP;  All of the normal capabilities of X areavailable in both the image and the overlay screens, and all of therestrictions of the image and overlay modes apply.andM;Stacked screens mode is particularly popular with software developers becauseit is possible to make twice as much information easily viewable.andP;  This meansthat a developer can have a debugger, terminal emulators, editors codeviewers and other applications all running at the same time and viewable.andM;Combined ModeandM;Image, overlay, and stacked screens modes were available in the X WindowSystem before the Starbase/X11 Merge project.andP;  However, the Starbase/X11Merge project's goal was to provide full-performance Starbase graphics in Xwindows wherever possible, and since the TurboSRX display, which is thesuccessor to the SRX display system, has the hardware necessary to doaccelerated graphics in windows, this meant that we needed to provideaccelerated graphics in windows as well.andP;  This could have been done in imagemode on the TurboSRX, but it would not have been as aesthetically pleasing.andM;The design team decided that a new approach was needed for the TurboSRX.andO;This new approch is called the combined mode.andP;  The combined mode uses all ofthe planes of the display system (both image and overlay) as a single screen,making it look to the application as if there were simply one contiguous setof planes with a variety of different capabilities (see Fig.andP;  1d).andP;  Usingboth the overlay and the image planes as a single screen is basically theopposite of how stacked moe works.andP;  In stacked mode the image and overlayplanes are treated as two separate screens.andP;  With the combined mode thecapabilities of the TurboSRX and X can work together.andM;TurboSRX CapabilitiesandM;Many of the capabilities provided by the HP 9000 Series 300 and 800 TurboSRXgraphics subsystem are also provided by its predecessor, the SRX.andP;  Thesecapabilities include:andM;* Image Planes.andP;  There can be 8 to 24 planes of image memory plugged into thedisplay system.andP;  The system can be used as an eight-bit pseudocolor device(CMAP_NORMAL mode) offering 256 colors simultaneously or as a 24-bit colordevice (CAMP_FULL mode) offering over 16 million colors simultaneously.andM;* Overlay Planes.andP;  Each display system has three or four planes of memorythat overlay (or are in front of) any other display memory.andP;  The originalintention for these planes was to use them for floating text, cursors, ormenus.andM;* Double Buffering.andP;  The image planes can be partitioned as pairs of banks ina variety of ways for double buffering.andP;  The most common configurations areto divide them into two eight-banks in CMAP NORMAL mode and into two 12-bitbanks in CMAP FULL mode.andM;* Color Map Mode Hardware.andP;  The color map mode hardware enables the displaysystem to run either in the CMAP NORMAL mode or the CMAP FULL mode.andP;  If 24planes of image memory are plugged into the display system, in CMAP NORMALmode each pixel is interpreted by taking the eight-bit pixel value out of thelow bank of display memory and using it as an index into a table of RGB (red,green, blue) values to determine what color a particular pixel on the displayshould be.andP;  In CMAP FULL mode, each of the three eight-bit banks of displaymemory is read to determine which red, green, and blue value should be usedon the display.andP;  By writing to a hardware mode register, these modes can bedynamically switched and different windows on the display screnn can bedisplayed in different color map modes.andM;* 3D Graphics Hardware.andP;  Both systems have the ability to render complex 3Dgraphics, providing realistic images on the display.andP;  The front cover of thisissue shows an example of the realistic images that can be produced usingcombined mode on a TurboSRX display system.andP;  The 3D images (car, engine, andgears) are located in the image plane, and the other items on the display arelocated in the overlay plane.andM;Capabilities available in the TurboSRX but not in the SRX include:andM;* Hardware Cursor.andP;  Two planes of memory (in addition to the overlay andimage planes) are available for the display of cursors.andP;  This feature allowsa hardware cursor to be placed on the display without disturbing the contentsof any of the image or overlay planes beneath it.andP;  The hardware cursor alsooffers the advantage of not having to remove the cursor to render, since itresides in its own plane of display memory.andP;  Not removing the cursor beforerendering provides better performance for rendering routines.andM;* MOMA Window Support.andP;  From the perspective of the Starbase/X11 Mergesystem, this is probably the most significant feature on TurboSRX.andP;  MOMA(multiple, obscurable, movable, accelerated) window support allows theTurboSRX accelerated graphics capabilities to be used in a windowedenvironment by providing special clipping hardware.andP;  This clipping hardwareallows the TurboSRX graphics accelerator to render only to the exposedrectangles of a window.andP;  The TurboSRX hardware has support for a maximum of32 clipping rectangles for MOMA windows, which is an adequate number for mostwindow systems, but a small number for the X Window System.andM;With these TurboSRX features in mind, the design team focused on designingthe Starbase/X11 Merge system to take full advantage of the hardwarecapabilities of the TurboSRX.andP;  This resulted in the following design goalsfor the combined display mode:andM;* Provide support for MOMA windows that would allow Starbase applications touse the 3D graphics accelerator in X windows.andM;* Support eight-bit and 24-bit color modes.andP;  Make 8-bit pseudocolor and24-bit color with double buffering available to applications.andM;* Maintain the visual aesthetics of the system.andP;  When possible, minimize thedamage that different hardware modes and different color maps cause to theappearance of the display when they are displayed simultaneously.andM;* Provide a state-of-the-art X server implementation.andP;  Reconcile thecapabilities of the X Window System, Version 11 with the capabilities ofTurboSRX.andM;The ArchitectureandM;With X11, a number of new concepts were introduced to increase thecapabilities of X such that it could be run on the entire range of today'sdisplay hardware as well as any future display hardware that might bedeveloped.andP;  The concept in X11 that is most important to the combined mode iscalled the &quot;visual.&quot;andP;  The visual is the mechanism X uses to describe thecapabilities of particular display's hardware.andP;  The visual structureincludes:andM;* Class.andP;  The class describes how a color is mapped from memory to thedisplay.andP;  There are two major classes, static and dynamic, and subclasses ofeach.andP;  The subclasses include gray, mapped color, and decomposed color.andO;Static and dynamic classes are defined at X server startup time.andP;  Staticclasses cannot be changed by application programs, but dynamic classes aredefinable and changeable in the application program.andP;  The gray subclass meansthat all the colors in the color map are shades of gray.andP;  For the mappedcolor subclass, one-byte pixel values from the frame buffer are used to indexinto a color map of RGB tuples which describe the color to be displayed (seeFig.andP;  3a).andP;  For the decomposed color subclass, a threebyte pixel value isused to get the color value from the color map.andP;  The first byte is used forred, the second byte for green, and the last byte for blue (see Fig.andP;  3b).andO;The mapped color subclass allows up to 256 colors and the decomposed subclassallows up to 16 million colors.andP;  Each entry in the color map table representsa color intensity (shade).andP;  For instance, the value 10 might represent dimRGB intensities and 220 would represent bright RGB intensities.andP;  These red,green, and blue intensities are mixed together to produce the displayedcolor.andP;  Putting these attributes of color maps together (class and subclass)allows the device to support up to six types of color maps.andP;  Table I showsthe X color map types.andM;* Color map entries.andP;  The number of different color map entries available foruse by client applications.andM;* Bits of RGB information.andP;  How many bits of resolution are available todescribe red, green, and blue color values.andM;* Planes.andP;  The number of planes of display memory available on the displaydevice.andM;X11 makes it possible to have more than one of these visuals available on agiven screen at the same time.andP;  With multiple visuals, it is possible tocreate a mode that incorporates the capabilities of both the image and theoverlay planes of the TurboSRX so that the full range of the display'scapabilities are available to applications.andP;  We decided to treat the imageand overlay planes as a single screen with the overlay planes represented byone three-or-four-plane PseudoColor visual type.andP;  The number of planes isdependent on how the user sets up the device file for them.andP;  The imageplanes, with their CMAP NORMAL and CMAP FULL modes, are allowed to haveeither an eight-bit PseudoColor visual type, a 24-bit DirectColor visualtype, or both simultaneously.andP;  Another option allows an eight-bitdouble-buffered PseudoColor visual type for image planes and a 12-bitdouble-buffered DirectColor visual type for image planes.andM;In combined mode, the root window for the screen always resides in theoverlay planes, and the overlay plane visual is the default visual for thescreen.andP;  Any client that simply asks for a window to be created with thedefault visual of the screen ends up residing in the overlay planes.andP;  For anapplication to create a window in the image planes, it has to request thevisual information from the server and specifically request the desiredvisual type.andM;The color map modes CMAP NORMAL and CMAP FULL in the image planes are handledthrough virtual color maps.andP;  Virtual color maps are an image of what thewindow or client thinks the hardware color map looks like.andP;  As was describedin the article on shared display resources on page 20, each color map in theStarbase/X11 Merge system has an analog called a display state, which is usedby the display drivers.andP;  Each display state contains the current color valuesfor a device's color map, some device-specific information about which planesof the display are enabled, and in the case of the TurboSRX, the color mapmode of the hardware.andP;  X provides a way for a program to control which colormap is currently loaded into the hardware (this is called validating thecolor map).andP;  Usually a special X client, such as a window manager, is theonly program that changes which color map is loaded (validated).andP;  The windowmanager may have several methods for the user to specify which color map isloaded.andP;  Therefore, when the color map for an eight-bit PseudoCcolor windowis installed in the image planes, the hardware will be switched to CMAPNORMAL mode, and when the color map for a 24-bit DirectColor window isinstalled, the hardware will be switched to CMAP FULL mode.andP;  Fig.andP;  9 on page29 illustrates the virtual color map concept.andM;The result of this approach is that most windows are created in the overlayplanes.andP;  Most X server clients such as window managers and terminal emulatorsuse the default visual.andP;  Applications that request visual types that are inthe image planes can change the color map in the image planes and use one ofthe color map modes without affecting the visual appearance of the windows inthe overlay planes.andP;  Most of this color map control was provided for Starbaseapplications because they usually assume that they can change the color mapat will.andP;  As a result a Starbase application creates its own virtual memorycolor map for a window that it opens.andM;This design allows the TurboSRX to be used in windows and satisfies all ofthe design goals for the TurboSRX display driver in the X server.andP;  With mostof the windows in the overlay planes, their clipping regions do not have tobe included in the hardware clip list for the accelerator.andP;  This helps uslive with the 32-clip-rectangle restriction of the TurboSRX and achieve thefull performance of a Starbase application running in X.andM;Having most of the commonly used windows in the overlay planes allowscombined mode to maintain visual aesthetics at the highest possible level,while still allowing both eight-bit and 24-bit windows in the image planes.andO;As a counterexample, take the case of image mode.andP;  If image mode were toallow both eight-bit and 24-bit windows simultaneously, one of those twovisual types would have to be the default.andP;  If an application created awindow of a visual type other than the default and its display state wereinstalled, it would change the hardware color map mode and all of the windowsof the default visual type would become incorrect in appearance.andP;  In fact,the windows, including the root window, would become completelyindecipherable.andP;  However, with combined mode, when the hardware color mapchanges, the windows in the overlay plane (where most applications reside)remain visually correct and only image plane windows become visuallyincorrect.andM;This design also provides a very straightforward view for an X application.andO;A client application can simply connect to the server and requet windows ofthe default type and get windows in the overlay planes.andP;  Or, using thexGet-VisualInfo routine, the client application can interrogate the serverfor all of its visuals or a particular visual it is intested in.andP;  Theapplication never worries whether it is in overlay planes or image planes.andO;The server automatically places the window in the appropriate planes withoutintervention by the application.andM;ImplementationandM;The architecture described above fits very neatly into the the X model, andfor the most part, the implementation of combined mode was straightforward.andO;But there were some challenges in the implementation that resulted in someinteresting solutions.andP;  The two most challenging areas were how to allow theuser to see through the overlay plane to the image plane windows and how toclip windows and generate exposures for only those areas of windows that wereactually damaged by other windows.andP;  A window that needs exposure is one thatis covered up and needs to be seen.andP;  To see a window that resides in theimage planes, the overlay planes must be made transparent.andP;  At first,creating this transparent hole seemed like a difficult task, but as it turnedout, the X server architecture allowed this to be handled quite easily.andO;Whenever an area of a window is exposed, the server is required to paint thewindow's background.andP;  At this point, the X server determines if the windowbeing painted is in the image planes, and if it is, simply makes the samearea of the overlay planes transparent.andP;  In this way all visible regions ofthe image plane window have a corresponding area in the overlay planespainted a transparent color.andM;Combined Mode ClippingandM;To solve the problem of clipping windows and generating exposures for damagedwindows, and to make full use of the capabilities of the TurboSRX hardware,the clipping algorithm used in the X server had to be modified.andP;  In theoriginal X server, the clipping algorithm made no distinction between overlayand image planes when computing clip lists for windows.andP;  Lacking thisdistinction, creating a window in the overlay planes would cause the serverto conclude that any windows in the image planes obscured by the overlayplane windows were damaged.andP;  When the overlay plane window was moved ordestroyed, newly exposed areas of the image plane window would be cleared tothe window's background color and an exposure event would be sent to theclient owning the image plane window.andP;  The exposure event tells the clientthat it must re-render to the image plane (see Fig.andP;  4).andP;  The modification ofthe clipping algorithm allows windows in the overlay planes to be created anddestroyed without affecting windows in the image planes.andM;For both clipping algorithms, new clip lists are computed whenever an actionis taken that could change the clip list (e.g., changing the stacking orderof the windows on the screen).andP;  The function xosValidateTree() is used tocompute the new clip lists.andP;  xosValidateTree() adds the visible portions ofany children of the parent window to be reclipped back into the parentwindow's clip list and then, passing the parent's clip list as the workinguniverse, calls the routine xosComputeClips() to let each of the parentwindow's children, and the children's children, and so on recomputer theirclip lists.andP;  The working universe includes the visible areas of the parentwindow.andP;  Upon return from xosComputerClips(), the working universe is theparent's new clip list.andP;  by subtracting the old clip list from the new cliplist the parent can compute which areas have been newly exposed.andP;  That is,any area in the new clip list that is not in the old clip list must be newlyexposed.andM;The modification of the clipping algorithm to support combined mode consistsmainly of computing two clip lists for all the windows on the screen.andP;  Oneset of clip lists, which we can call the old-style clip lists, is generatedbased on the unmodified clipping algorithm described above [i.e., these cliplists contain windows from both the image and the overlay planes).andP;  Thesecond set of clip lists is computed taking only the image plane windows intoaccount (image-only clip list).andP;  Within the X server, image plane windows usethe image only clip list as the default clip list, and the overlay planes usethe old-style clip list as the default.andP;  Both image and overlay plane windowsuse the old-style clip list for cursor removal.andP;  Since either type of windowcan have children or subwindows of the other type, windows on both planesmust keep the image-only and old-style clip lists available.andM;In the new combined mode algorithm, rendering to the image plane is done onlywhen there are changes to the windows in that plane and not because ofchanges to windows in the overlay plane.andP;  The image-only clip list is used tohandle rendering to image plane windows.andP;  The old-style clip list is used todetermine which areas of the overlay plane windows must be paintedtransparent to expose windows in the image plane.andM;Combined mode clipping allows rendering to an image plane window while it isobscured by an overlay plane window.andP;  Since the root window is always in theoverlay planes, rendering can even take place to an image plane window thatis iconified.andP;  The server must take care, however, to avoid rendering toareas of iconified image plane windows used by other image plane windows.andO;Image windows that are not iconified are automatically removed from theallowable rendering area by the old clipping method.andP;  Extra programming wasrequired to remove iconified image plane windows from the allowable renderingareas of other iconified image plane windows.andP;  That is, if two iconifiedimage plane windows overlap, neither may render to the overlapping area.andO;When one or the other of the iconified windows is mapped, it will get anexposure event for that overlapping area.andM;ConclusionandM;Combined mode is a solution to the complex problem of how to support ahigh-end display system in the best possible way.andP;  Combined mode offers somecapabilities that allow the TurboSRX display system to work at its fullpotential in an X environment.andP;  With the addition of combined mode, the Xserver now offers four different display modes of operation to take fulladvantage of the broad range of display hardware for HP workstations.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-892-652  </DOCNO><DOCID>07 892 652.andM;</DOCID><JOURNAL>Computing Canada  Oct 26 1989 v15 n21 p26(2)* Full Text COPYRIGHT Plesman Publications Ltd. (Canada) 1989.andM;</JOURNAL><TITLE>A look at re- and reverse engineering: does anyone really know thedifference? (Software report-Backgrounder) (column)</TITLE><AUTHOR>Ulrich, William.andM;</AUTHOR><SUMMARY>Re-engineering and reverse engineering are becoming increasinglyimportant to the economics of computing.andP;  Re-engineering preparessystems for reverse engineering by changing the underlyingtechnology of a system without actually altering its overallfunction.andP;  Re-engineering takes place when programmers move fromone level of a language to another, as when they move fromunstructured to structured COBOL.andP;  Changing and manipulating thetechnological platform of a system can comprise an essential steptoward reverse engineering.andP;  The reverse engineering process hasbeen performed manually for the last 20 years and consists ofextracting specifications from source code, the literal oppositeof forward engineering.andP;  It can be an important economic factor bysalvaging some of the time and money invested in an aging system.andM;</SUMMARY><DESCRIPT>Topic:     Software EngineeringSystems AnalysisComputer-Aided Software EngineeringProgramming.andM;</DESCRIPT><TEXT>A look at re- and reverse engineeringandM;Computer-aided software engineering (CASE) companies have only recentlypromoted the benefits of automating both techniques, thereby focusingattention on them.andP;  This has resulted in confusion about the definition ofeach term and how they interrelate.andM;Contrary to popular belief, re-engineering is not shorthand terminology forreverse engineering but is, in and of itself, a viable, useful method ofimproving systems.andM;By definition, re-engineering changes the underlying technology of a systemwithout affecting its overall function.andP;  This is done to improve theeffectiveness and efficiency of the technicians who must modify the system.andO;Both data definitions and process logic can be re-engineered.andM;A re-engineering caseandM;For example, re-engineering occurs when an organization moves fromunstructured Cobol to structured Cobol; from Assembler to Cobol; from onelevel of a language to another; from one hardware platform to another; or,from non-standardized, redundant data definitions to standardized,consolidated data definitions.andM;By changing and manipulating the technological platform upon which a systemis built, re-engineering provides several short-term benefits.andP;  First, itreduces the skill set required to modify the system and reduces thelikelihood of introducing errors during maintenance.andM;Second, and perhaps more importantly, re-engineering is the first, essentialstep toward reverse engineering.andP;  Re-engineering &quot;cleans up the house&quot;.andP;  Anexample might entail structuring Cobol code, which would eliminate problemssuch as runaway logic, recursion or dead code.andP;  Another example could involvestandardizing data definitions -- to eliminate redundancies and glean theprimary elements required for a system redesign effort.andP;  This positions theorganization to take advantage of new technological advances while improvingthe systems used by the user community.andM;PositioningandM;The reverse engineering process has been performed by programmers andanalysts over the past 20 years--manually.andP;  The manual process consists offirst examining reports, screens, inputs, outputs and source code.andP;  Only thencan a programmer make inferences about how the system works -- a slow,tedious process -- in order to effect a change.andM;Strictly defined, reverse engineering is the exact opposite of forwardengineering.andP;  Forward engineering generates operational systems fromspecifications through state-of-the-art software tools.andP;  Reverse engineeringextracts specifications from code -- which represents the specifications toan analysts at a higher level of abstraction.andP;  Once represented at theabstracted level, business system functions become more apparent.andP;  Just asmanufacturers of PC clones disassembled the IBM PC to find out what made ittick, the reverse engineering of a software system determines the compositionof the original system's design.andM;Reverse engineering benefits an organizations in several strategic ways.andO;Once a system has been reverse engineered to a specification level, a similaror even an identical system can then be regenerated more economically andproductively with today's forward engineering tools.andM;Reverse engineering squeezes the essence of the business function from theaging, but critical, application system.andP;  This allows the organization tosalvage some of the dollars, time and programming skills invested in theoriginal system.andP;  Once transported to design level specifications, the oldsystem design and functionality can be modified to reflect changing businessneeds.andP;  And at an absolute minimum, reverse engineering specifications couldserve as system documentation.andM;While reverse engineering sounds like the panacea for extending the life toexisting business systems, there is just one catch.andP;  The piece of the puzzlewhich will help automate reverse engineering -- the piece that takes acurrent business system and extracts design specifications from it -- doesnot exist today.andP;  So, what do you do to position your company for the future?andM;Many agree that the best advice is to do something.andP;  Do not wait until thereverse engineering part of the quotient is available.andP;  Today'sre-engineering tools provide a tactical approach that will make functions inthe existing business systems much more apparent and enable your organizationto position itself for the inevitable arrival of automated reverseengineering.andP;  The best re-engineering tools will not only clean up code, butbegin storing the information they gather in a repository.andP;  Reverseengineering tools will access the repository and convert the information intoreusable specifications.andM;Today's system clearly contain the necessary functions for the smooth, dailyoperation of the organization.andP;  More and more organizations are realizingthat importing these functions to new systems is the most cost-effective andleast risky approach to new system development.andM;Re-engineering provides an organization with several benefits: short-termmaintenance productivity and quality gains, the ability to easily build newfunctions into old systems, and the groundwork necessary to move currentsystem functionality into forward engineering technology.andP;  This step-wise andevolutionary approach is a pragmatic transition from today's systems totomorrow's technology.andM;When will a more complete set of reverse engineering tools be available?andP;  Ourresearch points to the emergence of pieces of this new technology over thenext year or so.andP;  One piece which will be available a little earlier is theability to abstract and re-use data definitions.andP;  Full-fledged reverseengineering is probably a little further away.andP;  In the interim, you canre-engineer your systems now -- gaining short-term maintenance benefits whilepositioning your organization for the future.andM;William Ulrich is director of product marketing for the re-engineering andtesting and maintenance product lines at XA Systems Corp. based in Los Gatos,Calif.andP;  He has spent more than 10 years in the software re-engineeringconsulting field.andO;</TEXT></DOC>
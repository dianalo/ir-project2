<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-714-712  </DOCNO><DOCID>07 714 712.andM;</DOCID><JOURNAL>PC Magazine  Oct 31 1989 v8 n18 p319(9)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>Create colorful, interactive menus for your applications. (sampleutility program)</TITLE><AUTHOR>Smith, Ron Q.andO;AttFile:   PCMAG\V08N18\DOIT.BAT;0 Program:  DOIT.BAT  For use with LIST.andO;PCMAG\V08N18\FAX.BAT;0 Program:  FAX.BAT  Example of MENU.andO;PCMAG\V08N18\FAX1.TPL;0 Program:  FAX1.TPL  Template for MENU example.andO;PCMAG\V08N18\LIST.BAT;0 Program:  LIST.BAT  List function for MENU.andO;PCMAG\V08N18\LIST.DOC;0 Program:  LIST.DOC  List function for MENU.andO;PCMAG\V08N18\LIST.MNU;0 Program:  LIST.MNU  List function for MENU.andO;PCMAG\V08N18\LIST.TPL;0 Program:  LIST.TPL  List function for MENU.andO;PCMAG\V08N18\LISTUPD.MNU;0 Program:  LISTUPD.MNU  Update list function for MENU.andO;PCMAG\V08N18\LISTUPD.TPL;0 Program:  LISTUPD.TPL  Update list function for MENU.andO;PCMAG\V08N18\MENU.ASM;0 Program:  MENU.ASM  Assembler source code.andO;PCMAG\V08N18\MENU.BAS;0 Program:  MENU.BAS  Basic source code.andO;PCMAG\V08N18\MENU.COM;2 Program:  MENU.COM  Executable COM file.andO;PCMAG\V08N18\MENU.DOC;0 Program:  MENU.DOC  Documentation.andM;</AUTHOR><SUMMARY>A MENU utility program that lets users display an unlimited amountof interactive information is presented.andP;  The program uses acontrolling 'template' file to collect keyboard input and constantdata from the screen and transparently write it to a batch file.andO;The template file, which can be created in ASCII with any texteditor, determines the output files and recognizes a few specialcharacters to control copying from the display.andP;  MENU consistsprimarily of assembly-language routines that are called to processeach character in the screen file or template file.andP;  It has a'screen-file-processing' section that reads the screen file andbuilds the display buffer and tables; an input-processing sectionwith key-processing procedures; and a section that generatesoutput files.andP;  The program is available by modem on PC*MAGNET.andM;</SUMMARY><DESCRIPT>Topic:     Utility ProgramsType-In ProgramsTutorialMenus.andO;Feature:   illustrationtableprogram.andO;Caption:   Special symbols used in MENU. (table)Menu's function keys. (table)Complete listing. (program)andM;</DESCRIPT><TEXT>Batch files let you automate many routine tasks, as everyone who has writtenor modified even his AUTOEXEC.BAT file knows.andP;  But when you need to writebatch files to automate routine work procedures for computer novices, youimmediately hit a problem.andP;  What the user needs is a straightforward taskmenu with fill-in-theblank options.andP;  Unfortunately, the DOS batch filelanguage provides no way to handle the input from a user's keyboard.andM;MENU was created to solve this problem.andP;  MENU lets you display an unlimitedamount of information with which the user can interact.andP;  The relevantkeyboard input and constant data from the screen are then passed through acontrolling template file and are then used to write a batch file (or anotherprogram input file) on the fly.andP;  And by running the whole process under asimple batch file, you can make the procedure seamless and transparent to theuser.andM;Use MENU's screen editing facilities to create the displays, to see exactlywhat the user will.andP;  Screen files can be as tong as 300 lines and may includeup to 100 input fields of any length.andP;  MENU also supports full customizationof the display/input screen: any character position may be associated withany of the standard video attributes.andP;  Use your favorite ASCII text editor tocreate the template file that gives the format of the output files.andP;  GETTINGMENUandM;You can get a ready-to-run copy of MENU.COM from PC MagNet, as explained inthe sidebar &quot;MENU by Modem.andP;  &quot; Alternatively, you can create the .COM fileeither front the MENU.ASM source code or from MENU.andP;  BAS, which are availablevia PC MagNet.andM;Because of space considerations, we can't print the source code here.andO;However, you can get a listing of both the assembly and BASIC listings bymail or fax by sending a written request with your name and address (or faxnumber) to Utilities, PC Magazine, One Park Avenue, New York, NY 10016;Attention: Carolyn Falconer.andP;  (Note: estimated fax length is 50 pages.) Nophone calls, please.andM;To create MENU.COM from MENU .ASM, you must have a macro assembler (IBM orMicrosoft, Version 2 or later) and enter the following command sequence:andM;MASM MENU;andM;LINK MENU;andM;EXE2BIN MENU MENU.COMandM;DEL MENU.OBJandM;DEL MENU.EXEandM;If you don't have a macro assembler, you can generate the same .COM filesimply by running MENU.andP;  BAS in BASIC.andM;The MENU command syntax isandM;Menu [/D/E/N] screen templateandM;out1 [out2...andP;  outn]andM;Each of the italicized operands is the name of a file and may include a driveand full path specification.andP;  A screen file is normalIy created by using MENUwith its /E (Edit) option.andP;  Entering the lineandM;MENU /E ,,screenandM;will create a new file to be stored under the filename SCREEN.andP;  Note the useof the two commas.andP;  MENU normally expects to work with at least threefilenames.andP;  In this case, there is no input screen file (you're creating it),and there is no template file to control the generation of an output file.andO;The commas take the place of the missing operands.andP;  If you subsequently needto edit SCREEN (of course, screen files need not have this filename),enteringandM;MENU /E screen,,screenandM;will let you update the file and save it under its original name.andM;While you won't usually have to deal with one outside the MENU editor, ascreen file is an ASCII file that contains the characters to be displayed,ANSI video control sequences, and other special characters.andP;  Figure 1contains a description of ASCII characters used on a screen.andM;It is the template file that deten-nines the output files.andP;  A template fileis also an ASCII file, and it can be created with a text editor such as thePC Magazine utility TED.andP;  It contains any text that you want to put in theoutput files, plus instructions about which information from the display youwant copied to the output files.andP;  You may copy all or part of an input field.andO;You may also copy constant data fields from the display to the output files.andO;Each input or constant field can itself be anywhere from a single characterto many lines in length.andM;A few special characters are recognized in a template file to control copyingfrom the display and to select among the output files.andP;  All other charactersare copied without change.andP;  The simplest way to create a template file is tostart with a sample of the file you want to create.andP;  You would edit thatfile, replacing variableinformation with references to the display.andP;  Forexample, you would replace a filename in your sample with [3] to cause thecontents of the third input field displayed to be copied to that position inthe output file.andP;  See the sidebar &quot;How to Create a Template File&quot; for acomplete discussion of the control characters used in template files.andM;The out operands are the names you give to the output files MENU generates.andO;Typically you will need only a single output file (and typically it will havea .BAT extension), but you may use as many as you can fit (up to 64) on theDOS command line.andM;Note: Since the screen file, template file, and all output files are open atthe same time, you must make sure that the FILES - statement in your CONFIG.andO;SYS permits the maximum number of files that you will need.andP;  To use fiveoutput files, for example, you would need to have FILES = 12, since DOSalways ties up five for its own use.andP;  If you should ever need to generatemore than 13 output files (FILES - 21), you will also need DOS 3.3 or laterand a utility that expands the number of handles available for each process,andM;The /D, /E, and /N command-line switches may appear anywhere after MENU andprovide additional control over its operation.andP;  The / E option has beendiscussed above.andP;  EnteringandM;MENU /D filenameandM;turns MENU into a full-screen display utility.andP;  This is a convenient way todisplay the contents of another file, up to 300 lines.andP;  ANSI color sequencesin the file will be interpreted, but other screen file special characters,such as [ , ],{,}, and \ will simply be displayed.andP;  In display mode, you canuse the cursor-control keys to scroll through the file, but you can't makeany changes or create any output files.andM;Normally, MENU saves a copy of the console screen before it starts to work.andO;The original screen is then restored when MENU is through.andP;  You may combinethe / N (No-restore) option with any of the other uses of MENU to inhibitsaving and restoring the display screen contents.andP;  This avoids a lot ofscreen flashing if you are linking from one menu to another menu or to aprogram that paints the entire screen on its own.andP;  USING MENUandM;Let's assume that you want to create the batch file TASK.andP;  BAT, which willlet the user execute one of several programs using a specified input file.andO;You need to give the user a choice of program names or a simple selectioncode and you must let him enter the name of an input file.andP;  In DOS 3.3 orlater, a suitable batch file isandM;@MENU SEL.MNU SEL.TPL SEL.BATandM;@CALL SEL.BATandM;@DEL SEL.BATandM;If you have an earlier version of DOS, your batch file will look like this:andM;ECHO OFFandM;MENU SEL.MNU SEL.TPL SEL.BATandM;SEL.BATandM;You create SEL.MNU usingandM;MENU /E ,,SEL.MNUandM;When MENU executes, you will see a blank screen except for the status line atthe bottom.andP;  Use the cursor-control keys and the function keys, to set up thedisplay as you prefer.andP;  Be sure to use the F7 and F8 keys to define the startand end of the two input fields and F2 to define the end of the display.andP;  Youmay also use F9 and F IO to set display colors.andP;  Then press Ctrl-Enter toexit MENU and create the SEL.MNU file.andP;  (Until you learn the program, you'llfind yourself referring back to Figures 1, 2 and 3 with some frequency!)andM;Now, use your text editor to create SEL.TPL.andP;  This should look like Figure 5,only with real program names substituted for the WPROC, PERT, SPREAD, and DBAshown.andP;  You may want to add the / N option to MENU in your TASK.andP;  BAT file ifthe programs paint their own first screen.andM;TASK.BAT is now ready to run.andP;  The user enters the number of the task at theappropriate location, hits Enter (or Tab), and types in the name of the filethat he wants to work on.andP;  When he hits Enter again, SEL.BAT is created, run,and (under DOS 3.3 or later) deleted after use.andP;  (With earlier DOS versions,SEL.BAT will be overwritten the next time that TASK.BAT is run.)andM;In this example, the template file, SEL.TPL, contains the actual programnames to be passed to the output file.andP;  Provided their sequence is retained,these names could be added to SEL.MNU, as constant fields.andP;  Using F5 and F6to start and end each constant field, you might add a line likeandM;(WPROC) {PERT} (SPREAD) (DBA)andM;below line 4 in SEL.MNU, for example.andP;  (While creating the file, you can useF3 to display the constant-field curly brackets and the square brackets usedfor regular input fields.) Although the program names will take up characterpositions on the screen, you could use the display-off attribute so that theywould remain invisible to the user.andP;  And by putting the required constantdata in the screen file, the contents of the SEL.TPL file would be reduced toandM;{( 1 ) } ( 2 )andM;Here, MENU is used to automate and simplify the task of sending an ASCII filethrough a fax program.andP;  Some fax programs do not create a cover sheet andalso require a complex command line with operands and options that, in youruse of the program, will always be the same.andM;FAX.BAT, the main batchandM;file, is invoked by simply enteringandM;FAX filenameandM;FAX1.MNU and FAX1.TPL get the cover sheet information and create an ASCIIfile containing the cover sheet page.andP;  FAX2.andP;  TPL, as followsandM;SET FAXFILE$=[ 1)andM;works with FAX2.andP;  MNU to obtain the filename if FAX is called without alegitimate filename.andM;Even more-complex menus and templates can be constructed using multipleoutput files and constant fields in menus to create menus that update othermenus or that create additional menus and templates.andP;  Your imagination is theonly real limit.andP;  The fax example above is a subset of such a group of batchfiles and menus.andM;In the complete fax system I've implemented, for example, there is aselection menu for telephone numbers that contains an option to updateitself.andP;  The telephone list contains each known destination and its telephonenumber.andP;  The telephone numbers are stored as constant fields so that they canbe extracted by the template and passed to the fax program.andP;  Typical lineslook like this:andM;1.andP;  Company A 8005551212 2.andP;  Company B 4045551212andM;You choose the destination by entering the item number, and the templateobtains the actual phone number with a {[l]} reference.andP;  Entering a 0 signalsa request to update the list, and the resulting batch file uses MENU withanother screen and template file to update the screen file for phone numbersand its own screen file.andM;As a further stimulus to experimentation, another part of my office's faxsystem uses the lineandM;DIR *.FAX/SORT/MENU /D/NandM;to display a sorted list of the fax files that have already been sent.andM;HOW MENU WORKSandM;MENU is a fairly large program, but it is very straightforward.andP;  It uses fewhardware- or DOS-related tricks, so understanding it is mostly a maner offollowing the code.andP;  The program consists primarily of procedures that arecalled to process each character, whether that character is in the screenfile or the template file or is input from the console.andP;  The open proceduresare entered and exited with a JMP rather than with a CALL and RET.andM;MENU.ASM consists of four sections: the screen-file-processing section, diedisplay-editing section, the template-processing section, and theprogram-initialization section.andM;Though executed first, the programinitialization section is physicallylocated at the end of the program.andP;  This way, since this section isn't neededafter it executes, its space in memory can be reused for part of the displaybuffer.andP;  The initialization section consists of the procedures INIT,READ-SCREEN, and OPEN-FILE.andP;  INIT first scans the DOS command line using theOPEN-ELE procedure to obtain the screen file, template file, output files,and options.andM;Each time OPEN-ELE is called, it scans one more field on the command line andtries to open or create (for output) the files.andP;  OPEN-FILE also checks forthe switch-option letters; this allows them to  appear anywhere on thecommand line.andP;  If no filename is specified (that is, if a comma appears), adefault file is used.andP;  The default for the screen and template files is toskip those processing sections.andP;  However, if the /D option is specified, adefault of STDIN is used for the screen file.andP;  STDOUT is used as a defaultfor the first output file if there is a leading comma.andP;  Subsequent missingoutput files are ignored.andM;Starting at the label CHECK-VID, the INIT procedure determines the type ofvideo adapter that is in use and saves the current video-state information.andO;The number of columns and lines on the current screen are also deten-ninedand saved for use by the display routines.andP;  If a Color Graphics Adapter (CGA)is in use, a slow screen update is needed to avoid snow.andP;  For any otheradapter, a fast update is desirable, so a flag is set for testing by thescreen read and write procedures.andM;If the display is already in one of the text modes, the display mode is notchanged.andP;  If it is in a graphics mode, the display is initialized to mode 3(80-column color text).andP;  Unless the /N option is in effect or the display wasin a graphics mode, the contents of the display are saved so that they can berestored when MENU exits.andP;  The space remaining in the 64K segment isavailable for the display buffer and is initialized with blanks.andM;The screen-file-processing section starts after the label BEGIN.andP;  Thissection reads the screen file and then builds the display buffer and theinput and constantfield tables.andP;  The display buffer contains character andattribute byte pairs exactly as they will be transferred to the screen.andP;  Theuse of a display buffer permits menus to be much larger than a single screen.andM;The screen file is scanned, one character at a time, using the GET_CHRprocedure.andP;  The TBL_SRCH procedure is called to determine the character type.andO;It retums an index used to branch to the procedure that handles theappropriate character type.andP;  Most characters result in a branch to SCR-PUTand so are simply entered in the display.andM;The carriage-retum (handled at label SCR_CR) and line-feed (SCR_LF)characters always mean the end of a display line.andP;  The current line is filledout to the end with blanks.andP;  A line feed immediately following a carriageretum is ignored.andM;The ! character (SCR_LBRK) starts an input field.andP;  An entry is made in theinputfield-definition table (EDIT_AREA) that saves the display address.andP;  Whena ] (SCR_RBRK) is encountered, the end of the input field is entered in thetable.andP;  Similar handling of { and } {SCR_LBRACE and SCR_RBRACE) createsentries in the constant-field-definition table (CONST_ AREA).andM;An ESC character (SCR_ANSI) signals the start of an ANSI display attribute seandM;quence of the following form:andM;Esc[#;#;...mandM;The display attribute to be applied to a subsequent character is changed justas ANSI.SYS or ANSI.COM would change it.andP;  Because you might want to put [ ,],{,}, and the graphics characters represented by CR, LF, and ESC in yourmenu, however, the \ character (SCR-FORCE) always puts the next characterfrom the screen file in the display buffer.andP;  (You don't have to worry aboutall of these special characters when you create your screen file; MENU /Etakes care of all that for you.)andM;When the end of the screen file is reached (this is indicated by a retum fromGET-CHR with the Zero Flag set), the code at EDIT-RDY checks to see if allinput and constant fields were correctly closed .andP;  If a MENU / E is beingused to update an existing menu, the input-field-definition table (EDIT_AREA)is copied to a new input-field-definition table (DEFAREA) and a singleinput-field definition consisting of the entire display is placed inEDIT_AREA.andM;The input-processing section starts at EDIT_NMT.andP;  When the first screenful isdisplayed, keystroke processing from the console begins with a loop atEDIT_FILE.andP;  The WTBL_SRCH procedure looks up the key type and then calls theappropriate key-processing procedure.andP;  Most keystrokes go to EDIT-PUT, whichinserts the character in the display buffer (if in an input field), moves thecursor-right one position (by falling into the cursor-fight procedureRIGHT_SUB), and updates the screen display.andP;  If insert mode is in effect, thecharacters in the current input field are shifted right one position in orderto make room for the inserted character.andM;Most of the key-hands ing procedures simply calculate a new cursor position,either in the form of an index to the display buffer or as a signed offset tothe current cursor position.andP;  The real cursor-handling logic is associatedwith the code at MOVE_CRS, which adds the signed offset to the current cursorposition, and at MOVE_TO, which moves the cursor to a display buffer index.andO;MOVE_TO first determines if the new cursor position is currently on thescreen.andP;  If not, the screen is redisplayed with the new position in the firstor last line, depending on the direction of the motion.andP;  MOVE_TO then checksto see if the cursor is in an input area by using the FIND-AREA procedure.andO;If it is not, it checks to see if there is an input area beyond the cursorbut on the current screen, and it then moves the cursor to the start of thatinput area.andM;The logic at EDIT_STATUS updates the cursor coordinates in the status-linedisplay and the physical cursor position on the screen.andP;  Input progessing isfinished when Ctrl-Enter (CENTER_SUB) or Enter is pressed at the end of thelast input field.andP;  CENTER_SUB is both the end of the input-processing sectionand the start of the template-file-processing section.andM;Template-file processing starts by restoring the original screen display andobtaining the curTent time and date.andP;  Getting the time and date once ensuresthat the template-editing functions use a consistent set of valuesthroughout.andM;The template file is handled very much in the manner of the originalscreen-file processing.andP;  The template file is scanned, one character at atime, using GET_CHR.andP;  TBL_SRCH is called to determine the character type, anda branch is made to the appropriate type-handling procedure.andP;  Most charactersare simply sent to the current output file (initially, the first output file)at TMPL_PUT.andM;A \ character (TMPL_FORCE) causes the next character in the template file tobe sent to the output file, even if it is otherwise a control character.andO;This allows the andless;, andgt;, [,],{,},and\characters to be sent to the output file.andO;A andless; character (TMPL_FILE) signals a change in output file.andP;  The nextcharacters are assumed to constitute a decimal number, followed by andgt;.andP;  Thenumber that appears is an index (1 to 64) of the output files given on thecommand line.andP;  The selected file becomes the current file.andM;A [ character (TMPL_SENT) signals the start of a substitution pattem.andP;  Aninput field may be copied ([nnn .andP;  .  .  ]) or a timeand date-substitutionpattem may be processed ([MM .andP;  .  .  ]).  If a decimal number immediatelyfollows the [, a branch is made to DO-INP, which then processes theinput-field reference.andP;  Otherwise, the branch is to CHK-PAT to process atimeand date-substitution pattern.andP;  DO-INP simply repeats the logic pattemused for the template file as a whole, using different character-type andprocedure-vector tables.andM;While most characters from the inputfield pattem are copied directly to theoutput file, a few (?, = , 1 , ] , and \) require special processing.andP;  Asbefore, the \ character (COPY_FORCE) copies the next character from thepattern to the output file, thus allowing the special characters to be placedin the output file.andM;The ? character (COPY_ONE) copies the next character from the input field tothe output file.andP;  An = (COPY_LINE) makes it easy to handle a multiple-lineinput field by allowing the remaining characters in the display line to becopied from the input field to the output file.andM;The ! character (COPY_STOP) terminates input-field processing if there are nomore nonblank characters in the input field; it simply goes on to scan forthe ].andP;  When the ] is encountered, any remaining characters from the inputfield are copied to the output file.andM;Anything other than a decimal number following the [ results in a branch toCHK_PAT to do time and date substitution.andM;The processing is very similar to inputfield references, with most of thecharacters going directly to output, \ forcing a character to output, andsentinels causing substitution.andP;  The only difference you'll notice is thatthese sentinels are specific two-character alphabetic sequences (MM, DD, CC,YY, hh, mm, ss, DW, MN, for example).andP;  Each of these is replaced in theoutput file by the two (three in the case of DW and MN) characters thatrepresent the time and date.andM;A special block of code starting at COPY_SCRN is used when a screen file iscreated or updated using MENU /E.andP;  In this case, no template file is used andthe logic is basically a reverse of the screen-file-processing section.andM;The display buffer is scanned and a file is created that would reproduce thatdisplay buffer if it were used as a screen file.andP;  Special handling isrequired to generate the ANSI video-attribute sequences whenever theattfibute changes in the display buffer and to insert the [] and 11 pairsaround input-field definitions and constant-field definitions, respectively.andO;Otherwise, the logic converts one screen line into one output-file record,which is terminated by a CR LF pair.andP;  When the template-file processing iscomplete, all output files are closed (WF_DONE) and the program exits(EXIT_DOS).andM;SUMMARYandM;MENU can be used with simple screen formats and correspondingly simpletemplate files to give all of your batch files an attractive, easy-to-use,custom-designed appearance.andM;Don't overlook the possibility of using MENU with only a screen file and notemplate or output files.andP;  It can display information screens in colors thatthemselves convey information to a user.andP;  Pressing Enter or Ctrl-Enter willthen go on to the next step in your batch file.andP;  Compare a fully formattedscreen to a series of ECHO commands followed by a PAUSE for screen appeal!andO;And you get this advantage without having to use ANSI.andP;  SYS or ANSI.andP;  COM tocontrol the screen.andP;  Moreover, you can use MENU with a template file but noscreen file to create output files containing edited time and dateinformation.andM;When you do want to create a sophisticated application, linking togethermultiple programs and batch operations, MENU has the power to support you.andO;And all without any programming-unless, as a diehard who has to programeverything, you call the template file a program.andP;  Character DescriptionandM;\ Put the next character in the display even if it is a control character.andM;This allows [, ], {, }, \, and ESC to be included.andP;  [ Start of an inputfield.andP;  The position in the display is saved.andP;  ] End of input field.andP;  Theprevious position in the display is saved asandM;the end of the input field.andP;  Any characters between the [ and ] are displayedas a default value for the input field.andP;  { Start of constant field.andP;  Theposition in the display is saved.andP;  } End of constant field.andP;  The previousposition in the display is savedandM;as the end of the constant field.andP;  Characters between the { and } are theconstant.andP;  Constant fields may be copied to the output files by using the(nnn) or ([nnn]) template patterns.andP;  They are a convenient way of associatingmultiple characters with a menu selection.andP;  Although constant fields take upspace in the display, they need not be visible if the appropriate videoaffributes are used.andP;  ESC Start of ANSI video afftibute sequence.andP;  SubsequentcharactersandM;are scanned until the terminating m and the ANSI.SYS attributes are applied.andO;The Set Graphics Rendition (SGR) functions are supported.andP;  All of these havethe pattern ESC[#;...;#m, where ESC is the ASCII control character 27 and #is any decimal value listed below:andM;Value DescriptionandM;0 All attributes off (normal white on black) 1 Bold on (high intensity) 4Underscore (monochrome only) 5 Blink 7 Reverse video - reverses whateverandM;colors are already in effect 8 Canceled on (invisible) -foregroundandM;color is set equal to background color 30 Black foreground 31 Red foreground32 Green foreground 33 Yellow (brown) foreground 34 Blue foreground 35Magenta foreground 36 Cyan foreground 37 White foreground 40 Black background41 Red background 42 Green background 43 Yellow (brown) background 44 Bluebackground 45 Magenta background .andP;  46 Cyan background 47 White backgroundandM;In addition to the characters above, CR and LF also hive special meaningwithin a file.andP;  Normally created using MENU /E, a screen file is an ASCIIfile in which each record occupies one or more lines on the display.andP;  Longrecords wrap around the display at the current line width of the display.andO;Whenever a carriage return (CR) or line feed (LF) character is encountered,the display line is filled out with blanks.andP;  A CR-LF sequence is treated as asingle CR character.andP;  Key Description .andP;  .  .  ESC Terminate MENU withoutproducing output filesandM;Enter Move to next line of input field or next field or finished if in lastfieldandM;Ctrl-Enter Finished with input, produce outputandM;Tab Move to start of next input fieldandM;Shift-Tab Move to stall of current input field or if already at start, moveto start of previous oneandM;Home Same as Shift -Tab (up arrow) Move up one line Pgup Move up onescreenful (lft arrow) Move left one character (rt arrow) Move right onecharacter End move to end of field Ctrl- End Move to end of menu (dn arrow)Move down one line PgDn Move down one screenful Ins Toggle insert mode DelDelete character under cursor 'andM;Alt= Insert next character in '' even ifit is a control character.andP;  Used toput the graphics for CR, LF, ESC, and TAB in the displayandM;Key DescriptionandM;F1 Help (displays key definitions)andM;F2 Set end of menuandM;F3 Display input and constant-fieldandM;definitionsandM;F4 Delete an input or constant-fieldandM;definitionandM;F5 Start of constant fieldandM;F6 End of constant fieldandM;F7 Start of input fieldandM;F8 End of input fieldandM;F9 Change display attributeandM;F10 Apply display attribute to currentandM;cursor positionandM;HOW TO CREATE A TEMPLATE FILE A template file has a format very similar tothat of the screen file.andP;  Most characters in the template file, including CRand LF, are sent directly to the output files without change.andP;  When MENUfirst starts reading a template file, all output is sent to the first outputfilename given on the MENU command line.andP;  Special characters in the templatefile allow you to extract information from the display and send it to theoutput files, to send the edited date and time to the output file, and tochange output files.andM;No additional control characters are inserted when information is copied tothe output file either from the template file or from the display.andP;  You cancreate records of arbitrary length in the output file - indeed, you'll createvery long records unless you insert LF characters at appropriate points inthe template file.andP;  Normally you need not be concerned about this, since yourtemplate file will usually have the same structure as your desired outputfile.andP;  When you create the template file with your text editor, LF characterswill be inserted everywhere that you start a new line.andP;  However, if you arecopying a multiline input field or constant field to the output file, youwill probably want to be sure that each line on the screen is aandM;The record in your output file.andP;  The MENU program does not assume this,because you may want to create a long data record for some program or breakupthe field at some other width than the display-line width.andM;The special characters used in the template file are as follows:andM;\ Do not send the \ to the output file, but do send the next character evenif it is a control character.andM;[ Send an input field or time-anddate pattern to the output file.andP;  If thecharacters immediately following the [ are decimal digits, an input field isselected.andP;  If they are anything else, a timeand-date pattern is processed.andO;For example, [1, .andP;  .  indicates that the first input field is selected;[0009l.., selects the 91st input field.andP;  On the other hand, [abc.andP;  .  . andO;selects time-and-date editing.andM;When an input field is selected, another level of template processing begins.andO;Again, all characters except special characters are sent to the output filedirectly, therefore allowing you to mix template information with the inputfield information.andP;  The special characters that are used within an inputfield reference are itemized below:andM;\ Do not send the \ to the output file, but do send the next character.andM;] End of reference.andP;  Send all remaining input-field characters to the outputfile.andP;  Thus, [5] sends all of input field 5 to the output file.andP;  Trailingblank characters in the input field are never sent to the output file.andM;? Send the next (one) input field character to the output file.andM;= Send all remaining characters in the current display line of the inputfield to the output file.andP;  Since the input field itself does not includecarriage-return and line-feed characters, the template will usually contain asequence such asandM;[1=!andM;=! =!]to move a multiline input field to the output file.andM;! Stop processing the [...andP;  ] if no more characters remain in the inputfield.andP;  The template file is scanned until the ] is found.andP;  If atime-and-date patternandM;is selected, similar processing occurs, except that the special charactersare mostly two-letter combinations.andP;  All characters in the pattem are sentdirectly to the output file until a special character is discovered.andP;  Thespecial characters follow:andM;\ As above ] End of pattern.andP;  Resume normal template-file processing.andM;MM Replace with the numeric month of the year (01 to 12).andM;DD Replace with the numeric day of the month (01 to 31) .andM;CC Replace with the numeric cenwry (19 or 20) .andM;YY Replace with the numeric year (00 to 99).andM;MN Replace with the alphabetic three-letter abbreviation for the month.andM;DW Replace with the alphabetic three-letter abbreviation for the day of theweek.andM;hh Replace with the numeric hour of the day (00 to 23).andM;mm Replace with the numeric minute (00 to 59) .andM;ss Replace with the numeric second (00 to 59).andM;For example, [DW MN DD, CCYY hh:mm: ss] might result in Mon Jul 12,198921:15:34.andP;  The time-and-date pattern is case sensitive.andM;{ Send a constant fteld to the output file.andP;  Ediing of constant fields is notsupported .andP;  Only two forms of reference are permitted.andP;  (nnn) sends thennnth constant-field to the output file.andP;  {[nnn]} is an indirect constantfield reference and is the most important use of constant fields.andP;  The nnnthinput field is used to obtain a decimal number.andP;  That constant field is thensent to the output file.andM;Assume, for example, that the template contains {[5]} and that the fifdiinput field contains 2.andP;  The contents of the second constant field are sentto the output file.andM;andless;- Switch output files.andP;  The usage must be andless;nnnandgt;.andP;  The nnnth ouctsut filenamed on the MENU conimand line becomes the current output file.andP;  Allftirther output will be concatenated to the end of that output file.andP;  Notethat output files arcts not closed when a switch occurs.andP;  This allows you toswitch back and forth among ouctsut files.andO;</TEXT></DOC>
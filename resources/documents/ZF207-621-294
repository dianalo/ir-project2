<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-621-294  </DOCNO><DOCID>07 621 294.andM;</DOCID><JOURNAL>EXE  August 1989 v4 n3 p54(4)* Full Text COPYRIGHT Process Communications Ltd. 1989.andM;</JOURNAL><TITLE>Porting to the transputer. (programming)</TITLE><AUTHOR>Hamilton, Andy.andM;</AUTHOR><SUMMARY>Transputers integrate high-performance processors, RAM andhigh-speed communications links in one chip.andP;  Using transputerscan greatly increase the speed of processing.andP;  A single 30-MHztransputer can produce 15 MIPS, and networked computers canexecute any number of processes in parallel.andP;  The simplest way toport an application to a transputer is to place the application ona single transputer, then speed it up further by dividing theapplication into modules executed on parallel transputers.andP;  Somerestructuring is required, but the changes can be madeincrementally.andP;  The steps used in porting an application arediscussed in some detail.andM;</SUMMARY><DESCRIPT>Topic:     Software MigrationTransputersProgramming LanguagesProcessor SpeedPerformance ImprovementApplications ProgrammingModular Programming.andO;Feature:   illustrationchart.andO;Caption:   The entire application on one transputer. (chart)Communicating occam processes. (chart)Some module examples. (chart)andM;</DESCRIPT><TEXT>Despite the claimed advantages of the transputer, the prospect of rewritingap has put off many potential users.andP;  However, this is no longer necessary,as Andy Hamilton explainsandM;Unlike other CPUS, a transputer integrates a high-performance processor,on-chip RAM, and inter-processor links on a single chip.andP;  All these elementscan operate concurrently.andP;  Transputers mayv execute any number of softwareprocesses in parallel, limited only by available memory.andP;  The transputerlinks let you connect arbitrarily large numbers of transputers, to increaseboth processing and I/O power.andM;Inmos designed the occam language to use the transputer's parallelism -originally it was the only language that the transputer supported.andP;  In occam,processes communicate via svnchronised, unbuffered, point-to-point,unidirectional communication channels.andP;  This is shown in Figure 2, where eachcircle represents a process, and each arrow represents a communicationchannel.andM;Now these processes can be written in other languages.andP;  inmos at presentprovides development systems for C, Pascal and FORTRAN, and has promisedsupport for the Ada language in the future.andP;  Third parties offer otherdevelopment systems, like transputer LISP, Prolog, Modula-2; even BASIC.andM;This article presents an overview of how to convert existing software,written in conventional languages, to run on transputers.andP;  The techniquesdiscussed do not involve rewriting the application.andP;  I will also show how newsoftware should be planned to make good use of transputers.andM;Why do it? Why might one wish to port an application to transputers? Oneadvantage is scalable performance.andP;  A single transputer can pro- duce 15 MIPSat 30 MHz.andP;  If more processors are added, the software runs faster.andP;  Atransputer network can contain a mix of integer and floating-pointtransputers - so that fast real number arithmetic can be added only where itis needed.andP;  With suitable applications, a near-linear speed increase can beobtained.andM;There are several types of port.andP;  The first, in which all the software isplaced on one transputer, is the easiest to carry out, but also the mostrestricted.andP;  The second is rather more complex.andP;  The application executespartly on its original host, and partly on a transputer network - this iscalled a part port.andP;  This technique is commonly used in embedded systems.andO;The final category, performance porting, involves adapting an application,which already, runs with at least one transputer, to make it go faster.andP;  Iwill examine a specific example of this category: processor farming.andP;  Thistechnique involves both adding processors to a sytem and extracting the bestfrom current resources.andM;The easiest port The most straightforward port places the entire applicationon a single transputer.andP;  We need not modify the source or structure of theprogram.andP;  This scenario is shown in Figure 1.andP;  The host computer executes asimple server program, such as Inmos's ISERVER.andP;  This software provides theapplication with the services of keyboard, screen, and file store.andP;  Note thatthe host computer employed with the transputer need not be the same as thatoriginally used with the application.andP;  If you use a server that is supportedon a range of development platforms, then you achieve instant binary levelportability.andP;  For example, ISERVER runs on the PC, Sun-3 and VAX.andM;Development tools usually execute on a transputer board connected to the hostcomputer, rather than on the host itself.andP;  The memory and computationalrestrictions of the PC force this approach, but there are truecross-development systemsandM;for the more powerful              machines.andM;Transputer-based tools often use the same server program as the application.andO;An application consisting of separately compiled units, written in one of thesupported languages, is easily moved to a transputer in this way.andP;  Deviationin the source from the appropriate language specifications will affect theease of the porting.andP;  Good choices of application are compute-intensiveprograms which require low volumes of run-time communication between thetransputer and the supporting host.andP;  Two applications that have been portedin this way are SPICE and TeX.andP;  SPICE is a large public domain electricalcircuit simulator written in FORTRAN-77.andP;  It is very computationallyintensive, and is generally used with VAX and IBM mainframes.andP;  SPICE wasported to a T800 transputer (which contains an integral floating point unit)hosted in a PC-environment, and ran on-par with a VAX 11/785 with FPA, oraround double the speed of a Sun-3 with 68881 co-processor.andP;  A C version ofthe Tex document formatting and text preparation system was ported to a T414.andO;it ran about three times faster than on an 80286-based PC.andP;  Getting a portedapplication to run on a single transputer is always a first step.andP;  Once it isworking, incremental steps can be taken to speed it up further, by dividingthe application into modules and adding more transputers.andP;  I will nextdiscuss the restructuring required to do this.andM;Choosing modules The nature of an application affects its suitability, forporting to multiple transputers.andP;  The first step is to segment the programinto a small number of separate modules, each of which can executeconcurrently.andP;  These modules will then be used as the software buildingblocks in a multiprocessor system, corresponding to the communicatingsequential processes depicted in Figure 2.andM;Modules consist of blocks of both functions /procedures and data.andP;  We leavethis material unchanged from the original code.andP;  Each module is run as aseparate process.andP;  Modules communicate with each other using messagesexchanged over channels.andP;  Any data or services required of another modulemust be obtained via messages, which pass through a cleanly defined moduleinterface.andP;  Both parameter and non-loeal data must be exchanged in this way.andO;We cannot send pointers in messages, because, in the final system, they mightrefer to memory on a different processor.andP;  Strings and arrays must betransferred in entirety.andP;  This message-based methodology is essential to adistributed memory  system.andP;  Most development systems provide facilities toallow modules written in any language to communicate.andM;The decomposition of an application into modules is very dependent on itsstructure.andP;  You should aim for between two and ten modules in total: we havefound that this gives the best support with least overheads.andP;  The key is tomake one module to deal with slow, I/O such as screen/ keyboard/file-systeminteraction), while the others do computational activities.andP;  Even with asingle transputer, this technique improves performance, because it makes useof dead time'.andP;  Try to arrange for each module to do maxinium computationwith minimal communication with its neighbours.andP;  Restrict the number ofmodules that use host- dependent services, preferably to only one.andP;  Placingall the heavily compute-intensive parts of an application in one module,together with all required data, represents a good starting point for amultiple transputer farm.andM;The extra code Although the porting method described here does require somesimple extra code, it is important to note that there are no changes to thebodies of the original functions/procedures, or to how you call them.andP;  Inthis technique, we replace the call to a CPU-intensive function with amessage-passing stub.andP;  A fragment of source code, located in the calledmodule, re-creates the original environment of the function.andP;  The callingsoftware never knows that the function has been moved  'transcended' in thejargon).andP;  We can now shift modules around the system's hardware withoutfurther modification.andP;  Parallelism itself, which takes advantage of multipletransputers, is achieved by a simple extension of this method.andP;  Figure 4illustrates a standard function hierarchy in an application, beforemodification.andP;  Function FO calls function Fl, and Fl in turn calls variousother functions F2, F3 and F4.andP;  All these functions have access to the samememory space.andP;  The requirement is to move F1 and all its dependants into aseparate module from FO, paving the way for a multi-module/multi-processorsolution.andP;  The result is depicted in Figure 5.andP;  Module MO contains functionFO and a stub for F1.andP;  This stub takes the same parameters as F1, so that FOis unaware of any changes.andP;  The form of the stub is shown as C code in Figure6.andP;  It consists of a message send/ receive partnership, which not onlytransfers any parameter data, but also accommodates free variables andfunction return data.andP;  Module MI contains the (unmodified) Fl function group.andO;A small controller loop is added to allow multiple calls to the Fl functioncluster.andP;  The form of the Ml module is shown in Figure 7.andP;  The mechanism thatconnects the modules is called a 'channel'.andP;  Usually, channels are under thecontrol of an outer harness, writ- ten in occam.andP;  This  stub' techniqueoffers various advantages.andP;  You can adapt the software incrementally, movinga few functions at a time out into separate modules.andP;  No assumptions need bemade about the hardware configuration.andP;  On the drawback side, someapplications are written so that there are big overheads in moving shareddata between modules.andP;  For instance, COM- MON blocks in FORTRAN code can bean obstacle.andM;Each module has different requirements in terms of compute power and memoryOnce we have allocated the modules to transputers, suitable hardware canoften be selected off-the-shelf from the range of TRAM (TRAnsputer Module)boards available.andP;  TRAms cover the spectrum of processing power, from 32 KBof fast SRAM up to 8 MB of DRAM, most with options on transputer type andspeed.andP;  TRAMs are used on standard motherboards, available for a variety ofdifferent hosts.andP;  Using TRAMs makes it easy to adapt the hardware to therequirements of a changing application.andP;  The module/stub technique can alsobe used in embedded systems.andP;  It works independently of microprocessors,controllers, architecture and any other specialised hardware used in thesystem.andM;Down on the farm  Farming' is the name given to a general purposemulti-processor technique.andP;  It uses additional processing power to work on aproblem concurrently, and so increases performance and throughput.andP;  Anproblem can be farmed if there are independent sets of data available.andP;  TheMandelbrot set is a well-known example.andP;  Each processor calculates a smallpart of a scene, which is built up in patches.andP;  The transputer needs only asmall amount of input data to calculate the image for each  patch.andP;  Eachworker can proceed independently of its neighbours, Ray tracing is anothergood opportunity for processor farming.andP;  Situations like these, where severalprocessors execute the same code, but each processor works on distinct andindependent data, are examples of 'geometric parallelism'.andP;  A processor farmconsists of a transputer network, usually of regular topology, on which theapplication and some control software run.andP;  A sensible starting point is anapplication already running on a transputer.andP;  Farming may involve replicatingthe whole program over the processor network, or just one processor-intensivemodule.andP;  in the latter case, the application should have been modularisedusing the techniques described above.andP;  Figure 8 illustrates the generalstructure of a farm.andP;  Each worker processor executes two additionalprocesses, concerned with distributing work throughout the farm.andP;  The ROUTERprocess feeds work tasks into the farm.andP;  The MERGER process combines resultsfrom the local worker with those from the rest of the farm, and returns themtowards the controller process.andP;  A single FARM CONTROL process regulates thedistribution of work and data around the farm.andP;  These three special processesare written in occam, and follow a standard format.andP;  The structure andlanguage of the application do not affect the coding of these processes.andO;Farming can offer a speed increase which is linear or better.andP;  For example,in an occam rayv tracer farm, ten transputers can work at eleven times thespeed of one.andP;  There are two reasons for this.andP;  The use of each transputer'son-chip RAM means that more of the 'total' task can be accommodated inon-chip memory.andP;  Second, in any application there is generally aninitialisation portion.andP;  The overheads of common initialisation areminimised, because each processor does its own portion.andP;  Farms move tasksbetween processors dynamically, at run time.andP;  The system tries to keep itselfas busy as possible.andP;  This means that it is a useful technique forapplications when the amount of computation required in any given sub-task isnot constant - as occurs with the Mandelbrot set.andM;Practical farming Here are three examples of transputer farms providingsolutions to practical problems.andP;  Each was constructed from standard softwarecomponents, and used standard off-the-shelf hardware.andP;  A securities companyhad an application consisting of a graphical user interface and a processorintensive data analysis suite.andP;  The code was written in C. They decided tofarm the data analysis suite.andP;  A  general' farm was assembled, which coulduse an arbitrary, number of worker transpters to do the data analysis.andP;  Theuser interface runs on the root transputer only.andP;  Each worker transputeroperates on files held on the host PC.andP;  These files are specified by the codein the user interface.andP;  A TRAM mother-board, containing four T800 transputerseach with 2 MB of DRAM, runs the program four times as fast as on onetransputer.andM;The SPICE circuit simulator, discussed above, was moved in its entirety to atransputer farm.andP;  We had already got this FOR- TRAN application working on asingle transputer.andP;  We did not need to modify it further.andP;  The controllerallocates task to SPICE workers by reading a jobs list in a filepre-specified by the user.andP;  SPICE is suitable for this type of farmingbecause it makes few screen and keyboard accesses.andP;  These are intercepted andhandled by the farm controller.andP;  We achieved linear performance increaseagainst the number of worker processors.andM;Farming an application running on both a transputer and another processor,say a PC host, is similar to farming a wholly transputer-based application.andO;An example of mixed-processor farming is Second Sight.andP;  This program analysesdata sets for trends, so that future values may be forecasted.andP;  This wasoriginally a Turbo Pascal application running on a PC, using pull-down menusand host graphics.andP;  Because it was processor intensive, and all the sets ofdata could be operated on independently and concurrently, the application wassuitable for farming.andP;  The code was split into a computational part, thatexecuted on a transputer system (doing the data modelling), and the graphicaluser-interface and filing part.andP;  This latter executed unaltered on the host.andO;Second Sight runs about 10 times faster on a PC equipped with a single T414,25 times faster with one T800, and 50 times faster with four T800s.andO;</TEXT></DOC>
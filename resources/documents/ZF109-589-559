<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-589-559  </DOCNO><DOCID>09 589 559.andM;</DOCID><JOURNAL>EXE  Sept 1990 v5 n4 p26(4)* Full Text COPYRIGHT Process Communications Ltd. (England) 1990.andM;</JOURNAL><TITLE>First class library. (TurboPower Software's Object Professionalclass library for Borland International Inc.'s Turbo Pascal 5.5)(evaluation)</TITLE><AUTHOR>Smith, Paul G.andM;</AUTHOR><SUMMARY>TurboPower Software's Object Professional (OP) is anobject-oriented programming library for Turbo Pascal 5.5.andP;  OPincludes 51 non-demonstration Pascal units.andP;  Only half the unitsare object-oriented because many units were taken from previousTurboPower products, which were not object-oriented, and becauseimplementation restrictions in Turbo Pascal 5.5 limit the size andcomplexity of object-oriented programs.andP;  OP includes 26 low-level,non-object-oriented programming units, including system-leveldefinitions, memory and display management, and sorting and stringhandling.andP;  OP also includes 10 fundamental-object units, which canbe used in creating custom objects, and 16 high-level objects forconstructing user interfaces.andP;  OP's documentation is exhaustivebut not instructive, and installation is simple.andP;  Turbo Pascal 5.5users should buy OP despite its faults.andM;</SUMMARY><DESCRIPT>Company:   Turbopower Software (Products).andO;Product:   Turbo Pascal 5.5 (Program development software) (Computerprograms)Object Professional (Program development software).andO;Topic:     PASCALObject-Oriented LanguagesProgram LibrariesProgrammingEvaluation.andO;Feature:   illustrationchart.andO;Caption:   Hierarchy of window management classes. (chart)andM;</DESCRIPT><TEXT>First Class Library Class libraries go hand in hand with object orientedprogramming languages.andP;  Today's generation of graphical applications can bedeveloped faster and to a more consistent level of quality and presentationusing class libraries that implement standardised user interfaces.andP;  Languageslike Smalltalk are inseparable from their class libraries.andP;  On the PC, C++has libraries like CommonView and C++/Views.andP;  The Macintosh has MacApp.andM;The first major object library to be released for Turbo Pascal 5.5 is ObjectProfessional, from the established house TurboPower Software.andP;  ObjectProfessional is the latest in a line of programming libraries for TurboPascal from TurboPower Software.andP;  Previous libraries, none of them objectoriented, were sold as 'Turbo Professional'.andP;  Object Professional inheritsseveral important features from Turbo Professional.andP;  Users of the latterproduct should be able to convert their programs to Object Professional withrelative ease, although it is recommended by TurboPower that all code dealingwith windows, menus, and the user interface should be completely rewritten toget best advantage from the new features.andP;  Other products from TurboPowerSoftware include the B-Tree Filer line of single-user and multi-user indexedfile handlers.andM;Library structureandM;If you are expecting to find that everything in Object Professional is objectoriented, prepare to be disappointed.andP;  Around half of the units are notobject oriented, though this is for pragmatic reasons, as we will discover.andM;Object Professional is delivered as a very large number of Pascal units: 51to be exact, not counting demonstration programs and the like.andP;  These unitsfall into three groups: the low-level units, which define non-object datatypes and functions; the fundamental-object units, which serve largely asbuilding blocks used by higher-level objects; the high-level object units,which build upon the previous two sets of units.andP;  I have grouped the unitsslightly differently to the documentation for Object Professional.andM;Low-level units include a variety of system-level definitions and functionssuch as memory manipulations, display management, DOS interface, mouse input,sorting, string handling, and TRS loading and management.andP;  These are used bythe various higher-level objects.andM;Fundamental object units define a number of 'building block' objects thatwill, generally, be used as stepping stones in the construction ofhigher-level objects.andP;  They are used in this way by many of the high-levelobjects in Object Professional.andP;  Many are useful in their own right.andM;The high-level objects build on the low-level functions and the fundamentalobjects to define powerful classes that can be used to construct everydayprograms.andP;  These include windows, pick lists, menus, and line and texteditors.andP;  Also provided are a handful of very high-level application objectssuch as a calendar and a calculator.andM;TurboPower Software provide a number of demonstration programs, two of which(a pop-up online help utility for Object Professional, and a pop-up 'desktopmanager' like Sidekick) are actually quite useful.andM;Source code is provided to virtually everything: accordingly, a large part ofthe installation process is given over to compiling the various libraries.andM;Not all of Object Professional is object-oriented: only one of the low-levelunits (the largest group of units) defines an object type.andP;  This is, Isuspect, for two reasons.andP;  First, TurboPower Software had a perfectly goodset of low-level functions within their Turbo Professional library that couldbe modified or even used unchanged as the foundations of Object Professional.andO;Second, given the various restrictions imposed by the implementation of TurboPascal 5.5 (see .EXE Magazine, August and September 1989) on the size andcomplexity of object-oriented programs, it would be unfeasible (not tomention unnecessary) to make everything into an object.andP;  (Reading the ObjectProfessional manual, which contains a few guarded digs at Turbo Pascal 5.5'simplementation, I feel vindicated with regard to my previous criticisms ofthat language!)andM;Low-level unitsandM;The Object Professional library is vast, and it would be pointless to try toexamine every feature of it in detail.andP;  Accordingly I will summarise what itoffers, give a more detailed explanation of points of particular interest,and try to give you an impression of what it's like to use.andM;To summarise the low-level units, there are twenty-six: OP8087 numericcoprocessor control; OPASCIIZ zero-terminated string handling; OPBCDbinary-coded decimal arithmetic; OPCOLOR colour code definitions; OPCRTdisplay management unit, replacing Borland's CRT unit (this unit also definesa colour-set object type); OPDATE date and time handling functions; OPDEVICEdevice-specific routines for printing; OPDOS various DOS and BIOS interfaceroutines; OPEMS interface to EMS memory; OPENHKBD enhanced keyboard routines;OPERRHAN run-time error handlers; OPEXEC DOS exec functions that can swap todisk or EMS memory; OPEXTMEM extended memory management; OPFEDIT simplestring editing routines; OPINLINE various low-level utility functions; OPINTinterrupt service routine management; OPMOUSE mouse input routines; OPSORTin-memory sorting; OPSTRDEV string input/output; OPSTRING stringmanipulation; OPTSR definitions and routines for creating TSRs; OPSWAP andOPSWAP1 definitions and routines for creating swappable TSRs; OPMACED,OPREPLAY, and OPMACRO a keyboard macro editor (which is a high-level unit,included here because it is not object oriented) and assorted macroprocessing routines.andP;  Whew!andM;Many of the low-level units ware equivalent to those found in TurboPowerSoftware's previous offering, Turbo Professional.andP;  Some have been rewrittenand others are completely new.andP;  They are nearly all non-object orientedunits, containing constants, type definitions, and functions.andM;The low-level units will be useful to you even if you have no intention ofwriting object-oriented programs.andP;  Particularly worthy of note as OPINT,OPTSR, OPSWAP, and OPSWAP1.andP;  These units allow the construction of reliableTSRs which may, if you use units OPSWAP and OPSWAP1, be swappable.andP;  SwappableTSRs occupy very little memory when they are active (as littel as 6 KB to 8KB); when they are invoked they will swap out memory to EMS or disk beforeloading themselves.andM;The screen and display management units, and all the higher-level classesthat make use of them, are designed to adapt automatically to differentdisplay systems.andP;  Display attributes are passed twice for every operation:once for monochrome, and once for colour display.andP;  In theory, your programsshould work just as well on a monochrome display as on a high-resolutiongraphics system.andP;  The ColorSet class defined in OPCRT allows collections ofvideo attributes to be dealt with safely and economically by your programs.andM;Fundamental-object unitsandM;There are ten units defining fundamental classes.andP;  In summary, these are:OPABSFIELD an abstract filed and 'picture' string handling class; OPCLONEprogram file cloner; OPCMD keyboard command handling; OPFIELD data entryfield classes; OPFRAME screen entity classes used as window building blocks;OPLARRAY array classes; OPPRINT print handling classes; OPPRNLOW low-levelprinter-related classes; OPROOT many fundamental objects including lists andstreams, replacing Borland's Streams unit; OPSEDIT a simple line editorclass.andP;  Most (not all) of these classes are derived from the 'root' classdefined in unit OPROOT.andM;The OPROOT unit is particularly interesting.andP;  It defines a collection offundamental data-management classes, together with a set of 'stream' classes.andO;The fundamental class, ancestor of all the others defined in OPROOT, iscalled Root.andP;  From this are derived classes that can be used to organisecollections of objects like PointerStack, StaticQueue, SingleListNode andSingleList, DoubleListNode and DoubleList, BitSet and LargeBitSet, StringDictand StringSet, and StringArray.andP;  In your programs, objects to be organised bySingleLists and DoubleLists will be derived from the appropriateSingleListNode and DoubleListNode classes.andM;Streams are a sequence of bytes which store almost any kind of data.andP;  Theycan be traditional DOS files, they can be subsections of other files likeexecutable programs, or they may be stored in memory.andP;  Object Professional'sstreams are an extremely powerful generalised mechanism for storing data fromobjects in memory and on disk.andP;  The type of each item in the stream isidentified by means of a special identifier code.andP;  The classes stored instreams are registered with the stream objects, which then know how to calleach individual object when it has to be loaded or stored.andP;  ObjectProfessional streams are not the same as C++ streams: the stream support inC++ is more oriented towards untyped streams of characters used for textualinput and output.andP;  Object Professional streams are oriented towards the inputand output of typed object data.andM;Of the other classes defined in these units, some (like the field types, thecommand processor, and the screen entity classes) are unlikely to be useddirectly in your programs, although there is nothing to stop you doing so.andO;You are likely to use the remainder as building blocks for new object types.andM;High-level object unitsandM;The high-level objects are those that can be used directly to construct theuser-interface of your programs.andP;  There are fifteen high-level units.andP;  Tosummarise, there are: OPBROWSE a general-purpose file browser; OPDIRdirectory and file list classes; OPEDIT a line editor class; OPEDITOR a texteditor class; OPENTRY entry screen classes; OPFORM field, form, and reportprinting classes; OPHELP abstract and concrete help window classes; OPMEMOmemo and memo file classes; OPMENU menu classes; OPPICK a pick list class;OPSELECT selection window classes; OPWINDOW a group of abstract and concretewindow classes.andP;  Also included amongst the high-level units are OPCAL,OPCALC, and OPQKREF which are respectively a calendar, a calculator, and aquick reference chart class defined for use in the DeskPop Desktop Managerexample program: these are not documented although they can be used in yourprograms if you so desire.andP;  They may serve you better as examples of what canbe done with Turbo Pascal 5.5.andM;Object Professional's high-level classes will, if you use them, stronglyinfluence your program's appearance and operation.andP;  They provide reasonablystandardised (although not to the level of, say, Windows 3 or PresentationManager) mechanisms for menu, keyboard command, editing, and window handlingthat will help you create programs with a consistent user interface.andP;  ObjectProfessional's user interface classes are all optimised for text-modeoperation: this library won't be any help if you want to implement a Windowsor Presentation Manager application.andM;Please refer to Figure 1 for a summary of the hierarchy of window managementand related classes.andP;  All are derived from the Root class.andP;  Using theseclasses, which range from those that serve to organise references to windowsand other screen objects, to those that represent screen elements like scrollbars and windows, one can construct full-featured user interfaces on textscreens.andP;  Enormous control may be exercised over the appearance and layout ofthese screen elements, and using streams the objects may be stored in filesor packed into executable program files for run-time reloading.andP;  ObjectProfessional includes specialised derivatives of these user-interface classesthat can be used to create common program elements like lists of files andlists of subdirectories (great for creating file pickers and file managers),and paged and scrollable context-sensitive help windows.andM;The user-interface classes in Object Professional are quite unlike those inmost other class libraries: they are not event driven.andP;  Instead, programmersmust use iterative process loops and background task handlers.andP;  (This isactually logically equivalent to an event driven system.)andM;TurboPower Software justifies this design choice as making the transitionfrom Turbo Professional to Object Professional as easy as possible.andP;  Itwrites, 'after hearing of the steep learning curve [for MS-Windows, PM, theMacintosh, etc] we felt justified in sticking with our [existing approach]'.andO;What utter rubbish.andP;  I think the truth of the matter is that they stuck withthe programming technique they felt comfortable with.andP;  The object-orientedprogramming paradigm is sufficiently different that it would not be a majorstep forward for Turbo Pascal programmers to make the transition to anevent-driven architecture, once they had learnt to think the OOP way.andP;  Inthis instance, I believe that TurboPower Software has done its users a majordisservice.andM;The three high-level user interface classes provided for the DeskPop exampleprogram will only be directly usable if you want to replicate the DeskPopCalendar, Calculator, or Quick Reference Chart windows.andP;  However, they willserve as excellent examples of application-specific classes derived fromObject Professional high-level classes, and you may be able to model your ownclasses on them.andM;Example programsandM;A large number of example programs are supplied, complete with source code.andO;Of particular note are PopHelp, an on-line guide to Object Professional, andDeskPop, the desktop manager program, not dissimilar to SideKick.andP;  Pleaserefer to Figures 2 and 3 for screen shots taken from these programs.andP;  Bothare written as swappable TSRs.andP;  Full source code is provided (largelyundocumented, unfortunately) so you can modify them to make your own on-linehelp programs or to create programs with built-in calculators, calendars,file managers and so on.andP;  Interestingly, they are quite slow to swap in evenon my 33Mhz 80386 machine: DeskPop in particular.andP;  This may point to a designtrade-off you must consider in your own TSRs: measuring the time taken toswap in and out against the memory used by keeping TSRs resident.andP;  As well asthe documented example programs, a selection of others is provided on the'Bonus' disk in the Object Professional package.andM;DocumentationandM;The documentation for Object Professional is, well, massive.andP;  Heavyweight.andO;Detailed.andP;  Exhaustive.andP;  Fairly unhelpful for the first-time user.andP;  It is likea dictionary, not a textbook.andP;  TurboPower Software have taken great care todocument every function and every class that is intended for public use (someare left undocumented as they regard them as being private to the workings ofthe library: this allows them to make internal changes without affectingusers' programs).andP;  The documentation is unhelpful in several respects.andP;  A newuser needs to dive in and examine the example programs since no specificexplanations are given of how Object Professional programs are structured.andO;The information is there, certainly, but it is pretty hard work to glean itfrom the manuals.andP;  A useful addition to the documentation suite (three heavyspiral-bound manuals at present) would be a tutorial manual with gradedexamples.andM;When one uses a bought-in library one must 'go with the flow' and writeprograms in a manner consistent with the way the authors of the librarythink: to do otherwise leads to a lot of difficulties.andP;  It is a shame thereisn't any clear overview of the design principles behind Object Professional.andO;Admittedly, the information can be gleaned from the manuals and the sourcecode, but new users may find that hard.andM;Online help, in the form of a dictionary of key types and functions, isprovided with the PopHelp TSR.andP;  However, I really would have liked to see agood object hierarchy browser in the package: this would be of much more helpwalking around the objects and their implementations.andM;InstallationandM;Installation of Object Professional is a piece of quiche.andP;  A program isprovided that looks after all the bother of copying files, unpacking them(most are compressed using the LHARC utility), and compiling them toconstruct the libraries and the example and demonstration programs.andP;  Fullinstallation requires some 11 MB of disk space.andP;  As installation proceeds,the program tells you how much more space is required.andP;  Unfortunately, theamount of disk space used increases faster than the estimate shown of theamount of disk space still required.andP;  If you prefer, you can copy the packedfiles across by hand and use the Make utility to build the libraries andexecutable files.andP;  This is faster than using the installation program, butrequires more brain power (I used the installation program, of course).andM;ConclusionandM;Object Professional should not be seen as a prime example of a top-flightobject library: this is no MacApp.andP;  However it is something that every TurboPascal 5.5 user should own.andP;  Object Professional provides a very largecollection of useful building blocks, and contains many excellent examplesthat will help you get the most out of Turbo Pascal 5.5.andP;  It is likely to youeven if you don't intend to use object-oriented programming techniques justyet, and it will help you through the transition.andM;Object Professional is a good quality product and at 95 pounds + VAT offersunbeatable value for money.andP;  If you have bought Turbo Pascal 5.5, buy a copyof Object Professional as well.andM;Paul G Smith is a London based technical journalist and consultant.andP;  Hedevelops software and consults on communications, graphics software, and theapplication of OOP techniques.andP;  He can be contacted on AppleLink as 'UK0310',and in the UK as 'pgsmith' on CIX.andO;</TEXT></DOC>
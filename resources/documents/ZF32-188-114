<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> ZF32-188-114 </DOCNO><DOCID>10 625 178</DOCID><JOURNAL>EXE  April 1991 v5 n10 p88(1)* Full Text COPYRIGHT Process Communications Ltd. (England) 1991.andM;</JOURNAL><TITLE>Undocumented DOS.andO;</TITLE><AUTHOR>Chappell, Geoff.andM;</AUTHOR><DESCRIPT>Topic:     BooksReviewMS-DOSProgramming Instruction.andO;Feature:   illustrationphotograph.andM;</DESCRIPT><TEXT>UNDOCUMENTED DOSandM;Spreading SecretsandM;Many DOS programmers will have found that some tasks simply cannot beprogrammed using only the information contained in technical references.andP;  DOShas a secret side and programmers who know it can perform seeminglyimpossible tricks.andP;  It is intrinsic to the nature of secrets, however, thataccess to them is not easy, sot to quite a few programmers, even serious DOSexperts, a 700-page book titled Undocumented DOS will seem like manna fromheaven.andM;Programmers who need to know about unlisted functions, mysterious structuresand flags or just more detail on how DOS accomplishes its normal work havehad to rely on the scattered, vague and often contradictory materialpublished thus far - an unhappy situation indeed, which this book sets out toremedy.andM;For the most part, Undocumented DOS confines its scope to the centralcomponents of DOS.andP;  To DOS programmers, DOS is the Int 21h interface whenseen from inside their programs and the command processor outside.andP;  Systemresources are examined from DOS's perspective to see how the informationgained may be put to good use in applications.andM;However, the book is a lot more than a list of undocumented DOS functions andexamples of their use.andP;  The reader (assumed to be fairly knowledgeable andtreated as such throughout the book) is guided through programming techniquesnot often touched upon.andP;  Assembly language is used sparingly, the opportunitybeing taken to show how almost evey topic (even TSR programming) can beimplemented in a high-level language.andM;Still, whatever its objective and style, a book on this subject, claiming togive detailed descriptions of DOS's undocumented functions and structures, isopen to assessment on its comprehensiveness and the reliability of theinformation it contains.andM;The book's annotated list of undocumented DOS functions is an extract fromthe very much larger 'Interrupt List', well-known to the on-line communityand described in the book as 'the one truly definitive, absolutely reliablelist of DOS calls'.andP;  The full list is supplied in a hyper-text version on oneof the 1.2 MB disks which accompany the book.andM;An objective assessment of the list's completeness is a little tricky, sincethe subject is to some extent open-ended.andP;  In those cases in which DOS callsother programs, it may simply be impossible to deduce everything about suchcalls from the code in DOS alone.andP;  Quite reasonably, the greatest effort hasbeen concentrated on DOS's core and readers must expect to see the word'unknown' when the book touches on matters outside its primary scope.andM;Against this, it must be remarked that there are several complete omissionseven from the I21h interface and that the easy majority of unknown can beresolved by inspection of only the DOS kernel and programs supplied with itas standard (particularly SHARE and IFSFUNC).andP;  Although only somecontributing authors raise the matter of disassembly, it has certainly takenplace.andP;  How else can it be known for instance that the unknown argument toInt 2Fh function 122Fh is required in register DX?andP;  Why else are those fieldsin the Swappable Data Area which are incremented or decremented in the DOScode described as 'unknown flag or counter' rather than just 'unknown'?andM;That the book should mention the Swappable Data Area at all, much lessattempt to detail it and illustrate its effective use in TSRs, is verywelcome and demonstrates that Undocumented DOS is more comprehensive thananything which has gone before.andP;  Also welcome is a discussion of the SEGDEBUGinterface and documentation on network redirectors, a topic said to bemysterious even within Microsoft.andP;  Even so, the information given onredirectors is best viewed as exploratory, for it is too vague to be muchhelp in writing a serious installable file system - it misses the attributeword at offset 0Ch in the IFS driver header, for instance.andM;Of Course, omissions and incompleteness are not likely to cause harm.andP;  Theauthors are commendably frank about the limits to their knowledge and imbue aproper sense of caution.andP;  DOS features which are largely unknown are notgoing to be incorporated into tomorrow's software without furtherinvestigation by developers and the book does a good job of pointing the way,even providing a script-driven utility for spying on interruptcommunications.andM;Much more concern must be given to the reliability of some descriptions ofDOS's inner workings.andP;  Descriptions of memory allocation strategy and ofactions taken to open a file contain errors of fact (although they may bepopular misconceptions).andP;  According to the book, when DOS opens a file, itsearches for a free entry in the handle table belonging to the currentprocess and then for a free System File Table.andP;  In fact, it looks through theSFTs first - a difference which is not trivial, being the source of a DOS bugnot mentioned in the book.andP;  Similarly, the distinction between a devicedriver and file need not be delayed as late as the book asserts; DOS'spathname parsing routine will search the device driver chain in somecircumstances (the source of a bug which is mentioned in the book) and thisis even shown in another chapter by the conversion of A:CON to A:/CON.andM;Perhaps it is unfair to labour such points, given a generally fine book, butprecisely because Undocumented DOS will be regarded as a standard referencefo its subject matter, it is important to note that it has lapses inreliability.andP;  This in nowhere more apparent than the several bugs whichafflict the DEVLOD program for loading device drivers from the command line.andO;In short, because its author does not seem to understand the reason behindone of the fields in DOS's List Of Lists, using DEVLOD to load ANSI.SYS fromthe command line has the possibly undesirable result that Ctrl-C andCtrl-Break will not be effective when programs have their standard inputredirected from a file.andP;  For much the same reason, combined with a misuse ofundocumented function 32h, the ability of DEVLOD to load block device driversin the presence of SUBSTed drives is suspect, despite claims.andP;  Thus, on asystem with hard disk partitions C: and D: and a drive E substituted for adirectory on drive C, using DEVLOD to load a block device driver (as drive F)is very unpleasant for drive D and is not a success for F: either.andM;More subtle is the construction of double-checks based on observations thatare not supported by careful analysis.andP;  the clearest example is the run-timedetermination of System File Table size to allow verification against thesize known from the DOS version number.andP;  The book assumes that the SFTs willbe ordered AUX then CON, but this need not be true, for the arrangement canbe manipulated by software using only documented DOS functions (though a goodreason may be hard to produce).andM;Such problems aside, however, Undocumented DOS in a serious, responsiblestudy which succeeds on the whole in demonstrating the safe use of DOS'ssecret side to expand programming horizons.andM;Manual EntryandM;The first implementation of ATandamp;T's UNIX System V Release 4 - the latest andthe most powerful version of the UNIX operating system - are just starting toappear.andP;  Combining elements from a number of UNIX variants, such asMicrosoft's XENIX, Sun Microsystem's Sun OS, and the BSD system, SVR4 haslooks to be industry standard UNIX platform for the 1990s.andM;Prentice-Hall, in conjunction with ATandamp;T, has produced a series of books toaccompany the release.andP;  The full series comprises a staggering fifty titles,and covers most aspects of UNIX, including system administration,programming, and networking.andP;  As well as providing a separate series oftitles for the Intel 80386 specific versions of the operating system, thereis graphics series covering both X Windows and Open Look, and a binaryinterface and compatibility specification set for a range of processors,including the Intel 80386, Motorola 68000 and Sun SPARC.andM;The books in the series are designed to compliment the documentation suppliedby ATandamp;T, and so all the information in the Prentice-Hall books can actuallybe found in the official ATandamp;T documentation.andP;  These books will, however,appeal to large corporate users and training companies, as well as technicaldepartments, who usually need multiple copies of technical material such asthis.andP;  The books are by no means inexpensive - the four in this review alonecost over 100 pounds, but, for your money, you do get a weighty set ofdocumentation, and bulk purchases of over 30 copies are eligible fordiscount.andM;The four books reviewed here are part of the general programming set, and canbe viewed as a foundation series for programming under UNIX.andP;  They are not,though, the only technical books in the series, and programmers may findthemselves having to refer to additional books, depending on the nature ofthe work.andP;  Although these books are aimed at generic UNIX, the ATandamp;T 3B2 and6386 computer systems are used as examples throughout the text, and,therefore, developers working with the Intel 386 family would be best advisedto go for the 386 specific titles where possible.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-475-555  </DOCNO><DOCID>09 475 555.andO;</DOCID><JOURNAL>IEEE Transactions on Software Engineering  Oct 1990 v16 n10p1107(15).andM;</JOURNAL><TITLE>Early experience with the Visual Programmer's WorkBench.andO;(technical)</TITLE><AUTHOR>Rubin, Robert V.; Walker, James; Golin, Eric J.andM;</AUTHOR><TEXT><ABSTRACT>The Visual Programmer's WorkBench (VPW) is a toolkit to constructvisual programming environments; its orientation is towardsdistributed applications.andP;  VPW's goal is to make it easy to createenvironments for visual languages.andP;  The collection of tools in theVPW are for constructing visual programming environments, not anenvironment for a particular language.andP;  The VPW design is based ontwo principles: language-independent specifications of thesyntactic structure, the abstract structure, and the static anddynamic semantics of the visual language can be used to generatevisual languages and their programming environments; VPW is builtaround a model of distributed processing based on shareddistributed memory.andP;  An experiment using VPW to generate adistributed programming environment for a concurrent visuallanguage is a success.andP;  Experience shows that full power of visualprogramming can be realized by providing tools for theconstruction of complete environments.andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     Visual ProgrammingResearch and DevelopmentProgramming LanguagesComputer EnvironmentDistributed Processing.andO;Feature:   illustrationchart.andO;Caption:   PetriFSA diagram after graph layout. (chart)PetriFSA diagram after graph query. (chart)PetriFSA run-time architecture. (chart)andM;</DESCRIPT></DOC>
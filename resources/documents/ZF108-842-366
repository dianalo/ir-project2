<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-842-366  </DOCNO><DOCID>08 842 366.andM;</DOCID><JOURNAL>LAN Magazine  Sept 1990 v5 n9 p69(5)* Full Text COPYRIGHT Telecon Library Inc. 1990.andM;</JOURNAL><TITLE>When worlds collide. (client-server architecture integratesmicrocomputer and mainframe technologies)(Databases)</TITLE><AUTHOR>Finkelstein, Rich.andM;</AUTHOR><SUMMARY>Client/server architecture equips microcomputer workstations withmainframe application logic so that they can access the databaseserver, which not only contains the shared information on anetwork, but also has special capabilities that outperform thoseon a traditional file server.andP;  While a file server can onlyexecute a client request by sending entire records over thenetwork, a database server retrieves specific information withoutexcess network traffic.andP;  Database servers contain storedprocedures, concurrency-control facilities and a database recoveryutility, and can monitor simultaneous record access.andP;  File servertechnology lacks all of these capabilities or performs them onlyon a rudimentary level.andP;  Migrating to client-server architecturecalls for specialized education of all support staff and carefulconsideration and understanding of the issues it raises for anorganization's growth.andM;</SUMMARY><DESCRIPT>Topic:     Client/Server ArchitectureFile ServersData Base ServersComparisonNetworksCentralizationData Bases.andO;Feature:   illustrationchart.andO;Caption:   Example of data partitioning. (chart)andM;</DESCRIPT><TEXT>When Worlds CollideandM;Client-server architecture blends the best of microcomputer and mainframetechnologies.andP;  Mainframe computers are indisputably more reliable and havegreater capacity than microcomputers.andP;  Their superior features includebuilt-in hardware redundancy, more reliable disk drives, wider I/O channels,and better monitoring and tuning tools.andP;  Various high-performance databasemanagement systems (DBMSs) and teleprocessing monitors have been designedspecifically for mission-critical duties.andP;  For these reasons, movingmission-critical applications to 386-based computers has been difficult tojustify until recently.andM;Personal computers have the advantages of low cost and increasedproductivity.andP;  PCs are suitable for complex, resource-intensive applicationssuch as word processing and desktop publishing, spreadsheets, graphics, andCAD/CAM, applications that are too expensive to run on costly mainframecomputers.andM;PC workstations offer users dedicated hardware and CPU resources that promotehigh productivity.andP;  Applications that run on workstations need not competewith other applications for scarce resources as they would on a mainframe.andO;Mainframe-system software must be generalized to handle a wide variety ofapplications simultaneously.andP;  On the other hand, PC systems can be built tohandle specific jobs such as database services, graphics, and imageprocessing.andM;Client-server architecture brings these two worlds together, with the PC asthe platform for front-end application development and implementation andspecialized servers for back-end services.andP;  On the client workstation, usersexecute typical applications such as Lotus 1-2-3 or Microsoft Excelspreadsheet software, Nantucket Clipper or DataEase data entry/updateprograms, or a Paradox Query-By-Example (QBE) reporting application.andP;  Usersperceive no differences in the way the program behaves.andM;The server side involves specialized software such as database,communications, or electronic mail servers.andP;  These servers can be accessed byany client applications running on a network.andP;  Since the servers arecentralized, they perform important duties such as making shared dataavailable, guaranteeing data integrity, and performing specialized,high-volume, processing functions.andM;A good example of client-server architecture is when several spreadsheetusers access a central database.andP;  Users first set up a connection to thedatabase server by issuing a command to link the spreadsheet to the externaldata source (the database server).andP;  Users then enter spreadsheet instructionsto retrieve and process data.andP;  They can access one or more rows from one ormore tables, and they can add rows, modify, or delete them.andP;  The spreadsheetprogram recognizes that requested information is stored on the databaseserver and issues Structured Query Language (SQL) commands to retrieve orupdate data from the server.andM;The database server receives the SQL commands and sends the requested rowsback to the spreadsheet.andP;  If the SQL command is INSERT, UPDATE, or DELETE.andO;The server makes the appropriate modifications and sends a return code backto the client who continues processing on the workstation.andM;The SQL database server acts as a repository for shared information on thenetwork.andP;  Any application with the necessary SQL interfaces can retrieve andupdate information that is stored in the shared database.andP;  Hence, thedatabase server acts as a traffic cop controlling access to the database andalso maintaining data integrity.andP;  It promotes high performance fortransaction processing and decision-support applications as well.andM;A database server opens up the possibility of very high-volume applications.andO;The applications need durable disk drives and wide I/O channels to supportintensive processing.andP;  Several companies have announced new hardware built tosupport database-server technology.andP;  Compaq and NetFrame have both announcedhigh-performance 386 hardware with substantially more reliability than theaverage PC workstation.andP;  The hardware's greater I/O bandwidth and fasterdrives can support a large number of users accessing mission-criticalapplications.andM;The New WorldandM;Many types of applications are appropriate to client-server technology.andO;These include high-volume applications formerly implemented only on largemainframes and minis, as well as lower-volume applications builttraditionally with network file servers.andP;  File-server technology, whichpreceded client-server technology, fulfills a need to share printers and diskdrives on a network.andP;  More sophisticated applications requiring data sharingare not significantly enhanced by file servers, as they neglect importantdata-sharing issues such as performance, reliability, recoverability, andsecurity.andP;  However, almost any application can benefit by migrating to theclient-server model.andM;File servers contain no knowledge about data structures and therefore cannotaccess data intelligently.andP;  If an application such as a spreadsheet needs toaccess specific rows in a database, the file server must send the whole fileover the network to the application.andP;  The spreadsheet can then filter outextraneous records with its own local file-management capabilities.andO;Constantly transmitting large files to many applications is costly andquickly saturates hardware and software resources.andM;Say a user needs to access customers who live in Illinois for a statisticalspreadsheet application.andP;  When the user requests the information, the fileserver retrieves the whole customer file and sends it over the network to thestatistical application program.andP;  If the customer file consists of 10,000records, the file server sends all 10,000 records over the network.andP;  IfIllinois customers make up only 10 percent of the customers, the file serverretrieves and sends 10 times more records than necessary.andP;  Disk I/Os andnetwork performance are negatively impacted.andM;What if the application needs only a portion of the customer record?andP;  Theuser may want to retrieve only the names and locations.andP;  Instead of selectinga portion of the record, the file server transmits the whole thing over thenetwork.andP;  If the data makes up only 10 percent of the full customer record,the file server again sends back 10 times more data than needed.andM;Altogether, the file server sends back 100 times more data and does 10 timesmore I/O operations.andP;  No wonder file-server networks are often saturated evenwhen supporting small, low-volume applications.andP;  Network providers continueto introduce larger servers and more expensive networks to compensate for theweaknesses of the file-server approach.andP;  Throwing hardware at the problemonly temporarily eases the situation--and adds substantial cost.andP;  Eventuallythe volume of data will outstrip the ability of the network to service it.andM;Because of their inherent intelligence, database servers can alleviate oreliminate performance problems.andP;  Benchmarks run with database servers show amarked decrease in entwork traffic--the network becomes almost empty.andP;  In thepreceding example, database servers retrieve only Illinois customer recordsand transmit only customer names and locations to the client application.andO;The SQL statement sent from the statistical application specifies the columnsand rows required.andP;  The database server does all of the filtering at theserver before sending information over the network.andM;SQL database servers also increase performance by using intelligentoptimizers.andP;  Optimizers automatically determine the best access path forretrieving data.andP;  This means the database server chooses whether to scantables or use indexes and which indexes to use.andP;  It also decides whether asort is warranted and if so, which sort algorithms to use.andP;  To accomplishthis, most database servers maintain statistical data about database size,types of indexes available, and the nature of the data.andP;  Using thesestatistics, servers can choose the best access path.andP;  The optimizer candynamically change the access path as the table structures and data change.andO;If an index is added, the optimizer will automatically start taking advantageof it without user or programmer intervention.andM;Certain database servers (such as Microsoft-Sybase's SQL Server and Ingres)contain special capabilities called stored procedures: complete transactionsstored in the database server.andP;  They combine flow and control logic, SQLstatements, and other program commands.andP;  Stored procedures are precompiledand cached in the server with a minimal overhead.andP;  Any client application canexecute a stored procedure with a single command, eliminating costlycommunications and compilation.andP;  Benchmarks show that stored procedures cansave up to 40 percent of processing time and are one of the most importantfeatures to look for in a database server.andP;  However, it is important to notethat stored procedures in one vendor's database will not necessarilyinteroperate with stored procedures in another vendor's database engine.andO;Methods for creating stored procedures are usually specific to each vendor.andM;Smooth OperationandM;Multiuser applications must be able to manage simultaneous access to the samerecord from multiple transactions.andP;  If two or more transactions attempt toupdate the same records simultaneously, they will overwrite each others'updates and data will be lost.andP;  To prevent such occurrences, applicationsmust lock records or check for changes before updating the records.andM;File servers possess only rudimentary facilities for controlling simultaneousrecord access.andP;  Locking must be directly managed by the programmer or user.andO;Users of file-server-based DBMSs such as Foxbase must decide which records tolock and how to lock them.andP;  Even in simple applications, this process can becomplicated; in complex applications, the problem is beyond the capabilitiesof most users.andP;  At best, manual locking is costly and prone to errors.andM;Deadlocks are another problem facing multiuser applications.andP;  A deadlockoccurs when two programs try to access two or more records for updates; eachprogram must wait for the other to terminate before it can proceed with itsupdates.andP;  For example, program A needs to update record 02, which is beingheld by program B.andP;  Program B needs to update record 01, which is being heldby program A.andP;  Since each program is waiting for the other program to releaseits locked records, neither can proceed and the programs are considereddeadlocked.andM;Deadlocks are difficult to detect and handle.andP;  Most programs written for fileservers ignore the problem and leave it up to users to detect and resolvedeadlocks--usually by terminating the program or rebooting the system.andP;  Thisharsh solution is irritating to users and, in some cases, may cause datacorruption.andM;Database servers solve locking and deadlock problems with concurrency-controlfacilities.andP;  They automatically lock records at the record, page (in the caseof multiple records), or table level.andP;  Different servers lock at differentlevels, depending on the nature of the application.andP;  Database servers alsoautomatically detect deadlocks.andP;  When a deadlock between transactions isdetected, the server will terminate one of the transactions.andP;  The serversends a special return code to the application announcing that a deadlock hasoccurred and suggesting the transaction be resubmitted.andP;  All of this happenswithout user intervention.andM;Database servers support the concept of transaction management.andP;  Atransaction is a set of procedural logic and update commands that must all beexecuted before the transaction is considered completed.andP;  If any of theupdates fails, none should be applied to the database.andP;  Any updates that werephysically written to disk must be backed out.andM;Consider a transaction that updates customer, invoice, and detail-linetables.andP;  It also updates multiple indexes associated with these tables.andP;  Ifthe program has updated the customer and invoice tables but not thedetail-line table, the DBMS uses a special roll-back log to back out thecustomer and invoice table updates.andP;  The roll-back log contains previousimages of all updated records, which replace the updated images if the DBMSissues a roll-back.andP;  The transaction may not be completed for a variety ofreasons, including abnormal program, system failure, or user termination.andO;The system DBMS also ensures that all index updates are backed out so indexesare synchronized with the tables.andP;  Without transaction management, abnormaltransaction terminations will corrupt or damage data.andP;  Users can detail lineswithout corresponding invoices, customers, or indexes pointing to bad ormissing data.andP;  Internal problems, such as bad internal pointers or controlrecords, could be difficult to current.andM;File-server systems do not support transaction management.andP;  If files becomecorrupted, users must restore the database to a prior backup.andP;  Alltransactions that occurred after the backup must be re-entered, which mightinclude a week's worth of transactions.andP;  Internal errors are sometimes notdiscovered for a long time--recovering all the lost transactions could takeweeks.andP;  Thus file-server technology is unsuitable for any databaseapplication.andM;Rolling OnandM;One of the most important functions of a DBMS is to recover transactions whenthe database has been physically damaged by imperfect disks.andP;  Databaseservers maintain roll-forward journals containing a history of all updatessince the last database backup.andP;  Backups can be taken at regular intervals byrunning special backup utilities that come with the database server.andM;Recovering from a damaged database is a two-phase process.andP;  The backup of thedatabase is restored to a repaired or new disk.andP;  The database administratoruses the database-recovery utility to restore the database and runs theroll-forward utility, which reads the roll-forward journal and automaticallyapplies all updates since the backup.andP;  The database server then automaticallyperforms a roll-back of all partially completed transactions so the databaseis synchronized.andM;With roll-forward recovery, users need not reenter any transactions.andO;Depending upon the server, recovery can be completed in a few seconds.andP;  Someservers come with disk mirroring that maintains two copies of the journal forhigher reliability.andP;  Some servers may also support fault-tolerant processing,which supports nonstop processing even during a hardware failure.andM;Database servers come wth monitorng and reorganization utilities to tune andmanage the database.andP;  Backup and recovery facilities are frequently writtento allow nonstop operation, so users can continue to access data even when itis being backed up.andM;Roll-forward recovery isn't available with fle-server technology.andP;  Somefile-server configurations support fault-tolerant operation, butorganizations must purchase redundant hardware.andP;  Fault-tolerantconfigurations provide a greater degree of recoverability thannon-fault-tolerant systems, but they lack the relability of a databaseserver.andM;Database administrators can monitor database server access and control useraccess using SQL GRANT and REVOKE commands.andP;  GRANT specifies which tables,columns, and values within columns are accessible.andP;  For example, a databaseadministrator can assign permission to a user or user group that will allowreading only customers in Illinois; no other customers will be visible.andP;  Thislevel of control is far superior to fle-level control.andM;Downsizing ApplicationsandM;Migrating file-server applications to a client-server architecture isobviously advantageous.andP;  Servicing traditional mainframe applications withthe client-server model is also beneficial.andM;One way to enhance traditional mainframe processing is to move theapplication logic to a PC workstation.andP;  The application communicates with DB2using the Advanced Program-to-Program Communications (APPC) protocol.andP;  Thusthe application continues to access mainframe data while taking advantage ofPC workstations.andP;  In this environment, the mainframe acts as the databaseserver.andM;IBM's OS/2 CICS, Gupta Technologies' (Menlo Park, Calif.) SQL-Network, andMicro Decisionware's (Boulder, Colo.) Database Gateway all support mainframepeer-to-peer communication.andP;  Apple's CL/I and TechGnosis's (Boca Raton, Fla.)andO;SequelLink support PC and Macintosh connectvity to VAX-based DBMSs.andM;If the application runs on a network, it can access local databases andmainframe databases.andP;  Local database servers can maintain departmental datawhile the mainframe DBMS maintains corporatewide data.andP;  By distributing data,users get better performance and accessibility with less resource contenton.andM;Client-server architecture has the advantage of marketability andportability.andP;  The same database server can be installed on differentoperating systems and hardware platforms.andP;  Initially the database server canbe installed under the OS/2 system and then upgraded to a Unix, VAX, or MVSas users' needs change.andP;  In some cases, data may be left on OS/2 while otherparts of the database are moved to a larger machine.andM;Throughout this migration, applications remain unaffected.andP;  Since programsinterface to the target database server via standard application programminginterfaces, reprogramming is unnecessary.andP;  Investments in the application arepreserved and organizatons have maximized their flexibility and growthpotential.andP;  This only holds true for a homogeneous set of database servers,however.andP;  An environment conssting of database servers from several vendorswill probably require some re-programming.andM;The client-server architecture increases programming productivity and usersatisfaction.andP;  Since PCs are completely dedicated to the developer or user,they provide better response time and performance than manframes.andP;  Inaddition, they support advanced graphical user-interfaces not found inmainframe dumb-terminal interfaces.andP;  Developers can build more complexapplicatons faster and better using graphical interfaces and object-orientedprogramming techniques.andM;Client-Server ssuesandM;Client-server environments introduce several new issues into adata-processing environment.andP;  Admnistering remote applications and databasesis ore difficult in a client-server environment than in a centralized one.andO;Mantaining and monitoring remote systems requires new tools.andP;  Program andapplication distributon is far more complex, as is data updating.andM;Database servers must also be monitored and maintained.andP;  Backups must betaken regularly and someone must decide how to cope with system failures.andO;Reorganization of data should occur on a regular basis, and otherperformance-tuning tasks must be attended.andP;  Staff must receive propertraining in order to perform these tasks.andP;  Organizations should address theseissues before they implement large-scale client-server applicatons.andM;Networking the servers is also a major problem.andP;  Vendors have offered aplethora of solutions such as DECnet, TCP/IP, Novell's NetWare, Mcrosoft'sLAN Manager (including ATandamp;T/hewlett-Packard/DEC's LM/X and IBM's LAN Server),and APPC.andP;  Some of these (such as LAN Manager and APPC) have greaterstrategic value than Novell's Netware solution.andP;  They offer betterinteroperablity and work better wit OS/2 and Unix servers.andP;  Early resolutionof strategc networking direction will help circumvent long-term networkheadaches.andM;Education, as always, is crucial.andP;  Mainframe support staff are generallyunfamiliar with PC products and capabilites.andP;  PC developers who have not beenexposed to mainframe DBMSs and mainframe security and reliability issues maybe put off by the necessary constraints of corporatewide client-servercomputing.andP;  All support staff should be cross-trained and made aware of theclient-server solution as potental.andP;  Myopic views of data processing willonly slow implementation and create unnecessary costs without anycorresponding benefit.andM;Client-server technology can benefit any size organization.andP;  It is acost-effective solution, more reliable than file-server technology and lesscostly than mainframe systems.andP;  But no organization should attempt to utilizeany technology before its staff is properly trained and the technologyunderstood.andP;  Once this is accomplished, client-server technology can servicea wide range of applications and organizations.andM;Client-server architecture is exciting.andP;  It breaks down old barriers andprovides new opportunities.andP;  Developers can build better applicatons faster.andO;Users benefit by getting more robust services at a lower cost.andP;  Client-serverarchitecture does not solve all problems, but it should be part of anyorganizaton's strategic direction.andM;Rich Finkelstein is the president of Performance Computing, a Chicagodatabase consulting firm.andO;</TEXT></DOC>
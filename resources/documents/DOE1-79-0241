<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> DOE1-79-0241 </DOCNO><TEXT>This thesis introduces the Cross-Architecture Procedure Call. Cross-ArchitectureProcedure Calls (or CAPCs) combine virtual memory, high-speed networking,and compatible-data representations to accelerate an application's computationswithout modifying its code. CAPCs allow work-station applications touse, on a demand basis, faster or more-expensive processors as computeservers so that each of an application's functions can be executed bythe most-appropriate processor. The CAPC process executes in a singlevirtual address space shared by several CPUs. Instructions for each CPUare stored in different regions of the virtual address space. Routinesare compiled for the processor that can most effectively execute them.CAPCs do not require special calling sequences to transfer control betweenprocessors. Instead, virtual memory page protections are used to implementtransfers between processors. Routines on all processors share accessto global variables, including pointer data types. This thesis describesthe CAPC construct, a sufficient level of similarity between processorsarchitectures to use CAPCs, and a CAPC implementation based on the SUN3.0 Operating System.</TEXT></DOC>
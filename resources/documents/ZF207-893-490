<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-893-490  </DOCNO><DOCID>07 893 490.andM;</DOCID><JOURNAL>AI Expert  Nov 1989 v4 n11 p30(6)* Full Text COPYRIGHT Miller Freeman Publications 1989.andM;</JOURNAL><TITLE>Spreadsheet sketches for rule-based systems. (sketching an expertsystem using a spreadsheet program)</TITLE><AUTHOR>Carr, Clay.andM;</AUTHOR><SUMMARY>Developers can sketch out an expert system with an operating rulebase and hypertext-like instructions using a spreadsheet program.andO;Using a spreadsheet for this purpose, developers can cutdevelopment time by avoiding theprogram-compile-run-evaluate-program cycle.andP;  Changes can be madeby simply pushing 'recalculate' if the change is mathematical.andO;Spreadsheets also contain full 'if-then' logic, and with a fewalterations, 'if-then-else' logic can be reached at any level.andP;  Inaddition, spreadsheets handle arrays and matrices with ease.andP;  Tocreate a help system for the user, normal functions of thespreadsheet can be used to simulate a hypertext system thatenables users to know what is available.andP;  How-to information onhypertext simulation is included.andP;  A spreadsheet will be mostuseful for sketching a diagnostic type of expert system withprobabilistic rules.andM;</SUMMARY><DESCRIPT>Topic:     Expert SystemsModelsPrototypeProgram Development TechniquesSpreadsheetsTime Management.andO;Feature:   illustrationtable.andO;Caption:   Relative balance of strengths of common software packages. (table)The Application Assistant. (table)andM;</DESCRIPT><TEXT>SPREADSHEET SKETCHES for RULE-BASED SYSTEMSandM;Several months ago I needed to create a small, stand-alone expert system tohelp PC users perform a very limited form of systems analysis.andP;  Specifically,the expert system would help then determine which of a limited set ofsoftware packages would work best for an application.andP;  This systemessentially would be diagnostic, a common use of knowledge-based technology.andM;As I formulated my strategy and began to develop the system, I wanted to geta quick-and-dirty prototype up and working.andP;  I had all the usual reasons andone more: I wanted to find out if the system was practical before I'dinvested much time and effort.andP;  In the process of looking for a way todevelop the prototype, I made a starting discovery.andP;  I was able to sketch outthe expert system with an operating rule base and hypertext-like instructionsin a standard spreadsheet.andM;THE NATURE OF THE BEASTandM;The system I wanted to test would help a moderately experiented PC userdecide what application software package to use.andP;  I identified five functionsan application might need to perform: store and retrieve data, compute,organize items chronologically, organize items logically, and create andalter text.andP;  I assumed that users would have access to six kinds of softwarepackages to perform these functions: flat files, data-bases, spreadsheets,outliners, project managers, and word processors (Figure 1).andM;Expert systems come in several types.andP;  The most common are systems that plan,control, design or diagnose.andP;  While it might not be obvious, choosing thebest applications software package is a form of diagnosis.andP;  (It might equallywell be called a form of classification; in this situation, the two functionsare substantially identical.)andP;  Given the initial situation--the functions tobe performed--the system diagnoses the best software to perform them.andM;Two different kinds of diagnosis (or classification) can be done.andP;  The firstis often represented as a search down a decision tree.andP;  Based on informationfrom the user, the system makes finer and finer distinctions until it reachesthe end of a particular &quot;branch,&quot; its answer to the original question.andP;  Anexpert system that classifies tree leaves, for example, might ask questionsthat would determine whether the tree is evergreen or deciduous; then whetherit is in the oak, maple or birch families; then specifically what kind oftree it is.andP;  If the search is successful, its result is a specific tree.andP;  Inmost cases, the answer is free of ambiguity.andM;Another kind of diagnostic system provides no absolute answers.andP;  For example,a successful medical diagnosis will identify the most probable cause of thesymptoms.andP;  Most of the time, this diagnosis is not the only one possible.andO;Disease A may be the most likely diagnosis, but some possibility remains thatit might be Disease B or C.andP;  Expert systems that function in this kind ofenvironment make use of confidence factors to develop the probabilities.andM;An expert system that picks the right software package for a specificapplication belongs to this second system type.andP;  Unless it gets an impossiblylarge amount of data, the system analyzes the comparative usefulness of thepackages.andP;  It assesses the functions to be performed and rates each packageon a scale from poor to excellent.andP;  For some applications, one package mightbe rated excellent and clearly be the best choice.andP;  For others, no singlepackage would be rated that high, but two different packages might both berated very good.andP;  For others, no package might rate higher than good.andM;I've gone into this detail to explain why a spreadsheet could be used tosketch the system so successfully.andP;  A diagnostic system that assignsprobabilities to solutions profits significantly from the kind ofcomputational power a spreadsheet offers.andP;  A deterministic system could alsobe modeled in a spreadsheet, but the fit might be less exact.andM;WHY USE A SPREADSHEET?andM;Be that as it may, the first question is: why bother using a spreadsheet, oranything else, to sketch the system?andP;  Expert-system shells are widelyregarded as effective prototyping tools, so why not use one from the start?andO;I intended to transfer the system to KnowledgePro, an expert system andhypertext environment, so why not just use that from the beginning?andM;These questions have several answers: by using a spreadsheet I avoided theprogram-compile-run-evaluate-program cycle.andP;  This cycle is built into thedevelopment stage with any expert-system software I could have used.andP;  Not sowith a spreadsheet.andP;  You make a change, push recalculate if the change ismathematical, and see the results, which saves tremendous amounts ofdevelopment time.andM;Second, spreadsheets contain full if-then logic.andP;  With just a little fiddlingyou can get if-then-else logic to any level you want.andP;  The number oftraditional if-then statements required for this particular knowledge basewas small, but the ability to create them was critical.andM;Third, spreadsheets handle arrays and matrices with ease.andP;  Since the heart ofmy knowledge base could be stored easily as a weighted matrix, a spreadsheetis a natural for it.andP;  A matrix could also store the knowledge base for anabsolute diagnostic system, but it isn't as natural for it as for aprobabilistic one.andP;  The strength of the conclusions output by the matrix is aproduct of the strengths of the different inputs times a stored relationshipbetween the factors.andP;  The fourth advantage was completely unanticipated andmindboggling: it is simple to simulate basic hypertext operations in aspreadsheet.andM;USING A SPREADSHEETandM;The matrix is the heart of a spreadsheet's knowledge base.andP;  Specifically,it'a a matrix made up of rows of conditions and columns of outcomes (Figure1).andP;  In my project, I used rows containing software functions intersectingwith columns containing different application packages.andM;This is the knowledge base's structure.andP;  Its content is created by weightingeach condition and outcome pair.andP;  As you can see in Figure 1, I used aweighting scheme that ran from zero to eight, but any set of values thatexpressed the appropriate distinctions would do quite well.andP;  (For an absolutedecision tree, you would probably want to use only two values: a very highand very low value would work best in some circumstances, zero and one inothers.)andM;This weighted matrix establishes the relevance of each possible condition toeach possible outcome.andP;  As you'd expect, a large number occurs at theintersection of Organize Hierarchically with Outliner and a small number atthe intersection of Calculate with Outliner.andM;While this matrix may not look much like a traditional knowledge baseexpressed in rules, it is the knowledge base's center.andP;  It's incomplete; twofurther steps are needed to finish it.andP;  But you should already be able to seesome of beauty and simplicity of a spreadsheet for this kind of applicationand how quick and easy it is to alter the relationship between any of thecondition/action pairs and see the result.andP;  Talk about simple sensitivityanalysis!andM;The knowledge base is now built, at least provisionally.andP;  The next step isfor users to input values for the different functions required by theirapplications.andP;  As you can see in Figure 2, this is also a straightforward bitof arithmetic.andP;  Users enter a number from zero to five to indicate howimportant each function is to the application they're considering.andP;  If Filingand Retrieving Data is extremely important, they enter a five by it.andP;  IfComputing is insignificant, they enter a zero, and so on for each of thefunctions.andM;Whenever an input value is changed, the evaluations given in the rightmostcolumn on this screen change with it.andP;  To test the sensitivity of aparticular rule (more on that in a moment), you change the value of the inputand watch what happens.andP;  If the value changes too dramatically or in thewrong direction, you know that the weights assigned to that pair ofconditions and outcomes need to be changed.andP;  In short, the vaunted what iffacility of spreadsheets can be just as useful for expert-system building asfor anything else.andM;The final item required for the knowledge base is a means of translating eachof the weights into an adjective evaluation of each software packages'sutility.andP;  This is where the spreadsheet's @IF capability comes into play.andO;This listing shows one of the rules that translates the value created by thecombination of input and matrix values into an adjective rating of anapplication's suitability:andM;E29: @if (Y29[is greater than]=25, &quot;EXC&quot;, (@IF (Y29[is greater than]=20,&quot;VG&quot;, (@IF(Y29[is greater than]=u5, &quot;GOOD&quot;, (@IF(Y29[is greater than]10,&quot;FAIR&quot;, &quot;POOR&quot;))))))))andM;The @IF statement tests the number produced when the input value ismultiplied by the constant stored in the matrix.andP;  Based on the range thenumber falls into, the @IF statement prints an adjective value (from poor toexcellent) in the appropriate cell.andP;  The same @IF function could be used tooutput a number or complex calculation.andM;This is how if-then statements are constructed.andP;  @IF is a system function(the @ prefix determines this).andP;  The function is entered, followed by aparenthesis.andP;  The first item in the parenthesis is the condition to betested.andP;  The second item, separated from the first by a comma, is the actionto be taken if the test succeeds.andP;  Another comma follows and then the actionto take if the test is false.andP;  As you can see from the example, this actioncan be a nested @IF statement that defines an else path, which can itselfcontain a nested @IF statement as an else, and so on.andM;One word of caution: spreadsheets vary somewhat in the ways they implementthe @IF function.andP;  For example, Lotus 1-2-3, v. 1.x and its clones cannotprint an alpha-numeric statement (such as very good) as part of an @IFstatement.andP;  This is one situation when it's a good idea to read the manualbefore plunging ahead.andM;These rules will sharply reduce the number values for each package.andO;Specifically, they reduce the 20-some values allowed by the mathematics tofive adjective ratings.andP;  This step is important, because where the breakbetween ratings is made directly affects the information conveyed to theuser.andM;Once the relevant @IF rules are constructed, the knowledge base is complete.andO;Here's a quick summary of the three basic steps it took to build it:andM;1.andP;  Create an N by M matrix relating each condition to each outcome.andP;  In eachcell, enter a number that represents that condition's relevance to thatoutcome.andP;  The weighting system used is arbitrary but should allow a range ofvalues adequate to the variability being expressed.andM;2.andP;  Provide a way for the user to input a value describing the importance ofeach condition to the current situation (or problem, application, orwhatever).andP;  If this can be done as a single number for each condition, itsimplifies the process.andP;  Using the @IF capability of the spreadsheet, though,it would also be possible for the user to enter adjective descriptions andconvert them internally into numbers.andM;3.andP;  Develop the limited number of rules necessary to translate themathematical results of the first two steps into useful output.andP;  If numbersare meaningful to the user, presenting the results of the calculations oneach input is all that's necessary.andP;  If textual response is more desirable,use @IF to translate the numerical results into appropriate textual values.andM;This system is now fully testable.andP;  Although the complete user interfacehasn't been built yet, all the logic necessary to produce a result is there.andO;Since the evaluation of the situation changes each time an input value ischanged, you can see the impact of any change you choose to make immediately.andO;This means that the knowledge base can be fine tuned in the spreadsheet.andM;Additionally, even though the system is using numbers, it's stillmanipulating judgments.andP;  There's no eternal verity as to why a cell in thematrix got a rating of five instead of four or six.andP;  To the extent that thenumbers are visible, users need to understand they are symbols for (we hope)informed judgments, not absolute quantities.andP;  In trade jargon, the knowledgehiding within the numbers is heuristic, not algorithmic.andM;HYPERTEXT!andM;The only remaining step in sketching my expert system was providinginformation to the user.andP;  Obviously, spreadsheets don't contain ways tocreate a traditional help system.andP;  Because I had to cope with thatlimitation, I found a totally unexpected capability.andP;  The normal functions ofa spreadsheet can be used to produce a remarkably good simulation of ahypertext system.andM;If you're not familiar with hypertext, it lets a user browse information invery free and intuitive ways.andP;  Translated to practicalities, users know whathelp is available as they go through the system and can access it at anytime.andM;In hypertext, this is done by creating buttons that allow the user to jump toadditional information on a topic.andP;  In Figure 2, a number of terms arecapitalized.andP;  (This isn't necessarily the way that most hypertext buttons areidentified, but it's a convenient way to do themin a spreadsheet.)andP;  The usercan get more information on any capitalized term with a few keypresses.andM;This way of organizing help information clarifies to users what help isavailable but gives them considerable freedom in choosing what they want toaccess.andP;  Though the help functions are integrated into the text itself,they're minimally intrusive.andP;  Users can treat them simply as part of the textunless they want to explore them further.andM;How do you manage this process in a spreadsheet?andP;  Make use of thespreadsheet's GOTO function.andP;  Virtually all spreadsheets have a GOTO key.andP;  Ifyou press this key and type in a cell address, the cursor will go to thatcell; and you can name a range and type in the name of the range afterpressing GOTO.andP;  If you're not familiar with a spreadsheet and these termssound strange, the intersection of a row and a column is a cell.andP;  A group ofcells of any size can be declared to be a range--an identifiable subset ofthe total spreadsheet.andP;  This range can have a name, and in some spreadsheetsthe name can be used directly in formulas.andP;  For now, a range is the addressof a particular unit of text.andP;  Using this ability, it's a snap to create ahelp system that simulates hypertext:andM;* Determine which terms you're going to provide help for.andP;  Mark these termsin some way each time they're used in the text.andP;  In my project, I marked themby capitalizing them--but other ways could have been equally effective.andM;* Find some unused space in the spreadsheet and enter as much information onthe topic as you want.andP;  Since spreadsheets let you page a screen at a timesideways (using Tab and Shift-Tab) or vertically (using PgUp and PgDn), therecan be several screenfuls of material.andM;* When you've finished the text, name the top line (cell) with the same nameyou used for the term that accesses it.andP;  If the term in the text is FUNCTION,the range's name that starts the information on it should also be namedFunction.andP;  In the two spreadsheets I tested this on, the case of the name wasinsignificant.andM;* Now, if users press the GOTO key and enter function from anywhere in thespreadsheet, the information on function will pop up on their screen.andO;Furthermore, that information can contain more hypertext buttons, so userscan get information on related topics directly from there.andM;* Remember to name the main input screen so users can get back to it quickly.andO;Unimaginatively enough, I named the screen in my system main.andP;  No matterwhere they are in the system, users can enter GOTO followed by main to returnimmediately to this screen.andM;It's remarkably easy and straightforward to simulate hypertext in aspreadsheet.andP;  What you get isn't as flexible and simple as a true hypertextimplementation, but it certainly lets you design and test a help system withlittle wasted effort.andM;CREATING THE EXPERT SYSTEMandM;The sketch of the expert system is now complete.andP;  Users can take the sketchand work with it as they would the final system.andP;  Designers can do all sortsof sensitivity testing and tweaking and get immediate feedback.andM;Since srpeadsheets are familiar to many PC users, it's easy to give them acopy of the sketch and let them experiment with it.andP;  If some of the peopleyou'd like to have test it don't have spreadsheet software, it's possible tocompile the sketch (using 1-2-C by Resources Analysis Inc. or @Liberty bySoft-Logic Solutions Inc.) and distribute it for testing as a stand-alonesystem.andM;At some point, though, it has to be translated into a real expert-systemlanguage or shell.andP;  This is a sticky transition, and it raises a criticalpoint: it's absolutely essential to know what the target language or shellwill be before you create a spreadsheet-based sketch of the system.andM;Expert-system shells and languages are becoming more powerful and flexiblewith each new version.andP;  Even relatively inexpensive ones offer customizableuser interfaces and help systems, and hypertext functions are becomingincreasingly available in them.andP;  But this doesn't mean that you can simplysketch out an expert system and then move it to a shell or language in anafternoon.andP;  That kind of utopia hasn't arrived yet.andM;I expected from the start to transfer the PC applications expert system tothe expert system language/environment Knowledge-Pro (from KnowledgeGarden/McGrawHill).andP;  This language permits very flexible screen design andhas a highly developed hypertext facility.andP;  At least as important, it permitsthe easy manipulation of matrices as lists of lists.andP;  In other words, I couldtake the system as sketched in the spreadsheet and transfer it substantiallyintact to the target language.andM;Other shells or languages would have had different flexibilities andconstraints, and these would have had to be considered from the verybeginning of development.andP;  That's why the term &quot;sketch&quot; is appropriate forwhat was done in the spreadsheet.andP;  An artist's sketch is certainly differentfrom a final picture, but if the sketch is successful, the picture is builtdirectly on it.andP;  So with the expert system sketch and the final system.andM;SPREADSHEET AS SKETCHESandM;It's clear that a spreadsheet can be used to sketch certain kinds of expertsystmes.andP;  That leaves the question of when it's an appropriate way toproceed.andP;  Based on my experience with the system described in this article,I'd hazard these suggestions:andM;* A spreadsheet will be most useful for sketching a diagnostic type of expertsystem with probabilistic rules.andP;  This logic is the kind that maps mosteasily to a weighted matrix.andP;  Other types of expert systems might be just aswell sketched in a spreadsheet, but since I haven't experimented wit themyet, I don't have an opinion on the subject.andM;* A spreadsheet will also be helpful to the extent that the knowledge baserequires much fiddling and fine tuning.andP;  One of the great strengths ofspreadsheets is how fast conditions can be varied and results made visible.andO;If this is important in developing your knowledge base, you should definitelyconsider sketching it in a spreadsheet.andM;* If all of the necessary logic is developed in the spreadsheet, users caninteract with it as they would the real system.andP;  Because changes can be madeeasily in a spreadsheet, alternate interfaces can be developed and testedquickly.andP;  In fact, you could include several interfaces in the spreadsheetand let the user employ GOTO to experiment with each of them in the spot.andM;* Finally, you can use a spreadsheet to experiment with hypertext-like orother non-standard help systems.andP;  Hypertext is becoming something of abuzzword, and many applications labeled hypertext aren't.andP;  Nonetheless,hypertext is an extremetly powerful way of providing information, andcombining it with knowledge-based technology seems to be a natural.andP;  Aspreadsheet lets you do this with a minimum investment of time or money.andM;As useful as the spreadsheet was for me to sketch an expert systems, thatwasn't what most impressed me.andP;  When spreadheets were developed, I doubttheir inventors had the vaguest idea that anyone would think of them forexpert systems or hypertext.andP;  But they turned out to be efective vehicles forexperimenting with both these methods.andM;That's a commentary on how flexible spreadsheets are.andP;  The main pointprobably goes further: if you really understand what you're trying toaccomplish with an expert system (and/or hypertex), it's remarkable whatsoftware you can embody it in.andM;My little sketch constituted a working expert system with a workinghypertext-like help facility in a type of software that a year ago I wouldnever have though seriously about using for the purpose.andP;  It makes me wonderwhat other opportunities I'm missing now.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-777-236  </DOCNO><DOCID>08 777 236.andM;</DOCID><JOURNAL>Data Based Advisor  August 1990 v8 n8 p53(3)* Full Text COPYRIGHT Data Based Solutions 1990.andM;</JOURNAL><TITLE>VIEWs: getting a good look. (the Structured Query Languagefacility can represent data in alternate ways) (column)</TITLE><AUTHOR>Sayles, Jonathan S.andM;</AUTHOR><SUMMARY>The Structured Query Language (SQL) VIEW facility generatesalternative representations of data and their relationships fromone or more relational data base tables.andP;  Multiple data basemanagement system (DBMS) users often want to focus on differentsubsets or aspects of the same set of data elements.andP;  A particularor specified representation of the data can be achieved byexecuting a predefined SELECT statement that accesses and formatsdata (according to a VIEWs definition) in a results table createdby other SELECT statements from the base table of a data base.andO;Two example base tables are used, sequentially, for developing adelimited results table and a results table built to a VIEWdefinition by a SELECT statement.andP;  Many SQL VIEWs are read-only,including VIEWS built from such SQL constructs as table joins,aggregate or scalar functions, group by/having, and distinct.andM;</SUMMARY><DESCRIPT>Topic:     Structured Query LanguageProgrammingData RepresentationSpecificationsApplications.andO;Feature:   illustrationtableprogramchart.andO;Caption:   Example tables. (table)An example of a results table. (program)A composite executable statement and the results table generatedby SELECT. (chart)andM;</DESCRIPT><TEXT>View-&quot;An alternate representation of data from one or more tables.andP;  &quot;andM;FrOm the IBM SYstem and Database Administration GuideandM;In watching a recent 60 Minutes on TV, I was moved by a feature on dyslexiaand the approach to curing the disease by using colored lenses.andP;  These lensesfilter out the confusing elements of reading (the seeming disorder of rowupon row of phonetic symbols) and bring clarity and organization to the wordson the page.andP;  Apparently, for some dyslexics, printed words appear as manyunrelated characters.andP;  We need a coherent perspective of the raw elementspresented in text to bring semantic meaning of the random patterns intofocus.andP;  The customized, colored lenses provided a means of filtering outextraneous information, allowing the dyslexics' eyes and minds to focus onthe text's inherent meanings.andM;In much the same way as words on a page seem unordered to dyslexics,relational databases-particularly those with unnormalized tables-canoverwhelm users accustomed to monolithic, logical views.andP;  Further, becauserelational technology allows us to assemble a database of facts withoutpredetermining their physical relationships, we try to design databases toproject a true corporate-level information model-that is, a model unbiased infavor of a specific application perspective of data relationships.andP;  Thismeans that even with well-normalized logical designs, a dichotomy may existbetween the corporate data model and application-specific views of theinformation.andM;Applications personnel and business users want to focus only on the data thatinterests them, and on the particular tasks for which they're responsible.andO;How then can we maintain sound relational design principles while facingpressure from developers and users to provide a specific informationframework?andM;One solution is to represent specific data relationships through VIEWS.andP;  Youapply VIEWS, like colored lenses, over the data.andP;  You can use VIEWs ofrelational databases to simulate different semantic data models and supportmultiple application-specific requests for information without compromisingthe underlying conceptual design.andP;  In fact, the VIEW mechanism is even morepowerful, useful, and flexible than the colored lenses.andP;  It facilitatesdatabase and system administrator tasks in logical program/data independence,data security/integrity, system efficiency, and SQL ease.andM;VIEWs can be used to:andM;* Provide custom user/application data access by selectively filtering therows of the base table(s) or the columns of the base table(s).andM;* Create custom tables composed of joined tables, statistical summary tablesof aggregate functions, or transformed tables of scalar functions, arithmeticexpressions, and other &quot;pseudo- columns.&quot;andM;* Provide logical program/data independence by splitting tables vertically,splitting tables horizontally, renaming columns, or deleting columns.andM;* Provide an extra measure of data security and integrity by supportingrow-level, column-level, and hierarchical access to table data; controllingapplication/user update capabilities; enforcing domain integrity; andpinpointing referential and other data integrity problems.andM;* Provide SQL system and application efficiency controls by: forcingapplication and user access to base tables through optimized query paths fortable joins and other complex SQL operations; and enforcing element-leveldata access on application programs.andM;* Ease application development by maneuvering around compromises in the SQLlanguage and storing the business rules for SQL applications in the DatabaseSystem Catalog.andM;Before we can discuss how VIEWs contribute to this &quot;sleightof-hand,&quot; we mustfirst take a brief look behind the scenes.andP;  What are VIEWs and how do theywork?andM;An overVIEWandM;Views can be best understood when they're described within the context of thethree types of relational tables: base tables, results tables, and VIEWS.andM;A base table is a permanent, defined SQL object that you can think of (forthe purposes of this discussion) as the physically stored data.andM;A results table is a temporary, undefined table created by an executingSELECT statement that reflects data values in base tables-at the moment thestatement is executed.andM;A VIEW is a permanent, defined, stored SELECT statement that turns into aresults table when another SELECT statement that references that VIEWexecutes.andP;  Let's take a look at how each of these tables is built.andP;  Basetables are defined with the CREATE table statement.andP;  Two of the tables we'llwork with are defined below.andM;CREATE TABLE EMP (andM;NBR           INTEGER      NOT NULL,andM;LNAME        CHAR(12)     NOT NULL,andM;FNAME         CHAR(06)     NOT NULL WITH DEFAULT,andM;DOB           DATE,andM;HIREDTE       DATE         NOT NULL WITH DEFAULT,andM;DEPT          CHAR(03),andM;JOB           CHAR(04),andM;PERF          SMALLINT,andM;PROJ          CHAR(02)     IN DATABASE SYSGROUP;andM;CREATE TABLE PROJ (andM;PROJ          CHAR(02)     NOT NULL,andM;NAME          CHAR(12)     NOT NULL,andM;DEPT          CHAR(03)     NOT NULL WITH DEFAULT,andM;MAJPROJ       CHM(02)      IN DATABASE SYSGROUP;andM;If you load a base table with data and execute a SELECT statement referencingit, the Data Manager generates a temporary &quot;results&quot; table that reflects thedata values stored in the base table at the moment the query executes.andP;  Lookat the example in Listing 1.andM;After you finish looking at the results table, it goes away.andP;  A VIEW is apermanent, stored SELECT statement.andP;  Views are defined by name and generateresults tables when they're referenced in SQL SELECT statements.andP;  Views areused to extend or filter users' perceptions of data from a relationaldatabase by invoking the SQL operations from which they're made.andP;  Forexample, a VIEW is defined like this:andM;CREATE VIEW YOUNG_EMPLOYEESandM;LAST_NAME, FIRST_NAME, DATE_OF_BIRTH, DEPT)andM;AS SELECT LNAME, FNAME, DOB, DEPTandM;FROM EMPandM;WHERE DOB andgt;  1950-01-01'andM;This statement defines a VIEW called YOUNG_EMPLOYEES.andP;  The VIEW definition(the VIEW name with the SELECT_FROM_WHERE text) is stored in the systemcatalog.andP;  There are several other entries made in the system catalog tablesregarding the ownership of the VIEW, VIEW/base table object dependencies, andinternal VIEW representation and storage.andM;When you create a VIEW, a SELECT statement that defines different datarelationships among the elements in the table becomes a permanent, namedobject available to users.andP;  Users can reference the VIEW name in the FROMclauses of their queries.andP;  The particular rows from the tables that satisfythe VIEW definition aren't duplicated in any way.andP;  Those rows are extractedby the Data Manager while a SELECT statement executes against the VIEW.andO;Listing 2 shows an example of a results table built by SELECT against ourVIEW definition.andM;What's more, SQL allows you to manipulate VIEWs almost as easily as youmanipulate the elements of the EMP base table, applying additionalSELECT-FROM-WHERE criteria to it.andP;  How the Data Manager combines a SELECTstatement against a VIEW with the underlying definition is represented inFig.andP;  1.andP;  In fact, as I'll demonstrate in an example next month, thecomponent of the Data Manager that processes the text/merge is moreintelligent than this simple operation.andM;The  &quot;run-time&quot; SELECT over-rode the VIEW's column definition internally toextract rows from EMP.andP;  However the column headers reflect the VIEWdefinition.andM;The VIEW definition is WHERE specifications were merged-ANDed together withthe &quot;runtime&quot; SELECTs' specifications.andM;ORDER BY was appended to the composite statement from the run-time SELECT.andM;The VIEW definition's base table column names were used in the search by theData Manager for the table rows (as well as in ORDER BY).andM;Restrictions on VIEWsandM;Many VIEWs are considered &quot;read-only&quot; by SQL, that is, only SELECT access isallowed against the VIEW.andP;  VIEWs in this category consist of those built onany of the following SQL constructs:andM;* Table joinsandM;* Aggregate functionsandM;* Scalar functionsandM;* Group by/HavingandM;* DistinctandM;* Or the VIEW references a read-only VIEW in the FROM clauseandM;I should also mention that the UNION and ORDER BY clauses aren't allowed in aVIEW's definition.andM;Because of these restrictions, VIEWs provide only partial logicalprogram/data independence.andP;  Full logical program/data independence providedby VIEWs waits until all theoretically updatable VIEWs are, in fact,updatable (VIEWs consisting of table joins are theoretically updatable.andO;VIEWs containing GROUP BY/HAVING aren't theoretically updatable.).andP;  Thisunfortunate &quot;state-of-the-art&quot; is an industry-wide problem.andP;  We'll have towait for corrections in later releases of relational systems.andM;Next month, I'll revisit our VIEW to-do list and examine each provision moreclosely.andM;Jonathan S. Sayles is the director of Educational Services for The SystemsGroup, inc., a technical training and consulting firm in Glastonbury, Conn.andO;that specializes in CASE technology and relational database systems.andP;  He'sthe author of several books on SOL and the developer of a Computer Assistedinstruction course on SOL, available through O.E.D.andP;  information Sciences.andO;Mr. Sayles has spent the last four years teaching SOL and working onrelational application systems and related CASE tools.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF208-285-779  </DOCNO><DOCID>08 285 779.andO;</DOCID><JOURNAL>IEEE Software  Sept 1989 v6 n5 p70(10).andM;</JOURNAL><TITLE>Realizing the performance potential of Cobol.andO;</TITLE><AUTHOR>Jalics, Paul J.andM;</AUTHOR><TEXT><ABSTRACT>The performance of COBOL programs can be improved by focusing oncritical programs and the critical portions of those programs andby understanding and optimizing code performance in COBOLcompilers.andP;  Typically, this can be achieved through analysis andminor adjustments of a small subset of program components.andO;Experimental analysis of three COBOL compilers running on threedifferent computers demonstrates optimizing strategies.andP;  COBOLversions and host sytems are: VS/COBOL 2.4 on an IBM 3081K runningMVS, UCS COBOL on a Unisys 1100/90 running OS 1100, and RealiaCOBOL 3.0 on an IBM PS/2 runningModel 80 running MSDOS 3.3.andO;Performance improvements are achieved in the COBOL Usage clause,data fields, data-type conversions, file-blocking, Perform andCall functions, sorting, and indexed-sequential-access-methodfiles.andP;  Ten steps to improving COBOL program performance arediscussed.andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     Programming InstructionTutorialCOBOLCompilersPerformance ImprovementApplications ProgrammingOptimization.andO;Feature:   illustrationprogramgraph.andO;Caption:   Listing of the CPUTime assembly program for the IBM 370 MVSsystem. (program)Add statement execution times for three COBOL versions. (graph)Table search for four search types for two COBOL versions. (graph)andM;</DESCRIPT></DOC>
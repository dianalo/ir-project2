<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-789-705  </DOCNO><DOCID>09 789 705.andM;</DOCID><JOURNAL>Patricia Seybold's Network Monitor  Dec 1990 v5 n12 p1(14)* Full Text COPYRIGHT Seybold Office Computing Inc 1990.andM;</JOURNAL><TITLE>Security services: standing between chaos and order in distributedenvironments. (we are just beginning to develop viableidentification, authentication, cryptographic and auditingsolutions for securing distributed computing systems; includesrelated article on how cryptography services work)</TITLE><AUTHOR>Rymer, John R.andM;</AUTHOR><DESCRIPT>Topic:     Distributed SystemsSecurityTrendsMethodsTutorialCryptographyAuditing.andO;Feature:   illustrationchart.andO;Caption:   Secret-key authentication. (chart)Secure remote procedure calls. (chart)andM;</DESCRIPT><TEXT>Security ServicesandM;TO DESIGN A secure information system, it helps to be a little paranoid.andO;You've got to systematically identify and eliminate risks against corruptionor theft of information resources.andP;  And there's always another risk to find.andO;Ultimately, it is impossible to eliminate all of the risks to security.andM;The risks to an information system begin to mount the moment the user logsinto a system or network.andP;  To prevent an intruder from logging in by typinganother user's name, we issue users secret passwords.andP;  But users do dumbthings, like posting their passwords in conspicuous places.andP;  So we trainusers in good security practice and change their passwords periodically.andP;  Butwe're not sure that the user's workstation and the file server is secure, sowe encrypt the user's file-service request.andP;  Even with all that, we've barelyconsidered the risk of determined intruders.andP;  And on and on and on.andM;If you look closely at a networked environment, you can find layers andlayers of risks.andP;  To paraphrase Thomas Pynchon (in Gravity's Rainbow), justbecause you're paranoid, that doesn't mean that they really aren't out to getyou.andM;The truth is, absolute confidence in a system's safety from intruders is tooexpensive to obtain and imposes too much overhead to be practical.andP;  This factis where the science of security leaves off and the practice of securitypicks up.andP;  Sound security practice weighs the risks against the costs to comeup with security measures that make sense.andP;  Sound practice yields systemsthat can be trusted in a particular set of circumstances.andM;VITAL CONCERNS YIELD RAPID PROGRESS.andP;  Both the science and the practice ofinformation systems security are very young--much younger than the scienceand practice of door locks or bank vaults.andP;  Even security experts concedethat there's still a lot to learn about how to secure systems--particularlydistributed systems.andP;  But both science and practice are advancing veryrapidly for three reasons.andM;First, networks are becoming the rule in information systems.andP;  Networksprovide difficult-to-protect paths into information systems, raising the riskof intrusion.andM;Second, Robert Morris's Internet worm dramatically illustrated how standardscan leave systems wide open to intruders.andP;  Morris used a well-known Unix&quot;back door&quot; to penetrate two Unix varieties on the Internet; from there, hisworm moved freely through systems exposing the same access point on astandard network.andP;  The security risk to the Internet was the amount ofknowledge about how to get in that had been spread around for years.andP;  Thisepisode is chilling to the many users who have begun embracingstandards-based systems to gain hardware independence and betterprice/performance ratios.andP;  If they're not demanding better security now,they're not yet putting critical applications on open systems.andM;Third, distributed systems security techniques and technologies are availablethat allow vendors to begin attacking the problem.andP;  The Open SoftwareFoundation (OSF) has become a lightning rod for this development by making asecurity architecture part of its Distributed Computing Environment (DCE).andO;IBM, Digital Equipment Corporation, Hewlett-Packard, NCR, Sun, and othermajor systems vendors also are building distributed computing into theirsystems architectures.andM;As the major vendors dive into distributed computing architectures, they'velent an immediacy to the development of distributed security services.andO;There's a practical reason for this: Governmental agencies must comply withthe security standards of the National Computer Security Center (NCSC) whenpurchasing systems--be they distributed or centralized systems.andP;  Financialusers also have security requirements.andP;  The larger issue for all users isthis: Without effective security services, distributed computing environmentscan too easily become unreliable or just plain chaotic.andM;This report describes the security services required in a distributedenvironment.andP;  We examine the state of the art in security solutions, focusingon technology from OSF, Hewlett-Packard/Apollo, IBM, Digital, ATandamp;T, andothers.andP;  We also discuss the issues vendors and users will face as theyimplement security services in distributed environments.andM;The Scope of theandM;ProblemandM;Securing a distributed computing environment is different from securing astandalone system.andP;  In both cases, there are a variety of fairlywell-understood measures users can take to secure systems, includingauthorization lists that prevent unauthorized users from using a resource,passwords, and encryption.andP;  But these services must be deployed differentlyin distributed systems.andP;  The NCSC, the most visible authority on computersecurity, acknowledges this fact in its network &quot;interpretation&quot; of itsTrusted Computer System Evaluation Criteria (also known as the Orange Book).andM;In a standalone environment, such as a minicomputer accessed by localterminals, security is analogous to securing an apartment building.andP;  In bothcases, you've got control of the resource and are reasonably certain whomight want to use it.andM;The first security measure you'd institute would be placing locks on thesystem.andP;  Locks prevent people from wandering in and stealing things from thebuilding.andP;  Tenants have keys to their own apartments, and multiple tenantsmay share the same keys (access rights) to the front door and storage areas.andM;The analog to door locks in computer security is the password.andP;  Tenants withkeys can get into the building and access particular parts of it--anapartment, a storeroom, etc.andP;  To further secure your apartment building, youmight take a number of additional steps.andM;* Keys don't force tenants to identity themselves every time they come intothe building.andP;  A tenant could lose a key or give it to someone to use.andP;  Bothactions could compromise the security of the building.andP;  Therefore, you mighthire doormen to check the identities of all people who enter the building.andO;The computer-system analog would be authentication.andM;* In a very large building in a high-crime neighborhood, you might installcameras to record movements of persons entering and exiting the premises.andO;The computer system analog is auditing logs that record accesses to thesystem and activities involving sensitive resources.andM;* Finally, you might change the terms of the tenants' access to the buildingevery so often by changing the locks or even changing the terms of theirlease agreements.andP;  The computer analog would be to issue new passwords tousers or change users's ability to access certain parts of the system.andM;Each of these steps brings you closer to believing that your apartment houseis reasonably safe from unauthorized intrusion, theft, sabotage, and otherrisks to its integrity and safety.andP;  This belief arises from the securitymeasures you've taken and your trust in the integrity of those measures.andO;Trust is a term that is used a lot in security circles.andP;  To the NCSC, asecurity mechanism is trusted if the code that implements it is protectedagainst modification.andP;  In other words, locks that are easily disabled are nolocks at all.andM;HOW DISTRIBUTED SECURITY IS DIFFERENT.andP;  A distributed system is a collectionof people, applications, and services that have access in some way to eachother via a network.andP;  You could define a distributed system as a LANsupporting a small group of users.andP;  In this report, we define distributedsystems as being much more than LANs, however.andP;  Most of the activity indistributed systems security seeks to secure large, far-flung virtualnetworks.andP;  From the standpoint of security, these distributed computingenvironments are different from standalone systems in two ways:andM;* Distributed environments often are not controlled by common managementstructures and authorities.andM;* Distributed environments constantly evolve in unpredictable directions.andM;In the apartment-house analogy, distributed security would be required if youdecided to rent units on a time-sharing basis.andP;  That would mean accountingfor additional people using apartments for short periods of time.andP;  You wouldalso have to cooperate with other building owners in the time-sharing networkto help them maintain the security of their buildings.andM;A Question of Control.andP;  Distributed systems security designers assume that nosingle authority can control the entire environment.andP;  With users scatteredthroughout a large organization, it's difficult, if not impossible, to evenknow which users can gain access to which systems.andP;  There's an old saying insecurity circles: We're all only nine phone calls away from the Pope.andP;  Themessage is that once a determined user gains entry to a network, there's agood chance he or she can worm into highly sensitive places.andM;That's not to say you can't try to centrally control security in adistributed environment.andP;  However, even central security authorities end uptrusting that the authorities responsible for local systems have implementedappropriate security.andP;  A major thrust of security services is to providefacilities that allow central authorities to set certain ground rules indispersed systems.andP;  For example, some flavors of Unix provide ways ofpreventing users from logging in as &quot;superusers,&quot; which allows them to bypassmost access-control measures.andM;Organic Systems.andP;  The distributed computing model envisions placingstandalone systems as servers on networks with other servers that may or maynot be in the same building, city, or region.andP;  This design is flexible: Usersand applications will use these services in new ways as they need to do so.andO;Distributed computing systems must also be scalable: The hope is thatorganizations will be able to increase capacity by adding servers rather thanbeing forced to swap out monolithic processors and rehost applications.andM;As we've all discovered with PC LANs, networks grow organically.andP;  This makesit difficult to trust your knowledge of what's on the network, much lesstrust that appropriate security measures are taken for each new resource oruser added to the network.andM;The result is a certain amount of fragmentation of resources across a widescale of organizations and geographical space.andP;  Depending on theimplementation, distributed environments may defy control by the methods usedin standalone systems.andM;APPROACHES TO DISTRIBUTED SECURITY.andP;  Vendors and users are pursuing tworelated strategies to secure distributed systems.andP;  The first is to strengthenthe security of standalone systems attached to networks.andP;  This strategy seeksto bolster the security shields of standalone systems.andP;  The second strategyseeks to secure the communications links between systems.andP;  It assumes thatindividual nodes on the network are themselves insecure.andP;  These twostrategies are complementary; you need both to secure a distributed system.andM;Standalone Security.andP;  Standalone security seeks to build consistent securityshields around information resources and to manage those shields from aconsistent administrative facility.andP;  Passwords and access-control lists arethe mainstays of these shields.andM;The danger of focusing only on standalone security is that once an intrudergets through the security shield, he or she has free rein.andP;  In addition, ifan environment demands additions and subtractions of users at a rapid rate,updating user files on many standalone systems on a network is impractical.andO;Consider how difficult it would be to maintain unique passwords in a farflungsystem involving thousands of users.andM;This is the basic approach taken by the NCSC in its Orange Book.andP;  It is alsothe focus of products that seek to provide security within individualoperating systems from IBM, ATandamp;T, and others.andM;ATandamp;T's new Unix System V Release 4/Enhanced Security, for example, provides adiscretionary access control feature that allows an organization to specifywhich users can access which parts of the system.andP;  (IBM has provided similarfunctions on several of its operating systems since the mid-1970s.)andP;  Theassumption of such a measure is that detailed access controls will preventusers from accessing resources they're not entitled to access.andP;  The approach,therefore, places its trust in the ability of centralized measures to preventunauthorized entry into the system.andM;Even proponents of an isolation approach concede that access-control listsaren't enough to protect networked computers.andP;  System V Release 4/ES andrelated systems are very cognizant of the additional risks posed by networks.andO;They might encrypt files to discourage their theft and might useauthentication to verify that users are who they say they are.andM;Secure Communications.andP;  Secure communications strategies seek to protectlogical links between entities on networks.andP;  A network's physical links andindividual nodes are assumed to be insecure.andP;  Securing communicationsrequires mechanisms that protect the logical path between the user issuing arequest for a service and the locale in which that service request isanswered.andM;What are those mechanisms?andP;  You've got to check user identities andprivileges, encrypt data as needed, and record activity within theenvironment, spanning operating system platforms.andP;  Ideally, each of theseprecautions will be unobtrusive to the user.andM;The securing of communications has become the focal point of distributedsystems security.andP;  The OSF addresses secure communications in its DistributedComputing Environment (DCE), HP/Apollo in Passwdetc and other distributedsecurity facilities for its Network Computing System (NCS), Digital Equipmentwith its Distributed Systems Security Architecture (DSSA), and Sun with itsOpen Network Computing (ONC) architecture.andP;  The implementations of thesevendors are different, but all are working to achieve the same goals.andM;Building DistributedandM;Security ServicesandM;Building distributed security services requires successful navigation througha welter of technological, political, and economic issues.andP;  Any architecturemust be applicable to small, confined networks today and to huge networkstomorrow.andP;  Ultimately, an effective solution should secure both messaging(such as mail) and distributed processing.andP;  None of the solutions availabletoday effectively addresses both messaging and distributed processing.andM;The challenges are considerable, but at least consensus has emerged on whathas to be done to secure distributed environments.andP;  There are five securityservices in the prototypical distributed environment:andM;* IdentityandM;* AuthenticationandM;* AuthorizationandM;* Secure communicationsandM;* AuditingandM;Though implemented separately, these services use one another.andP;  They shouldbe integrated and available throughout the environment.andM;Managing IdentitiesandM;Distributed security begins with the assignment of an identity to eachcommunicating entity in the environment.andP;  This sounds simple to implement.andO;It isn't.andP;  It requires a shift away from current practice.andM;Some systems today associate user identities with the systems they're loggedinto.andP;  Thus, if a user is logged into System A and trying to access a file onFile Service B, File Service B typically only knows that System A is tryingto access it.andP;  File Service B has no notion of independent entities on SystemA trying to access it.andP;  Thus, it is relatively easy for an unauthorized userto masquerade as an authorized user.andM;In a distributed environment, File Service B needs to know whether User Smithis accessing it from System A or whether it's User Johnson.andP;  Smith andJohnson probably have very different access rights to different resources andneeds for security.andM;The OSF, MIT, and others call discrete communicating entities principals, andwe use that term in this report.andP;  A principal is a unit of trust thatmediates access to resources in the environments.andP;  In the distributedenvironment, servers as well as clients are principals.andP;  In this context,trust means that we can believe in the integrity of principals--theenvironment itself provides authentication and naming services to ensure thisintegrity.andM;NAMING SERVICES.andP;  Managing identities at this level requires that anindependent service maintain usernames.andP;  And, if that service is to supportlarge systems, it must be distributed.andM;This requires another conceptual leap from today's systems.andP;  Today, systemssuch as Sun's Network Information Service (formerly known as Yellow Pages)include the concept of principals, but they distribute principals by copyingthem.andP;  This technique maps unique user identifiers into the same name space,an approach that doesn't scale well.andM;One of the OSF's breakthroughs with the DCE was to implement an architecturewith distributed principals (as opposed to an architecture that distributesprincipals).andP;  The architecture manages names on three levels.andP;  First,principals are registered in a User Registration Service (based onHP/Apollo's Passwdetc).andP;  The User Registration Service replaces the standardUnix user database with global principal identities.andP;  Users are identified bytheir unique names, accounts, and memberships in groups and organizations.andO;The registration service database is replicated to ensure availability andconsistency across the network.andP;  The mechanism for replicating theregistration service database is DCE's Remote Procedure Call (RPC).andM;At the second level, the DCE's Naming Service hides the naming architecturefrom the user.andP;  The Naming Service resolves simple user login names, forexample, into the system's unique identifier for a user.andM;A the third level, DCE manages names on a global scale by partitioning thenaming service into &quot;cells,&quot; and by using a directory service based on theinternational X.500 directory standard to coordinate between cells.andM;ISSUES IN IDENTITY.andP;  The big issue in managing identities in a distributedenvironment is consistency.andP;  The more mapping that takes place, the moreunwieldy the system becomes.andP;  The OSF's approach integrates the management ofnames and identities, reducing mapping.andM;AuthenticationandM;ServicesandM;Having established a mechanism for uniquely identifying each entity in thesystem, a secure distributed environment must then be able to verify thatprincipals are, in fact, who they say they are.andP;  In a standalone environment,the operating system manages password access.andP;  In a distributed environment,authentication services handle this task.andM;The password is the basis of authentication services.andP;  Entering a passwordafter you type in your username prevents one user from masquerading asanother just by typing in the other user's name.andP;  In a standaloneenvironment, passwords are simple to implement and manage because only oneresource--the host computer--needs to know the passwords.andP;  But in adistributed environment, potentially thousands of computers would have toknow thousands of different user passwords.andM;Authentication services are a practical way to implement password protectionin a distributed environment.andP;  Rahter than every computer storing andmanaging the passwords of all users, an authentication service stores a key(a unique number) corresponding to each user's password.andP;  The authenticationserver knows all of the passwords on the network and checks them in behalf ofclients.andP;  (See Illustration 1.)andM;When User A wants to use Service B, the authentication service checks thepassword User A submits against the key it has for User A.andP;  If the passwordand the key match, the authentication service verifies to Service B that UserA is, in fact, User A.andM;The authentication process is similar to what you do when receiving a phonecall from a person who seeks important information from you.andP;  As long as thestranger can get your phone number, he or she can open a channel to you.andP;  Buthow do you know who the person calling you really is?andP;  You might recognizethe person's voice or vocal mannerisms as someone familiar to you.andP;  You mightask the person for his or her title, affiliation, and a reference.andP;  If theinformation is really important, you might exchange passwords with theperson.andP;  In each of these cases, you are exchanging some sort of &quot;key&quot; withthe caller to help you trust in his or her identity.andM;There are variations on this simple description.andP;  In OSF's DCE, for example,the user registration service checks passwords and then asks anauthentication server for clearance to use preapproved facilities or classesof facilities.andM;Authentication services can also perform a variety of functions.andP;  They canverify in behalf of two principals their separate identities.andP;  Even moreimportantly, an authentication service can set up a verified channel overwhich two principals can exchange messages, requests, or data.andM;THE RISE OF KERBEROS.andP;  The hottest authentication system is Kerberos, whichwas developed at MIT to support the the Project Athena distributed computingenvironment.andP;  (Project Athena supports some 5,000 workstations at theuniversity.)andP;  OSF adopted a version of Kerberos that includes HP/Apolloextensions.andP;  ATandamp;T will soon support Kerberos in System V/ES, as will Sun inONC.andP;  IBM supports Kerberos for its TCP/IP products today, and has announcedits intent to support OSF's DCE products, which use Kerberos.andM;Kerberos is a secret-key authentication system.andP;  Secret-key refers to the waykeys are stored, managed, and distributed.andP;  Kerberos assigns key distributionand management to a trusted authentication server.andP;  The Kerberos server islocked in a windowless brick room and is accessible only to an administrator.andM;In Kerberos, the security of a logical channel between, say, a user and aservice, is determined by a secret key, called a session key, which is sharedby the user, the service, and the Kerberos server.andP;  The session key is usedby two principals to encrypt their communication to ensure its integrity andconfidentiality.andM;The Kerberos protocols require the following series of steps to set up asecure logical channel between a user and a service.andP;  (The physicalcommunications channel may be something as public as two Internet addresses.)andM;* The first step is to register the user and the service on the network.andO;(This step is required with any authentication system.)andP;  Typically, the usermust visit the Kerberos administrator, who then adds a new secret key forthat user to the Kerberos server's database.andP;  The administrator also adds newkeys for services.andM;* When the user wants to access the service, he or she asks Kerberos to issuea set of credentials to do so.andP;  These credentials contain the session keygenerated by Kerberos.andP;  Kerberos encrypts the session key in two ways.andO;First, using the registered secret key of the user, and second, using theregistered secret key of the service.andP;  The latter of these two is called aticket.andM;* When the user receives these credentials from Kerberos, he or she candecrypt the first part of the credentials to discover the session key.andM;* The user then presents the ticket to the service.andP;  When the servicereceives the ticket, it can decrypt it to discover the session key.andP;  Thus,the user and the service both gain the session key without ever having topass the key over the network in an unencrypted form.andP;  The Kerberos protocolguarantees that only the user, the service, and Kerberos know the sessionkey.andM;The Kerberos protocols can be used in much more complicated ways than theabove outline illustrates.andP;  In practice, use of the protocls can bedetermined by risk analysis, performance concerns, and the format ofinformation.andP;  For example, Kerberos tickets can be re-used many times,reducing the number of conversations the user must have with the Kerberosserver.andM;The other major approach to authentication is the public-key method.andP;  Inpublic-key, there is no trusted third-party maintaining and issuing keys.andO;Rather, public keys are distributed by a global authority and matched toprivate keys held by individual principals to set up authenticated channels.andO;The public-key technique works like the matching rings that called the geniein the old Shazam cartoon: You need two parts of a single key to authenticatean entity or channel.andP;  Some vendors, most notably Digital, are strategicallycommitted to public-key encryption.andP;  But it is years from availability incommercial environments.andP;  (See &quot;Directions for the Future&quot; on page 13.)andM;ISSUES IN AUTHENTICATION.andP;  Performance is an issue in authenticationservices.andP;  Like other services, authentication exacts a cost in systemoverhead.andP;  Most users, however, will barely notice it unless they beginencrypting all messages.andP;  At MIT, most traffic operates at the lowest levelof Kerberos protection.andM;As large systems vendors point out, however, MIT is not a typical userenvironment.andP;  To bring Kerberos to market as a commercial product, the OSFand others had to extend it to support replicated servers and to more easilyscale upward.andM;The version of Kerberos adopted by the OSF for its DCE actually comes fromHP/Apollo.andP;  HP-Apollo extended the basic Kerberos code in three ways: with anew server replication scheme, support for the RPC/NIDL (Network InterfaceDefinition Language) in HP/Apollo's Network Computing System (NCS), and ahierarchical key-distribution mechanism.andM;Dynamic Replication.andP;  Replication increases the availability of the keydatabase by duplicating it on multiple servers.andP;  Kerberos has a batchreplication facility; HP/Apollo replaced it with the replication scheme inits own Passwdetc.andP;  Passwdetc allows master user and key databases to acceptchanges and immediately propagate them to a series of slave databases.andM;Interestingly, HP/Apollo's experience shows that replication is not likely toever become a big burden on system overhead.andP;  On the company's distributedcomputing network in Massachusetts and New Hampshire, spanning 3,000machines, under 1 percent of hits on the authentication servers are updates.andM;Standard-RPC Support.andP;  The replication feature uses NCS's RPC/NIDL topropagate changes across a network of authentication servers.andP;  To add supportfor its RPC, HP/Apollo made Kerberos network-independent.andP;  RPC/NIDL is one oftwo widely-used RPC mechanisms; the Sun-Netwise RPC Tool is the other.andM;Hierarchical Key Distribution.andP;  Hierarchical distribution of authenticationkeys is required to support authentication of communications acrossmultitiered organizations.andP;  If User A, who works for Ford, needs to send anauthenticated message to User B, working in the Department of Defense, UserA's request for an authenticated channel must be passed up a chain ofauthentication servers within Ford across to DOD, and then down a chain ofservers within DOD.andP;  At each step, an authentication agent must provide theequivalent of a Kerberos ticket for the message to get through.andM;Kerberos Release 5 supports hierarchical distribution of keys.andP;  OSF adoptedHP/Apollo's implementation of these protocols.andP;  The implementation capturesthe structure of the path by using location names in its notation.andO;HP/Apollo's scheme allows the chain of authentication servers to be traversedalgorithmically.andP;  Where com denotes the communications path between Ford andDOD, the interchange between User A and User B would look like this:andM;com/ford/defsec/usera - com/dod/ctroff/userbandM;Ultimately, this problem is likely to be solved using the ISO/CCITT's X.509Standard.andP;  X.509 allows X.500 names to be used to authenticate communicationsacross hierarchies.andM;Authorization ServicesandM;Having established unique identities and a means of verifying them,distributed security requires a mechanism to allow legitimate users to gainaccess to the services they need, while shutting out others.andP;  Access-controllists (ACLs), a well-understood technique that is used widely in standalonesystems, are the basis for distributed authorization services.andM;ACLs answer the question: Which resources are principals authorized toaccess?andP;  When a principal accesses a resource, the authorization servicechecks the principal's identity against the resource's ACL to determine theprincipal's clearance to perform an operation or access privileges, andeither clears the access request or rejects it.andM;In Unix System V/ES, for example, resources and users can be organized intotwo categories.andP;  First, resources are classified as objects, to whichaccess-control lists are attached.andP;  A file is a typical resource.andM;Second, principals can be assigned privileges for accessing or manipulatingeach object.andP;  For better performance and convenience, Unix System V/ES'sauthorization service allows the creation of group authorizationprivileges--capturing the privileges a project team has in common, forexample.andP;  (We use Unix System V/ES as an example here, but other systems,including other Unix varieties as well as services such as distributed filesystems and a variety of proprietary operating systems, also implement thissecurity feature.)andM;As defined by the NCSC, there are two levels of authorization: discretionarycontrol and mandatory control.andP;  Discretionary access control allows privilegelevels to be defined for principals in the environment--or not.andP;  Mandatoryaccess control requires that privileges be defined for every principal andobject in the environment.andP;  In commercial environments, mandatory accesscontrol is a special case.andP;  Mandatory access controls add an implementationcost and can be complicated to administer.andP;  However, mandatory accesscontrols may actually be more cost effective than enforcing and managing suchcontrols manually or through centralized policies.andM;DISTRIBUTING AUTHORIZATION.andP;  Implementing authorization in a distributedenvironment is tricky--as tricky as managing distributed passwords.andP;  Adistributed authorization service has to be able to manage exchanges ofrequests and responses across a variety of machines, and it must work withthe authentication service and other security services.andM;Authorization systems use &quot;labels&quot; to check principals against ACLs.andP;  Eachlabel captures the principal's identity and basic authorization privileges.andO;The basic problem is how to distribute the issuance and checking of labels ina distributed environment.andP;  There are two basic approaches to distributedauthorization services: the central server approach and the distributedapproach.andM;Central Authorization.andP;  The central approach is similar to Kerberos's designfor distributed authentication.andP;  Access rights are stored and managed on acentral authorization server.andP;  Labels are distributed from this server atlogin time, and subsequent requests for service are checked against ACLsmaintained on the central server on behalf of network resources.andM;The advantage of a central ACL server is easier administration.andP;  With allACLs stored in one place, changes are easier to manage.andM;The central approach has two disadvantages.andP;  First, availability andperformance are issues, as they are with any centralized approach toproviding services.andP;  There must be some way to replicate the ACL server'sdatabase on secondary servers.andM;Second, although the central-server approach makes the ACL administrator'slife easier, it may actually make administering privileges in the totalsystem more difficult.andP;  If the environment is big and ACLs grow in number andlevel of detail, the authorization service's database will grow and grow.andO;Will the central authorization database be able to grow gracefully?andP;  Inaddition, you can envision huge bureaucracies growing around centralauthorization services on very large networks.andM;Distributed Authorization.andP;  The authorization approach adopted by the OSF inits DCE is distributed.andP;  Rather than store and manage privileges on a centralserver, ACLs are attached to individual services in the environment.andP;  Foreach service, a logical privilege server checks principals' privilegesagainst an ACL.andM;Ideally, each service's ACL will be implemented in the most efficient way.andO;In a database server, for example, it might make sense to take a fine-grainedapproach to privileges, attaching ACLs to individual fields, as opposed tofiles.andP;  In the centralized approach, the ACL for the database server isimplemented on the server itself.andM;Under this approach, principals collect attribute certificates, or labels,from resources in the environment upon login, rather than collecting themfrom a central server.andP;  This technique exacts a cost at login time.andP;  However,it simplifies subsequent privilege-checking by, in effect, prechecking aprincipal's privileges.andM;ISSUES IN AUTHORIZATION.andP;  The big issues in distributed authorization areperformance and integration.andP;  We've touched on the performance of individualservices' ACL mechanisms.andP;  In the distributed authorization model,administrators responsible for individual services must implement ACLs in themost efficient way.andM;Beyond smart implementations, however, there's the matter of how efficientlythe environment will manage labels and authentication tickets, and how well ascheme can be scaled upward to work in large environments.andM;OSF tackles this issue by integrating its privilege server with Kerberos.andO;The certificates created by DCE's privilege servers are inserted intoKerberos tickets.andP;  This approach piggybacks privilege certificates onto DCE'sdistributed key management mechanism.andP;  In addition, the DCE attributecertificates can be expanded to include a variety of privilege levels to meetfuture needs.andM;Cryptography: Key to SecurityandM;Most designers of distributed security services assume that an adversarycontrols the network.andP;  The problem, then, is to secure communications inspite of networks that can't be trusted.andP;  How do you do this?andP;  You couldencase the physical network in concrete and post armed guards every 20 feet.andO;But the guards might conspire to violate the security of the network.andP;  As apractical matter, cryptography is the most reliable way to securecommunications.andM;The concept of cryptography is simple: Two communicating entities agree touse the same scheme to code and decode messages.andP;  The two entities couldagree to translate all messages into Pig Latin or rearrange the letters inwords in a certain order.andP;  In either case, the goal is to scramble messagesusing a code known only to two or more principals.andM;In cryptography, messages are encoded--encrypted--anddecoded--decrypted--using unique numerical keys.andP;  The most commonly usedscheme to accomplish this process is the Data Encryption Standard (DES),which encrypts messages using 56-bit keys generated by an algorithm.andP;  The DESalgorithm takes in the data it is to encrypt and a key under which the datawill be encrypted, and outputs an encrypted data stream.andP;  The receiver musthave the same key to be able to decrypt the data stream.andM;A cryptography system must perform three basic functions:andM;* Create Unique Keys.andP;  Using the DES algorithm, the system must giveprincipals unique keys with which to encrypt and decrypt messages.andM;* Maintain Keys in a Secure Environment.andP;  The system must itself be inviolatebecause it knows the values of the secret keys principals use to encryptvital messages.andM;* Distribute Keys.andP;  Before two principals can communicate using cryptography,they both must be able to agree upon and have access to the key used toscramble messages.andP;  Setting up a trusted cryptography service for use on thedistributed network gives principals an agreed-upon source of keys.andP;  However,the cryptography facility itself must then distribute the keys to theprincipals involved in a communication.andP;  The most common way to distributekeys is to encrypt them and send them along with the message.andM;IBM's Common Cryptographic Architecture, which is implemented in theIntegrated Cryptographic Feature for high-end 3090s, and its companion,Integrated Cryptographic Services Facility (ICSF) software for MVS andTransaction Security System for PCs and MVS, are prime examples ofcryptographic services.andP;  ICSF's Key Generator Utility uses DES to generatecryptographic keys for application programs.andP;  The Key Generator creates threekinds of keys: primary key-encrypting keys, secondary key-encrypting keys,and data-encrypting keys.andP;  Primary keys are the enciphered versions of theDES keys stored on the host running the Programmed Cryptographic Facility.andO;Secondary keys are used by the Key Generator to encrypt keys to be sent to areceiving application program.andP;  Data-encrypting keys are used to encryptmessages.andM;Having encrypted the communications before they are sent over the network,the communications can then &quot;securely&quot; travel to their destination(s) to bedeciphered.andP;  An intruder may be able to intercept the communications, butprobably won't be able to understand them.andP;  We say &quot;probably&quot; because, with[2.sup.56] possible keys, security experts believe the odds against crackingDES anytime soon are very, very long.andP;  (But there's always the risk...)andM;THE THREE ROLES OF CRYPTOGRAPHY.andP;  Cryptography services play a central rolein communications systems security.andP;  Cryptography is used to secureauthentication and authorization services, to protect communicationschannels, and to secure actual messages.andM;IBM's Secure Systems Architecture illustrates this point.andP;  The Secure SystemsArchitecture is IBM's enterprise-wide view of security; it spans SystemsApplication Architecture (SAA) platforms today and can be extended in futureto protect AIX platforms.andM;The Common Cryptographic Architecture and its API to cryptography services(on MVS and DOS today, other platforms in the future) are at the heart ofIBM's architecture.andP;  IBM uses cryptography to protect data traveling acrossthe network.andP;  It also uses cryptography to authenticate the source of amessage or transaction, as well as to detect modifications in messages ortransactions.andM;To authenticate the source of a message or transaction, IBM's cryptographicfacilities generate a Message Authentication Code (MAC).andP;  A MAC is anencrypted message identifying the source of a message.andP;  A receiver uses a MACto verify that a data stream has been received from the proper source.andP;  TheMAC is an authentication mechanism for messages, unlike Kerberos, whichauthenticates users.andP;  Is this a distributed authentication service?andP;  Not inthe sense that Kerberos is distributed.andP;  However, it is clear that IBM plansto adopt the OSF DCE technology in this area to support distributedenvironments.andM;To determine if a message has been tampered with in transit, IBMcryptographic facilities can attach an encrypted Modification Detection Code(MDC) to a data stream.andP;  An MDC is like a &quot;checksum&quot; attached to a clear-textfile.andP;  If a receiver and sender can verify the checksum's accuracy after atransmission, they can be confident the data stream wasn't tampered with.andO;The MDC is an important anti-virus measure, and it can also be used to ensurethe integrity of EDI messages.andM;The Cryptographic API.andP;  IBM's goal with its Common Cryptographic Architectureis to make it easier for developers to port the security portions ofapplications to different platforms.andP;  The Cryptographic API today providesprogrammers with the same security facilities on MVS (through the IntegratedCryptographic Service Facility/MVS) and DOS (through Transaction SecuritySystem).andP;  The API provides the following services:andM;* DES key generation and managementandM;* Data confidentiality via encryptionandM;* Data integrity via MACs and MDCsandM;* Key distributionandM;* System activities auditingandM;* Personal Identification Number (PIN) generation, verification, andmanagement (a PIN is an alternative to a character-based password)andM;In the immediate future, IBM plans to extend the API to MVS applicationsrunning as VM/ESA guests and to give OS/2 applications access to itshardware-based cryptography solutions.andP;  Next, we expect IBM to extend supportto its AS/400 platforms and its RS/6000 platforms.andP;  In addition, WilliamVance, director of systems security at IBM, says implementing thearchitecture in a distributed computing service is a priority.andM;CRYPTOGRAPHY IN KERBEROS.andP;  Cryptography plays a major role in authentication.andO;In IBM's Common Cryptographic Architecture, a DES facility is used to createpoint-of-origin keys to authenticate messages.andP;  In Kerberos, DES makes akey-distribution mechanism secure.andP;  Kerberos uses DES encryption to providethree levels of security in a distributed environment.andM;Basic Level.andP;  At the basic level, the lowest level of security, Kerberosrequires only that the authenticity of principals be established when aconnection is initiated.andP;  Principals assume that subsequent messagesoriginate at the authenticated entity.andM;Safe Messages.andP;  For safe messages, at the middle level, Kerberos requiresthat each network message be authenticated.andP;  This provides additional checkson the identity of principals during the communications session.andM;Private Messages.andP;  For private messages, at the highest level, Kerberosrequires that each message be both authenticated and encrypted.andP;  The resultis messages that can be understood only by the communicating principals.andM;These levels of security allow users to use Kerberos to implement security ata cost that is in line with the potential cost of losses.andP;  The highest levelof security in Kerberos--authenticated and encrypted messages--is expensivein terms of system overhead.andP;  And, in fact, it is overkill for manyinteractions between principals in a distributed environment.andM;The most rudimentary level of security is relatively inexpensive.andP;  Most userswill barely notice security delays if they use the basic security option ofKerberos.andP;  (Most traffic at MIT operates at the lowest security level.)andO;Performance becomes an issue when users not only encrypt session keys butalso the messages they pass over an authenticated channel.andM;Is the basic security level secure enough?andP;  Establishing an authenticatedchannel known only to the communicating principals is very useful to mostcommunications.andP;  Even though the channel itself is unprotected, it isdifficult for an intruder to find, because it is one of thousands ofpotential channels that are active during even a few of the 86,440 seconds ina day.andM;SECURE RPC.andP;  The most concrete way to think about security is in terms of auser requesting a service somewhere out on the network.andP;  But in a distributedcomputing environment, there's also a need to protect an application processseeking service.andM;This is where secure RPCs come into the picture.andP;  RPCs have become the mostfavored way to build applications in a distributed computing environment.andO;Both OSF and Sun have provided ways to secure RPCs in applications thatrequire them.andM;In the OSF DCE, developers have a choice of two secure RPCs, the &quot;integrity&quot;and the &quot;privacy&quot; versions of HP/Apollo's RPC/NIDL.andP;  Both options areavailable from the DCE's API, and both are invoked by passing a singleargument to the RPC.andP;  (See Illustration 2.)andM;Integrity RPC.andP;  OSF's integrity RPC contains a cryptographic checksum.andP;  Thechecksum is constructed from a digest of the message and then encrypted.andO;This is a slow process, but it is more secure than an &quot;in the clear&quot; RPC is.andO;The RPC's target remote process receives the message, creates the same digestof the message, and compares the result to the checksum received with themessage.andP;  This procedure eliminates the need for the target process to checkback with the source to compare checksums.andP;  If the checksum received by thetarget is different, the RPC has been tampered with and is aborted.andM;Privacy RPC.andP;  The privacy RPC is encrypted in its entirety, including theuser data it carries.andM;ENCRYPTED MESSAGES.andP;  A privacy RPC is an encrypted message, but a message ofa particular type.andP;  Distributed computing environments require messageencryption in a more general messaging context, such as mail.andM;The supplier and contractor in an electronic data interchange (EDI)application, for example, typically want to ensure the integrity of theircommunications by using services such as IBM's MDC and MAC.andP;  Alternatively,they may also want to encrypt all of the information they exchange to ensureits privacy.andM;Given the importance of E-mail as a general store-and-forward facility for agrowing number of applications, encrypted mail is an immediate concern.andO;Encryption is available today as a special add-on to discrete private mailsystems.andP;  Few commercial users have any experience using encrypted mail in&quot;open&quot; environments like the Internet or public networks.andM;MIT's Project Athena has authenticated mail but is just starting toexperiment with encrypted mail.andP;  One big problem MIT will have to overcome isthe &quot;pairwise&quot; orientation of Kerberos.andP;  Kerberos authenticates pairs ofprincipals.andP;  If one principal wants to send an authenticated mail message tofive other principals, Kerberos sets up five channels.andP;  Options to set upone-to-many and many-to-many channels just aren't available yet.andM;Security experts are watching with interest the new secure mail servicerecently installed on the Internet.andP;  Many expect this service to help raiseawareness of secure mail and provide a shakedown cruise for the concept.andM;ISSUES IN ENCRYPTION.andP;  The issues in encryption are cost, complexity, andintegration.andP;  The number one concern about encryption is cost.andP;  The OSFestimates that encryption will exact a cost in additional system overhead of10 to 15 percent on its RPC mechanism.andP;  ATandamp;T has a similar estimate of cost,but IBM believes the cost may be lower.andP;  None of these organizations hascompleted definitive tests.andM;The cost of encryption could actually be higher, depending on theapplication.andP;  Encryption exacts a cost every time it is used.andP;  Thus, aninteraction on a distributed network that requires fully encryptedauthentication and authorization, an encrypted RPC, and an encrypted messagecould be very expensive.andP;  A mail system implemented atop a secure RPC couldend up encrypting messages twice: once when the mail message is handed to theRPC, and once when the RPC is encrypted.andM;Layers of Complexity.andP;  The complexities of encryption extend from thecryptographic services API to the National Security Agency's (NSA's) apparenttrepidations about the widespread use of DES.andM;One of the goals of the OSF with the DCE is a unified and relatively simpleAPI to encryption services.andP;  The OSF's secure RPC is simple to invoke, andthe DCE's version of Kerberos also simplifies the invoking of encryption.andO;These services are available across the environment, and the API will beavailable across environments built using the DCE code.andP;  Simplifying the useof consistent cryptography services is also IBM's goal in its CommonCryptographic Architecture.andM;The DES algorithm is available and effective.andP;  There's a great deal ofconfidence in its integrity--cracking it would require an exhaustiveanalysis.andP;  DES has become an international standard for commercialcryptography.andP;  NSA opposes the widespread use of cryptography ininternational markets, and is believed to be uncomfortable about itswidespread use in the United States.andP;  (Cryptography makes the informationgathering and analysis done at the NSA that much more difficult.)andM;The NSA's policy is troublesome for developers who use DES.andP;  Products thatuse DES, such as OSF DCE, the Andrew File System from Transarc, and the IBMproducts conforming to the Common Cryptographic Architecture, will be soldoverseas.andP;  But selling DES to nonfinancial organizations outside of theUnited States requires a special export license for each sale.andM;The result of the NSA's policy is a slowing of the distribution of DESsystems.andP;  During the next severals years, however, the NSA will come underincreasing pressure to change its stance.andM;Integration.andP;  We don't want to mislead anyone by discussing encrypted mailvirtually in the same breath as encrypted RPCs.andP;  No vendor has trulyintegrated cryptography services into a full distributed environment yet.andO;OSF's DCE is a process-oriented model that provides the building blocks formail-oriented applications.andP;  But insiders concede that secure mail won't beaddressed until later versions of the environment.andM;Auditing ServicesandM;Auditing services give users the means to enforce accountability in adistributed environment.andP;  Or, in the worst case, an organization usesauditing services to do a post-mortem analysis of a security or integritydisaster.andM;There's not much difference between auditing services in a standaloneenvironment and distributed auditing services.andP;  In both cases, significantactivities in the environment should be recorded in logs.andP;  In a distributedenvironment, logs are kept on local systems.andM;There are two factors to consider in distributed auditing services: the costof auditing and the administrative interface to distributed auditing.andM;THE COSTS OF AUDITING.andP;  Auditing services in a distributed system typicallywill record more information than standalone auditing systems.andP;  In adistributed environment, it's useful to record authentication andauthorization information along with data describing particular activities.andM;The result is larger logs in support of audit service, and a greater cost interms of system overhead.andP;  ATandamp;T estimates that auditing all activities costsan additional 10 to 12 percent in system overhead.andP;  This cost can be largeror smaller, depending on how logs are implemented and tuned in individualservers.andM;Administrative Complexity.andP;  It isn't difficult to log information aboutsystem activities in a distributed environment.andP;  However, coordinatingauditing services and using the information they gather is difficult.andP;  Novendor provides a solution that allows an administrator to manage multipledistributed auditing services from a central location.andM;OSF left auditing out of its DCE because it couldn't find an acceptableapproach to distributed auditing.andP;  It is hoping to find a solution in thecontext of its Distributed Management Environment (DME) Request forTechnology (RFT) (see Vol.andP;  5, No.andP;  9).andM;In addition, there are few solutions to the problem of how to collect andsift through millions of bytes of auditing information to find meaningfulpatterns.andP;  IBM's Computer Assisted Auditing Tools and Techniques seeks tosimplify the use of large volumes of audit information.andM;Directions for the FutureandM;Those working to create effective distributed security services have made alot of progress during the last five years.andP;  However, none of the leaders inthese efforts--OSF, MIT HP/Apollo, etc.--will tell you it has all theanswers.andP;  The most nagging technology questions concern administration, therole of public-key encryption, and hardware-based encryption.andP;  During thenext two years, we expect to see the security community focus most of itsefforts in these three areas.andM;DISTRIBUTED ADMINISTRATION.andP;  The lack of an administrative interface todistributed computing environments and useful management tools is most severein audit services, but it extends to the entire range of security services.andO;OSF, ATandamp;T, IBM, and every other vendor acknowledge the imperfection of theircurrent solutions without effective administration.andM;In September 1990, IBM announced completion of its consistent securityarchitecture, which provides consistent security services across all of itsmajor platforms.andP;  The Common Cryptographic Architecture had been a missingkey piece in IBM's architecture.andM;Given all this, however, IBM concedes that its security architecture doesn'tyet support distributed environments.andP;  Its main benefit is to give developersa consistent set of services and APIs across a variety of platforms.andP;  IBM'snext priority is developing distributed security administration facilities.andM;IBM and other vendors also hope the OSF's DME project will generatetechnology they can adopt to meet this need quickly.andM;THE RISE OF PUBLIC KEY?andP;  Although Kerberos is hot right now, many securityexperts believe secret-key encryption will always be inherently limited inthe scope it can accommodate.andP;  Building &quot;chains of trust&quot; such as the onedescribed above (&quot;Hierarchical Key Distribution,&quot; page 8) for User A at Fordand User B at the Defense Department requires just too much prior planningand is probably expensive.andM;These experts believe public-key encryption will ultimately be the best wayto authenticate and encrypt communications that follow unpredictable pathsand span many physical networks.andP;  They point out that the X.509 StandardCommittee is, in fact, defining the certificate format needed to implement apublic-key standard.andM;Even Kerberos partisans concede that, eventually, public-key encryption willbecome the standard in distributed computing.andP;  However, they doubt thatpublic key will catch on for some time.andM;The problem with public key today is that there's only one availablepublic-key algorithm, and it is more expensive than DES (which is licensedfree by most suppliers).andP;  RSA Data Security, a small Redwood City,California, firm, owns this encryption algorithm.andP;  RSA is viewed by many inthe security community as a monopoly with undue control over a technologythat heretofore has been in the public domain.andM;In addition, RSA's algorithm uses 500-bit keys (DES uses 56-bit keys), whichexact a greater performance toll than does DES.andM;For most users, the public key vs.andP;  secret key debate is irrelevant to theirneeds today.andP;  As more users apply cryptography technology to their networks,the issue will become important, but that's some years down the road.andM;Users can take comfort, however, in the fact that the major vendors recognizethe eventual need to accommodate public-key encryption within theirarchitectures.andP;  For example, ATandamp;T's System V/ES includes the IntegratedAuthentication Framework, an authentication structure that allowsapplications to invoke whichever authentication scheme they prefer.andM;HARDWARE-BASED ENCRYPTION.andP;  One of the biggest questions about OSF's securityarchitecture is: Will it be too show to succeed?andP;  OSF is using software-basedencryption in its security architecture, which imposes additional overhead onthe systems that use it.andM;Encryption overhead will depend on the extent to which cryptography is used.andO;For example, the cost of encrypting the initial Kerberos tickets used to setup an authenticated channel is minimal.andP;  However, fully encryptedcommunications will cost much more--and no one has a good fix on how muchmore.andM;Some believe that most users won't tolerate high encryption costs and thatsoftware-based encryption will never really be widely used as a result.andP;  Thefastest way to do encryption, these skeptics point out, is in hardware.andM;IBM, Digital, and others sell subsystems that encrypt and decrypt DES-encodedmessages on behalf of processes and applications.andP;  IBM's IntegratedCryptogrphic Feature (ICRF) is a cryptographic engine integrated with ahigh-end mainframe processor, and it runs at processor speeds.andP;  Systems suchas ICRF are big and expensive today, but most expect integrated cryptographysubsystems to come down in cost and size and to become available for smallerprocessors before too long.andP;  Ideally, within two years, we'll havecryptographic processors embedded in network interface hardware and runningat network speeds.andM;ConclusionsandM;In the big picture, where are we in the development of security services fordistributed computing environments?andP;  We're at the beginning of a very fertileperiod.andP;  But good solutions will be hard to find for awhile.andP;  In fact, userswill find distributed security services frustrating for three reasons.andM;First, no vendor is providing a complete solution.andP;  OSF has done a good jobof integrating four of the five major security services under a single API,but, without auditing, many government customers can't even consider theOSF's security solution.andP;  The NCSC requires auditing at most of its serioussecurity levels.andP;  And where's the mail integration?andM;Second, there's the NCSC mess.andP;  In standalone system security, the NCSCprovided the Orange Book criteria and a certification program.andP;  Both werevery valuable in leading the computer industry to adopt better and moreconsistent security architectures.andM;However, the NCSC has been of no help yet in the distributed computing arena.andO;The Red Book interpretation of the Orange Book criteria is a &quot;for comment&quot;document only.andP;  (The Red Book is dismissed out of hand by virtually theentire security community.)andP;  Without firm criteria for networked systems,NCSC declines to test networked systems.andM;This situation has yielded fear, uncertainty, and doubt among governmentusers who must follow NCSC's rules and the companies that service them.andO;Customers want distributed and open systems, but can't be sure they'll beable to comply with security requirements if they implement them.andM;The NCSC situation is critical because the government is the largest consumerof security products.andP;  Government contracts will be needed to help generate alarger market for security services among commercial users.andP;  Banks andfinancial firms invest in security services today, but most commercial usersdon't go beyond issuing passwords for authentication.andM;Lastly, despite all the technology we're throwing at the problem of securityin distributed environments, human frailty remains a huge risk to oursystems.andP;  At the OSF, security architects concede that, with all the workthey've done, they're still at the mercy of the password.andM;Technology may hold some answers to this problem.andP;  IBM's Personal SecurityCard stores identification and authentication information encrypted with DES.andO;It can also contain access-control information.andP;  To gain access to a system,a user must not only have the card, but must also know a unique identifyingmechanism.andP;  One such mechanism might be signature verification.andM;Probably the best well be able to do is read retinal patterns, voice prints,or thumb prints, but each of these technologies is too expensive andunreliable for widespread use.andP;  In the meantime, users are largely unaware ofthe damage they can do.andM;Butler Lampson, of Digital's Cambridge Research Labs, one of the securityexperts we spoke to for this article, uses the example of bank vaults toillustrate how much we have to learn about distribued systems security.andP;  Bankvaults have evolved over the last 200 years or more to become verywell-understood security mechanisms.andP;  We very rarely hear of a bank robberyin which the bank's vault was violated.andM;Lampson's point is that the computer industry has spent only about 20 yearstrying to seriously understand computer security, and much less than that ondistributed security.andP;  We suspect that the critical knowledge that will bringdistributed systems security to the bank vault stage of maturity will beabout the human side of security, not the technology of security.andO;</TEXT></DOC>
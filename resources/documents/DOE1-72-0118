<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> DOE1-72-0118 </DOCNO><TEXT>The TFG (transition function graph) model of parallel computation is defined.TFG is an extension of the static data-flow scheme, in which nodes haveassociated functions that depend on both in and out arc values, and whereinput may be evaluated without being consumed. Example applications aregiven, including the representation of common data-flow schemes, networksof asynchronous processors, networks with delays in communication orprocessing, and variations of Petri nets. A monotonicity condition isdefined, for the partial order is more defined than which is proved sufficientto guarantee the determinancy of a program. The semantics of TFG areinvestigated. The goal is to find a characterization of the action ofa program graph (as a history or next state relation) in terms of theactions of an arbitrary partition of the program graph into subgraphs.Axioms are given for a class of transition relations, which includesthe next state relation of any TFG program; the question as to whetherthis containment is proper is investigated.</TEXT></DOC>
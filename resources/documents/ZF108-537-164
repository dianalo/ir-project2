<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-537-164  </DOCNO><DOCID>08 537 164.andM;</DOCID><JOURNAL>Datamation  June 1 1990 v36 n11 p37(6)* Full Text COPYRIGHT Cahners Publishing Co. 1990.andM;</JOURNAL><TITLE>Why SAA will play on local area networks. (IBM's SystemsApplication Architecture) (Software Architecture)</TITLE><AUTHOR>Tibbetts,John; Bernstein, Barbara.andM;</AUTHOR><SUMMARY>IBM's Systems Application Architecture (SAA), three years old in1990, is being shaped by changes in the computer industry as itcontributes its own changes.andP;  SAA has maintained its goal ofpromoting consistency among platforms, but instead of being aimedat four different mainframe platforms that would do the samethings, SAA should start to address the industry's currentemphasis on local area networks.andP;  Certain functions should beimplemented only on special machines, making it possible forbusinesses to migrate slowly to SAA without having to purchasehundreds of expensive OS/2 microcomputers.andP;  Cooperative processingwill become a natural and imperative result of SAA acceptance.andO;Problems with SAA conformance should be straightened out and SAAshould include object orientation.andM;</SUMMARY><DESCRIPT>Company:   International Business Machines Corp. (product development).andO;Ticker:    IBM.andO;Topic:     SAASoftware ArchitectureLocal Area NetworksCooperation.andO;Feature:   illustrationchart.andO;Caption:   The changing face of SAA. (chart)andM;</DESCRIPT><TEXT>Why SAA Will Play on Local Area NetworksandM;When it appeared early in 1987 in largely theoretical form, IBM's SystemsApplication Architecture promised to lead the computing world into the '90sand beyond.andP;  Now that the '90s are here, we can see that the computing worldis shaping SAA just as decisively as SAA is shaping the world.andP;  As thisambitious architecture movement has progressed from promise to plan, fromdiagram to demo, from brochure to OfficeVision, from slide show to AD/Cycle,much that started out fuzzy has come into focus.andM;Three things are now clear.andP;  SAA will succeed in its stated goal of bringingconsistency to computing.andP;  SAA will end up going further than its statedgoals, surprising even its creators.andP;  And SAA has several glaring holes andneeds more work.andM;SAA's third birthday is a good time to review what we, and IBM, have learnedabout this creature during its short lifetime.andM;Consistency and BeyondandM;SAA has stuck to its original goal of promoting consistency among platforms.andO;As promised, SAA has defined standard interfaces to the three groups ofcomputer services consumers--the Common User Access (CUA) for users, theCommon Programming Interface (CPI) for developers and the CommonCommunications Support (CCS) for other systems--and implemented theseinterfaces according to plan.andM;There have been a few minor course corrections.andP;  New interfaces have beenadded within the outlines of the basic blueprint; these include theRepository Interface, Advanced CUA and Object Content Architecture.andP;  Othersneed to follow: Security Interface, Multimedia CUA and more flexible networktopologies.andM;Consistency has led SAA into new areas, and it now looks more like a meansthan an end.andP;  Still, the SAA promise to provide a uniform and consistent newvision of computing resources is progressing as advertised.andM;Along with consistency, the original SAA grand plan sold the computingcommunity on portability.andP;  The idea was to implement SAA's three standardinterfaces on machines of various sizes, making it possible to move programs(and, by extension, programmers and users) among these previouslyincompatible hardware platforms.andM;Unexpected CooperationandM;This was a practical plan that had unexpectedly profound results.andP;  By the endof 1988, observers inside and outside IBM realized that standard interfacescould lead beyond portable programs to something much moreinteresting--portability within programs.andP;  The newly compatible machines,with their common languages, services and peer-to-peer communicationsprotocols, could be set up to process applications cooperatively, with eachmachine doing the part of the job it was best suited for.andM;&quot;SAA is about cooperative processing!&quot; observers proclaimed, and in, May of1989, 12 independent software developers proved it.andP;  These IBM BusinessPartners were the creators of the SAA applications announced along withOfficeVision, IBM's vision of next generation office automation software.andO;And, although each partner had worked independently, all ended up usingalmost identical cooperative-processing schemes to build their products.andM;SAA still has little to say explicitly about cooperative processing, but IBMhas been admitting for a year now that this is one of SAA's primary agendas.andO;Developers of large-scale applications say almost unanimously thatcooperative processing is the configuration of choice for SAA.andM;SAA Is Expensive .andP;  .  .andM;Still, both users and developers have a number of reservations about SAA.andO;Now that actual SAA applications are ready to go, users are aghast at howmuch it will cost to run them.andP;  The cost lies almost entirely on theworkstation side, where SAA calls for every single user to be equipped with apowerful, expensive and usually newly purchased personal computer runningOS/2 Extended Edition (EE).andM;It was not supposed to be this way.andP;  OS/2 was conceived as an extension toDOS that would fit right into the installed base of PCs.andP;  After a long andmultipronged development effort at IBM and Microsoft Corp., OS/2 EE ended uprequiring so much additional memory (just as the cost of memory was goingthrough the roof) and so much additional power that it crossed the line: whatbegan as an evolutionary operating system started talking revolution instead,demanding an entirely new class of machine.andM;Predictably, large corporate users have found it psychologically, politicallyand economically unacceptable to replace tens of thousands of PCs with new,larger 386s to the tune of $10,000 apiece.andP;  If there is anything IS managerslike less than throwing away perfectly good machines, it is proposing doingso to their management.andP;  But at the moment there is no middle course; if youwant SAA, you have to take the Big Leap.andP;  SAA must offer a migration path sothat its customers can get there from here or it will never gain wideacceptance.andM;And Hard To BuildandM;When the 12 OfficeVision vendors discovered that SAA applications need to becooperative, they learned something else as well: building these applicationsis not easy.andP;  Each vendor spent at least a year and at least a milliondollars.andP;  The main reason for the difficulty, they say, is that SAA requiresa split development effort.andP;  You need a front-end team and a back-end teamhandcrafting each piece, along with a leader who can span both sides.andM;Few organizations have these resources available.andP;  IBM promises thatforthcoming tools will make the application-building job easier and hasalready begun remarketing a number of tools such as Easel, a graphicalfront-end development package from Interactive Images Inc. of Woburn, Mass.andO;Still, most developers believe that IBM needs to do more to help them buildnew SAA applications from scratch.andM;Even if developers find the resources to build SAA applications, and usersacquire the machines to run them, the marketplace throws up a big barrier inthe way of getting users and developers together.andP;  Put briefly, neitherbuilders nor purchasers can be sure that they have fully compliantSAA-mainstream applications.andP;  There are currently 18,000 pages of SAAspecifications in dozens of manuals.andP;  Must everyone interested in using SAAbecome an expert?andP;  IBM can talk all it wants about open architecture anduniversal standards, but until there is an easy way for developersconfidently to build SAA applications--and users confidently to buythem--this will not become the industrywide movement of IBM's hopes.andM;SAA Ignores LANSandM;Since SAA was conceived, local area networks of small computers have becomeincreasingly important to the industry.andP;  Close to half of the new PCsinstalled in corporations are now immediately incorporated onto LANs.andO;Although LAN support is included in OS/2 EE, the basic SAA blueprint hasnothing to say about the architectural role of LAN clients and servers.andP;  LANsdeserve a place in SAA's strategy.andM;Where there are holes in SAA, such as missing LAN ingredients, it is lessbecause of flaws in the original concept than because subsequent developmentshave opened up new areas for SAA to address.andP;  And given IBM's track record ofresponding to, if not actually anticipating, marketplace concerns, we can beconfident that major and minor adjustments are under way.andP;  Already this year,SAA announcements rumored to be significant have been scheduled, delayed,scaled back, canceled, rescheduled, confirmed and denied.andP;  SAA is on themove.andM;IBM's timetable remains uncertain, but the directions in which it will haveto move are becoming clear:andM;1.andP;  The SAA definition will become network oriented.andP;  SAA will soon leave itsancestral platforms behind and reorient itself toward networks.andP;  This isprimarily a change in philosophy and may never be made completely explicit,but the consequcnes will be felt very clearly.andM;Before long, SAA will quietly abandon the idea of implementing all interfacesand services on all four platforms--MVS, VM, OS/400 and Os/2--and insteadwill make those interfaces and services common to the network as a whole.andO;SAA's common services (the Cs in CUA, CPI and CCS) will be comon not in thesnese of being identical on each platform but rather in the sense of beingshared by all--common as in Boston Common.andP;  No matter that a certain servicemight reside on one platform or another--it will belong to, and be accessibleby, the entire network.andM;Having eery machine do every job never really made much sense, except inprinciple.andP;  There would be no point, for example, to implementing SAA'sPresentation Interface, which manages keystrokes, mouse moves and pixels atthe workstation level, on an IBM 370 mainframe.andP;  Moreover, it would beincredibly slow.andP;  Since the same capabilities exist on a much more suitablemachine just across the network, and since SAA interfaces make communicationamong machines easy, a division of labor seems to be called for.andM;In the future, we can expect to see certain services implemented only onspecialty machines.andP;  Front-end functions will be confined to the workstation;certain back-end services will be earmarked for the mainframe.andM;Distribution of fuctions will be gradually hard-wired into SAA.andP;  Cooperativeprocessing will be not just possible, but imperative.andP;  Yes, developers willgive up some control over where certain services can be placed.andP;  But theywill not need to worry about, or even be aware of, what piece executes where.andO;Unless a developer wants to do something unconventional, building cooperativeapplications will become easier as the architecture itself takes over the jobof assigning different functions to different platforms.andM;2.andP;  There will be two classes of SAA networks.andP;  As part of this switch from aplatform to a network orientation, IBM will have to rethink the basic SAAtopology.andP;  Today's SAA is built around four coequal computing platforms.andP;  Butit's a marketing fantasy to think that these platforms are all equal and thateach system can be made to do much the same work as the other three.andM;As far as the real SAA world is concerned, the only IBM computing platformsthat count are: mainframes and minis running the MVS, VM and OS/400 operatingsystems, and workstations running OS/2.andP;  The small computer is not justanother step in a continuum of shrinking machines, it is an almost entirelydifferent sort of creature.andM;Mainframes, whether single computers or combined into wide area networks(WANs), look after the needs of a community.andP;  If you think of personalcomputers as electrical appliances, mainframes are like power generationstations--large, remote, invisible suppliers of a community resource.andP;  SAA isclearly designed to keep mainframe technology (and the mainframe market)vital and up to date in this age of workstations.andP;  This is IBM's traditionalarea of strength, and so the mainframe part of SAA has been well defined fromthe beginning and will continue to be stable and somewhat static through thenext round of SAA adjustments.andM;The workstation or OS/2 side of SAA is where the action will be.andP;  This is thehousehold appliance level of computing, characterized by yearly model changesand little brand loyalty.andP;  This is the level at which IBM has received themost input about SAA, the level with the dazzling graphics, the largeinstalled base and the enormous aggregate costs and profit potential.andM;Since workstations are increasingly incorporated into local area networks,SAA can look to LAN configuration for the solution to some of its problems.andM;3.andP;  Smaller LAN clients will reduce the cost of SAA.andP;  A LAN is generallycomposed of many client machines--PCs used by individuals to perform mostroutine tasks--and a few server machines that provide special services forthe rest of the network.andP;  Architecturally, each client-plus-server pair couldmake up a single SAA platform, with everything that IBM said originally aboutits four hardware platforms applying.andM;Client machines form the bottom of the processing pyramid.andP;  There are manytimes more client machines than any other kind of SAA platform, and they comein a much wider variety of brands and models.andP;  This is why having to turnevery single one into an OS/2 workstation really hurts.andM;Once SAA becomes network oriented, however, this drastic step will not benecessary.andP;  Since it will no longer be left to each individual workstation toimplement the full complement of SAA services on its own, the full power ofOS/2 will not be required.andP;  With SAA services provided centrally somewhereelse on the network, the client machines can be smaller, cheaper and morediverse.andM;Therefore, SAA will be able to accept MS-DOS and OS/2 SE (Standard Edition)machines, conceivably even Apple Computer Inc. computers, and the otherworkstations that corporate America now owns by the millions.andP;  But would IBMactually include them as full SAA participants on par with OS/2 EE?andP;  It'sdoubtful, for then IBM would be obliged to do an enormous amount ofdevelopment work to implement SAA languages and services on each machine.andO;More likely, IBM will define an arm's length relationship with these systems,providing a great deal of interoperability.andP;  Such an approach is along thesame lines as the relationship SAA has with AIX, IBM's UNIX-based operatingsystem.andP;  Recent enhancements to AIX and IBM's RISC System/6000 midrangemachine might someday bring AIX into the SAA camp as well, but for now theenvironments are distinct.andM;4.andP;  LAN servers will consolidate SAA functions.andP;  The LAN server will act asSAA's representative to the LAN, much like the union steward on a shop floor.andO;The SAA server will provide full SAA-conforming services, such ascommunications and database access.andP;  It will serve as the LAN's gateway tothe mainframe or the WAN.andP;  It will be completely compatible with anetwork-oriented SAA.andM;SAA would also do well to recognize another important function of a LANserver--it can go beyond being a mere mainframe channel to becoming aback-end processor in itself.andP;  Most LANs currently in use have no mainframehookup at all and are able to do their job completely self- contained.andP;  IBMresists acknowledging this model, probably for this model, probably for fearof undermining its wAN and mainframe business.andP;  But, for many small or remoteenvironments, an SAA-compliant network without any mainframe links is arealistic configuration.andM;5.andP;  AD/Cycle should get to know today's SAA.andP;  AD/Cycle and SAA need eachother.andP;  AD/Cycle, IBM's comprehensive applications development environment,cannot become the development platform for Big Blue's product line withoutthe standardization that SAA provides.andP;  SAA, in turn, needs AD/Cycle'spowerful integrated development tools to generate the base of applicationsneeded to make SAA a reality.andM;However, the first round of AD/Cycle tools will generate only SAA '87-styleapplications--portable but stand-alone, not distributed.andP;  The tool buildersadmit that making AD/Cycle produce target applications that willautomatically exploit cooperative processing is still at the outer limits oftheir art.andP;  This can be verified by noticing that the cooperative-processingcomponents of their own tools had to be hand built.andP;  Look for AD/Cycle to seta direction toward building SAA target applications, but don't look forworking products in the near future.andM;6.andP;  SAA conformance has to be cleared up.andP;  As SAA switches from four easilyidentifiable hardware platforms to an almost limitless variety of networkconfigurations, the problems of SAA conformance only get thornier.andP;  IBM hastoyed with and rejected the idea of SAA Inquisitors, who would examineapplications and award official Seals of Conformance.andP;  The potential legal,ethical, economic and logistical problems have effectivley sunk this plan.andO;Yet no one is comfortable with the current honor system approach, either.andO;Both vendors legitimately developing under SAA and users shopping for SAAproducts need a mechanism for identifying the real thing.andM;The only satisfactory solution is to make SAA conformance not just easier,but actually unavoidable.andP;  SAA has to be designed in such a way thatdevelopers who use SAA components and follow SAA interfaces cannot help butturn out fully compliant SAA applications.andP;  The rule, as they say, is in thetool; it's the architecture's job to enforce consistency at the source, notthe application's job to prove consistency way down at the end of the line.andM;Accordingly, IBM should put its energy into establishing firm guidelines forSAA components.andP;  These components, not applications, are what whould bemonitored.andP;  Once they are consistent and clear--this includes fixing upresidual mismatches between Presentation Manager and Cua, for example--theSAA market will open up.andP;  Third-party vendors will be able to participate inSAA.andP;  Customers will be free to choose a mature middle path, combining someSAA interfaces with some non-SAA interfaces as needs and budget dictate.andM;7.andP;  SAA should embrace object orientation.andP;  SAA would be significantlystrengthened by an explicit acknowledgment of object orientation.andP;  Simplysuggesting than an object-oriented programming language might be a usefuladdition is not enough, although this would be desirable.andP;  IBM needs toaggressively adopt object orientationhs underlying notion that data andprocess should be inseparable.andM;Here again we have the testimony of the dozen OfficeVision development teams.andO;Of all the similarities they later discovered in the approaches they hadtaken, the most remarkable was that every team had used some form ofobject-oriented design or programming to build the two most demandingcomponents of their applications: the graphical user interface and thecooperative-processing pieces.andM;Object orientation says taht data should always be sorrounded by a protectivelayer of code that mediates all access to that data.andP;  SAA architects shouldbuild this notion into the architecture--into the languages, the services,the computer-aided software engineering tools, even the SAA blueprint itself.andO;SAA environments should implement objects--data surrounded by code--on boththe WAN and LAN sides.andM;The Road From HereandM;There is nothing to stop SAA from evolving into a full cooperative-processingarchitecture, as IBM will most likely prove over the next year or so.andP;  As SAAgradually moves from the fiction of four distinct platforms all doing exactlythe same jobs and concentrates instead on spreading complementary tasks amongnetworks of machines, development will become easier and costs will decline.andM;If SAA can at the same time forge a productive partnership with AD/Cycle,clear up conformance problems at the source and take advantage of the greatparadigm shift represented by object orientation, its chances of reshapingcomputing in the 1990s look very good indeed.andM;John Tibbetts is president of Kinexis, a San Francisco consulting firm thatspecializes in cooperative processing.andP;  Barbara Bernstein is a principal inKinexis and managing editor of &quot;SAA Update,&quot; a newsletter published bySystems Educational Associates of irving, Texas.andO;</TEXT></DOC>
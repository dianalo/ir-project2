<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-906-642  </DOCNO><DOCID>07 906 642.andO;</DOCID><JOURNAL>The Journal of Systems and Software  Sept 1989 v10 n2 p139(12).andM;</JOURNAL><TITLE>Rigorous definition and analysis of program complexity measures:an example using nesting. (technical)</TITLE><AUTHOR>Howatt, James W.; Baker, Albert L.andM;</AUTHOR><TEXT><ABSTRACT>Two deficiencies persist in program complexity measures research:a lack of formalism in defining complexity measures and a lack ofanalytical tools for evaluating these measures.andP;  The lack offormalism significantly hinders independent empirical evaluationsof proposed measures.andP;  The lack of analytical tools and techniquesfor evaluating measures makes comparisons between independentresearch efforts difficult.andP;  As an example of one attempt to avoidthese deficiencies, we formally define &quot;nesting&quot; for arbitrary(not necessarily well-structured) programs and use this definitionto redefine four existing measures of nesting that have appearedin the literature.andP;  We then define one simple tool that can beused to evaluate nesting measures.andP;  Application of this tool tothe redefined measures reveals in one case that the proposedmeasure does not adequately quantify the nesting represented bythe simple tool.andP;  In the other three cases the measures aredemonstrably similar.andP;  Analogous analytical evaluations ofproposed measures prior to the requisite empirical studies areencouraged.andP;  (Reprinted by permission of the publisher.)andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     NestingMeasurementProgram TestingTheoretical ResearchProgram Development TechniquesComputational ComplexitySoftware DesignSoftware MetricsMathematical Models.andO;Feature:   illustrationprogramchart.andO;Caption:   Simple code segment. (program)Possible flowgraph. (chart)Defined flowgraph. (chart)andM;</DESCRIPT></DOC>
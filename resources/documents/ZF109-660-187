<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-660-187  </DOCNO><DOCID>09 660 187.andM;</DOCID><JOURNAL>PC Week  Dec 3 1990 v7 n48 p56(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>Unix success requires a single format for delivering softwareapplications. (The Interop Report)</TITLE><AUTHOR>Van Name, Mark L.; Catchings, Bill.andM;</AUTHOR><SUMMARY>The Open Software Foundation's Architecture-Neutral DistributionFormat (ANDF) standardization project is a potential answer to theproblem of developing a mass market for Unix software.andP;  Eachversion of Unix running on a particular processor architecturecurrently has its own standard for executable binary files; nosingle Unix program will run on all of the Unix systems available.andO;Should the Open Software Foundation emerge victorious from thecurrent Unix wars, the ANDF would provide a single format that allsoftware developers could use to compile their programs.andO;Customers purchasing a software package would use a programtranslator to turn the program into executable code for thespecific processor type in use.andM;</SUMMARY><DESCRIPT>Topic:     StandardizationUNIXOpen Software FoundationSoftware PublishersCompatible SoftwareMarketing StrategyProgram Development TechniquesSoftware Retailing.andM;</DESCRIPT><TEXT>Separating the truly important Unix developments from those that will fadequickly is a lot like picking diamonds from a mountain of glass shards: It'spossible, but you have to look closely and carefully.andM;One potential Unix diamond in the rough is an Open Software Foundation (OSF)project seeking to define what it calls an Architecture-Neutral DistributionFormat, or ANDF.andP;  Despite its unwieldy name, the goal of this format issimple: to create a single Unix software market, in which an applicationdeveloped for one Unix hardware platform will run on any other Unix system,without major modification.andM;No matter what Unix devotees might tell you, no such single market existstoday.andP;  That's not to say that there's no market for Unix softwareuite thecontrary.andP;  The problem is that there are too many: one Unix designed for Sunsystems, one for VAXes running Ultrix, one for Xenix computers, one for thosebased on Motorola's 88000 chip, another for the IBM RS family, and so on.andM;Each combination of a version of Unix and a particular processor architecturehas its own standard for binary, executable files.andP;  The result is that nosingle program file will run on everyr even mostnix systems.andM;A traditional answer to this problem from the Unix community has been to shipthe source code of any program a user wants to run on a new system.andP;  Then allthe recipients have to do is compile and link the program, maybe tweaking ita little on the way to make it run on their particular systems.andM;That approach may be fine for universities willing to share their programs,but it won't fly for commercial software developers.andP;  Let's get serious: Canyou imagine Microsoft or Lotus shipping the source code for Excel or 1-2-3 toeach Unix customer?andP;  Not a chance.andM;The first step in creating a single Unix software market is to get a standardUnix version, or at least a minimum set of standard Unix operating systemcalls.andP;  Such a standard would let developers know on which parts of Unixtheir applications could safely depend.andM;Two Unix standards groups, OSF and Unix International, are fighting to claimfor their development efforts the title of industry-standard Unix.andP;  A clearwinner, however, is still a long way off, and even when we get such astandard, we won't have a single Unix market.andP;  We will still have to contendwith the many different executable formats required by the many processorsthat run the Unix system software.andM;We'll still have the problem of multiple underlying hardware architectures.andM;That's where the ANDF project comes into play.andP;  Its goal is to define asingle format into which all Unix software developers could compile theirapplications.andP;  This format would be an intermediate form of theapplicationeither source code nor object code ready to run on any particularprocessor.andP;  In fact, it wouldn't be code that could run on any processor.andM;It would, however, be a type of code that a translator program could turninto an executable form on any system.andP;  Installing a program in ANDF formwould be very similar to installing a large DOS application, except for alonger waiting period while the installation procedure automatically ran thetranslator to turn the ANDF files into executable programs.andM;Naturally, the OSF is pushing its own cause with this project, so theoperating system calls the programs could assume would be OSF calls, and thetranslator program would be available as part of OSF's Unix.andP;  Still, it's astart, and if OSF doesn't win the Unix standards war, then whatever group orgroups do win should embark on a similar effort.andM;Without the ANDF or something like it, the wide array of different Unixmarkets will continue to pose a major problem for software developers.andP;  Afterall, these firms, like all other companies, have limited resources.andP;  Theyhave to decide which Unix hardware platforms to supportnd which to ignore.andM;As long as every platform requires some special development effort, thesefirms are likely to support only the biggest hardware vendors.andM;Newer systems, even those with great price/performance ratios, will have towait in line for the attention of software developers.andM;This is also one time when the interests of buyers and developers areperfectly aligned.andP;  If you, as a buyer, want the high performance and lowprice of the latest, greatest Unix server for your network, you've got todecide whether you can wait for popular applications to reach that system.andM;Developers, meanwhile, cannot afford to offer their products for many of themachines that compose the large and growing Unix market.andM;With a single form for delivering software, developers could tap into thatentire market.andP;  More importantly, you would not have to wait for new machinesto attract the attention of developers.andM;Instead, you could, for the first time, buy a Unix applicationot a Sunapplication or an Ultrix application, but a true Unix applicationnd then getdown to business.andP;  And getting down to business is, of course, the ultimatereason for all this computer power.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> DOE1-51-0853 </DOCNO><TEXT>The authors describe a simple Or-parallel execution algorithm for Prologthat naturally collects all solutions to a goal. Its constituent parallelprocesses are independent, and hence the algorithm is suitable for implementationon non-shared-memory parallel computers. The algorithm can be implementeddirectly in Flat Concurrent Prolog. The authors describe a simple interpreter-basedFCP implementation of the algorithm, analyze its performance under Logix,and include crude estimates of its parallel speedup. The implementationis easily extended. They show an extension that performs parallel demand-drivensearch. They define two parallel variants of cut, cut-clause and cut-goal,and describe their implementation. They discuss the execution of thealgorithm on a parallel computer, and describe implementations of itthat perform centralized and distributed dynamic load balancing. Sincethe FCP implementation of the algorithm relies on full test-unification,the algorithm does not seem to have a similarly natural implementationin GHC or PARLOG.</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-424-163  </DOCNO><DOCID>09 424 163.andM;</DOCID><JOURNAL>UNIX Review  Sept 1990 v8 n9 p81(6)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Off the shelf: how real is real-time Unix? A review of LynxOS.andO;(Software Review) (evaluation)</TITLE><AUTHOR>Bauer, Robert.andM;</AUTHOR><SUMMARY>Lynx Real-Time Systems Inc's LynxOS real-time implementation ofthe UNIX operating system conforms to the POSIX P1003.1 standardand the emerging P1003.4 real-time standard and is a solid productbacked by excellent technical support.andP;  LynxOS was developed forprocess-control applications where many devices are controlled orwith which communication is desired.andP;  It is somewhat difficult toinstall on machines using the early 80386 processor because of achip bug, but works well if this problem is corrected.andP;  LynxOS'front end is similar to generic UNIX and provides all the standardutilities and applications except 'uucp' and text processing.andO;Performance is very good.andP;  LynnxOS is an outstanding packagemarred only by the below-average documentation, which only themost experienced programmers and users will find useful.andP;  Pricesrange from $1,495 to $7,995.andM;</SUMMARY><DESCRIPT>Company:   Lynx Real-Time Systems Inc. (products).andO;Product:   LynxOS 1.1 (Operating system).andO;Topic:     EvaluationUNIXReal-Time SystemsOperating Systems.andO;Feature:   illustrationtable.andO;Caption:   Report card. (table)Profile. (table)andM;</DESCRIPT><TEXT>The availability of full-function, real-time executives and full-featured,real-time UNIX systems has been steadily increasing over the past few years.andO;Although real-time executives and UNIX systems share the same requirement forbounded and deterministic response to external events, realtime executivesare more suitable for standalone, embedded systems.andP;  UNIX, on the other hand,with its wide-range of &quot;standard&quot; utilities and support for networkedenvironments, provides a common platform on which real-time applications canbe developed, tested, and run.andM;This review examines LynxOS version 1.0, a real-time UNIX operating systemthat conforms to the POSIX P1003.1 standard and the evolving P1003.4real-time standard (see pg.andP;  16).andP;  Before actually beginning the review ofLynxOS, a short digression explaining the differences between real-timeexecutives, UNIX, and real-time UNIX will provide the reader with a deeperunderstanding of their differences and the environments most suitable toeach.andM;UNIXandM;Although the UNIX operating system is not, in general, suitable for mostreal-time applications, many vendors have produced versions of UNIX withreal-time extensions (such as HP's HP-UX and Concurrent's RTU).andO;Unfortunately, these UNIX systems will not run &quot;shrink-wrapped&quot;,off-the-shelf UNIX software, and require that applications be ported to orcustom-developed for these systems.andM;Since UNIX's kernel is non-preemptible, all system calls run at the highestpriority; thus, system calls, even those from the lowest-priority process,will run to completion or until they block.andP;  With the system call running atthe highest priority, external events cannot cause UNIX to quit its currentactivity and respond to the event, and the consequence can be that the eventis missed or it is not serviced within a guaranteed period.andM;The UNIX method of waking processes is particularly troublesome to real-timeapplications.andP;  UNIX wakes up all processes waiting on a signal, resulting ina race to capture the signal.andP;  This means that there is only a statisticalguarantee that a process waiting on the signal will actually wakeup.andM;Finally, UNIX's fair-scheduling algorithm is based on the notion that noprocess should be allowed to utilize more of the system than any otherprocess.andP;  This stands in sharp contrast to the nature of real-timeapplications, in which a process may be dormant for an exceedingly longperiod of time and then require total utilization of the system and itsresources.andM;Real-Time ExecutivesandM;Real-time executives are usually sold in read-only form (on EPROMS), to beplugged into a system.andP;  The user provides system information through a smallset of interface (BIOS) routines.andP;  In essence, a real-time executive providesa scheduler, process manager, memory manager, a queue and semaphore manager,and one or more inter-task-communication schemes as subroutines and interruptservice routines.andM;Microprocessors are becoming more and more complicated.andP;  The learning curveis much steeper than it was in the days of the Z-80, 68000, and 8088/86.andO;Packaged kernels have a great deal of appeal when an application needs to bedeveloped and there is no time to become expert on the nuances associatedwith a particular processor.andM;For the vast majority of real-time projects, application coding isstraightforward and does not require great expertise in the instruction set.andO;Writing a decent kernel, however, requires great expertise in the instructionset as well as expert knowledge of operating-system design.andP;  Engineersinterested in solving specific problems may not be interested in or evencapable of building an effective base from which to work.andM;Real-time executives are especially suited to applications that revolvearound board-level integration.andP;  For highly customized boards or demandingapplications, however, they may force engineers to fit specific problems togeneric solutions.andM;Real-Time UNIXandM;Although UNIX is not well-suited to real-time applications, it is very wellsuited to software development.andP;  It has an (almost) consistent interface,hundreds of utilities, and a relatively large number of software tools thataid in the construction of complicated programs.andP;  Real-time UNIX promises tomake these available to developers of real-time applications.andP;  It strives toprovide all the benefits and compatibilities of UNIX, while meeting the needfor bounded and deterministic responses to external events.andM;In order to ensure that a system's response to external events is bothbounded and deterministic, the UNIX kernel must be rewritten so that it ispreemptible Although this sounds relatively simple to programmers who routinewrite re-entrant and preemptible handlers and dispatchers, UNIX's awkwardmethod of maintaining internal structures requires a complete rewrite ofalmost every system call.andM;While rewriting system calls is not particularly difficult, doing so in amanner that ensures full SVID compatibility requires a comprehensive testingenvironment and careful attention to detail.andP;  Additionally, it must beremembered that UNIX was designed from the ground up as a generic operatingsystem.andP;  Simplifications that are quite acceptable in general-purposecomputing environments become unacceptable defects in other environments.andM;LynxOSandM;LynxOS is a real-time implementation of a UNIXcompatible operating system.andO;Lynx Real-Time Systems Inc. (Campbell, CA) claims its system is SVIDcompatible and conforms to POSIX 1003.1 and the evolving 1003.4.andP;  AlthoughLynxOS has been ported to several hardware platforms, I received and reviewedonly the version ported to the IBM PS/2 Model 80.andP;  The distribution consistedof one installation disk and six disks containing the operating system andits various utilities.andP;  I also received a beta version of X 11 windows.andM;DocumentationandM;The operating-system documentation is provided in two binders, called theUser's Manual VoL 1 and the User's Manual VoL 2.andP;  Volume 1 is subtitled,Utilities, System Calls, Driver Service Calls, Library Functions, DeviceFacilities, and File Formats and Volume 2 is subtitled, Supplemental Guidesand Documents.andP;  Installation notes for LynxOS and the X 11 system areprovided as separate sets of staple-bound paper.andM;The manuals are organized in much the same fashion as those for earlyreleases of UNIX.andP;  Manual pages describe the commands and other chaptersdescribe the vi editor, the dish shell, and other features.andP;  Lynx'sdescription of device drivers (and how to link them dynamically during systemoperation) is particularly noteworthy.andP;  Most real-time programmers willrequire this information.andM;Although the manuals are complete, their terse style will be a stumblingblock for all but the most experienced UNIX programmer or user.andO;Unfortunately, experienced UNIX programmers are not particularly adept atreal-time programming and most experienced real-time programmers are not UNIXexperts.andP;  I think Lynx should try to make its manuals more accessible toprogrammers who have worked extensively in real-time environments.andM;On the other hand, Lynx may be counting on the fact that universities arecranking out computer-science majors who have extensive experience with UNIXprogramming.andP;  It so, the company may not need to change its manuals.andM;Although I was mostly impressed with the range of information that could befound in the manuals, I was dismayed by the lack of any real discussion orpresentation of the syntactical and lexical requirements of the assembler.andO;Passing reference is made to these requirements, but since no specifics aregiven it is impossible to determine-without studying the output of the Ccompiler-the actual requirements of the assembler.andP;  Finally, I feel that theinstallation notes are too general.andP;  For example, in a dozen or so pages, theinstallation notes cover several different systems with permutations on thehard-disk interface (SCSI, ESDI, and ST-506).andP;  Based upon my conversationswith Lynx, however, I understand that this problem will be fixed.andO;installation could not find a specific set of instructions to install Lynx onan IBM PS/2 Model 80.andP;  1 was able to determine, however, that of the three orfour systems specifically identified, only one seemed similar to the PS/2.andM;After getting the installation disk to boot, I encountered serious problems.andO;I called the support service at Lynx, which attributed the problem to thefact that the 386 processor on my motherboard of ancient vintage and had anasty problem in the TLB of its MMU.andP;  Apparently the early 386 processorshave a bug that shows up only in protected mode, causing the MMU to mapphysical and virtual addresses incorrectly.andP;  The result is that some mappingscause execution at incorrect locations, while other mappings cause executionat nonexistent locations.andP;  In general, the results of the incorrect mappingsare quite random.andM;Lynx informed me that although other UNIX vendors had been able to workaround this bug, it had not, nor did the company feel such a kludge wasnecessary, since a simple change in the processor chip could solve theproblem.andP;  IBM told me that it had issued instructions to its dealers toreplace any motherboard that contained the bad 386.andP;  I contacted my IBMdealer-who promptly refused to do any such thing.andP;  After a few weeks, undersevere pressure from IBM, my dealer replaced the motherboard.andM;Once the boards were replaced, installation went very smoothly: Lynx suppliesa simple shell script that reads in the disks and sets up the system forimmediate operation.andM;After testing most of the common utilities, I began to play with Lynx'sversion of the simple calculator that appeared in The UNIX ProgrammingEnvironment (Kernighan and Pike, Prentice-Hall, 1984).andP;  When I tried tocalculate the simple statement 2+ 2, 1 got a core dump.andP;  After contactingLynx, I found that I needed a 387 math co-processor if I wanted to doanything, especially execute any programs created with the C compiler.andM;Many real-time systems have no inherent need for a math coprocessor, so thisrequirement seems more than a little strange.andP;  After installing a 387co-processor, however, I had no difficulties running and testing all theutilities supplied with the system.andM;Because of the poor documentation, I was never able to get the X11 system upand running.andP;  My original intent was to evaluate LynxOS for its real-timecapabilities, however, so this was not a showstopper.andM;PROFILEandM;LYNXOSandM;Lynx Real-TimeandM;Systems inc.andM;16780 Lark Ave.andM;Los Gatos, CA 95030andM;Tel.andP;  408-354-7770andM;Version No.andP;  1.2andM;Price Range $1495 -  7995 Platforms 386 andamp; 486 PCs; Motorola 68030- andamp;88K-based machines; Mips R3000- andamp; R6000-based machines.andP;  Reviewer's CommentsI found LynxOS to be a solid product backed by outstanding technical support;for process-control applications in which many devices are to be controlledor with which communication is required, LynxOS is an outstanding product.andO;Circle No.andP;  302 on inquiry CardandM;SupportandM;Lynx provides very good technical support, with minimal hassle.andP;  It does notrequire customer-service ID or disk-serial numbers in order to gain access toknowledgeable technical representatives.andP;  Based on the problems I had gettingthe system up and running during the installation operation, I can onlyreport that Lynx provided me with excellent help.andM;Lynx's basic policy is to unlimited technical support during the first threemonths after purchase, presumably to help with installation and initialoperations.andP;  My discussions with Lynx's customer-support personnel indicatethat they answer questions for the entire life of the product, since manycustomers will not purchase software upgrades on a continuing basis.andM;Automatic upgrades cost only $250 per year after initial purchase of thesoftware.andP;  This is extremely reasonable and well within the range of even thesmallest independent developer.andP;  Lynx's initial purchase price of $1495 isalso very reasonable.andM;Since Lynx also provides special and standard hardware-platformconfigurations, it will arrange for third-party hardware support.andP;  This makeslife a bit simpler since the hardware and software are supported by the sameorganization.andP;  In addition, Lynx is able to exert considerably more influenceon the hardware support organization than can any one small customer.andM;OperationandM;LynxOS has the look and feel of generic UNIX.andP;  For example, connected theterminal of one of our clerical staff members to Lynx and copied his entireenvironment to Lynx.andP;  He was literally unable to notice the differencebetween Lynx and our generic UNIX system.andM;Although that particular test does not have anything do with real-timesystems, it does show that Lynx did a very good job of making its front endconform to UNIX.andP;  Since Lynx is a cross between BSD and ATandamp;T UNIX, thelearning curve is very short and a programmer can start developingapplications almost immediately.andP;  From a real-time programmer's point ofview, much of the application program can be written and tested using Lynx'scounting semaphores, shared memory, interprocess facilities, and memory locksbefore the device drivers are written and linked into the system.andM;The first difference an experienced UNIX programmer will notice between Lynxand UNIX is how the system is shut down.andP;  Generic UNIX flushes all caches andbuffers, verifies all inodes, and does a number of other things when it shutsdown.andP;  Since Lynx is a real-time system, the method by which it maintains thecaches and inodes is not the same as generic UNIX; therefore, Lynx can beshut down by simply turning off the computer.andP;  I tried this several times andwas not able to damage the filesystem.andM;Lynx provides all the standard UNIX utilities and applications with twoexceptions-text processing and uucp.andP;  The former means that programmers haveto use another system to format their documentation and the latter means thatthe only external communication is done through TCP/IP (which, unlike onother UNIX systems, is standard on Lynx).andP;  Since Lynx comes with kermitinstalled, I suppose one could call out and transfer files.andP;  This can getpretty tiresome, though, since the user must manually coordinate all of thetransfer activities,andM;If you don't have TCP/IP and are not able to use kermit to transfer files,you will have to rely on Lynx's System V-compatible tar system.andP;  Lynx uses anentirely different file structure from UNIX, and its tar format is also quitedifferent.andM;To bridge the compatibility problem, Lynx supplies a System V-compatible tarthat converts from System V to Lynx (or vice versa).andP;  The output must then bepiped through Lynx's own tar system.andP;  While this is relatively simple andwell-documented in the manual, it can cause confusion if one isn't aware ofit.andM;PerformanceandM;As a real-time programmer, I wanted to find out if Lynx's claims of boundedresponses were true.andP;  So I wrote my own device driver for the serialinterface on the PS/2.andP;  On every input character, the device driver sent asignal to a waiting process.andP;  The idea was to determine the interrupt andtask-dispatch latencies.andM;On my 16 MHz machine, under all load conditions, the interrupt latency wassurprisingly less than 300 microseconds (typically it was around 240microseconds).andP;  This is much better than the more-than-1 millisecond (andtypically worse) response of our generic UNIX.andP;  For other kinds of externalevents, where a response can be sent to acknowledge the event without verymuch overhead, the interrupt latency can be reduced by at least a factor oftwo.andM;The task-dispatch latency was quite variable since it is a function of thepriority of the task at any given moment.andP;  If the task had the highestpriority, its latency was always less than 500 microseconds.andP;  These latenciesare sufficient for applications that are event-driven, and they could beimproved further through some tuning.andM;If high-speed data transfers are required, DMA techniques must be used.andO;Given that both the AT and Microchannel buses have unreasonable delays formost high-speed transfers, the hardware doing the transfer should generateits own DMA cycles and addressing.andM;After verifying that the basic system latencies were well within thespecifications provided by Lynx, I performed additional testing to determinehow quickly the system's response deteriorated at the console.andP;  I used theWhetstone and Dhrystone benchmarks that are supplied with the system andwrote scripts that invoked them as background tasks.andP;  Surprisingly, thesystem's response deteriorated quite rapidly.andP;  Further investigation showedthat although the foreground task running at the console was very sluggish, aterminal connected to the PS/2's serial port seemed to respond quickly.andM;My first inclination was to believe that the background tasks were beingscheduled as functions of the foreground task or that the console driver wasbeing overloaded.andP;  Consultations with Lynx regarding this anomaly verifiedthat the latter was the case.andP;  The console is memory-mapped, so every writeto the screen is handled by a task that must be dispatched.andM;If the background processes write to the screen simultaneously or nearly so,the counting semaphores that queue the writes start adding overhead to theconsole operation.andP;  once several such tasks start running, the overheadassociated with maintaining an ordered queue, coupled with the memory-moveoperations required to manipulate a memory-mapped screen, cause the console'sresponse to slow down.andM;The serial drivers have no such memory-move overhead, so they can completetheir actions much more quickly.andP;  This tends to reduce the statisticalcompounding that is evident in a dynamically coupled queueing system.andM;Lynx could overcome this problem by using virtual terminals (withoutrequiring implementation of its Xl 1 windows system) because most people whostart multiple tasks reporting to a single terminal will do so from theconsole.andP;  By flipping to a virtual terminal and then flipping back to theconsole, programmers will be able to systematically monitor the system andmodify priorities.andP;  This will improve performance dramatically withoutaffecting the messages sent to the screen; additionally, I find that virtualterminals are a safe way to exit from hung processes.andM;Price/PerformanceandM;The full LynxOS development system which includes the kernel, shell,utilities, and program-development package is quite reasonable at $1495.andO;This price compares quite favorably with those of the real-time executivesthat do not offer the high-level functionality of a UNIX system.andM;Runtime versions that include the kernel, shell, and utilities are availablefor $1295.andP;  Kernel-only version are available at $995.andP;  For embeddedapplications, a ROM-kit version is available for $2295 that includes alicense for two target systems.andP;  The X Windows-development package costs $795and its runtime version is $495.andP;  Lastly, the TCP/IP package that includesEthernet drivers and SLIP costs $495.andM;I think that LynxOS, coupled with intelligent sensors, is quite suitable forlarge-scale, real-time applications.andP;  The alternative-embedded systems thatreceive their &quot;programs&quot; from the host environment-is both more expensive andmore complicated.andM;Lynx provides frequent updates, has an excellent technical staff, and isdeveloping better scheduling algorithms in its research group.andP;  I believethat its operating system will only get better.andM;I found LynxOS to be a solid product backed by outstanding technical support.andO;Although I don't like the manuals very much (they assume that whomever usesthe system is an expert at UNIX, and most real-time programmers are not) , Ifound them relatively complete and for the most part easy to follow.andO;Unfortunately, there are many commands not covered in the documentation (or,at least, in the manuals that are supplied with the system), but thesecommands are rarely used and I am sure that Lynx would explain them to anyonewho was interested.andM;For process-control applications in which many devices are to be controlledor with which communication is required, LynxOS is an outstanding product.andO;For low-level control and measurement functions other than data I feel thatLynx is too large a system.andP;  A small real-time kernel that can communicatewith the Lynx system is a much more cost-effective solution and one thatminimizes the effort required to verify proper operation under the worstpossible conditions.andM;Lynx provides full UNIX compatibility with important and necessary real-timeextensions, such as the ability to change the priority of any task, theimplementation of counting semaphores, time-out functions, and a fairlydecent disassembler.andP;  In addition, for data collection and disseminationapplications, LynxOS provides a mechanism to create contiguous files.andM;Lynx was originally designed to give real-time capabilities to systems basedon the 68000 processor family, and its origins are evident on the 80386.andP;  Thesystem disregards the difficult segmentation problem by using flat addressingand a C compiler that was originally designed for use on the 68000 processorwith appropriate modifications for the 80386.andP;  As a consequence, there is nosupport provided to develop assembly-language routines that can be linkedwith the object code created by the C compiler.andP;  Since assembly-languageprogramming is a dying art, this is not a huge problem and can probably beovercome through consultation with Lynx technical support.andM;If Lynx is intended to be used in critical applications, much of the errorrecovery code must be maintained so that it can be immediately executed.andO;While the traditional approach is to use locked memory in these applications(so critical code does not have to be swapped in), there is no simple methodto ensure that the code is valid.andP;  For example, the memory may fail or bechanged through random actions of cosmic rays.andM;For a multiuser, multitasking, UNIX-compatible operating system, LynxOS is asystem with surprisingly good response, as evidenced by its low interrupt andtask-dispatch latencies.andP;  Since Lynx comes bundled with TCP/IP and supportsother network interfaces  X.25, MAP, and Ethernet) , it serves a wideaudience through its 4.2BSD, SVID, and POSIX compatibility.andP;  For real-timeapplications revolving around a distributed, hierarchial layering ofintelligent instrumentation, LynxOS seems to provide a solid foundation andone that I would heartily recommend.andM;Robert Bauer, this month's reviewer, has more than 14 years of experiencedesigning hardware and software for real-time applications.andP;  He has degreesin both electronic engineering and industrial engineering.andP;  He is presentlyemployed as the assistant chief engineer at Quantum Dynamics Co. inc., inWoodland Hills, California.andP;  Bauer designs hardware and software systems forreal-time, embedded applications for advanced instrumentation systems andcomputational fluid metrology applications.andP;  He can be reached via e-mailthrough Uunet as svx86!root@flkvax.xed.com or by voice at 818-719-0142.andM;Richard Morin, column editor, operates Canta Forda Computer Laboratory, aconsulting firm in San Bruno, CA, specializing in the application of UNIX toengineering and science.andP;  A former director of the Independent ComputerConsultants Association, Morin is currently on the board of the SunMicrosystems User Group.andP;  His e-mail address is {hoptoad,pacbell}!cfcl!rdm.andM;Editor's note: LynxOS version 1.andP;  0 is examined in this review and was thecurrent version available when the review was conducted.andP;  Lynx RealTimeSystems is currently shipping version 1.2 of LynxOS, which it claims has thefollowing features: binary and source compatibility with System V;demand-paged virtual memory,- X Windows support,- Motif support; NFS;compatibility with System V IPC facilities,- and ROM capability forenvironments where a disk or network is unavailable.andO;</TEXT></DOC>
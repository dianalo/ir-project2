<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF107-974-086  </DOCNO><DOCID>07 974 086.andM;</DOCID><JOURNAL>Computer Language  Dec 1989 v6 n12 p109(5)* Full Text COPYRIGHT Miller Freeman Publications 1989.andM;</JOURNAL><TITLE>Chatting about Smalltalk. (Objectively Speaking)</TITLE><AUTHOR>Ladd, Scott Robert.andM;</AUTHOR><SUMMARY>Learning object-oriented programming with a hybrid language suchas C++ can be confusing.andP;  Although the familiarity of the languagecan be comforting it does not give the user a real feel forobject-oriented programming.andP;  Hybrid languages also lacksignificant libraries of classes.andP;  Smalltalk is a pureobject-oriented language that is fun to use.andP;  Its interactivenature makes it an excellent learning tool, and built-in classescan be used as examples and building blocks with which to createother classes.andP;  Guidelines for mastering Smalltalk are discussed.andM;</SUMMARY><DESCRIPT>Topic:     Programming LanguagesObject-Oriented LanguagesLearning CurveProgramming Instruction.andM;</DESCRIPT><TEXT>Chatting about Smalltalk When I first encountered Smalltalk several yearsago, I was told it was a simulation language.andP;  Little mention was made of thenow-popular term &quot;object-oriented.&quot;andP;  Today, of course, Smalltalk is known asthe predominant &quot;pure&quot; object-oriented language.andP;  Times change, labelschange.andM;The earlier characterization of Smalltalk as a language for programmingsimulations was actually accurate.andP;  A simulation is a model of the realworld.andP;  By definition, object-oriented programming tries to model the realworld by allowing us to interrelate the objects in our program.andP;  For allintents and purposes, this is a marriage made in heaven--object-orientedprogramming is simulation programming.andM;It's been said that we all learn best what we enjoy doing most.andP;  Programmingis no different; if a programming language is boring or frustrating,programmers tend to dislike it.andP;  In Smalltalk's case, most programmers I knowwho have tried it have liked it because of its interactive nature.andP;  With theentire source for the Smalltalk environment class library at your fingertips,several hours can be spent simply playing with Smalltalk.andP;  It's very easy toexperiment when you receive instant results.andP;  In a way, Smalltalk reminds meof the old BASIC interpreters where you simply entered a statement and it wasexecuted.andM;When programmers begin to learn object-oriented programming, they must firstpick a language to learn with.andP;  An obvious choice for many establishedprogrammers is a hybrid language, such as C++ or Object Pascal, which addsobject-oriented facilities to an existing language.andP;  A programmer can thenbegin with a sense of familiarity, moving into object-oriented programminggradually because old language skills can be used while learning new ones.andM;Is that the best approach?andP;  While I once thought so, I have since changed mymind.andP;  Hybrid languages suffer from several faults.andP;  To begin with, theydon't feel completely object-oriented.andP;  Built-in types from the base language(int and CHAR, for example) are not implemented in an object-oriented manner;this often causes frustration when you try to build generic object containersand structures.andP;  In addition, none of the hybrid languages provides asignificant, well-documented library of classes the programmer can study.andM;I've come to the conclusion that Smalltalk is the best language to use whenlearning object-oriented programming.andP;  Its interactive, graphic environmentis an excellent tool for learning easily and enjoyably.andP;  In addition,Smalltalk is entirely object-oriented.andP;  Every single type in Smalltalk, fromnumbers to containers, is an object.andP;  This &quot;pure&quot; approach helps theprogrammer better understand how complex systems can be built from objects.andM;The built-in classes included as part of Smalltalk provide both buildingblocks and examples.andP;  Building blocks are classes that can be used to createother classes.andP;  These classes also provide examples of proper object-orienteddesign, something languages like C++ and Object Pascal lack.andM;The lowest level and most fundamental class in Smalltalk is the Object class.andO;That almost seems too obvious.andP;  Every class in Smalltalk is built upon theObject class, allowing all objects to be treated in a generic manner.andP;  TheObject class defines comparison, assignment, and simple manipulation methodsthat are inherited by all other classes.andP;  Changing this class can beeducational and exciting since changes to Object cause changes to every otherclass within Smalltalk.andM;Other built-in classes provide excellent examples of class hierarchies.andP;  Afundamental abstract class is Magnitude, which defines the basiccharacteristics of measurable quantities.andP;  Derived from it is the Numberclass, from which the classes Float, Fraction, and Integer are derived.andO;Integer has child classes that define specific ranges and types of integers.andO;All in all, this is an excellent example of how a hierarchy of classes can beinterrelated.andM;It is difficult to change one's assumptions, and that is exactly what must bedone to truly understand object-oriented programming.andP;  Smalltalk helps us inthis transition by showing us interrelationships we might not seeintuitively.andP;  For instance, in addition to Number, the classes Date and Timeare also derived from Magnitude.andP;  At first it might seem strange to have aDate class as a sibling to a Number class, until we realize that dates aretreated in a similar manner to other quantities.andP;  Dates and Times can beadded, subtracted, multiplied, and otherwise manipulated as if they werequantities.andM;One of the most extensive class hierarchies defined in Smalltalk is its setof container classes.andP;  As discussed last month (&quot;The art of abstraction,&quot;Objectively Speaking, COMPUTER LANGUAGE Oct. 1989, pp.andP;  137-140), containerclasses are fundamental program building blocks.andP;  Containers hold objectsjust as real-world items like sacks and boxes hold objects.andM;Typical containers include linked lists and binary trees.andP;  Some containersorganize their data by key values; others don't.andM;Actually, Smalltalk calls its container classes &quot;collections.&quot;andP;  The abstractclass Collection is the basis of all collection classes.andP;  Beneath it is aclass hierarchy that looks like this:andM;Collection Bag IndexedCollection FixedSizeCollection Array ByteArray IntervalString Symbol OrderedCollection SortedCollection Set DictionaryIdentityDictionaryandM;This hierarchy list was taken directly from the Smalltalk/V manual; it can bea bit daunting.andP;  What are all these collections for?andP;  Each collection classhas unique characteristics.andP;  They differ in how they order the objects storedin them, their ability to accept duplicate objects, and whether or not theyallow objects to be retrieved by key.andP;  In addition, some collections arefixed in size, while others can change their dimensions.andP;  Some of theseclasses are actually quite sophisticated.andM;It might seen strange to find a class with a name like Bag.andP;  A Bag is anunordered collection of any number of objects (including duplicates), whichare not keyed.andP;  Bag is actually an appropriate name; it simulates real-worlditems like grocery bags or sacks.andP;  You place a number of items into a sackwithout any organization.andM;Items may or may not be removed from the sack in the same order as they wereput in.andP;  We're back to the original premise: object-oriented languages arewell-suited to simulating the real world.andM;The series of classes that are children of Indexed Collection is large.andP;  Theclasses derived from FixedSize-Collection are all quite similar and differprimarily in their flexibility as to the classes of objects they can store.andO;An Array is a traditional data structure in most languages, allowing us tocreate an ordered list of items accessed by an integral key that representsan object's ordinal position within the list.andP;  ByteArray is similar to Array,but it only accepts SmallIntegers as its members.andP;  An Interval contains amathematical progression or series.andP;  The String class, naturally, defines alist of characters.andM;OrderedCollections use the storage order of their items to determineretrieval order.andP;  You can either store items so the last one stored is thefirst retrieved or so the first item stored is the first retrieved.andP;  Rememberthe stack and queue classes for C++ I presented here last month?andP;  Smalltalkalready has them built-in, ready for use, which can be an enormous timesaver.andM;Sets are indexed collections of unique objects.andP;  Hashing efficientlyorganizes the data in a Set by a key value contained within the objectitself.andP;  Specific classes derived from Set include Dictionary andIdentity-Dictionary, where individual objects can be retrieved based onspecific external keys.andP;  I've built a simple spelling checker in less than ahalf-hour by using Dictionary.andP;  Try doing that in C++ or Turbo Pascal!andM;Smalltalk includes dozens of other predefined classes.andP;  They do everythingfrom filing and screening I/O to interfacing with MS-DOS.andP;  An extensiveseries of classes makes programming graphic displays almost too simple; thisis a consequence of Smalltalk's graphic user interface.andP;  In fact, most ofSmalltalk's library owes its existence to the fact that Smalltalk and itsenvironment are written in Smalltalk.andM;Smalltalk is available on a wide variety of platforms.andP;  Digitalk's Smalltalkis now available for standard MS-DOS PCs, 286/386 MS-DOS machines (where itutilizes extended memory), the Macintosh, and now Presentation Manager.andP;  At$99 for the basic MS-DOS package, Smalltalk/V may be one of the mostremarkable bargains in computing today.andP;  For a small investment you can enterthe world of object-oriented programming with the language that bestimplements the paradigm.andM;The other vendor of Smalltalk for personal computers is Parc-Place Systems.andO;This company is an offshoot of Xerox that originally developed Smalltalk (andthe mouse, and graphic interfaces, and...).andP;  ParcPlace's Smalltalk-80 productrecently underwent a significant upgrade, becoming part of a comprehensive,object-oriented development environment named ObjectWorks.andP;  ObjectWorksrequires a Macintosh II, UNIX workstation, or 386-based MS-DOS computer.andP;  Idon't see this as a fault but as a consequence of the power of theObjectWorks environment.andP;  My copy arrived just as this column was beingfinished, and I'll be talking about it in future columns.andM;Where do we go from here?andP;  This column has yet to plumb the depths ofSmalltalk.andP;  Next month, I'll present some useful Smalltalk programs andintroduce you to the wonderful world of ObjectWorks.andP;  Don't feel left out ifyou're a C++ programmer; ParcPlace is preparing a version of Object Works forC++.andP;  Object Works may foreshadow the future of programming environments.andM;A Pascal recap: back in September, I did a comparison of the two newobject-oriented Pascal compiles from Microsoft and Borland (&quot;A tale of twoPascals,&quot; Objectively Speaking, COMPUTER LANGUAGE, Sept. 1989, pp.andP;  131-137).andO;I've received a remarkable amount of feedback, both good and bad, from anumber of sources.andP;  This is interesting, to say the least--obviously Pascalprogrammers take their language very seriously.andM;One problem is that people do not truly understand what polymorphism is.andO;When a set of sibling classes is defined, they can have differentinterpretations of the same message.andP;  So we create a polymorphic message thathas an identical interface for the related classes, but differentimplementations.andP;  All these classes are descendants of a base class that alsodefines the polymorphic message.andP;  Now, a pointer to an object of the baseclass can actually contain a pointer to any of its derived classes that alsodefine the polymorphic message.andP;  When that message is sent to the objectthrough a pointer, the object &quot;knows&quot; which version of the polymorphic methodto call.andM;The September issue also contained my article &quot;Beach Blanket Polymorphism,&quot;(COMPUTER LANGUAGE, Sept. 1989, pp.andP;  35-45).andP;  In it, I defined a base classcalled Swimsuit, which had several derived classes for different shapes ofswimsuits.andP;  The message Draw was defined for each of these classes as apolymorphic method.andM;The Draw method defined for each class was designed to draw that specifictype of swimsuit, such as a bikini or a pair of men's shorts.andP;  An array ofpointers to Swimsuits was created, and pointers to objects of differentderived classes were assigned to its elements.andP;  When the array was processed,each Swimsuit was sent a Draw message; that message &quot;knew&quot; what the actualderived class of each Swimsuit was and called the appropriate methodfunction.andM;That method is not the same thing as overriding, where a method in a baseclass can be replaced by a different method of the same name in a derivedclass.andP;  Overridden messages can't be treated in a generic, polymorphicmanner, as I've done with the Draw message.andP;  Some people confusedpolymorphism with overriding, an understandable mistake.andP;  When I made thestatement in the comparison that Turbo Pascal required the VIRTUAL keywordfor a method to be polymorphic, I was correct.andM;Another minor problem with the comparison came when I discussed when andwhere Turbo Pascal requires destructors.andP;  My wording was a bit strange; inthe review, I said a destructor must be named as part of a call to Disposewhen deallocating a static object.andP;  Say what?andP;  Since when do wo have todeallocate static objects&quot;  Needless to say, i gooed; the word &quot;static&quot;should have been &quot;dynamic.&quot;andP;  Someday I really need to write a word processorthat enters what I want, not what I type.andM;Scott Ladd is a computer programming addict with 15 years of experience usinga wide variety of programming languages.andP;  You can contact him via MCI Mail,or at 705 West Virginia, Gunnison, Colo.andP;  81230, or by writing to COMPUTERLANGUAGE, 500 Howard St., San Francisco, Calif.andP;  94105.andP;  Ladd maintains apublic BBS system dedicated to programming and science at (30) 641-5125(300/1200/2400, eight bits, no parity, one stop bit).andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-761-846  </DOCNO><DOCID>08 761 846.andM;</DOCID><JOURNAL>Computer Language  August 1990 v7 n8 p81(10)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Get a GUI on it! (a review of several libraries intended to addgraphical user interfaces to applications software) (ProductWrap-Up) (buyers guide)</TITLE><AUTHOR>Davidson, Mark.andM;</AUTHOR><SUMMARY>Six libraries intended to let programmers add graphical userinterfaces (GUIs) to applications programs are examined.andP;  Thelibraries are not complete environments such as Windows but ratherare tools for adding a flexible GUI to programs.andP;  Programmers willrequire pull-down menu support, dialog boxes, control of diverseinput devices and a graphical display.andP;  The MetaWindows toolkitfrom Metagraphics and the Graphical Development Toolkit (GDT) fromGraphical Software Systems (GSS) support graphics power on anynumber of display cards using several input devices, but they donot directly support building an interface.andP;  Aspects to considerwhen selecting a GUI library include their memory requirements,price, the learning curve the packages require and the appearanceof the resulting interface.andP;  The toolkits examined are IthacaStreet Software Inc's Menuet version 1.7d, Oakland Group Inc'sC-scape version 3.1/Look andamp; Feel, Island Systems' Graphics-MENUversion 3.0, The WNDX Corp's WNDX version 1.1, TEGL Systems Corp'sTEGL version 5.5 and Courseware Applications Inc's Chatterboxversion 1.3B.andM;</SUMMARY><DESCRIPT>Topic:     Graphical User InterfaceSoftware DesignProgram Development ToolsSoftware SelectionComparisonWindowing.andO;Feature:   illustrationtable.andO;Caption:   Getting the goods on GUI. (table)andM;</DESCRIPT><TEXT>No acronym has caused more debate in the past few months than GUI - thedreaded graphical user interface.andP;  One side claims GUIs make a goodapplication easier to use.andP;  The other claims the overhead of a GUI turnsprograms into large, wasteful, CPU-intensive hogs.andP;  While some programs arebetter off as text-mode applications, GUIs have allowed inexperienced peopleto start using computers with little effort.andM;The Macintosh is a good example of both sides of this argument.andP;  While it mayreally be &quot;the computer for the rest of us,&quot; its graphical operating systemplaces an enormous load on its CPU.andM;The IBM PC is a different story.andP;  In the days of its birth, no one eventhought about GUIs - after all, PCDOS was enough.andP;  It wasn't exactlyintuitive or easy to use, but it was the starting point for the widespreadacceptance of the IBM PC as a serious personal computer.andM;Since then, DOS has grown and matured to become a completely differentproduct.andP;  Its support for thousands of applications, large hard disks,networks, different input devices has made DOS a powerful and flexibleoperating system,andM;Still, it firmly holds onto its roots, sporting an interface that hasn'tchanged much since the days of CP/M.andP;  No one really expected DOS to becomethe foundation for the many applications it supports.andP;  To make things worse,the popularity of the IBM PC has made it necessary for nonprogrammers tolearn DOS's many quirks.andM;While the Mac proved that a GUI makes a computer much easier to use, it alsoproved that a better solution would be to design the operating system tosupport a GUI.andP;  DOS, unfortunately, was never designed to support such acreation.andP;  It has taken Microsoft several years to come up with a version ofMicrosoft Windows (v.andP;  3.0) that can get around DOS's limitations and reallytake advantage of the hardware.andP;  Before, Windows was saddled on top of DOS,and its applications had to live with DOS's limited 640K address space.andO;While Windows certainly had some advantages over DOS in the user-interfacedepartment, many problems kept it from being widely accepted.andP;  The learningcurve and cost of training to become a Windows programmer is prodigious,although it seems like nothing compared to becoming a Presentation Managerdeveloper.andM;Developers who want to make their products easier to use see a GUI as centralto their strategy.andP;  They don't want to convert their applications to OS/2.andO;They have a DOS product, Does this mean they develop for Windows?andM;Not necessarily.andP;  This review looks at several libraries whose job is to adda GUI to your application.andP;  They aren't complete environments like Windowsbut are tools to help you add a flexible GUI to your programs.andP;  You needpull-down menu support, dialog boxes, control of various input devices, andso forth.andP;  You also need a graphical display.andP;  While many products will giveyou these things in text mode, most have no support for graphics.andM;Many products are available for drawing graphics, but not all are suited forproviding a GUI.andP;  In almost every case, this is not a flaw in the product.andO;On the contrary, it may not have been designed to provide a GUI.andP;  A productmay have all the graphics support in the world but no routines for drawing apull-down menu or dialog box.andP;  You could write the routines to do this if youhad the time, but the products in this review are supposed to perform thisfeat for you.andM;Metagraphics' Meta Windows and Graphical Software Systems' GSS-GDT (GraphicalDevelopmentandM;Toolkit) offer unprecedented support for graphics power on any number ofdisplay cards using several input devices.andP;  However, they have no directsupport for building an interface.andP;  Certainly, you could use them as a basefor a GUI package (and many of the products reviewed here do so), but thepoint is that the reviewed products do provide this support.andM;Almost all of the reviewed products require other software.andP;  Most requireMetaWindows or MetaWindows Plus.andP;  This requirement, of course, will be notedfor each product.andP;  However, other libraries will work with GSS's products orthe graphics libraries supplied with your compiler.andP;  Some support more thanone graphics library.andM;Several topics should be considered when looking at these packages.andP;  First istheir memory requirements, as many of these packages use other libraries todo the actual drawing.andP;  For example, MetaWindows requires approximately 90Kfor its runtime routines.andP;  Some of these libraries require as much as 100K ontop of that, which means you're looking at a possible 190K overhead just forthe interface support code.andM;Second, price is a consideration since you must factor in the cost of thelibrary as well as the supporting products it requires.andP;  In addition, if youpick a package that uses MetaWindows or GSS as a base, you may have to payroyalties on your products, as MetaWindow Plus and GSS both require a licenseto distribute their run times.andM;Third, consider how much of a learning curve you will face when using one ofthese products.andP;  Some of these libraries are quite complex, especially thosethat use a supporting library.andP;  More than one assumes you are familiar withMetaWindows or Borland's BGI.andM;Finally, consider what the resulting interface will look like.andP;  Obviously,you are going to have some control over the interface itself, but I amreferring to the overall look and feel.andP;  Some of these products support athree-dimensional look, very similar to Windows 3.0, Presentation Manager,and the OSF/ Motif front end for X Windows.andM;Furthermore, some products that support more than one graphics library as abase have different looks based on the underlying library driving it.andP;  As areviewer, I can describe the final interface to the utmost detail, but thisis not the same as seeing the interface yourself.andP;  I have created programsyou can download and try for yourself.andP;  They are available from COMPUTERLANGUAGE's bulletin board network and CompuServe Forum.andP;  This way you can seeeach interface in action on your own equipment.andM;A note about the underlying libraries: some of these products use the BorlandBGI or the Microsoft QuickC graphics libraries.andP;  Obviously, you don't have topay royalties if you use products that depend on these libraries.andP;  However,the GSS-GDT libraries do require royalty payments, as does the MetaWindowsPlus library.andP;  Standard MetaWindows does not, but you will have to distributethe MetaWindows run time (a terminate-and-stay-resident program) with yourapplication.andM;Ithica Streedt Softwore Inc. Menuet v. 1.7dandM;Menuet is a complete interface development package that providesapproximately 300 functions.andP;  Using MetaWindows or MetaWindows Plus as itsbase, Menuet can draw and manipulate almost any interface object you canthink of, including menus, submenus, dialog boxes, scrollable lists, radiobuttons, and check boxes.andP;  Currently, Menuet is only available for MicrosoftC, Turbo C, and Zortech.andP;  Large and huge memory models are the only supportedconfigurations.andM;Since Menuet runs on top of MetaWindows, it inherits all of MetaWindows'device independence.andP;  This means Menuet runs on any graphics adapterMetaWindows supports, with the exception of 320 X 200 four-color CGA.andO;Obviously, the better the graphics adapter, the better your program willlook.andM;On the other hand, Menuet also inherits MetaWindows' memory overhead.andP;  Thismeans the minimum overhead for a Menuet interface is approximately 200K (90Kfor MetaWindows, 100K for Menuet, and a small amount of memory for yourcompiler's run time).andM;Installing Menuet is as simple as copying the contents of the distributiondiskettes to a directory and decompressing the files using the supplied copyof PKUNZIP.EXE.andP;  Once this is done, you'll have over 200 files to organize.andO;Fortunately, the ZIP files are separated by category (font files in one,header files in another, and so on), so you can move the files to thesubdirectories of your choice.andP;  Menuet does not use the font files suppliedwith MetaWindows.andP;  It does, however, come with almost 100 different fonts ofits own.andM;Despite the number of functions available, learning the product and creatingan interface with it are surprisingly easy.andP;  Interfaces created with Menuetconsist of one or more forms.andP;  Forms are made up of objects, which can be anyof the items you would use in an interface, such as dialog boxes and menus.andO;To create an interface, simply define a form structure, then fill in the formwith pointers to other structures that define which objects you are going touse.andP;  Once this is done, one simple call causes your interface to be drawnand initialized.andM;Only one other call is required for your interface to be processed, whichpasses control to Menuet, but this call has several flavors, depending on howmuch control you want Menuet to have.andP;  If you use SelectOb() to process yourforms, Menuet will simply return an index that tells you which object on thescreen the user selected.andP;  If you want Menuet to have more control, you canuse ProcessObList(), which handles much of the highlighting.andP;  An object'sstructure lets you specify functions Menuet should call if your user selectsa specific part of the interface.andP;  For example, you can have Menuet call adata validation routine whenever a specific field is selected for data entry.andM;All objects in a Menuet interface have specific attributes associated withthem.andP;  Through these attributes, you can control color, text positioning andorientation, and much more.andP;  For example, windows can have a single- ordouble-line border or even a sculpted three-dimensional look.andP;  All of this iscontrolled through the use of attributes.andP;  Attributes don't have to behard-coded in your programs and are adjustable at run time.andP;  Thus, you couldhave data files on disk that control the look of your screens.andM;Since all of the objects in your interface are defined as structures, itshould be obvious that creating an interface involves quite a bit of typing,mostly because of the number of structures you must create.andP;  Ithaca StreetSoftware offers several tools to make this job easier.andM;The Interface Definition Tool lets you create your interface interactively.andO;Once you have it looking the way you want, IDT can generate C source code youcan include directly in your program or create a data file that you can readat run time.andM;The Icon Editor lets you create your own icons or modify the ones suppliedwith Menuet.andM;The Menuet Font Editor performs the same functions as IE, but is used tomanipulate the 100 font files supplied with Menuet.andP;  Finally, Ithaca Streetsupplies Upshot, an on-line documentation tool.andP;  Upshot provides thedocumentation for the IDT, IE, and MFE programs.andM;Menuet comes with 500 pages of clear documentation that is indexed andcontains a nice tutorial.andP;  The sample programs discussed in the tutorial areprovided on disk.andP;  While Upshot is a usable program, it would be nice to seedocumentation for all of the other tools in printed form.andP;  You can print themout yourself from within Upshot if you desire.andP;  While Upshot can be run as aTSR, you cannot pop it up while running any of the tools it documents sincethey all run as graphics applications.andM;All in all, Menuet is a very nice package that creates some visually strikinginterfaces.andP;  It does have some flaws.andP;  The first problem with Menuet is itsmemory overhead.andP;  While Menuet does everything it can to keep its memoryusage down (including swapping screens to EMS or disk), 200K is a lot to giveup.andM;Second, while the three-dimensional look is very nice, not every aspect of athree-dimensional interface is present.andP;  If you click on a three-dimensionalbutton, it does not depress but just changes color.andM;Third, some of the tools supplied with Menuet are still in a state oftransition and can be somewhat awkward to use.andP;  For example, the IDT did nothave an option to clone an item in a form.andP;  You had to turn the grid optionon and clone items manually.andP;  Midway through this review, Ithaca Streetreleased a new version of the IDT that supports this feature.andM;Finally, it would be nice if Ithaca Street supplied printed documentation forall of its tools.andP;  For $325, the company should be able to do this.andM;Still, I recommend Menuet.andP;  It's powerful, can be used without reading theentire manual, and through its support of MetaWindows, can run on manygraphics cards in different resolutions.andP;  Ithaca Street supplies many fontsand icons to spice up your screens.andP;  All in all, Menuet is a well-documented,functional library.andM;Oakland Group inc.andM;C-scape v. 3.1/Look andamp; Fool C-scape has the same goals as the other productsmentioned in this review but is very different from almost all of them.andO;C-scape doesn't provide the flashy interfaces products like Menuet and WNDXpromise; it doesn't use MetaWindows, GSS, or even the Borland BGI for itswork; it doesn't support a Motif-like interface with three-dimensionalbuttons or colorful icons.andP;  Yet it's the most polished and well-developedpackage of the bunch.andM;C-scape provides routines for creating menus of all types, fields (with orwithout validation), scrolling list boxes, window management, and much more.andO;just looking at C-scape for the first time makes you think of a package forcreating text-based user interfaces.andP;  However, C-scape can automaticallyadjust to the current screen mode.andP;  Your screen will look the same whetheryou run in graphics mode or text mode.andM;I can already hear you saying, &quot;What? I thought these packages were forcreating GUIs! This doesn't sound like a GUI package!&quot; Perhaps.andP;  Yet C-scapeforgoes flashy screens and lets the developer concentrate on making afunctional, useful interface, not a flashy one.andM;This is an important point.andP;  No matter how flashy or nice-looking aninterface is, if it's not well designed, it's worthless.andP;  C-scape attempts tomake creating the interface easy and natural.andP;  No icons.andP;  No fonts.andP;  just theinterface itself.andP;  It succeeds on every count.andM;C-scape is accompanied by the best documentation of any package reviewedhere.andP;  Along with a reference manual that clearly and concisely explains eachfunction, the users manual and tutorial (almost 300 pages) clearly explainhow each section of C-scape works.andP;  On top of that, C-scape is incrediblyeasy to learn and use.andM;C-scape does use unusual terms for some of its objects.andP;  Menus can either beSlugs or Framers, depending on their type.andP;  Seds are similar to scrollinglists.andP;  Bobs (basic objects) are Seds (or any other type of object) thatexist instead of a menu or screen.andP;  A Sled is like a Sed but can adjustitself.andP;  Sleds are useful when you don't know the format or size of data youwant to use in a Sed.andP;  When using C-scape, I found these terms easy tounderstand.andM;If you don't want to calculate screen coordinates when designing yourinterface, you will want to use Look andamp; Feel, C-scape's companion product.andO;Look andamp; Feel lets you lay out your screens, pop-up boxes, and menus.andP;  You canthen either save your choices as a binary file to be loaded at run time orproduce C code you can include in your program.andP;  While Look andamp; Feel does notrun in graphics mode, it is a very handy tool for prototyping and can save alot of tedious work.andM;C-scape is a worthy addition to any C programmer's toolkit, even if you don'twant a GUI.andP;  For those who build GUIs, you won't have a Windows-like frontend with multiple font support; but then again, you may not need it.andP;  C-scapedoesn't cover facets that some of these other products do, but it doesprovide the tools you need.andM;Island Systems Graphics-MENU v. 3.0andM;Despite its name, GraphicsMENU is not just for creating menus.andP;  It's apowerful interface development package.andP;  If your reaction to the C-scapereview is, &quot;But I want icons and beveled buttons!&quot;, Graphics-MENU may be justwhat you're looking for.andM;Graphics-MENU is available in versions for the Borland BGI and MetaWindows.andO;Both versions look identical to the programmer and the user, except theMetaWindows version runs on more graphics adapters.andP;  It is also the onlyproduct in this review that's available for both C and Pascal.andM;Graphics-MENU supports menus (including tear-off menus), fields (withvalidation, if necessary), icons, three-dimensional buttons, scrollable filelists, and windows.andP;  Utilities are included to create custom cursors, designmenus dynamically, and alter color usage of Graphics-MENU programs.andP;  While anicon editor was not included in the review package, you can convert .andP;  PCXpictures into icons with a supplied utility.andM;Graphics-MENU does not use a proprietary font format.andP;  Rather, it useswhatever fonts are supplied with the graphics library you are using.andO;Graphics-MENU does not completely support stroked fonts.andP;  You can use them,but in a few items (such as data entry fields), stroked fonts will not formatcorrectly.andM;Despite its complexity, Graphics-MENU is easy to learn and use.andP;  The producthas a very nice tutorial and lots of example programs to help you out.andP;  Thisis a very nice package.andP;  And at $179, it's quite a bargain.andM;The WNDX Corp.andM;WNDX v. 1.1 WNDX is one of the newer products of this type released to themarket and, unfortunately, its newness shows.andP;  Like Menuet, WNDX provides themeans to give a program a Motif-like interface.andP;  WNDX goes one step fartherin giving you the code that lets this happen.andM;Let me explain.andP;  Normally, WNDX uses a flat interface (no three-dimensionalbuttons or scroll bars).andP;  However, WNDX is supplied with code that interfacesbetween your program and WNDX's libraries and gives your interface aMotif-like look.andP;  This lets the developer see how to modify WNDX's behaviorwithout having WNDX's source code.andP;  WNDX runs on top of MetaWindows and thushas memory requirements much like Menuet.andM;If I seem to be comparing WNDX to Menuet, that's because the products arealike in many ways.andP;  Both use MetaWindows as a base, provide the tools forcreating a complete interface, produce very attractive screens, and both havelarge RAM overheads.andP;  But, WNDX is not as mature as Menuet, and it shows.andM;I don't want to make this sound worse than it is.andP;  After all, Menuet hasn'tbeen on the market that long, either.andP;  WNDX suffers from beta-releasedocumentation, demo code that won't compile and run, and no interface designtools.andP;  These are not all bad.andP;  The documentation WNDX has is quite good; infact, it is some of the best beta documentation I have ever seen.andP;  But it isstill beta documentation.andM;The manual does refer to two others not sent with the review copy.andP;  Both (onequick- and one full-reference manual) should be quite a treat if they are asnice as the supplied programmers guide.andP;  The programmers manual is a how-toguide: it describes the various subsystems and how to use them but has nocomplete reference to library calls.andM;The demo programs are another matter.andP;  WNDX is supplied with severalsubdirectories of code you can use in your programs as starting points forall kinds of dialog boxes, screens, and so on.andP;  One program (with source) isa desktop interface to several interesting functions.andP;  This program shows howto do simple multitasking under WNDX and use some of its interfacesubsystems.andP;  Unfortunately, you'll have to run the already compiled demo,since the source code supplied will not compile and run correctly undereither Microsoft C or Turbo C. The executable code you get will come up withthe title screen but no mouse cursor.andP;  The only thing you can do is hitCtrlBreak or reboot.andP;  I had to reboot since the code apparently over-wrotesomething it shouldn't have and caused DOS to behave erratically.andM;These problems aside, WNDX is a very powerful library.andP;  It contains functionsfor handling menus of all types (including tear-off menus), dialog boxes,different cursors and fonts, and events.andP;  Each subsystem has its own set offunctions for performing work and is documented in separate chapters in themanual.andP;  This makes WNDX fairly easy to comprehend.andM;With several hundred functions available, it is not possible to fullydescribe WNDX in detail.andP;  Suffice to say that WNDX is a product intransition.andP;  Within the next few months, I hope WNDX will have gained itsmissing documentation, more sample code, a tutorial, and some tools to helpdevelopers lay out the interfaces they have in mind.andP;  Currently, WNDX Corp.andO;offers a six-month trial on WNDX.andP;  I believe the company knows its productsuffers from &quot;pre-release syndrome&quot; and hopes people will try it.andP;  Within thenext six months, all the problems I have mentioned could be solved.andM;TEGL Systems Corp. TEGL v. 5.5andM;The only shareware product of the bunch, TEGL  Technographical Link Windows)is a full interface library currently available only for Turbo Pascal.andP;  Itlets Turbo Pascal users add a GEM-like interface to their programs at verylittle cost.andP;  However, looking at the package provides an interestingviewpoint into the product's purpose.andP;  The TEGL Windows Toolkit arrived in alittle plastic box that read, &quot;The Complete Game Programmer's Package.&quot; Tosupport this, much of the sample code distributed with the package is in theform of games, including solitaire, Monopoly, and an implementation of mahjongg.andP;  These games are also available as shareware products.andM;However, TEGL can be used for much more than writing games.andP;  One exampleincluded in the package is a program that looks very much like GEM Desktop.andO;While it doesn't perform the functions of that product, it does illustratehow to use TEGL to create an interface.andM;TEGL is truly a package for people who like to dig into the code and gettheir feet wet.andP;  It does not use a third-party product for a base (unless youwant to count Turbo Pascal's BGI as a third-party product), only supports afew resolutions, and has very skimpy documentation.andP;  Despite all this, it's avery powerful product, considering its price.andP;  If you would like the fourgames that were written using TEGL, they come with full source code.andM;TEGL comes with source code for everything in the package, including the iconeditor, all the demo programs, and the library itself.andP;  Even the code thatproduces TEGL's 27 fonts is provided.andP;  This is truly a package you could callyour own.andP;  However, you must be willing to be a code reader to get maximumuse out of this package: TEGL's tutorial is all source code.andM;TEGL provides code to handle mouse input, create file selection and othersimple dialog boxes, manage simple windows, make menus, and manipulate fonts.andO;You create menus with a setup and a definition call for each item.andP;  Eventear-off menus are supported.andM;While front ends created with TEGL are attractive, your code will look alittle strange.andP;  All icons, pointers, buttons, and other graphics objects aredefined as arrays of hex numbers in your programs.andP;  Fonts are defined viaassembly language.andP;  TEGL does come with an icon editor you can use to createimages for the screen (which means you can use the editor for almost anygraphic item, not just icons).andP;  You do, however, have to use a second utilityto convert the icon editor's output to a Turbo Pascal include file.andP;  Oneutility can scan a Pascal source file and extract definitions for the iconeditor.andM;TEGL worked very well, except the icon editor has a bug calling up its pop-upmenus.andP;  Still, you get a lot of code you can spend many hours examining anduse to create a unique front end for your Turbo Pascal applications.andP;  Thegames are an a typical use for an interface package, but they show you how anice interface can benefit any program.andP;  A new release of the TEGL toolkit,version 11 with support for Turbo C was received too late for review.andP;  Thisproduct costs $50 ($90 with games).andP;  For so little money, how can you gowrong?andM;Courseware Applications inc. Chatterbox v. 1.3BandM;With the exception of TEGL, Chatterbox is one of the least expensive productreviewed here.andP;  One reason is that Chatterbox is not a full interfacedevelopment package.andP;  Instead, it only handles dialog boxes and menuinterfaces.andP;  Window management and other aspects are completely up to thedeveloper.andP;  On the other hand, Chatterbox is the only library reviewed thatcan support almost any graphics library as a base.andM;Chatterbox's library routines do not call the graphics library being useddirectly.andP;  Instead, they make calls to a graphics-interface library.andP;  Whilesome other packages reviewed here may do this to support more than onelibrary, only Courseware Applications gives you the source code and documentsthe interface itself.andM;Chatterbox comes with interfaces for four popular graphics libraries:MetaWindows, GSS-GDT, Borland BGI, and the Microsoft graphics library.andP;  Withthis code, you can adapt Chatterbox to work with any graphics library.andP;  Youalso get all the source code to the routines that are called to draw variouscontrols on the screen.andP;  If you are unhappy with the way a control looks, youcan change it.andP;  This code also lets you create custom controls of your owndesign.andM;Chatterbox's functions can be broken up into four areas: menus, dialog boxes,events, and graphic-interface routines.andP;  The graphics-interface routinescomprise the layer between Chatterbox and whatever graphics library you use.andO;Likewise, the event manager is called by the menu and dialog-box functions toprocess user interaction with your program.andM;Creating menus with Chatterbox is extremely simple.andP;  Simply declare avariable of type menubar and one variable of type menu for each item on themenu bar.andP;  Then call MakeNewMenuBar() to allocate space for the menu baritself; Chatterbox returns a handle that you store in your menubar variable.andO;Finally, call MakeNewMenuo for each item on the menu bar.andP;  You can specifyaccelerator keys for your menu bar.andM;After all this, you can dynamically create menus, adding, deleting,highlighting, shading, or even adding separator lines.andM;Once you have all your menus ready, just tell Chatterbox to draw your menuswith DrawMenuBar() and call GetMenuChoice().andP;  Chatterbox will tell you whatmenu item was selected, checked, unchecked, and so forth.andM;Dialog boxes are a little more involved.andP;  As with menus, you have to allocatespace for each dialog box you want, using CreateDialog().andP;  Then you callAddCtl() to add the specific controls to your dialog box.andP;  The dialog controlfunction you have to write is more complicated than menus.andP;  When a dialog ison the screen, Chatterbox will want to call one of your functions to let yourprogram know what the user is doing with the dialog box.andP;  Mostly, you wouldjust call Chatterbox functions to highlight (activate) or shade (deactivate)controls.andP;  You also have to tell Chatterbox when to end the dialog box.andM;There's not much more to Chatterbox.andP;  It's a flexible, functional,inexpensive package.andP;  While it doesn't do everything some of these otherpackages do, it works with more graphics libraries and can be adapted toalmost any other library you could think of.andP;  Currently, only Microsoft,Borland, and Zortech compilers are supported.andP;  It would be nice if CoursewareApplications provided a tool to let you interactively design a dialog box(instead of having to guess at screen coordinates), but this is a minor flawin an otherwise fine package.andM;All good GUIandM;All of these packages are worth looking at.andP;  C-scape is by far the mostmature of all these products, with Graphics-MENU close behind.andP;  Both Menuetand WNDX are still suffering from &quot;new-release syndrome&quot; but are powerfulenough to warrant consideration.andP;  Hopefully, they will flesh out as newversions are released.andM;Chatterbox does not offer the variety of functions nor the sophistication ofMenuet or WNDX; however, its ability to be customized and work with almostany graphics library are big pluses.andM;Finally, TEGL is worth its price just to look at.andP;  It is inexpensive,functional, and will keep you occupied for quite some time.andP;  The games thatwere developed with TEGL are great examples of good interface design.andM;Mark Davidson is a Programmer for Cinemaware Corp., in Westlake Village,Calif.andP;  He can be reached on CompuServe at 72330,756.andM;GETTING THE GOODS ON GUIandM;Menuet v. 1.7d: $325andM;Ithaca Street Software Inc.andM;1145 Ithaca Dr.andM;Boulder, Colo.andP;  80303andM;(303) 494-8865andM;Circle No.andP;  277 on inquiry CardandM;C-scape v. 3.1: $399--andM;with Look andamp; Feel: $499andM;Oakland Group Inc.andM;675 Massachusetts Ave.andM;Cambridge, Mass.andP;  02139-3309andM;(800) 233-3733andM;(617) 491-7311andM;Clrcle No.andP;  278 on inquiry CardandM;Graphics-MENU v 3.0: $179andM;Island SystemsandM;7 Mountain Rd.andM;Burlington, Mass.andP;  01803andM;(617) 273-0421andM;Circle Ne.andP;  279 on inquiry CardandM;WNDX v. 1.1: $499andM;The WNDX Corp.andM;43rd FloorandM;400-3rd Ave. SWandM;Clagary, AlbertaandM;Canada T2P 4H2andM;(800) 667-9639andM;(403) 262-3908andM;Circle Ne.andP;  280 on inquiry CardandM;TEGL Windows Toolkit HandM;v. 5.5: $50andM;The Complete Games ToolkitandM;U: $90andM;TEGL Systems Corp.andM;780-789 West Pender St.andM;Vancouver, B.C.andM;Canada V6C 1H2andM;(604) 669-2577andM;Circle Ne.andP;  281 on inquiry CardandM;Chatterbox v. 1.3B: $189andM;Courseware Applications Inc.andM;481 DevonshireandM;Champaign, Ill.andP;  61820andM;(217) 359-1878andM;Circle No.andP;  282 on inquiry Card</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> DOE2-31-0386 </DOCNO><TEXT>A multiple inheritance mechanism on processes is designed and presentedwithin the framework of a small object oriented language. Processes aredescribed in classes, and the different action parts of a process inheritedfrom different classes are executed in a coroutine-like style calledalternation. The inheritance mechanism is a useful tool for factorizingthe description of common aspects of processes. This is demonstratedwithin the domain of distributed programming by using the inheritancemechanism to factorize the description of distributed termination detectionalgorithms from the description of the distributed main computationsfor which termination is to be detected. A clear separation of concernsis obtained, and arbitrary combinations of terminations detection algorithmsand main computations can be formed. The same termination detection classescan also be used for more general purposes within distributed programming,such as detecting termination of each phase in a multi-phase main computation.</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>WSJ910520-0074</DOCNO><DOCID>910520-0074.</DOCID><HL>   Technology (A Special Report): Looking Ahead   ---   Easy Writer   ----   By Laurence Hooper</HL><DATE>05/20/91</DATE><SO>WALL STREET JOURNAL (J), PAGE R33</SO><CO>   AAPL BORL IBM MSFT</CO><MS>TECHNOLOGY (TEC)</MS><IN>COMPUTERS AND INFORMATION TECHNOLOGY (CPR)SOFTWARE (SOF)</IN><RE>CALIFORNIA (CA)NEW YORK (NY)WASHINGTON (WA)</RE><LP>   WHY CAN'T JOHNNY PROGRAM?   For years, parents and teachers have fretted over thisquestion, worrying that children who didn't grow up to becomputer literate would be bypassed by the informationrevolution. So millions of students -- adults and childrenalike -- have struggled with arcane acronyms and soaked upthe obscure lore of languages such as Pascal and Fortran.</LP><TEXT>   But a decade after the personal computer exploded inpopularity, it's still a rare person who understands any ofthis stuff.   Now it may not make any difference. Software experts havedecided that teaching people how to program isn't the point,any more than teaching them how to wire a microwave oven isthe point, as long as they can make popcorn. As a result,software firms are launching a revolution that they hope willmake programming easier for mere mortals -- as easy, in fact,as making microwave popcorn.   &quot;It will be like the transition between the era of theswitchboard operator and the era of the dial telephone,&quot; saysMike Maples, senior vice president of Microsoft Corp., theRedmond, Wash., software company. &quot;When the dial phone wasinvented, everyone suddenly became their own switchboardoperator. But if you asked anyone, `Do you know how tooperate a telephone switchboard?' the answer would be `No.'It will be the same kind of thing with programming.&quot;   To be sure, programming is something that many people willnever bother to do. But in the next five years, an increasingnumber of people will bother, as they realize that they canmake their PCs perform complex, personalized tasks with a fewbasic actions.   At the moment, the idea of programming seems alien -- ifnot horrifying -- to almost all computer users. Instead, theyrely on shrink-wrapped software that allows them to do apredetermined range of tasks: type and print a document, forexample, or run a spreadsheet.   But the shrink-wrap approach has its limitations: Unless asoftware maker has already thought of a particular task, andwritten a program that automates it, the user simply can't dothat task.   &quot;It's like eating only TV dinners,&quot; says Bud Tribble, vicepresident for software engineering at Next Computer Inc., theRedwood City, Calif., workstation company founded by computerpioneer Steven Jobs. &quot;You're reduced to picking and choosingitems off a shelf. Now, no one is going to starve on a dietof TV dinners -- but I can think of better ways to eat.&quot;   More adventuresome PC users sometimes stumble intoprogramming when they discover that some popular programs(such as Lotus Development Corp.'s 1-2-3 spreadsheet orAshton-Tate Corp.'s dBASE data base) allow them to createshortcuts called &quot;macros.&quot;   Macros are really little computer programs, or personallytailored sequences of actions. Once a user writes a macro, asingle command can set off a whole chain of events. Avariation on this approach is the &quot;batch&quot; file, which manycomputer novices have discovered can make their computer morefriendly -- making it greet them by name, for example, thenoffering them a choice of programs to run.   But both macros and batch files are limited, and are usedprimarily for automating tasks that would otherwise be donestep by step.   &quot;That kind of stuff is more about efficiency than anythingelse,&quot; says David Liddle, chief executive of MetaphorComputer Systems Inc., a Mountain View, Calif., softwarecompany that has aimed its products at first-time users. &quot;Itdoesn't address people who have never been involved withcomputing, because there aren't any tools that closely fittheir job.&quot;   Until 1987, the only way people could bend a PC to theirwill was to undertake the painstaking task of learning aforeign language. And who wanted to do that? But in 1987, aprogram called Hypercard started changing things. Designed byBill Atkinson, a resident expert at Apple Computer Inc.,Hypercard allowed users to create their own programs withouthours of training.   Instead of requiring the typing of endless lines ofgobbledygook, Hypercard asked users to create computerized&quot;index cards,&quot; each of which stored information or madesomething happen on the computer. The cards were thenarranged into &quot;stacks,&quot; which were grouped by whatever commoncharacteristics the user chose. Users could then follow theirown interests when browsing through electronically storedinformation, bouncing from topic to topic as they wished. Aswas the case with almost everything else developed forApple's Macintosh computer, the process was highly visual.   To help build more complex programs, Hypercard alsoprovided some programming commands that had to be typed in.The idea, said the people at Apple, was to first show usersthat programming could be very easy -- and then tempt them tolearn just a few more skills.   Steve Wood, vice president for business development atAsymetrix Corp., Bellevue, Wash., which makes a similar toolfor computers compaitible with those made by InternationalBusiness Machine Corp., says: &quot;We've learned that it'spossible for normal people to do a lot of creativedevelopment without feeling like they're going in and writinga computer program. It just has to be obvious why it's worththeir time.&quot;   Researchers had made previous stabs at making personalizedsoftware easier to create. At Xerox Corp.'s Palo AltoResearch Center in the 1970s, for example, Alan Kay andothers had pioneered a concept called &quot;object-oriented&quot;programming, which allowed software to be written incomponents that could easily be assembled in many differentways. That research forms the basis for much of today'seasy-to-use programming software.   But Hypercard and its followers were the first productsthat professed to be aimed directly at the computing masses:Apple included it as a standard feature on many of itsMacintoshes and showed impressive examples of Hypercardstacks written by such &quot;regular&quot; people as teachers, businesspeople and even children.   In truth, however, the main users of Hypercard turned outto be professional software developers and so-called powerusers -- the guys with $50,000 worth of equipment and time towaste. But the program heralded a wave of tools that mayultimately deliver on the promise of user programming.   In 1988, for example, Next introduced a new workstationcomputer that included a software system called NextStep. InNextStep, programming may be as simple as drawing a line ormoving a picture with a hand-held mouse. Say a user wants tohave a button on the screen that will recalculate all thetotals in a mathematical program: With NextStep, users simplymove a picture of a button to where they want it, and thendraw a line from the button to a command that says&quot;Recalculate.&quot; End of programmng.   &quot;What we're moving toward here is a different paradigm,&quot;says Mr. Tribble of Next. &quot;With mainframe computers, it usedto be that end-users had very little say in what softwarethey got. Now the guy who's using the program is the onedesigning it.&quot;   Earlier this year, Borland International Inc., ScottsValley, Calif., unveiled a programming tool caledObjectVision that allows users to create complicated programs-- collecting personalized data, doing calculations with it,and displaying it in a form, for example -- simply byconstructing &quot;decision trees&quot; on the computer screen. Theprocess is almost entirely visual: Users can't write computercode, even if they want to.   To top off the trend, Microsoft will soon jump on thevisual-programming bandwagon by launching a new version ofthe Basic programming language that uses many of the sameprinciples. Mr. Maples says the new Basic will be a key partof Microsoft's overall strategy, and that user programming is&quot;one of the three most important areas we're working on.&quot;Because Microsoft was the company that popularized theoriginal Basic -- and has lately become the industry'sversion of a 500-pound gorilla -- visual programming is nowlikely to catch on quickly.   Still, there are lingering debates about how far a pushshould go. At Borland, for example, the focus is on helpingpower users, not novices. &quot;I don't think we should be goingout to figure out ways to help the computer illiterate createsoftware,&quot; says Rob Dickerson, a vice president at the firm.&quot;We should set our goals toward something that is much moreachievable.&quot;   But Mr. Liddle of Metaphor argues that computerilliterates are the ideal targets. Metaphor and IBM areworking on an ambitious project called Constellation that, ifsuccessful, would help programmers write blocks of softwarethat novices could then mix and match as they liked.   Based on the object-oriented concepts pioneered by Mr. Kayat Xerox, Constellation promises to change the way peoplethink about software. &quot;In software today, no one makes doorsand windows and sinks and faucets -- everyone makes houses,&quot;says Mr. Liddle. &quot;Well, that's great, except I don't wantsomeone else's idea of a house. As long as it's easy enough,I want to be able to build my own.&quot;   Meanwhile, Mr. Kay has landed at Apple, where he isworking with children in a Los Angeles school on afar-ranging project called Vivarium. Among other things, heis exploring a concept that goes far beyond object-orientedprogramming. It calls for blocks of software, or &quot;agents,&quot; toaccept very complicated commands -- then go away and do thetask, relying on their own judgment to resolve almost alldilemmas.   In the future, programming may be as easy as telling your&quot;secretary&quot; agent: &quot;Please throw all my junk mail in thetrash from now on, unless it's a sweepstakes form.&quot; Already,some electronic-mail programs, such as Wijit from AgilitySystems Inc. in Waltham, Mass., are tackling exactly thattask, although they don't yet take spoken commands.   Mr. Kay says he sees one serious problem with agents --but it's a problem that dramatically illustrates just howquickly software has been evolving. In essence, he worriesthat people will start thinking of agents as human beings,raising unrealistic expectations about computers -- andopening an ethical can of worms.   &quot;I feel a bit queasy telling these kids that it's OK tohave a servant,&quot; he says. &quot;Even if the servant is just apiece of {computer} code.&quot;   ---   Mr. Hooper is a staff reporter in The Wall StreetJournal's New York bureau.</TEXT></DOC>
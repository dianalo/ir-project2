<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-219-663  </DOCNO><DOCID>08 219 663.andM;</DOCID><JOURNAL>The Seybold Report on Publishing Systems  Dec 18 1989 v19 n7 p3(3)* Full Text COPYRIGHT Seybold Publications Inc. 1989.andM;</JOURNAL><TITLE>ODA (Office Document Architecture): What is it? What is it goodfor? (includes a related article on the ODA and StandardGeneralized )andM;</TITLE><DESCRIPT>Topic:     StandardsDocument Management SystemsText CommunicationConnectivityInformation Resources ManagementDesktop PublishingPublishing IndustryElectronic Publishing.andO;Feature:   illustrationgraph.andO;Caption:   ODA's document processing model. (graph)andM;</DESCRIPT><TEXT>ODA (Office Document Architecture): What Is It?andP;  What Is It Good For?andM;&quot;THE PURPOSE OF this International Standard is to facilitate the interchangeof documents.andP;  .  .  .  Documents are considered to be items .andP;  .  .  whichmay include pictures and tabular material.andP;  The content elements used withinthe documents may include graphic characters, geometric graphics elements andraster graphics elements, all potentially within one document.&quot;andM;The scope of the ODA standard, stated concisely in its opening paragraphs,may sound simple, but in reality it is a heady proposition in the presentworld of computers.andP;  Indeed, the standard that follows the opening sentenceis three inches thick.andM;Why was it developed?andM;The complexity of ODA is due to the fact that virtually every program forprocessing text, graphics and images has its own format for describing andstoring information.andP;  The effort to establish a least-common denominator bywhich any system could exchange revisable compound documents with another wasbegun in 1982.andP;  It has taken 7 years to become a standard.andP;  But the processhas no end, because as computers allow us to add more components to what wecall a document (video, voice, music, etc.), the standard will evolve aswell.andM;With the merging of publishing and computer technologies, the need toexchange documents among different computers and different softwareapplications is becoming readily apparent.andP;  Today, virtually alltext-processing systems store their information in formats that areparticular to that system.andP;  When it comes to vendor-independent formats fortext, the only one in widespread use is ASCII, which is useful for exchangingraw character content but more often than not is useless for exchanginginformation regarding form, even character attributes such as emboldening oritalicizing.andP;  In the past, exchange of text and publishable documents wasdone through format-specific filters that software vendors or users wrote totranslate information from one application to another.andM;The old method of using filters is proving too cumbersome in today'scomputing environment.andP;  What we need instead are device-independent standardsfor exchanging different types of information--text line, graphics,images--and for exchanging documents that contain multiple content types.andP;  Inthis way, users of different computers and software could still exchangedocuments, regardless of what program they used to compose their ideas.andM;Generic markup lays the foundation.andP;  When the ODA committee was formed, therehad already been extensive work in the graphic arts community to develop ameans of describing document content in a generalized manner.andP;  The concept ofgeneric markup--applying user-definable tags to content elements--allowedpublishers to reprocess one document using different style sheets and evendifferent formatters.andM;Implicit in the action of applying generic markup is the concept ofseparating the form of a document (its layout and presentationcharacteristics) from its content.andP;  The first such standard to make use ofthis concept was the Standard Generalized Markup Language (SGML), whichbecame an ISO standard in 1986 (ISO 8879).andP;  SGML is a document representationlanguage for describing information in a standard notation, or syntax.andP;  Byapplying SGML to a particular task (say, a type of document), someone maydescribe a document in a way that is sufficiently generic that theinformation and its structure could be interpreted by any program running onany computer that makes use of that SGML application.andM;To date, there are two public applications of SGML in widespread use: onedeveloped by the Association of American Publishers (AAP) for use in booksand journals and one developed by the U.S.andP;  Department of Defense (DoD) foruse in technical publications.andP;  (The DoD application is part of the CALSinitiative, which we cover from time to time in this report.)andP;  These SGMLapplications set forth the specific content objects that a conformingdocument may contain.andP;  They also specify the relationships among the contentobjects in a hierarchy of objects.andP;  These specifics form the Document TypeDefinition (DTD), which is used by the software application and the user tocheck that a document indeed conforms to the AAP or DoD application of SGML.andM;The authors of SGML purposely separated the logical structure and content ofa document from its form, or layout structure.andP;  The idea behind SGML is thatcontent objects are defined by generic identifiers (such as para0 forparagraph).andP;  The formatting of a document is achieved by applying a stylesheet to the content; the style sheet defines the appearance of each of thegeneric identifiers.andM;SGML created a powerful model for document interchange through the use ofgeneralized markup that could be applied to any content--graphics, music,voice, video, etc.--not just text.andP;  Thus, SGML supports compound documents,which by definition are documents that contain multiple types of content.andO;The separation of the document's content from its appearance in SGML makes itmuch easier to reprocess a single document in different forms and media, andit enables documents to be exchanged among otherwise incompatible systems andinterpreted by each into something that resembles the author's originalintention.andM;SGML provides a language for describing the content of information dealt within a variety of applications.andP;  Early uses of the standard have focused onstructured documents, without regard for interchange of formattinginformation.andP;  Unfortunately, in many word processors, there is onlyformatting, or layout information.andP;  Logical structure is implied by theformat.andP;  There are also many documents for which form is an integral aspectof the document: its layout structure may be as important as its logicalstructure--if it has any logical structure at all.andM;The roots of ODAandM;ODA, which was developed in parallel with SGML, was designed for exchanginggeneral-purpose office documents that may already be formatted.andP;  Bearing inmind the concepts of generic markup and logical structure, the authors of ODAset out to define an architecture for exchanging the content, layout andpresentation of compound documents, so that, theoretically, users couldexchange documents among different systems and be able to see the formattingas well as the content that the author intended.andP;  (*1)andM;Impetus for the standard came from the European Computer Manufacturer'sAssociation, a group of mainframe and minicomputer suppliers that hadcustomers with computers at multiple sites.andP;  Using applications developed forthe Consultative Committee on International Telephony and Telegraphy (CCITT),the computer suppliers set out to define a standard for interchangingcompound documents across OSI networks.andM;The ties to CCITT were strengthened when ISO and CCITT started having jointmeetings.andP;  And within the ODA group itself, the ties to telecommunicationshave become stronger as more representatives of the national andmultinational telecommunications companies joined the committee.andM;The close relationship between the ODA group and CCITT is important, becausethe standard that resulted in many ways reflects the concerns of the partiesinvolved in developing it.andP;  The ODA committee was primarily concerned withdeveloping a standard for transmitting typical office documents in anefficient manner.andP;  Its philosophical approach was to create a model of adocument, then to develop standard semantics for the constituents of thatmodel and then to encode those semantics in a public notation that would beused for exchanging the file with other computer systems.andP;  It was notconcerned with trying to define all possible documents but rather aparticular subset--those typical in an office environment.andM;Originally, the only notation for ODA was ODIF, a binary interchange fileformat that conforms to ASN.1 syntax and which may be used for filters or asthe native file format for ODA editors.andP;  Later, it added ODL, an interchangeformat that makes use of a standardized language, namely SGML.andP;  We willdiscuss the differences between ODIF and ODL in the next section of thisarticle.andP;  For now, what is important to bear in mind is that, no matter whatinterchange data format is used, because of its philosophical roots ODA onlysupports the documents that fit its model.andP;  Many typographically complexdocuments would not conform to the standard semantics or syntax defined inODA.andM;Definitions, and questionsandM;ODA defines a compound document architecture as &quot;a set of rules by which adocument comprised of mixed content objects can be produced, formatted orinterpreted.&quot;andP;  The standard sets forth the means to interchange documentsthat contain different types of content, specifically text, graphics andimages.andP;  Secondly, it is intended to facilitate the communication of theintentions of the author with respect to content and appearance in differentpresentation media.andM;Although ODA is designed for extensions, including typographic features,color, spreadsheets and additional types of content, such as sound, we willconsider in this article only the standard as it exists today, because it isthe present standard that users and vendors will be wrestling with in thenear future.andP;  However, the differences between how extensions are handled inODA and in SGML are mentioned in the sidebar below.andM;Questions for publishers.andP;  The ODA standard is still new, and vendors arestill grappling with its implementation.andP;  But the fundamental question thatconfronts publishers is: what benefits does ODA offer over other SGMLapplications, for which there are already publishing products?andP;  A second,related, question is: what is the relationship between the two standards?andP;  IfI use SGML, will I be able to use ODA, and vice versa?andP;  The answers to thesequestions are further clouded by the development of a new standard, theDocument Style and Semantics Specification Language (DSSSL), which isintended to address the formatting aspects of a document in a way that isconsistent with SGML.andM;Before answering these questions, it is useful to examine the ODA standard,which we summarize in the following section.andP;  Following that, we return tothe application of ODA to publishing and assess its relevance andrelationship to other standards being developed.andM;ODA and SGMLandM;Throughout this article, we note some of the differences between SGML andODA, which might leave the impression that the two standards compete withother.andP;  In fact, we view ODA (through use of the Office Document Language[ODL]) as but one application of SGML.andM;ODA is an architecture that defines both the model of the document and itsrepresentation.andP;  Unlike most SGML applications, its structural model includesits logical components and their physical layout.andP;  The representation is thesyntax used to describe a particular document in a standard notation.andP;  Takenin entirety, ODA is an architecture that describes virtually all aspects of adocument: its authors constructed a model of a document and then set aboutdeveloping the semantics and syntax to describe it.andM;This differs from SGML, which provides only the syntax for constructing andrepresenting an application or architecture.andP;  The authors of SGML premisedtheir standard on the assumption that they could not anticipate all types ofdocument models.andP;  Rather than make an arbitrary model, SGML does not describeone at all.andP;  Different models require different SGML applications, each ofwhich defines the type(s) of content and their structures in a Document TypeDefinition (DTD).andP;  But all SGML applications conform to the same syntax.andP;  InODL, the ODA architecture is represented using SGML syntax.andP;  Otherapplications (such as the CALS output specification) describe their modelswith a different DTD, but in the same language notation.andM;Some ODA supporters treat ODA as if it were the only application of SGML thatis needed for exchanging compound documents.andP;  For publishers, though, ODA isan application of SGML that is quite restrictive in the documents itsupports.andP;  SGML itself is a language that may be applied to virtually anyapplication that deals with structured information, regardless of the form orcontent of that information.andP;  Thus, even though the public applications ofSGML (the AAP and DoD standards) handle only certain types of documents,private applications (i.e., those being developed by individual companies forinternal use) cover all sorts of other documents, from dictionaries todatabase-driven catalogs or multimedia presentations.andM;From publishers' standpoints, it is best to consider the wider scope of SGMLwhen looking at ODA.andP;  ODA may be suitable for certain compound documents, butif other parts of the organization are using other SGML applications, then itmakes sense to standardize on the Office Document Language (ODL) as the meansof using ODA, because ODL conforms to SGML syntax.andP;  (Further discussion ofthis point is given in the third part of this article.)andM;The larger question, which each organization must answer for itself, iswhether ODA is needed at all if SGML is already in use or being considered.andO;The point of moving your information resources into generic form is toprovide flexibility and to keep future options as open as possible.andP;  WithSGML, there are virtually no restrictions on the way information may bemanipulated for presentation.andP;  ODA has numerous limitations, particularlywith regard to publishing.andM;For that reason, we encourage publishers to explore the forthcoming DocumentStyle Semantics and Specification Language (DSSSL), which is an applicationof SGML designed for the graphic arts, as an interesting alternative to ODA.andM;(*1) Because ODA uses SGML as one of its means of interchange, it proves thatformatting information may be conveyed in an SGML file.andP;  Until now, SGML hasbeen associated with sending structured files with no formatting information.andO;ODA is the first application to make use of SGML in this manner, but therewill be others, including one that we discuss later in this article.andO;</TEXT></DOC>
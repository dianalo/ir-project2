<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-780-266  </DOCNO><DOCID>08 780 266.andM;</DOCID><JOURNAL>Dr. Dobb's Journal  Sept 1990 v15 n9 p127(9)* Full Text COPYRIGHT Mandamp;T Publishing 1990.andM;</JOURNAL><TITLE>Hacks, spooks, and data encryption. (C Programming) (column)</TITLE><AUTHOR>Stevens, Al.andM;</AUTHOR><SUMMARY>A basic data encryption scheme has at least an algorithm andusually much more.andP;  The amount of protection needed determines thecomplexity of the encryption scheme.andP;  A single key system worksbest for one-on-one exchanges.andP;  Electronic mail systems usuallyneed two keys, a public key and a private key.andP;  Data EncryptionStandard is the federal government-approved standard algorithm forsingle-key encryption.andP;  A small encryption algorithm, calledcrypto.c, is given.andP;  This technique should be all the encryptionmost users ever need.andM;</SUMMARY><DESCRIPT>Topic:     AlgorithmsEncryptionData SecurityTutorialType-In Programs.andM;</DESCRIPT><TEXT>The lexicon keeps mutating.andP;  In days gone by &quot;hackers&quot; were honored souls whorummaged in the innards of computer systems finding clever and tricky ways todo things within the bounds of official sanction.andP;  A good algorithm wascalled a &quot;good hack.&quot; A generation of computer invaders and the media havelikewise pilfered the word so that now a hacker is someone who stealscomputer time and information.andP;  This column is about how the hackers of yorecan protect their users from the new generation of punk hackers.andP;  We'lldiscuss the basics of data encryption and implement two encryption algorithmsin C.andM;I just finished reading The Cuckoo's Egg by Clifford Stoll (1989, Doubleday).andO;It's not about C (although C is mentioned and Unix is a major player), butall programmers will enjoy and relate to the true story about a mysteriouscomputer break-in artist and the programmer who relentlessly sniffed out thedevious interloper's location and identity.andP;  It's a compelling book.andP;  Planenough time to read it in one sitting because you'll need it.andP;  Stoll is theprogrammer, and he writes about how a seemingly mundane assignment to fin a75 cent discrepancy in his employer's computer accounting system turned in aone year trek through the holes in Unix and VMS, the careless neglect andignorance that most system managers have about system security, and themindless, motionless bureaucracies of federal law enforcement andintelligence agencies.andM;You will learn from this book about computer pirates and how they routinelygain unauthorized access to computer systems by finding the unlocked backdoors and unplugged holes.andP;  You'll also learn how the computers ofgovernment, universities, and research centers are linked together in complexnetworks by Tymnet and other communications services.andP;  And, if you've neverworked inside your government, you'll gain from Stoll's novitiate insightinto the bewildering and confounding nature of Potomac fever and lethargy.andO;Character development is weak, and some of the dialogue is obviouslycontrived to explain things, but the boo is loaded with suspense, and youwill not want to put it down.andM;Data EncryptionandM;Reading The Cuckoo's Egg brings us to the subject of data encryption.andP;  Dataencryption means that you take some entity of data that has meaning in itsoriginal form and mangle it beyond recognition so that unauthorized peepingpersons can neither understand nor use it.andP;  Later, you or someone who hasauthorized access to the information can unscramble it and use it.andP;  The idea,of course, is to scramble it in a way known only to those of the innersanctum.andP;  The stuff of spies.andM;Computer-aided encryption involves at the very least an algorithm and oftenmuch more.andP;  The complexity of your encryption scheme will depend on themeasure of protection you require or your level of paranoia, whichever isgreater.andP;  For a well-developed treatment of the various techniques ofencryption, see &quot;Cloak and Data&quot; by Rick Grehan in Byte Magazine, june 1990.andM;The other side of encryption is decryption.andP;  Usually, but not always, youneed to decrypt something in order to use it.andP;  When would you not? Thesign-on password is an example.andP;  When you select a password for access to asystem, the computer will often encrypt it before it records it, forgettingthe original.andP;  The encryption algorithm is designed so that no one can derivethe original password from its encrypted form.andP;  if someone gets hold of thepassword file, they cannot use its contents to sign onto someone else'saccount.andP;  When you sign on, the system encrypts the password you enter andcompares it to what is stored.andP;  This approach prevents the system from makinga permanent record of passwords.andM;Stoll compared such password encryption schemes to sausage grinders.andP;  Youcan't run the ground meat backwards through the grinder and get a sausage.andO;And so he wondered why his ersatz user kept downloading the useless passwordfiles.andP;  Later he learned that the Unix-encryption algorithm is commonknowledge, and his anonymous burglar had used the algorithm to encrypt allthe words in an English spelling dictionary.andP;  He would compare the downloadedencrypted passwords with the ones from his dictionary and thus learn thepasswords of those users who innocently selected English words.andM;There are some very practical uses for data encryption in the world of sharedcomputers.andP;  Every complex system must have a superuser, a system manager, asupervisor account, or whatever, so that the systems programmers can maintainthe operating system.andP;  Some other users - users of applications - areresponsible for information so sensitive that it must not be seen by others,not even the system supervisor.andP;  Payroll records, cost proposals, hostiletakeover bids, employee health records, and such are all compartmentalizedinformation to be viewed only by those who have the need to know.andM;Many successful unauthorized system penetrations involve the perpetrator'sability to gain superuser status through knowledge of a bug in the system.andO;With that status, all the files and programs are wide open to the spook.andO;Encryption adds one more level of protection against inquiring minds.andM;Electronic mail is a hot new item among local and wide area networks.andP;  Withall that text roaming around all those systems with so many varied degrees ofprotection and privilege, there is always a potential for that confidentialmemo, love letter, or football pool to be seen by the wrong eyes.andP;  Troubleusually follows.andM;As an example, the Novell network provides a measure of protection byallowing the system supervisor to grant read and write privileges to users atthe network subdirectory level.andP;  if the system is properly configured, I canwrite to your mail subdirectory but I cannot read it.andP;  I can read thesubdirectory where the software is stored but I cannot write it.andP;  I can readand write to my own mail subdirectory.andP;  When mail leaves my local areanetwork to go to someone somewhere else, I must depend on the integrity ofthat remote site to similarly protect my precious data from prying eyes.andO;Let's make the absurd assumption that all systems are secure and that allsystem supervisors are trustworthy.andP;  Is there a back door into this scheme ofprotection, one that would admit an intruder? Of course there is.andM;Novell network applications exchange messages between networks by using adelivery agent program called the Message Handling Service (MHS).andP;  MHS hasbecome a standard, and because of its acceptance, other platforms such as MCIMail and CompuServe have or are developing gateway processes that exchangemessages between themselves and MHS installations.andP;  Big stuff.andP;  Now supposethat you and I are common, unprivileged users on a network that uses MHS andI want to intercept your incoming mail.andP;  Our network has a hub name andpassword that the MHS administrator assigns.andP;  The hubs call one another anduse those data elements to identify and verify one another.andP;  All I need to doto get your mail is set up another system, assign it our hub name andpassword and have it connect to the guys who send stuff to you.andP;  How do Ilearn the hub's password? Simple.andP;  MHS records it in the public directoryfile that everyone can read.andP;  Dumb.andP;  But typical.andP;  And reason enough toconsider adding encryption to our message exchanging systems.andM;One- and Two-Key EncryptionandM;Usually you encrypt a file by specifying a key value to the encryptingalgorithm.andP;  The intended receiver of the file must know the key value inorder to decrypt and use the data.andP;  This often presents a dilemma.andP;  if youwant to remember only one key - mind, you mustn't write it down or keep it ina file - but have a lot of people to send mail to, then every one of themmust know your key.andP;  The more of them there are, the greater potential thereis for compromise and the less substantial the protection.andP;  if you exchangemail with a lot of people who do not know your key, then you need to rememberall their keys.andP;  Although propriety prevents you from making any kind ofpermanent record, no one can remember so many keys, and the stuff getswritten down somewhere.andM;A better scheme for encryption in electronic mail systems involves two keys,a public one and a private one.andP;  Your public key is known to everyone andonly you know the private one.andP;  On the other hand you know the public keys ofthe other users.andP;  The public key is a function of the private key, and likethe password discussed above, one cannot usually reverse-engineer the privatekey from the public one.andP;  Everyone sends things to you that are encryptedwith the public key.andP;  But only the private key can decrypt the messages.andP;  Youneed to remember only one key for yourself, and you can record the publickeys of your correspondents wherever you like, even in your electronic mailaddress book.andP;  Grehan's article in Byte explains several algorithms fordeveloping a two-key encryption system.andM;In one-on-one exchanges, a single key system seems to work better.andP;  You andyour pen pal know the key, and no one else does.andP;  You freely exchangeencrypted messages.andP;  When it is necessary, the two of you agree to change thekey.andM;CRYPTOandM;Listing One [omitted], is crypto.c, an implementation of a small encryptionalgorithm.andP;  It's all the encryption most of us would ever need.andP;  Unless youare in a really hostile environment where highly sensitive records are kept,encryption usually serves only to keep the curious honest.andP;  In Stoll's book,although the intruder tried for a year to get at something classified, henever did.andP;  The lax security he consistently found allowed him to purloinonly from unclassified systems.andM;CRYPTO reads a key word and two filenames from the command line.andP;  If you runthe program against an encrypted file, CRYPTO decrypts it.andP;  The algorithm issimple.andP;  The program reads the input file in 64-bit blocks, does an exclusiveOR of the block and the keyword, and writes the block to the output file.andP;  Todecrypt the encrypted file, you run it against the same CRYPTO program byusing the same password.andM;To the uninitiated, the encrypted file seems to contain random byte values.andO;Even if a snooper has the CRYPTO program, without the keyword the file isuseless.andP;  This algorithm is much better than a simple character substitutionencryption scheme because each character's modification is a function of itsposition in the 8-byte block and the corresponding character in the keyword.andO;This technique is not immune to code-breaking techniques, but it will keepyour code-breaker busy for a while.andP;  Encryption sometimes serves its purposeif it merely delays when the information goes public.andP;  If your message says,&quot;We attack at high noon,&quot; who cares if the code-breakers figure it out by 1P.M.?andM;Data Encryption StandardandM;The government has sanctioned a standard algorithm for single-key encryptioncalled the Data Encryption Standard (DES).andP;  You can get a copy of thestandard from most government libraries by requesting the Federal InformationProcessing Standards Publication (FIPS PUB) 46.andP;  The algorithm is complex,and FIPS PUB 46 is not the clearest documentation you'll ever read.andP;  I'll tryto explain it better and at the same time demonstrate it with C programs thatimplement the algorithm.andM;Encryption with DESandM;DES encrypts data 64 bits at a time.andP;  It mangles the 64 bits by way of aseveral-step algorithm that includes a 64-bit key value supplied by the user.andO;The standard specifies a key of eight 8-bit bytes and does not use the mostsignificant bit of each byte in the key, reserving that as a parity hit ifneeded.andM;DES works with bit strings and refers to bit 1, bit 2, and so on.andP;  You haveto read the standard carefully all the way through to determine that bit 1 isthe most significant bit of an 8-bit byte or of a 64-bit block and that bitnumbers read from left to right.andP;  They are unspecific about the integer andlong integer configuration of the architecture, so you must be careful aboutthe last-byte-first view of data in most 16- and 32-bit machines.andM;The encryption algorithm works on the data file in 64-bit blocks.andP;  It beginsby rearranging the bits in the block according to an initial permutationtable.andP;  Then it separates the block into two 32-bit halves, a left half and aright half.andP;  There are 16 iterations of a mangling process designed to mutatethe data beyond recognition with the key playing a major part.andP;  The result ofthese iterations is a final pair of 32-bit halves.andP;  The algorithm permutesthis 64-bit block by using a permutation table that is the inverse of theinitial permutation table.andP;  The output from this permutation is the encrypted64-bit block.andP;  An interesting property of this inverse permutation is that ifyour input file does not use the most significant eighth bit, neither willthe encrypted file.andP;  This means that if you transmit ASCII text data filesover serial lines with 7-bit data byte communications protocols, yourencrypted files will transmit correctly.andM;That seems simple enough.andP;  Now things begin to get complicated.andP;  The 16iteration data-mangling process goes like this:andM;For each iteration, the left half of the block is exclusive ORed with the32-bit output of a function called f Then, except for the sixteenthiteration, the halves are exchanged.andP;  That's not so bad.andP;  Now let's considerthe f function, which is appropriately named.andM;The f function takes the 32-bit right half of the block and the 48-bit outputof the KS(key schedule) function as its arguments.andP;  The right half is called&quot;R.&quot; The function permutes the 32 bits of R into 48 bits.andP;  This permutationis called &quot;E,&quot; and it is exclusive ORed with the 48-bit output from theKSfunction.andP;  The 48-bit result is then segmented into eight 6-bit values.andO;The Sfunction compresses each of these a 4-bit value.andP;  The eight 4-bit valuescombine into one 32-bit value, which is then permuted through a permutationtable called &quot; P.&quot; That permuted value is the output from the f function.andO;Whew.andM;The S function consists of eight different subfunctions (S1, S2, S3 ...andP;  )andO;depending on whether it is compressing the first, second, third, etc.andP;  6-bitblock.andP;  There are eight tables, one for each subfunction.andP;  The tables arearrays of two dimensions with 4 columns and 16 rows.andP;  Each entry in the arraycontains a value between 0 and 15 representing the 4-bit compressedrepresentation of the 6-bit input.andP;  The 6-bit value to be compressed providesthe array subscripts in this bizarre manner: Bits 1 and 6 combine to be therow subscript 0 - 3.andP;  Bits 2 - 5 are the column subscript 0 - 15.andP;  TheSfunction returns the 4-bit value taken from the proper array as the resultof these subscripts.andP;  We're not done yet.andM;The KSfunction returns a 48-bit value based on the 64-bit key.andP;  its argumentsare the iteration number of the 16 iterations discussed earlier and the keyvalue for the encryption.andP;  For the first iteration, the function permutes thekey value by using the Permuted Choice 1 table.andP;  The key divides into twohalves and these halves are each shifted one or two bits to the leftdepending on which iteration is running.andP;  A table controls the shift values.andO;Each iteration after the first uses the shifted value of the previousiteration as its input, does its own shift, and then permutes the value oncemore by using the Permuted Choice 2 table.andM;Decryption with DESandM;Decryption reverses the encryption procedure.andP;  Because the initial andinverse-initials permutations are reciprocal, the decryption steps are thesame except that the decryption reverses the half exchanges during theiterations and uses the permuted key values returned by the KS function inthe reverse order of that used by encryption.andM;ENCRYPT and DECRYPTandM;Listing Two [omitted], is des.h, the header file that defines the globalformats, function prototypes, and external data names.andP;  The file also definesthe preprocessor macros that the program uses to build permutation tables.andO;See the discussion on permutations later for an explanation of these macros.andM;Listing Three, page 147, is encrypt.c, the program that scrambles a datafile.andP;  You run it by entering the keyword, which should be eight characters,the name of the input file and the name of the encrypted output file.andP;  Theprogram reads the file 64 bits at a time and encrypts those 64 bits with theDES algorithm.andP;  It permutes the input with the initial permutation table anddoes the 16 iterations of right- and left-half exchanges and key-dependentblock modifications.andP;  Then it uses the inverse initial permutation table topermute the output.andM;Note that the program computes the 16-key schedules into an array at thebeginning of the program.andP;  These values are constant for the entire processand do not need to be recomputed for every iteration that uses them.andM;The output file will always be an even multiple of 8 bytes.andP;  This isnecessary because the encryption process scrambles in 64-bit chunks.andM;Listing Four, page 148, is decrypt.c, which is similar to encrypt.c exceptthat it reverses the order of right-left exchanges and fetches from the keyschedule array.andP;  The decrypted file is the length of the encrypted file, aneven multiple of 8 bytes with the excess bytes padded with zeros.andP;  Thispadding could be a problem, particularly with files of fixed format where anapplication appends records.andP;  If this is the case, you could modify theencryption program to write a control value as part of the encrypted file.andO;The value would specify the length of the original data file.andP;  You can modifythe decryption program to use this value to truncate the excess bytes in thedecrypted file.andP;  You could decide to bypass encrypting the last block if itis less than 8 bytes.andP;  Beware, though.andP;  If the user's message to his boss'ssecretary ends with &quot;Love, Ed&quot;, there might be some explaining due.andM;Listing Five [omitted] is des.c, which contains the DESfunctions.andP;  Iexplained most of them in the discussion on the algorithms.andP;  The tersefunction names f, S, and KS come from the DES specification.andP;  The discussionon permutations that follows explains the permute and inverse-permutefunctions.andP;  The sixbits function might need some explanation.andP;  Its purpose isto extract and return a 6-bit value from within a 48-bit block.andP;  None of thisis readily supported by the typical 8- and 16-bit architectures most of ususe, so the sixbits function uses a brute force method.andP;  A table named &quot;ex6&quot;contains an entry for each of the eight 6-bit values.andP;  Each entry identifiesthe 2 bytes that contain the spread of 6 bits.andP;  One element specifies thenumber of bits to shift the byte left and another specifies the number toshift right.andP;  Those two elements are mutually exclusive.andP;  Another elementspecifies the mask for ANDing off the excess bits.andM;Listing Six [omitted], is tables.c.andP;  I put the tables into a separate sourcefile because they compile so slowly.andP;  The next discussion explains why.andM;DES PermutationsandM;I have mentioned the various permutations that DES performs.andP;  A permutationof a data block consists of rearranging the bits into a specified order.andP;  TheDES specification provides tables that identify what the permuted order ofthe bits will be for each permutation.andP;  There are several ways that you couldimplement such permutations in C. I built an array of bit masks for each ofthe 64 bits in a permutation.andP;  Each array entry contains a 64-bit value withone bit set on.andP;  Its position in the table associates it with the bit that itwill change.andP;  So, if the third table entry has its fifth bit set, then thepermuted output will have its fifth bit set only if the input has its thirdbit set.andP;  For testing the 64 input bit positions, I built a general-purposetable with the bits set in ascending order the first bit is set in the firstentry, the second in the second, and so on.andP;  some of this could be done moreefficiently in assembly language with shifts and carry tests.andP;  The C languageas implemented on the PC, however, does not have a convenient 64-bit shiftoperator.andP;  Consequently I chose the bit test mask and bit set mask approachdescribed here.andM;To make budding the bit masks easier and reduce the potential fortranscription errors, I developed the preprocessor macros in DES.andP;  H. Bycoding the p(n) macro with a number between 1 and 64 as its argument, youtell the preprocessor to define a comma-separated set of eight integralvalues with seven of them of value 0 and one of them having a value with asingle bit (1, 2, 4, 8, 0x10, 0x20, 0x40, or 0x80) set.andP;  The value I sets theleft-most bit of the left-most byte.andP;  Subsequent ascending values set thenext sequential bit to the right.andP;  The p(n) expressions can then be codedinto the initializers for a character array.andM;By using this technique, I was able to lift the permutation table valuesdirectly out of the DES standard document and code them into the p(n)expressions.andP;  Observe the macros.andP;  When you code a p(n) expression, itexpands to eight calls to the b(n, r) macro, one for each byte in the 64-bitmask.andP;  The r argument identifies which of the 8 bytes the b(n, r) macroexpands.andP;  The macro uses that value to test the range of the n argument tosee if its corresponding bit falls within the byte.andP;  if not, the expressionexpands to a zero value for the byte.andP;  if so, the macro calls the ps(n) macropassing an argument in the range 1 - 8 that is computed from the n and rarguments to the b(n, r) macro.andP;  The ps(n) macro expands the byte to a valuewith a single bit shifted into the correct position.andM;This exercise illustrates the power of the C preprocessor.andP;  By coding thesemacros I am able to express the permutation tables with more readablelanguage and less margin for error.andP;  But there is a cost.andP;  There are severalof those tables in the program, and all that preprocessor activity slows a20-MHz 386 to a crawl when the tables.c file compiles.andP;  The first time ithappened, I thought that Turbo C had hung up,andM;DES PerformanceandM;The DES algorithm is complex and slow.andP;  The ENCRYPT program published heretakes one minute, ten seconds to encrypt the text of this column, about 25Kbytes, and the DECRYPT program uses the same time to decrypt it.andP;  I madethese measures on a 20-MHz 386 with Turbo C 2.0 for the compiler.andP;  Bcomparison, the simpler CRYPTO program takes about 3.5 seconds to perform thesame task.andP;  The poor showing of the DES programs could reflect a badimplementation (who, me?) or a non-optimum compile.andP;  I haven't tried it on a4.77-MHz PC.andP;  Pack a lunch and bring a toothbrush.andM;The algorithms in DES.C assume a 32-bit long integer and an 8-bit byte.andP;  Iused the PC's long integer to implement the halves of the 64-bit key and datablock because it was convenient and offered the best chance for efficiency.andO;A more portable program would adapt itself to the correct integral data typefor the compiler and might not work as well.andP;  Perhaps the permutationfunctions could be optimized.andP;  A profiler will show that those functionsoccupy most of the algorithm's time.andP;  Optimization would, though, becompiler-dependent.andP;  You can look at the 64 iterations of the permutefunction and decide to use subscripts instead of pointers, or use 64 discretein-line bit tests and ORs to avoid the loop overhead.andP;  Code it one way oranother, and the program's performance could improve or degrade depending onthe C compiler you use.andM;Because DES is defined by the National Bureau of Standards, a trulyconforming device or program must be validated, and these programs have notbeen tested and blessed.andP;  My copy of the standard does not identify thevalidation procedures.andP;  Perhaps a good test would be to see if a candidateimplementation can successfully exchange encrypted files with an approveddevice.andP;  The specification implies, however, that an implementer has someleeway in the design of the various permutation tables.andP;  If this is so, thenthe encrypted files would not be compatible between differentimplementations.andM;EpilogueandM;Farewell to Howard Benner, the author of TAPCIS.andP;  I never met Howard, but Iuse his work every day.andP;  So do many others.andP;  Howard was a programmer in arelatively new craft, one that is only about 40 years old.andP;  When I beganprogramming 32 years ago, the programmers were all young, too, and there werenot very many of us.andP;  I still think of us all as young people.andP;  It does notseem right somehow that programmers should die.andO;</TEXT></DOC>
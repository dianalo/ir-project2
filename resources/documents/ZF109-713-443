<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-713-443  </DOCNO><DOCID>09 713 443.andO;</DOCID><JOURNAL>IEEE Expert  Dec 1990 v5 n6 p8(7).andM;</JOURNAL><TITLE>Imbedding (sic) rule inferencing in applications. (includes arelated article on C++ terminology) (technical)</TITLE><AUTHOR>Franke, David W.andM;</AUTHOR><TEXT><ABSTRACT>Rule-based problem solving can be integrated with conventionalapplication code, but tit is necessary to either write theapplication in the rule language or to transfer relevant databetween the application and the rule-based problem solver toovercome barriers to that integration.andP;  Object-oriented languagescan help integrate rule inferencing and application code with onlyminor changes to the application code.andP;  Implementing the tool inthe rule language such as Prolog or Proteus is necessary to applyrule-based problem solving to CAD problems.andP;  CADIE, the CADInference Engine, has the ability to tightly integrate arule-based inferencing capability with CAD tools that weredeveloped in an object-oriented language, C++.andP;  Integration oftool data structures with rules and assertions is the uniquefeature in CADIE.andP;  This approach permits a rule-inferencingcapability that works directly against tool-defined datastructures with no additional data fields required in thetool-defined classes.andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     C Programming LanguageObject-Oriented LanguagesRule-Based SystemsProblem SolvingCAD/CAM.andO;Feature:   illustrationchart.andO;Caption:   Example assertions. (chart)The CADIE class hierarchy. (chart)The basic goal-proving algorithm. (chart)andM;</DESCRIPT></DOC>
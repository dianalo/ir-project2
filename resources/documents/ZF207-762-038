<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-762-038  </DOCNO><DOCID>07 762 038.andM;</DOCID><JOURNAL>PC Week  Oct 16 1989 v6 n41 p80(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>IBM's AD/Cycle will bring on a new strategy for CASE. (part 3)(IBM's Repository; Applied Intelligence) (column)</TITLE><AUTHOR>Martin, James.andM;</AUTHOR><SUMMARY>IBM's AD/Cycle will bring about a new strategy for computer-aidedsoftware engineering (CASE).andP;  CASE will not be based onproprietary, incompatible repositories of design information, butwill follow a common definition of the objects used to specify anapplication.andP;  Tools will be competitive in offering the userbetter ways to specify and manipulate these objects in support ofthe applications-development process.andP;  AD/Cycle and SystemsApplication Architecture are geared towards the desktop-orienteddevelopment cycle, not at continuing the dominance of mainframecomputers.andP;  AD/Cycle is suited to support anapplications-development environment based on the client-servermodel, consisting of PS/2 oriented CASE tools and distributedrepositories of design information.andM;</SUMMARY><DESCRIPT>Company:   International Business Machines Corp. (products).andO;Product:   AD/Cycle (CASE software) (usage)Repository (Data base) (usage).andO;Topic:     Computer-aided software engineeringProgram Development ToolsSAAApplications Programming.andO;Feature:   illustrationchart.andO;Caption:   AD/Cycle moves application development to the desktop. (chart)andM;</DESCRIPT><TEXT>This is the third in a series of articles on the recently announced IBMRepository, part of IBM's applications-development strategy for the 1990s.andM;IBM's announcement of AD/Cycle is prompting many managers to reassess theirapplications-development strategies.andP;  But what is the significance ofAD/Cycle, and how will it change the development process?andP;  Will it provide anopen applications-development environment in which tools from multiplevendors can share design information in support of all phases of thedevelopment life cycle?andP;  What should a manager do to take maximum advantageof new development environments, methodologies and tools?andM;The details of the AD/Cycle announcement provide a clearer view of howapplications will be developed in the 1990s in the IBM world.andP;  AD/Cycleprovides the architectural framework required to build applicationsefficiently within Systems Application Architecture (SAA).andP;  It's based on acommon repository used to store design specifications in a standard format.andM;Applications-development tools that comply with the standard Repositoryformat can operate in an open environment and can share design information.andM;This has important implications for vendors of computer-aided softwareengineering (CASE) tools.andP;  CASE tools will no longer be based on proprietary,mutually incompatible repositories of design information.andP;  Instead, allcompliant tools will follow a common definition of the objects used tospecify an application; the tools will compete in offering users better waysto specify and manipulate these objects in support of theapplications-development process.andM;The battle among vendors of applications-development products will be foughton the desktop, not in the mainframe arena.andP;  As shown in the figure,applications development will move more and more to the desktop environment,using integrated CASE tools that support many project analysts on a LAN.andO;Executable code generated on the desktop will be exported to the target hostcomputer.andP;  Several high-end, integrated CASE tools operate in this mode,generating code on the PS/2, which can be run on the PS/2 or exported to aspecified host environment.andP;  Clearly, the desktop will be the dominantapplications-development environment in the 1990s.andM;Contrary to speculation, AD/Cycle and SAA are not aimed at continuing thetraditional dominance of mainframe computers.andP;  IBM is moving away from theconventional mainframe-centered software-development cycle toward adesktop-oriented development cycle.andM;SAA, as an architecture, supports the distributed client-server environmentshown in the figure.andP;  In this environment, user-interactive processing isperformed on the PS/2, and application-specific data is accessed through dataservers distributed throughout the network.andM;AD/Cycle is ideally suited to support an applications-development environmentbased on the client-server model, which consists of PS/2-oriented CASE toolsand distributed repositories of design information.andP;  Using CASE tools thatare compliant with AD/Cycle, each member of a design team interacts with apersonal repository used to store design information in a standard format.andO;Specifications from analysts are consolidated in a departmental repositorylocated within the LAN.andP;  Corporate-level data models and process models aretypically accessed from a corporate repository on a host computer.andM;Development environments of the future, based on AD/Cycle and SAA, willrelegate the mainframe to the role of a large file server, controlling anddirecting the flow of information from the corporate repository.andP;  Almost allof the functions of the applications-development life cycle will be performedon the desktop workstation, not on the mainframe.andP;  This mode of operation isused today in the operation of high-end, integrated CASE tools.andM;Therefore, a strategy for applications development in the 1990s should bebased on identifying the best architectures, methodologies, tools andmanagement techniques available.andP;  Strategic issues are important in defininghow applications-development technologies like CASE will be implementedwithin an organization.andP;  A strategy for CASE must directly address criticalsuccess factors of the organization, such as the use of information forstrategic advantage and the use of computerized systems to lock in customersand lock out competitors.andP;  An effective plan for CASE should be tied directlyto the critical success factors for the business.andM;One of the most important critical success factors for many businesses todayis support of business change.andP;  Everything in business is accelerating.andP;  Thebusiness metabolism is increasing and growing more efficient due to thewidespread use of computers and the increasing speed of applicationsdevelopment.andP;  As the windows of opportunity shrink, organizations that takethree years to build mission-critical applications are providing theircompetition with an opportunity to get into the market much faster.andM;In many cases, the inefficient applications-development methods used ininformation-systems (IS) departments are preventing the business fromevolving.andP;  IS management must be able to use CASE technology and developmentenvironments, such as AD/Cycle, to support business change and ensure thatthe applications of the future will be able to evolve as quickly as thebusiness requires.andM;One of the most important components of a CASE strategy is high-speeddevelopment, including the rapid development and maintenance of complexmission-critical systems that run major portions of the enterprise.andP;  The CASEstrategy should be based on using the most powerful integrated CASE toolsavailable and embedding those tools within a development methodology designedto build strategically important applications at high speed, in support ofbusiness change.andM;The most appropriate methodology for building strategic systems across acorporation is information engineering.andP;  The methodology was specificallydesigned to build detailed data and process models that can be convertedautomatically into code.andP;  Information engineering typically starts withhigh-level strategic planning issues and enterprise modeling.andP;  It movesthrough successive levels of analysis and design, building up sufficientinformation to generate code for an application automatically.andM;Recent extensions to the information-engineering methodology have providedsupport for high-speed applications development with small teams of speciallytrained analysts.andP;  A great deal of management attention is devoted toproviding the teams with clear goals, a high level of support and maximummotivation for excellence.andM;Turning from TraditionandM;We're rapidly moving to a development environment in which businesses can nolonger afford to use traditional structured development techniques.andP;  It's nolonger possible to use separate teams to build separate projects that don'tinterconnect.andP;  Most competitive firms are now saying they must haveapplication software connectivity throughout the value chain, which theycannot achieve without information engineering.andM;Information engineering is oriented toward support of disciplines such asstrategic planning, enterprise modeling, complex data-modeling techniques,business area analysis, tight integration across projects and rapidapplications development.andP;  If an organization is not using the advanced,highly integrated techniques embodied in information engineering, it is at astrategic disadvantage.andP;  Such techniques are of fundamental importance indeveloping a strategy for CASE.andM;Next week, I will discuss a strategy for introducing CASE tools that arecompliant with SAA and AD/Cycle.andM;----------To learn more about the subject of these articles, please call The JamesMartin Report, an information service updated quarterly, at (800) 242-1240.andO;For information on seminars, please contact (in the United States and Canada)Technology Transfer Institute, 741 10th St., Santa Monica, Calif.andP;  90402(213) 394-8305.andP;  In Europe, contact Savant, 2 New St., Carnforth, Lancs., LA59BX United Kingdom (0524) 734 505.andO;</TEXT></DOC>
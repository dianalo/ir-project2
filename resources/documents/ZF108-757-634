<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-757-634  </DOCNO><DOCID>08 757 634.andM;</DOCID><JOURNAL>Computing Canada  July 19 1990 v16 n15 p33(1)* Full Text COPYRIGHT Plesman Publications Ltd. (Canada) 1990.andM;</JOURNAL><TITLE>Architectures and applications of hybrid AI: merits of symbolicversus sub-symbolic systems.andO;</TITLE><AUTHOR>Rich, Elaine.andM;</AUTHOR><SUMMARY>Artificial intelligence (AI) systems are divided into symbolic andsub-symbolic systems.andP;  Symbolic systems are widely employed inapplications programming, particularly in rule-based expert systemdevelopments.andP;  The key advantage of the symbolic systems, whichlearn in a 'top-down' model where generalizations are applied tospecific situations, is that it can be told things directly,making large databases unnecessary.andP;  Sub-symbolic systems follow a'bottom-up' pattern of knowledge acquisition.andP;  They employdatabases during the process of problem-solving, but thesedatabases are concerned only with the individual experiences fromwhich a basis for 'bottom-up' learning can be established.andM;</SUMMARY><DESCRIPT>Topic:     Artificial IntelligenceExpert SystemsData BasesData Base DesignApplications Programming.andM;</DESCRIPT><TEXT>Architectures and applications of hybrid AIandM;Symbolic artificial intelligence (AI) reasoning systems have been usedsuccessfully in a wide variety of applications, primarily in the form ofrule-based expert systems.andP;  Estimates of the number of such systems inday-to-day use in American industry are in the tens of thousands.andM;Subsymbolic systems, including neural nets, genetic algorithms and a varietyof other reasoning systems are increasingly showing promise in many of theareas that have proved impervious to solution with symbolic techniques.andO;Several key characteristics of both kinds of systems are important inunderstanding where the power of each of the two mechanisms lies.andM;Subsymbolic systems can deal with noisy and approximate data; can learnautomatically, thus making initial creation easy if training data are readilyavailable; can learn incrementally and so adapt to changing environments; cangeneralize to situations they haven't seen before; and, can execute veryquickly once training has occurred.andM;Symbolic systems can be told things explicitly, making large amounts of dataunncessary if the basic principles are known; can be programmed modularly, sothey can be updated easily when individual facts change; can generateexplanations for their conclusions; can tell when they don't know; canexplore multiple alternatives; can manipulate very complex situations; caninterface with conventional symbolic databases, and, do not forget what theyare told.andM;One way of summarizing these differences is by talking about how these twokinds of systems acquire knowledge.andP;  Subsymbolic systems learn bottom-up.andO;They are given a large collection of individual experiences, and from thosethey attempt to form generalization that characterize a larger universe ofpossibilities.andM;Symbolic systems, on the other hand, learn top-down.andP;  They are given a set ofgeneralizations, which they then apply to individual situations.andM;A related way of characterizing this difference involves the way databasesare used by the two kinds of systems.andP;  Symbolic systems have databases thatcontain facts that are directly usable in problem solving (for example, theprice of a part or the salary of an employee).andP;  These facts are applicableamong a wide array of individual problem solving scenarios.andM;Subsymbolic systems also use databases, but in a very different way.andO;Databases are used not during problem solving but only during learning.andP;  Oncelearning has occurred, the database of training examples can be thrown away.andO;The database doesn't contain broadly useful facts; it contains only theindividual experiences upon which bottom-up learning can be based.andM;Given all of these properties, and the characteristics of many kinds ofapplications, it is clear that what is necessary is a way (or, more likely,several ways) of combining these techniques effectively in applications.andP;  Itwill probably turn out to be useful to support some kinds of combinationsexplicitly in shells also, so that the effort of constructing theappropriated marriage does not have to be redone for each application.andM;Elaine Rich is director of the Artificial Intelligence Library atMicroelectronics and Computer Technology Corp.andP;  (MCC) based in Austin, Tex.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-746-840  </DOCNO><DOCID>08 746 840.andM;</DOCID><JOURNAL>Data Based Advisor  July 1990 v8 n7 p84(8)* Full Text COPYRIGHT Data Based Solutions 1990.andM;</JOURNAL><TITLE>War and peace; dBASE and SQL. (Ashton-Tate's dBASE and structuredquery language; includes related article on dBASE products marriedto SQL databases)</TITLE><AUTHOR>Buzzard, James.andM;</AUTHOR><SUMMARY>A revolution in programming is coming that does not include use ofdBASE at the front ends of client-server models of cooperativeprocessing across local area networks.andP;  Developers are designingapplications using database servers to implement these models, andthe connection between client and server uses Structured QueryLanguage (SQL) as the data access and manipulation language.andP;  ThedBASE-compatible products may offer transitional tools, however,they must evolve into something new, or be overcome by newer,relational front-end tools.andP;  There are pros and cons to usingeither dBASE-language products versus SQL -based database servers.andM;</SUMMARY><DESCRIPT>Company:   Ashton-Tate (products).andO;Product:   dBASE (Data base management system) (usage).andO;Topic:     Data Base Management SystemsFront-End ProcessorsStructured Query LanguageComparisonClient/Server ArchitectureDistributed Processing.andM;</DESCRIPT><TEXT>&quot;A revolution is not a dinner party, or writing an essay, or painting apicture, or doing embroidery; it cannot be so refined, so leisurely andgentle, so temperate, kind, courteous, restrained and magnanimous.andM;Mao Tse-tung,andM;&quot;The question of  going too far&quot;andM;A revolution's coming.andP;  People are developing applications using databaseservers to implement the client-server model of cooperative processing acrossLANs.andP;  Front ends that run on client workstations (usually desktop PCs) andconnect to relational database  management  systems (RDBMSs) running onserver computers are critical to building these applications.andP;  (The serversare also usually PCs, although minis or mainframes may substitute asprocessing loads increase.) The connection between client and server uses theStructured Query Language (SQL) as the data access and manipulation language.andM;Unfortunately, the revolution in front ends probably doesn't include DBASE.andO;dBASE-compatible products (including dBASE IV, Clipper, Quicksilver, andperhaps even FoxPro) may provide transitional tools to using existingapplications and development skills with database servers.andP;  Ultimately,however, dBASE-compatible products must either grow into something quitedifferent or they'll be superseded by newer, more relational front-end tools.andO;Simply embroidering a database server link onto DBASE isn't going to cut it.andO;To support this argument, here are some of the pros and cons of usingdBASE-language products as front ends to SQL-based database servers.andM;The prosandM;Large market share The large installed base and sales volume ofdBASE-compatible products is probably dBASE's biggest advantage as a databaseserver front-end.andP;  Corporations are now accepting microcomputers aslegitimate data processing platforms.andP;  As a result of this, the PCmarketplace has shifted from being technology-driven to beingbusiness-driven.andP;  Purchasing decisions (and software company stock prices)are made based on commercial viability and longevity rather than technicalprowess.andM;The large installed base of DBASE-compatible products does have some concretetechnical benefits.andP;  Expert dBASE programmers are widespread and easy tofind.andP;  Finding expert C programmers can be difficult.andP;  Finding expertprogrammers for newer technologies, such as C++ or Smalltalk, can be next toimpossible.andP;  Also, a large portion of the PC end-user community has anexpertise in using DBASE to manipulate data.andP;  Aside from the large number ofpeople who already have some experience and skill using DBASE to query theirdata, there's a thriving training industry ready to teach new users.andM;* A complete development environmentandM;dBASE has most of the commands required by business application development.andO;True, some language extensions that should be in these products, such asputting up a dialog box or a parent-child form, aren't commonly available.andO;But a small industry has sprouted to provide the libraries and add-onproducts with features standard in fourth generation languages.andO;Unfortunately, most of the language enhancements added by dBASE IV and FoxProcenter on easing the task of writing application code (such as pull-downmenus, windows, and arrays) rather than improving the relational fidelity ofthe underlying database (such as adding a data dictionary or enforcingreferential integrity).andP;  With a few exceptions (execution profilers andcoverage analysis tools, to name a couple), DBASE developers are now as wellsupported by third-party tool vendors as C or COBOL developers.andP;  Thisabundance of tools is due in part to historic inadequacies in the toolsprovided by DBASE language vendors (report writers and source-leveldebuggers, for example).andP;  The large number of dBASE programmers anddevelopers also provides economic incentives for vendors to develop tools foror adapt existing tools to the DBASE market.andM;In situations where DBASE lacks some features as an application developmentfront end, the common access to shared data provided by database serversallows application developers to use other front ends where appropriate.andP;  Thedatabase server provides a common, concurrent data management facility to anyapplication or front end that can connect to the database server.andM;Fixing dBASE's worst problemsandM;Some of the most glaring deficiencies in DBASE as an application developmenttool are solved by using a relational database server as a back-end engine.andO;These deficiencies include:andM;Transaction integrityandM;In database terminology, a &quot;transaction' describes a logical unit of work asdefined by the user or the application, such as a group of updates totransfer funds from one bank account to another.andP;  Transaction integrity isthe DBMS' ability to ensure that a transaction is either completed or, if afailure occurs, completely undone.andP;  Partial updates aren't allowed by theDBMS.andM;dBASE IV includes transaction integrity commands, but even when it's usedwith a file server it lacks a centralized mechanism to recover from a failureon one of the workstations on a LAN.andP;  Recovery must be done manually andrequires a high level of expertise.andP;  When dBASE IV is used on a databaseserver, the server ensures that incomplete transactions are rolled back,without any intervention on the part of the user or database administrator.andM;* PerformanceandM;There are two reasons for performance degradation in dBASE-language DBMSs:inefficient access to data due to the lack of a query optimizer; andexcessive network traffic because all data processing or filtering must bedone on the workstation rather than the file server.andM;Because DBASE lacks a query optimizer, the user or application programmermust specify the method for retrieving data.andP;  While an expert dBASEprogrammer may be able to hard-code an efficient access scheme for aparticular query with a known (and fixed) data set, changes to the databasestructure or contents can invalidate that access scheme.andP;  Also, the expertiseand effort required to optimize procedural dBASE queries (or just to get themworking correctly) forces most users to try brutal approaches to retrievingtheir data.andP;  Database servers optimize queries and can (to some extent)relieve both the user and programmer from worrying about optimal accesspaths.andM;Database servers solve the problem of excessive network traffic by selectingand filtering records on the server computer rather than sequentiallytransferring all the records to the workstation for processing.andP;  Only theresults of the queries are returned over the network to the workstation.andM;* SecurityandM;To provide security for the data stored in DBF files, developers have had toresort to questionable techniques (such as altering bytes in the header ofthe file, which is a form of reversible damage).andP;  Even a moderatelyknowledgeable user, armed with a few simple tools, can bypass these securitymeasures.andP;  Database servers provide centrally managed security that can't becircumvented even by knowledgeable users (unless they happen to know someoneelse's user I.D.andP;  and password).andP;  Because the security is managed by the DBMSrather than the application code, the developer doesn't have to implement anauthentication and security system in every application.andP;  In fact, ad hocaccess security (from a report writer or even from the dot prompt) can beprovided on the database server.andM;*  Relational fidelity and database integrityandM;Perhaps dBASE's most serious problem as a development environment forfull-scale database applications is that it doesn't comply with therelational model.andP;  To some extent, using a relational DBMS as the back-endengine for DBASE applications alleviates this problem.andP;  Server-basedintegrity enforcement and command processing can also dramatically reduceapplication coding (producing what Microsoft calls &quot;thin&quot; applications).andO;Having the server enforce primary key uniqueness and foreign key referencescan eliminate some of the coding required in DBASE applications (currently,only Microsoft/Sybase's SQL Server supports these features).andM;ConsandM;* Mixed paradigms between dBASE and SQLandM;Unfortunately, using DBASE as a front end to SQL-based DBMSs also presents anumber of obstacles.andP;  Perhaps the worst is the basic conflict between thedata-manipulation commands in DBASE and SQL.andM;Unlike C or COBOL, DBASE already has a fairly high-level data manipulationand query language.andP;  To preserve your investment in existing DBASEapplications, an option must be provided to transparently convert or mapDBASE data-manipulation commands to equivalent SQL commands.andP;  Mappingcommands from DBASE to SQL produces what's sometimes referred to as&quot;invisible SQL&quot; (referring to the hidden generation of SQL by thecommand-mapping software as opposed to SQL explicitly written by thedeveloper or user).andP;  Some of the problems listed below could be avoided ifall of the data-manipulation commands in the DBASE application are written inSQL rather than DBASE.andP;  If the DBASE product used as a database server frontend supports direct or &quot;native&quot; embedded SQL, developers and users have theoption of rewriting DBASE applications to use SQL either partially orexclusively for manipulating the data.andP;  Converting to native SQL eliminatessome of the benefits of DBASE as a front end, such as third-party support andwidespread user and programmer expertise, but takes better advantage of thedatabase server.andM;Poor match for the relationalandM;modelandM;Part of the mismatch between DBASE and SQL is attributed to dBASE's poorcompliance with the relational data model.andP;  While it's beyond the scope ofthis article to argue the benefits of strict adherence to the model, the muchhigher degree of relational fidelity in SQL (compared to DBASE) poses aproblem when supporting existing DBASE applications and database designs thatviolate basic relational principles.andM;For example, DBASE databases are based on data files that, at first glance,resemble relational tables in a SQL DBMS.andP;  However, DBASE allows positionalnavigation (by record number) rather than associative (by primary key value)navigation, violating one of the basic assumptions of the relational datamodel.andP;  Also, DBASE data-manipulation commands are record-oriented ratherthan set-oriented.andP;  Locating and processing sets of records requires fairlyelaborate procedural coding (for that matter, SQL fails at being fullyset-oriented for some operations such as inserting new rows).andM;dBASE lacks direct support for several key relational operations (such asdifference and product operations).andP;  Instead, DBASE developers have toproduce equivalent functionality in their procedural code-a process prone toerror and usually less than optimal in performance.andP;  As I mentioned,procedural substitutes for the relational operations DBASE lacks must beconverted into numerous and potentially inefficient SQL commands before theycan be executed by the database server.andM;The DBASE language doesn't have a way to indicate missing information in adatabase although database servers commonly support null values to indicatemissing data.andP;  This lack of support for null values in DBASE requires thatthe software connecting the DBASE application to the database server convertany nulls returned by the server to an appropriate substitute value, such asa numeric 0 or an empty string.andP;  Without adding extensions to standard DBASEdata types, DBASE applications that access server-based data can't detectnull values returned by a query or insert nulls into a new or existing row ina table on the server.andM;* Loss of performanceandM;dBASE data-manipulation commands are usually atomic-they affect singlerecords.andP;  SQL commands, however, typically act against sets of records orrows in one or more tables.andP;  In order to transparently support DBASEapplications, each data-manipulation command in the DBASE source code must beconverted or mapped to a single SQL statement, which is then sent to thedatabase server.andM;Mapping individual DBASE data-manipulation commands to SQL may like DBASE.andO;Client application development tools must know about the data structuresdefined on the server.andP;  For example, they must be able to transparently querythe server to get validation rules and validate the data locally (on theclient) where possible.andP;  Front ends that don't provide this level of serverknow-how, will be used only until the opportunity to rewrite the clientapplication using more advanced tools presents itself.andM;In case this prediction seems overly pessimistic, remember that evendinosaurs, once the dominant animal life form on earth, never really becameextinct-they just had their market share reduced until they became lizards.andO;James Buzzard owns a database and application design consulting firm,Hammerhead Systems.andP;  His industry experience includes four years as V.P.andP;  ofEngineering at SBT Corp. and a background in finance and accounting.andP;  You cancontact him on the Data Based Advisor Readers Exchange BBS, (619) 270-2042,or via MCI mail (JBUZZ).andM;Q: Can DBASE products be successfully married to SQL databases?andM;We're doing that already.andP;  Craig McLeod Product Owner for CA-DB:cBASEComputer AssociatesandM;By necessity they have to.andM;Janet Walker Product Manager FoxSoftwareandM;DBASE/SQL provides much tighter coupling between SOL and the host language&quot;DBASE, compared with existing approaches for host language embedding of SQLin mini and mainframe environments.andP;  Typically, SOL is embedded in a languagelike C or COBOL in such a way that each SOL command must be explicitlybracketed with keywords like &quot;EXEC SQL.&quot; To execute these SOL programs, aprecompiler is required to strip out the SQL commands and replace them withcalls to database system entry points written in the host language.andP;  Theoutput from the precompiler must further be processed by a regular compilerin order to generate executable code.andP;  By contrast, DBASE/SQL seamlesslyintegrates SOL with DBASE control structures, memory variables, parameterpassing mechanisms, and user interface and environmental commands.andP;  DBASE/SQLsupports full IBM DB2 and ANS] standard SOL syntax, plus other extensionsprovided by the DBASE environment.andM;David Proctor, V. P. and General Manager of the Database Division Ashton-TateandM;dBASE IV, FoxPro, R:BASE, Clarion, and Paradox all remind me of what the TVmanufacturers tried to do in the  50s and '60s.andP;  They put a TV, recordplayer, tape deck, and speakers in a console and tried to convince us thatthis was the future of home entertainment.andP;  It took about 15 years of thatgarbage before home entertainment systems evolved into what they aretoday-components.andP;  I believe that &quot;do-everything&quot; products are headed for thesame fate.andP;  Programmers want to select tools carefully and combine them intoan optimum development platform.andM;Roger Donnay President Donnay Software DesignsandM;I think the product as a whole can be.andP;  I don't think the DBASE languagethough, will lend itself to work on SQL databases.andP;  It',,; too different.andM;Ray Love Group Product Manager for Databases Santa Cruz OperationsandM;As a programmer, I personally would rather be given one simple set ofcommands in which I can quickly become proficient, rather than lots ofalternatives that basically make the overall system larger and slower.andP;  So,yes, as a hook to mainframe databases-great.andP;  But as an extension to DBASE?andO;I'm not convinced...andM;Kit Gateley Director of Software Development Cykic Software</TEXT></DOC>
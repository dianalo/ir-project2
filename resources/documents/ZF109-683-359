<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-683-359  </DOCNO><DOCID>09 683 359.andM;</DOCID><JOURNAL>Hewlett-Packard Journal  Dec 1990 v41 n6 p63(11)* Full Text COPYRIGHT Hewlett Packard 1990.andM;</JOURNAL><TITLE>X.25 packet assembler/disassembler support in the HP 3000 datacommunications and terminal controller. (technical)</TITLE><AUTHOR>Allegre, Jean-Pierre; Sarrasin, Marie-Therese.andM;</AUTHOR><SUMMARY>The Hewlett-Packard 2345A, in its second major release and renamedthe data communications and terminal controller (DTC), offersmicrocomputer-based management; access to X.25 packet-switchednetworks; ability for terminals to switch from one MPE XL host toanother on the local area network; and back-to-back access tonon-MPE XL systems connected via RS-232-C to another terminalcontroller on the LAN.andP;  Packet assembler/disassembler (PAD)support masks all vendor-specific or nonstandard implementationswithout adding code or configuration complexity to provide remoteaccess to HP 3000 MPE XL systems in a PAD multivendor environment.andO;Throughput and connectivity are increased by offloading all dataediting from the host to the DTC.andP;  The PAD support task isreusable in future products.andP;  Communications protocols specifiedin CCITT recommendations X.3 and X.29 are implemented in the PADsupport software.andM;</SUMMARY><DESCRIPT>Company:   Hewlett-Packard Co. (Products).andO;Ticker:    HWP.andO;Product:   HP 3000 (Minicomputer) (Design and construction)HP 2345A Distributed Terminal Controller (Design andconstruction).andO;Topic:     Packet Assembler/DisassemblersX.25 ProtocolData CommunicationsControllers.andO;Feature:   illustrationchart.andO;Caption:   Diagram of the original HP 2345A distributed terminal controller.andO;(chart)Software architecture of the original DTC AOS. (chart)Second release HP 2345A DTC. (chart)andM;</DESCRIPT><TEXT>[FIGURES HAVE BEEN OMITTED]andM;The PAD support software implements the communications protocols specified inCC/TT recommendations X.3 and X.29.andP;  For performance reasons, the software isin the datacom and terminal controller (DTC) rather than the host MPE XLsystem.andM;FIRST RELEASED IN 1986, the HP 2345A distributed terminal controller  (DTC),offered connectivity from personal computers, terminals, and printers to asingle HP 3000 computer system running the MPE XL operating system.andP;  The DTC,connected to the host computer by an IEEE 802.3 local area network (LAN),could be thought of as a remote multiplexer.andM;From a hardware point of view, the DTC is built around an HP proprietary buscalled the Device I/O (DIO) bus.andP;  A server card with a 68000 microprocessorhandles LAN access and DIO management.andP;  Up to six multiplexer cards with Z80microprocessors can be plugged into the backplane.andP;  Adapter cards give eachmultiplexer card either eight direct-connect or six modem ports.andP;  Thus thefirst version of the DTC allowed up to 48 direct connections to an MPE XLsystem (see Fig.andP;  1).andM;From a software point of view, the DTC uses its own minimal operating system,called AOS.andP;  AOS is a message-based operating system that manages intertaskcommunication.andP;  Each software module is a task in operating system terms.andP;  Atask interacts with the other tasks by sending messages.andP;  The operatingsystem manages a queue of messages.andP;  When a message is at the head of thequeue, it is dequeued and given to the target task.andP;  Then the target taskexecutes and is not interrupted until the message is completely processed.andO;Hardware interrupts are managed by operating system handlers that transformthese interrupts into operating system messages.andM;On top of the IEEE 802.3 LAN, the DTC implements an HP proprietary protocol,AFCP, for the transport layer of the seven-layer Open Systems Interconnection(OSI) model of the International Organization for Standardization (ISO).andO;This transport protocol is optimized for LAN traffic and its peer isimplemented in the host computer system.andP;  The transport layer carriesterminal I/O requests that are encoded using another proprietary protocol,ADCP, which manages all the terminal read, write, and control functions.andP;  Ithas also been optimized for performance.andM;The software architecture of the original DTC is shown in Fig.andP;  2.andP;  Themanagement task (MGT in Fig.andP;  2) handles all the management requests withinthe DTC along with initialization.andP;  Among its important functions aresoftware download and upload.andP;  At initialization, the DTC sends a multicastrequest.andP;  Upon receiving this request, the host starts sending the DTC codethrough the LAN.andP;  This allows easy updates of the code without the need for aROM change.andP;  When the DTC detects an abnormal condition, it is able to uploadits entire memory to the host, allowing further study by an HP representativefor troubleshooting.andP;  The management task also handles all the reset andstatus requests.andM;The DIODAM task is in charge of managing the DIO bus interface and also doessome ADCP preprocessing.andM;The MUX task transforms the read, write, and control requests into characterstransmitted to each terminal.andP;  It also multiplexes several independent datastreams to the backplane slots.andM;Second DTC ReleaseandM;In its second major release, the HP 2345A has been renamed the datacommunications and terminal controller.andP;  It now offers the following newfunctionalities (see Fig.andP;  3):andM;* PC-based managementandM;* Access to X.25 packet-switched networks through synchronous networkprocessor (SNP) cardsandM;* A capability for terminals to switch from one MPE XL host to another on theLANandM;* Back-to-back access to non-MPE XL systems connected via RS-232-C to anotherterminal controller (DTC or TS8) on the LAN.andM;The X.25 access provides for system-to-system communications as well as forremote terminal communications.andP;  Up to three SNP cards, which are based onthe 68010 microprocessor, can be plugged into the DIO backplane instead ofmultiplexer cards.andP;  SNP adapters of two different kinds allow high-speed,multistandard or RS-232 SNP connections to the X.25 network.andP;  Each SNP cardcan handle up to 256 connections for X.25 packet sizes of 128, 256, or 512bytes and up to 54 connections for a packet size of 4096 bytes.andP;  Access tothe LAN is through the server card, as it was in the original DTC.andM;The second-release DTC is managed through a personal computer using the HPandM;OpenView DTC Manager, an application based on Microsoft' Windows and the HPOpenView network management architecture.andP;  The management features include:andM;* DTC configurationandM;* DTC download/upload/reset/statusandM;* Board upload/reset/statusandM;* Site management (show connections with information on end-to-end path)andM;* Protocol status a Connection upload/reset/statusandM;* Logging and tracing.andM;The same operating system runs on the server card and on the SNP cards.andP;  Fromthe operating system point of view, the server card is the master card andeach SNP card is a slave card.andP;  Communication between tasks from the serverboard to an SNP board over the DIO bus is managed by the operating system.andP;  Amessage can be sent to any task from the master board to the slave board andvice versa in a transparent way thanks to the operating system's multiboardcommunication mechanism.andP;  Messages from the server to the SNP are copied bythe operating system onto the SNP board.andP;  Messages from an SNP task to theserver don't need to be copied because the server board can access all of theSNP cards' memory.andM;To make these functionalities possible, many protocols have been added in theDTC.andP;  Fig.andP;  4 shows the possible paths through the DTC and its protocols.andM;ALCP is an HP proprietary protocol based on the CCITT X.213 recommendation,An OSI Network Layer Service for Connection-Oriented Protocols.andP;  ALCP offersX.25 access for host-to-host communications.andP;  Two operating system tasks,X.25 Level III and X.25 Level II, implement ALCP, the X.25 level IIIrecommendation, LAP-B  X.25 level II), and X.21 bis  X.25 level I).andP;  X.25data is encoded in ALCP messages and transmitted to the host using the AFCPtransport layer (level IV) and vice versa.andM;The terminal switching capability is offered by DTC user interface commandslocated in the DIODAM task.andM;The back-to-back functionality is offered with the implementation of theTelnet/TCP/IP stack.andP;  Telnet is a DARPA standard network virtual terminalprotocol and is implemented in the DIODAM task.andP;  ADCP (the HP virtualterminal protocol) has been enhanced to support the added Telnetfunctionality.andP;  The TCP and IP protocols have been implemented as twoindependent DTC tasks on the server board.andM;Communication through remote asynchronous PAD devices is implemented in a PADsupport task (PADSUP) on the SNP board.andM;The DTCMGR agent task replaces the management task of the first-release DTC.andO;This task receives terminal and PC requests and transmits them to theappropriate DTC task.andM;The target name resolution task (TNR in Fig.andP;  4) is in charge ofname-to-address resolution using configuration information, HP proprietaryprotocols (Probe or Name Lookup Protocol, (NLP), or standard protocols(Address Resolution Protocol, (ARP).andM;The DTCMGR extension (EXT) task provides the SNP logging and tracingfacilities.andP;  These functionalities send data to the personal computer runningthe HP OpenView DTC Manager software, which is able to format and display thedata.andM;PAD Support FunctionalityandM;A PAD (packet assembler/disassembler) is a piece of software and/or hardwarethat allows an asynchronous device, such as a terminal or a printer, tocommunicate with an X.25 network.andP;  PAD support in the DTC provides a hostcomputer with support for terminals connected to public PADs (also callednetwork PADS) and with support for terminals and printers connected toprivate PADS.andM;Communication between a PAD and an asynchronous terminal is described in theCCITT X.28 recommendation.andP;  The different parameters necessary to set up theproper terminal profile are defined in the CCITT X.3 recommendation, andcommunication between the host and the PAD is ruled by the CCITT X.29recommendation (see Fig.andP;  5).andM;A private PAD can be thought of as an external PAD.andP;  It is connected to a PDN(public data network) as a host and has an X.25 address, but it behaves likea PAD when communicating with another host.andP;  HP provides the HP 2334A and HP2335A X.25 cluster controllers, which allow up to 16 terminals and/orprinters to access a network (see Fig.andP;  6).andM;Applicable StandardsandM;The CCITT has issued X.25, X.28, X.29, and X.3 recommendations in 1976, 1980,1984, and 1988.andM;The objective of MPE XL PAD support in the second release DTC is to supportapplications by using the X.3 and X.29 recommendations and philosophy.andP;  Toachieve this, the PAD support must manage the X.3 parameters in such a waythat the user does not have to care about them.andP;  In the new DTC, the sameprocessing is done for every type of PAD-public or private.andP;  The PAD supportsets parameter values according to the 1980 X.3 recommendation so that theDTC can support as many PADs as possible.andM;The PAD support in the new DTC uses X.3 and X.29 to transmit control requeststo the PAD.andP;  The X.3 recommendation defines a set of couples of parameterreferences and values to control the asynchronous interface of the PAD.andO;According to the 1980 X.3 recommendation, eighteen parameters are availableto manage a PAD:andM;1  Escape from data transfer and enter a PAD commandandM;2  EchoandM;3  Data forwarding conditionandM;4  idle timer (time between two characters)andM;5,12  Flow control using XON/XOFFandM;6  PAD service signalsandM;7  BreakprocessingandM;8  Discard outputandM;9,10,14  Padding after CR, LF, LF line foldingandM;11  LinespeedandM;13  Linefeed insertion after CRandM;15,16,17,18  Editing parameters.andM;A simple example is the parameter reference 2, defined for echo processing.andO;If this parameter is set to the value 0 the PAD will not echo the data sentto the network.andP;  When the value is set to 1 the PAD is in charge of echoingthe data entered on the terminal keyboard to the screen.andP;  Therefore, areference number specifies a functionality (e.g., echo processing) and manyvalues can be attached to this functionality (do echo, do not echo).andM;In the 1984 X.3 recommendation, four more parameters were added along withthe possibility of having network dependent formats for PAD devices.andP;  Thefour added parameters are:andM;19  Editing PAD service signalsandM;20  Echo maskandM;21  Parity treatmentandM;22  Page wait.andM;In the 1988 X.3 recommendation, the main modification is that PAD servicesignals (prompts and user messages) can be in English, French, or Spanish.andO;To transmit the X.3 parameters to the PAD, the X.29 recommendation is used.andO;This recommendation defines the operations a host can perform on a PAD.andO;According to the 1980 X.29 recommendation, the main operations on a PADandM;are: !!! BEGIN TABLEandM;Set                            Set a profile of X.3 parametersandM;Read                           Request the PAD X.3 parameter valuesandM;Set and read                   Set a profile and then read itandM;Parameter indication           Receive the values of the required currentandM;PAD profile after a read or set and readandM;Indication of break            Notify the host that the Break key has beenandM;pressed and tell the host whether the PADandM;is discarding dataandM;Invitation to clear            Clear a virtual circuit as soon as all datasentandM;to the PAD has been sent to the deviceandM;PAD error message              Indicate a PAD problem  invalid messageandM;code received, for example).andP;  !!! END TABLEandM;A profile is a set of X.3 parameter references and values.andP;  All thesemessages are coded and transmitted using X.25 packets with the qualifier flagset.andP;  The usual convention for describing a profile isandM;[andless;parameter referenceandgt; : andless;parameter valueandgt;,]* For example, 2:1, 3:2, 4:1means that parameter 2 has value 1, parameter 3 has value 2, and parameter 4has value 1.andM;In the 1984 X.29 recommendation, a new message was added, called thereselection PAD message.andP;  It makes it possible to clear an X. 2 5 circuit toa destination after transmission of all the data and to establish a newcircuit to a given destination in the same message.andP;  In the 1988 X.29recommendation, this was enhanced to support the TOA/ NPI (type ofaddress/numbering plan indicator) address subscription facility defined inthe X.2 recommendation.andP;  This enhancement is mainly for future extension toISDN.andM;DTC PAD Support ArchitectureandM;We could have built a PAD support task in the host computer on top of theNetIPC (network interprocess communication) software using the VT (virtualterminal) network service.andP;  This was done for MPE V PAD support.andP;  For the DTCand MPE XL, we have instead built a task called PADSUP within the DTC, mainlyfor performance reasons.andP;  This decreases the amount of character processingthat must be done by the host, since this is done remotely by the PADSUP taskin the DTC front end.andP;  All X.3 and X.29 processing is in the DTC PADSUP task,so the entire X.25, X.3, and X.29 implementation is within the DTC.andM;The PADSUP task receives ADCP requests from the DIODAM task as if it were amultiplexer with a physically attached terminal.andP;  It transforms theserequests into X.25 and X.29 requests through the ALCP interface.andM;This architecture has many advantages.andP;  Remote terminals have the same datapath in the host as local terminals, thereby decreasing the time needed forimplementation, support, and maintenance.andP;  The known ADCP protocol, which wasdesigned for the original DTC, was retained because it is simple andefficient for asynchronous communications, and very few extensions wereneeded for PAD devices.andP;  The ALCP interface, which is already used forsystem-to-system communication, is used to communicate with the X.25 levelIII module.andP;  The efficient, reliable AFCP transport protocol is used forcommunication with the MPE XL host, and access to the transport layer ishidden by DIODAM.andM;The architecture also allows switching capability.andP;  Because the userinterface is in the DIODAM task, the functionality implemented for the localterminals can be reused by the PAD support task to connect remote terminalsto any MPE XL computer on the LAN.andM;SecurityandM;Through the X.25 network and gateways, numerous PAD users may try to connectto various systems.andP;  This causes security concerns for system and networkmanagers, who need to restrict the use of some systems.andP;  For example, whenprivate X.25 networks are tied to public networks, access is often authorizedfor users within the private networks and restricted for public PAD users.andO;On the other hand, some customers don't care about security.andP;  To meet variedcustomer needs, the DTC PAD support offers flexible security features.andM;Two kinds of security are provided.andP;  First, a management function availablefrom the HP OpenView DTC Manager PC workstation can be used to start or stopthe PADSUP task.andP;  When the PADSUP task is not started on a card, all PADcalls will be cleared.andM;The second type of security is a security list based on the X.25 callingaddress.andP;  Users with unauthorized X.25 device addresses are filtered out atthe DTC level.andP;  A table, configured at the HP OpenView DTC Manager PC,associates X.25 device addresses with host names and passwords.andP;  When theuser tries to log on with security configured, the password tied to the listmust be entered in the user data of the call packet or through the DTC userinterface.andP;  The user is allowed three attempts to enter the password.andP;  If awrong password is entered or if the node name to which the user wants to beconnected is unauthorized, the connection will be cleared.andP;  Users who knowthe password can be allowed access to all systems or only to certain systems.andO;It is also possible to reject all users calling from a particular address.andO;Wildcard digits are available for use with public PADS, where the X.25address is not relevant.andM;Testing the PADandM;A major problem for PAD support is managing multivendor PADs connected tomultivendor devices.andP;  The X.3 recommendation defines a set of parametervalues that look like driver characteristics.andP;  There have now been foursuccessive editions of this recommendation from the CCITT.andP;  Each PAD vendorimplements only a subset of the latest X.3 parameter values.andP;  Fromexperience, we know that even some mandatory values aren't implemented insome PADS.andP;  It is always a support nightmare to characterize a PAD problem,especially if the problem is that the system is hung up in the middle of anapplication.andP;  To alleviate this problem, a PAD test sequence is implementedin the DTC.andP;  It is run at connection initialization to verify the X.3parameter values supported by the PAD.andP;  After this test, information isavailable to inform the network administrator of potential intrinsic mappingsthat may fail because of PAD restrictions.andP;  Once data transfer starts, thePADSUP task always knows what it can and cannot ask the PAD to do.andP;  To mapall the intrinsics used in the terminal I/O world, only a subset of the X.3couples (parameters and values) is needed.andP;  PAD support in the DTC tries toset all the values at connection initialization that will be needed duringthe connection to support all the applications.andP;  If a parameter is notsupported by a PAD, an error is logged and the DTC PAD support never setsthis parameter again, thereby avoiding further problems.andP;  This implementationexposes all the multivendor PAD problems at connection initialization, whichseems the best point to detect problems.andM;The PAD test is performed by the PAD support task just after the X.25 callconfirmation packet is received by the DTC from the host (host callingterminal) or sent by the DTC to the host (terminal calling host).andP;  Thesequence is as follows:andM;1.andP;  Identification of PAD parameters.andP;  An X.29 read of all PAD parameters issent to identify the parameter numbers supported or not supported by thecalling or called PAD.andM;2.andP;  PAD test.andP;  An X.29 set and read of a given set of X.3 couples is sent tothe PAD.andP;  These couples consist of the parameter numbers supported by the PADwith the parameter values required by all types of applications.andP;  To minimizethe number of messages needed to determine the characteristics of the PAD,the first X.29 set and read message sets alls the values that may be used foreach parameter.andP;  For example, the profile of couples might be 1:0,1:1,2:0,2:1,3:0,3:2,4:0,4:1,4:10, and so on.andM;The PAD support task then waits for an X.29 parameter indication, in whichall unsupported parameter values are marked by an error flag.andP;  When such avalue is detected, an event is logged if the value is considered optional(for example, if parameter 4 is not supported, HP VPLUS applications can'twork with this PAD), or the connection is cleared if the value is consideredmandatory (for example, parameter 5 with the value 1, PAD flow control).andO;Some PADs don't follow the 1980 X.29 recommendation and answer with X.29 PADerror messages for the values they don't support.andP;  In this case, many set andread messages are sent to identify the unsupported couples.andM;At the end of this sequence, a list of supported PAD parameter values iscomputed and stored for later use in data transfer.andM;3.andP;  PAD configuration.andP;  An X.29 set of all the parameters is sent toinitialize the PAD profile.andM;Mapping ADCP RequestsandM;The PADSUP task must transform ADCP requests into X.25/X.29 data, and is incharge of user data editing.andP;  Only the main path is described here.andM;To establish a connection to a host MPE XL system from a remote terminal, theuser enters the X.25 address of the desired DTC or host.andP;  The PAD transmitsan X.25 call to the DTC, which decodes the X.25 host address and translatesit into a host name using configuration data.andP;  With this host name, the DTCcan send a request onto the LAN using the HP Probe protocol to retrieve theLAN address of the MPE XL host system.andP;  With the LAN address, the connectioncan be initialized to the host.andM;Upon a host request to establish a connection to a PAD port, the DTC receivesa string that identifies the device.andP;  Associated with this string is an X.25address obtained from configuration data.andP;  With this X.25 address, an X.25call packet can be transmitted to the PAD.andM;Write data is transmitted to the PAD as X.25 data.andP;  For a write and readoperation, the PADSUP task sends data to the device and expects data from thedevice.andP;  When data comes from the device, the PADSUP task is in charge ofdata editing (suppression of backspace, detection of subsystem break).andP;  Theread data is sent to the host as soon as a read termination condition isencountered by the PADSUP task  end of record detected, byte count reached,time-out, etc.).andM;Control requests correspond to setting driver parameters.andP;  They are mappedinto X.3 couples by the PADSUP task and are sent to the PAD.andP;  The list ofsupported parameter values, built during the PAD test, is used to ensure thatthe PAD is sent only the couples it is able to use.andP;  For example, when an HPVPLUS block mode application is used, the PADSUP task receives a write portconfiguration command with a flag indicating that the HP VPLUS block mode isenabled.andP;  The task then configures the PAD with the X.3 parameter valuescorresponding to no escape from data transfer (1:0), no echo (2:0), dataforwarding condition (3:0,4:10), break enabled (7:21), XON/XOFF flow controlenabled (5:1,12:1), no editing (15:0).andP;  When the user presses the Enter key,all of the data on the current screen is sent by the terminal to the PAD,which sends it on to the DTC PAD support task because of the data forwardingcondition.andP;  All full packets are sent to the DTC and the last packet is sentusing the idle timer value specified by parameter reference 4 set to thevalue 10.andM;Another example is the transmission of a break to the application.andP;  If theapplication authorizes the user to press the Break key, the PADSUP taskreceives a control request consisting of a write port configuration messagewith a break enabled flag.andP;  The task sends an X.29 set to the PAD to enablebreak processing (7:21).andP;  When the user presses the Break key to interruptprocessing, the PAD sends an X.25 interrupt packet to the DTC PADSUP taskalong with an X.29 indication of break packet.andP;  The PAD will discard all datareceived from the DTC.andP;  On the X.25 interrupt, the PADSUP task sends anasynchronous break detected event to the DIODAM task, which transmits it tothe host.andP;  On the X.29 indication of break, the PADSUP task sends an X.29 setto the PAD to reset the PAD discard output state (set 8:0).andP;  This messageflushes all data buffered in the X.25 network and puts the PAD in a normaldelivery state.andP;  New data coming from the application can again be displayedon the terminal.andP;  In the case of a control request to clear a connection, thePADSUP task receives in AFCP abort connection message from the DIODAM task toshut down the X.25 connection.andP;  Special care must be taken when it comes toclosing a connection.andP;  X.25 clear packets are not flow controlled as X.25data packets are, so it is possible that the clear packet may overtake thelast data packet sent and therefore the last data for the PAD device may belost.andP;  For this reason, X.29 specifies a safe way to close a connection.andP;  ThePADSUP task does not send the X.25 clear packet, but instead sends an X.29invitation to clear message, which is flow controlled like normal data.andP;  Whenthe PAD receives this message, it will already have received all the X.25data, and will then issue an X.25 clear message.andP;  On receipt of the X.25clear message, the PADSUP task can clear its internal table.andM;When the connection is cleared by the user PAD (with the X.28 CLR command,for example), the PADSUP task sends an ADCP asynchronous link leveldisconnected message to the DIODAM task, which transmits it to the host,closing the AFCP connection.andM;EditingandM;One of the functions performed at the PADSUP level is data editing.andP;  Thisconsists of processing the byte stream received from the X.25 network anddetecting any special characters for which actions are to be performed.andO;These special characters include backspace, line delete, subsystem break, andothers.andP;  They are configurable ASCII values that the application sets usingfile system intrinsics such as FCONTROL.andP;  The PADSUP task has to be able toprocess these characters according to their configured ASCII values.andO;Usually, part of the processing is done by the PADS, most of which are ableto process backspace and line delete characters.andP;  However, because ADCPprovides more editing features than X.3, and because all PADs don't supportthe editing functionality, the PADSUP task has to be capable of doing thisprocessing itself.andM;Editing is on the critical code path.andP;  it is invoked for any inbound X.25packet and requires character-by-character processing.andP;  The morestraightforward algorithm is to use a cascade of IF statements.andP;  Becausethere are eleven special characters to test for, this makes eleven tests foreach character.andP;  The most frequent case, a normal character, is the worstcase because all eleven tests must be performed before it is known that thereis nothing to do.andP;  On the other hand, this algorithm consumes very littlememory because it requires storing only the eleven special values.andP;  Eachconnection can have a different set of values configured, so the total numberof values that must be stored is 11 X 256, where 256 is the maximum number ofconnections.andM;The algorithm we have implemented is more memory-consuming but has muchbetter performance.andP;  The main principle is to use a structure that we call acharacter filter.andP;  It is an array of 256 entries for each connection 256x256total entries), indexed by the ASCII values.andP;  Each entry represents aparticular action to perform.andP;  For example, if the backspace character isrepresented by the ASCII value 08, at the index 08 the PADSUP task recordsthe code for the backspace action.andP;  The most frequent-action is no action forthe normal characters and is coded with 0.andP;  The array is initialized to zeroand the proper actions are recorded at the ASCII values of the specialcharacters when a special ADCP control message called a write portconfiguration message is received from the host (see Fig.andP;  7).andM;When the data arrives from the X.25 network, the editing algorithm isexecuted (see Fig.andP;  8).andP;  For each character, the action to be performed isfetched from the character filter and executed.andP;  In the case of a normalcharacter, nothing is done.andP;  For the others, the appropriate processing istriggered.andM;To avoid a test of the length of the buffer on each character, a specialcharacter called the end of data marker is written at the end of the buffer.andO;A special action is recorded in the character filter for this character.andO;When this character is encountered, this action is triggered, and only inthis case is the test of the length of the buffer made.andP;  If the end of thebuffer has not been reached, it means that the end of data marker was part ofthe user data and should be treated as a normal character, so no action istaken.andM;PADSUP Development MethodologyandM;In developing the PAD support component, the first step was to define theexternal specifications of the product.andP;  All MPE XL intrinsics and the X.3and X.29 recommendations were analyzed to define what could be supported andwhat could not be supported because of X.3 recommendation restrictions.andP;  Theconfiguration and the support features were studied with the participation ofHP marketing people.andM;The second step was to define the best architecture to provide the desiredfunctionality.andP;  We analyzed the data flow from the host to the DTC and thePAD, and then defined the component responsibilities for the host modules andthe DTC modules.andM;The third step was to analyze the exact characteristics of the PADSUP taskwithin the DTC.andP;  For this, we used the structured analysis method with the HPTeamwork SA/ RT tool to define what needed to be done without regard to howit would be done.andP;  We then drew a functional model (what the system does), adata model (how data is transformed), and a behavior model (state transitiondiagram and matrix, and decision tables that characterize the system).andP;  Thismethod was of considerable benefit for analyzing and detailing all themechanisms needed in the PADSUP task.andP;  The graphic representation and thetop-down method helped us better locate where the complexity and the mainincidence of all the features occurred on the model.andP;  A review was done toverify the PADSUP analysis.andP;  This analysis gave us some metrics  Bang,&quot;estimated number of decisions or branches, etc.) to characterize the module'scomplexity, helped us in schedule estimation, and gave a good idea of thetests needed during the qualification phase.andP;  During this phase, the projectmodel and the preliminary test plan were completed.andM;PADSUP Task DesignandM;During the PADSUP task design phase, we defined what modules and whatinterfaces were needed to meet the specifications.andP;  We organized, ranked, andordered the characteristics to meet the requirements.andP;  We chose to follow thestructured analysis with a structured design, providing three kinds ofdocuments: structure chart, module specifications, and design dictionary.andO;The structure chart shows the basic components of the solution and shows theinterfaces in a top-down manner.andP;  The module specifications define theprocedural aspects of the solution, or the sequence of interactions.andP;  Thedesign dictionary defines the interfaces.andM;A first review of the main module organization was done to verify theencapsulation, design cohesion, and coupling of the different modules.andP;  Themain modules were then designed independently.andM;A complete review of each module was done to find the design flaws.andP;  This washighly successful because we found all the complex areas before coding andwere able to redesign the parts that were too complex.andP;  As a result, very fewdesign bugs were found during testing.andM;In the coding phase, the design documents helped us to be productive rapidly.andO;The code was done in C on HP-UX workstations.andM;PADSUP Task TestingandM;The PAD support task has been tested in a multiple-step process.andP;  The targetcode (to be downloaded to the hardware later) was produced with the HP-UX Ccompiler on an HP 9000 Series 300 workstation and then postprocessed.andP;  Thiswas possible because the microprocessor on the SNP card is a 68010, which isof the same family as the workstation microprocessor.andP;  This made it possibleto test the code in a comfortable environment (diskless workstation) and thenport the code to the hardware with a high level of confidence, since thetarget code was almost the same.andP;  One of the main advantages of doing thiswas the availability on the workstation of many C tools that we could use onthe target code (C debugger, branch flow analyzer, prof for performanceanalysis, etc.).andM;The multistep testing process consisted of unit testing, integration testing,and real-environment testing.andP;  Related issues include testing in themaintenance phase and testing of multivendor PADS.andM;Unit Testing.andP;  The objective of this step was to bring each individualcomponent (procedure or function) to a good quality level for laterintegration.andP;  The designer of each procedure or function was responsible fordeveloping code stubs to exercise the component.andP;  This was done at the unitlevel, that is, the component was tested by itself and not in a completeenvironment.andP;  This level of testing exposed most of the coding errors.andM;Functional Testing.andP;  At this test level, all the individual modules of thePADSUP task were merged together and exercised in a functional way, that is,we were testing whether the module was indeed performing the functionsspecified.andP;  This was mainly achieved with the message machine described inthe article on page 74, which is capable of building messages, sending themto the module under test, receiving the output, and decompiling it in areadable format.andP;  In regression mode, output files were compared to referencefiles that had been manually checked during previous testing.andP;  Since both theoutput file and the reference file were in readable format, the differenceswere easy to see.andP;  All of these tests were run on the HP-UX workstation.andM;The message machine tool was really convenient to use.andP;  With it, we easilyachieved the branch flow analysis (BFA) coverage required.andP;  The objective ofthe project was to test 85% of all the software branches.andP;  We have achieved93% without the need of any additional operations such as setting breakpointsor adding code.andP;  Moreover, because the tool provides for easy automation, allof the test suite has been maintained and now we can run a regression testovernight without any external intervention and reach a BFA coverage of 93%on each version or patch released.andP;  The number of test cases is quite large.andO;Up to 50,000 different messages are sent to the module under test, and theoverall size of all the output files that are checked for differences withreference files is 36 megabytes.andP;  Integration Testing.andP;  These tests wereconducted at two different levels: in the simulated environment provided bythe message machine under the HP-UX operating system and in the targetenvironment (hardware).andM;The objective of the HP-UX integration testing was to add step-by-step all ofthe tasks external to the PADSUP task in the simulated environment.andP;  In thefirst step, all of the other tasks were emulated by the message machine.andO;These were then replaced, one by one, with the actual tasks, and the systemwas exercised by the message machine.andP;  Finally, all of the interfaces withother modules were tested and debugged with the actual tasks still on theworkstation.andM;For hardware integration, the code was downloaded to the hardware and run inits final environment.andP;  Because of the multiple tests already conducted, thequality at this stage was already rather high and we found very few defectsduring this testing.andP;  The principal tool we used was a debug port thatallowed us to connect a terminal to the board and set breakpoints, dumpmemory areas, and so on.andP;  Real-Environment Testing.andP;  These tests were donemainly by the QA department to test the quality objectives of the product inthe areas of functionality, localizability, usability, reliability,performance, and serviceability.andP;  The setup used was close to a real customerenvironment.andP;  For ease of testing, two different environments have been used:a real PAD environment and the XXPAD environment.andM;The real PAD environment is a customer-type environment.andP;  It consists of anMPE XL system, a DTC with SNP cards, an X.25 network or switch, PADS,terminals, and printers.andP;  The tests consist mainly of manual validation (forDTCMGR functions, for example) and of test programs run on the MPE XL systemthat exercise the datacom functions through the system intrinsics.andP;  Theproblem with this setup is that the number of sessions is limited by thehardware.andP;  The DTC supports 256 PAD connections per synchronous card andthree synchronous cards per DTC, so a full test requires so much hardwarethat it is impractical.andP;  To approximate a full test (i.e., limit, stress, andvolume testing), we use the XXPAD environment.andM;The XXPAD environment makes it possible to minimize hardware setup.andP;  The PADis basically a multiplexer of many asynchronous lines (16 in the case of theHP 2335A PAD) to a single X.25 line.andP;  Therefore, instead of managing 16 ormore terminals, we can just put on the X.25 line a piece of hardware andsoftware that emulates numerous asynchronous devices.andP;  This way, the numberof connections tested can be increased simply by increasing the number ofvirtual circuits handled by the test machine.andP;  For ease of implementation andfor hardware availability, this tool was developed on an MPE machine runningHP NS X.25 software, which provides programmatic access to X.25 level III.andO;On top of the level Ill access, we developed a test program called XXPAD,which is able to handle as many virtual circuits as required.andP;  This programreads the instructions to execute (basically user commands) from a scriptfile and handles both X.25 and X.29 data.andM;For the PADSUP tests, the scripts simulated multiple users connected to theDTC and to the MPE XL system and running some basic applications such as thecommand interpreter and editor.andP;  Some test programs were also developed onthe MPE XL system to stress special data transfer cases, such as largewrites, large reads, and stress conditions of control requests.andP;  These ran inconjunction with the XXPAD tool on the PAD side.andM;In its first versions, the XXPAD tool ran on an MPE V system (Fig.andP;  9).andP;  Whenthe XL version of the HP NS X.25 software became available, it was possibleto migrate to the MPE XL system using a loopback configuration.andP;  The XXPADtool accessed the DTC through the NS stack (system-to-system) and then loopedback on the network to enter another SNP card on which the connection wasrouted to the PADSUP module as formatted by the XXPAD tool (Fig.andP;  10).andP;  TheXXPAD tool eliminated a great deal of hardware and test setup for the testsimplying multiple connections.andM;To determine when to end the quality tests, each quality engineer logged thetime taken for each test and the number of bugs encountered.andP;  This data wasinput to a software tool along with a measure of the quality level we wantedto reach.andP;  Using the Musa model,&quot; the tool gave us a weekly forecast of theend of the tests.andP;  Two months before the scheduled end of the tests, theweekly forecasts became stable, indicating the same date for the end of thetests.andP;  Maintenance Testing.andP;  In the maintenance phase of the PADSUP task,the functional test suite continues to be maintained with the messagemachine.andP;  Each time a new version of the PADSUP code is built, it isvalidated against the test suite.andP;  It requires some extra work to maintainthe test suite.andP;  The reference files must be kept up to date, and because thetest coverage is high, any small change in the code causes a modification inthe result of the tests (i.e., the difference between the reference files andthe output files) that has to be manually validated.andP;  But the test suiteensures a high level of quality and confidence when a new version or patchhas to be delivered on a tight schedule.andP;  We are also working with the realhardware environment, of course, and with the XXPAD environment because itallows automatic regression and reliability tests in a realistic environment.andM;ConclusionandM;The PAD support in the DTC architecture offers remote access to HP 3000 MPEXL systems in a PAD multivendor environment by masking all vendor-specific ornonstandard implementations without adding code or configuration complexity.andO;It improves both performance and reliability by using the existing terminalI/O path on the MPE XL system.andP;  Offloading of all data editing from the hostto the DTC increases throughput and connectivity by allowing a single networkaccess for several systems.andP;  Modularity of both design and code has beenpreserved to make the PAD support task reusable in future products.andM;Formal methodology has been used throughout the development.andP;  The use ofstructured analysis, structured design, and formal testing at differentlevels, all with the permanent collection of metrics, has been fundamental tothe success of the project.andP;  While such techniques cost us time in the firstphases of the development, they saved a lot in the integration and testphases and left the product in good shape with regard to maintenance andexpandability.andM;AcknowledgmentsandM;The conception and the implementation of the PAD support task required theeffort of several teams.andP;  We'd like to thank all the people involved at boththe Information Networks Division and the Grenoble Networks Division.andO;Francois Gaullier and Christian Gresset, the PADSUP project managers,provided indispensable management and technical support.andP;  We would like toacknowledge the effort and perseverance of Sylvaine Roy who did the analysis,part of the design, the test plan, and part of the tests with Amar Kebaili.andO;Other key contributors in the project were Christian Lotito, RemyPoulailleau, Olivier Bordes, and Bernard Wagner for design review, coding,and testing.andP;  Frederic Maioli provided a tool to test the PAD supportsoftware under simulation.andP;  We would also like to thank Jean-Philippe Caradecwho was responsible for the DIODAM task and participated in the design of thegeneral architecture.andP;  The XL driver modifications were done by Celeste Rossand Michael Reasoner and the XL tests were conducted by Chris Smith andLarkin Ryder.andP;  We appreciate the very good relationship and the team spiritbetween the two divisions.andM;ReferencesandM;1.andP;  G.F.andP;  Buchanan, et al, &quot;A Distributed Terminal Controller for HPPrecision Architecture Computers Running the MPE XL Operating System,&quot;Hewlett-Packard journal, Vol.andP;  38, no.andP;  3, March 1987, pp.andP;  21-28.andM;2.andP;  S.Y.andP;  Amar and M.A.andP;  Prieur, &quot;Network Management for the HP 3000 Datacomand Terminal Controller,&quot; Hewlett-Packard Journal, Vol.andP;  41, no.andP;  2, April1990, pp.andP;  76-84.andM;3.andP;  S.J.andP;  Mellor, Structured Development for Real-Time Systems, YourdonPress, 1985.andM;4.andP;  M. Page-Jones, The Practical Guide to Structured Systems Design, YourdonPress, 1980.andM;5.andP;  T. DeMarco, Controlling Softwore Projects, Yourdon Press, 1982, p.90.andM;6.andP;  J. Musa, &quot;A Theory of Software Reliability and Its Application,&quot; Vol.andO;SE-1, no.andP;  3, September 1975.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> ZF32-282-084 </DOCNO><DOCID>07 364 700</DOCID><JOURNAL>Microprocessor Report  May 1989 v3 n5 p1(5)* Full Text COPYRIGHT MicroDesign Resources Inc. 1989.andM;</JOURNAL><TITLE>Motorola launches new microcontroller generation; 68332 combines68020 core with sophisticated peripherals. (includes relatedarticle on price and availability) (product announcement)andM;</TITLE><DESCRIPT>Company:   Motorola Inc. (product introduction).andO;Ticker:    MOT.andO;Product:   Motorola 68332 (Circuit board) (product introduction).andO;Topic:     Product IntroductionControllersMotor VehiclesMicroprocessors.andO;Feature:   illustrationcharttable.andO;Caption:   Block diagram of the 68332. (chart)Time processing unit block diagram. (chart)TPU functions implemented by timer channel hardware and TPUmicrocode. (table)andM;</DESCRIPT><TEXT>Motorola Launches New Microcontroller GenerationandM;Motorola's 68332, known to the rumor mill as the 68HC32, is the first of anew family of high-end embedded controllers.andP;  The 68332 was developed incooperation with General Motors/Delco Electronics, and is being marketedinitially for automotive power-train control and robotics.andP;  GM has committedto use the chip, known as the GMPX during its development, in theirnext-generation engine control systems.andM;This is not the first time the automotive market has been a driving forcebehind a high-end microcontroller design.andP;  Intel's 8096 16-bitmicrocontroller was derived from the 8061 chip designed for Ford, which isthe heart of Ford's &quot;EEC-IV&quot; electronic engine control system.andP;  In fact, Fordstill accounts for the majority of 8096-family shipments.andP;  (While it is notgenerally known, Motorola and Toshiba also produce Intel's 8061 design forFord under an alternate-source agreement.)andM;Ford is reported to be considering the 68332 for their next-generation enginecontrol system.andP;  Motorola's own 68HC11, now one of the most widely used 8-bitmicrocontrollers, was also originally designed for engine control.andP;  The68HC11 is used for engine control by GM, Chrysler, Volkswagen, and Toyota,and is also used by Ford for instrumentation control.andM;Motorola is the leading supplier to the 8-bit microcontroller market withtheir 6805 and 68HC11 families.andP;  With the 68332, they are skipping the 16-bitgeneration and moving directly to a 32-bit device.andP;  The CPU in the 68332 hasa true 32-bit ALU and 32-bit data paths, and is fully object-code compatiblewith programs written for the 68000 and 68010.andP;  Many, but not all, of the68020 extensions are also included.andM;(The 68200 is another 68000-related microcontroller, originally produced byMostek.andP;  This device is not object-code-compatible with the 68000, however,and has had little success.andP;  Mostek was bought out by Thompson, which wassubsequently purchased by SGS.andP;  SGS decided not to continue to market the68200.)andM;Motorola is calling the 68332 the first 32-bit microcontroller.andP;  This may ormay not be justified, depending on how one defines the term.andP;  The 68332 doesnot include any non-volatile memory (ROM or EEPROM), so it is not asingle-chip microcomputer.andP;  The term microcontroller does not have a formaldefinition, but has often been used to refer to true single-chip devices.andP;  Inthe case of the 68332, it refers to the intended area of application and theinclusion of on-chip RAM and peripherals.andP;  (Even microcontrollers that areavailable in versions with on-chip ROM or EPROM are widely used with externalROMs or EPROMs.)andP;  Motorola is planning a future version with on-chip ROM.andM;Figure 1 shows the block diagram.andP;  In addition to the CPU, which is calledthe CPU32, the chip includes:andM;* A sophisticated &quot;time processing unit&quot; (TPU) with 16 independent channels.andM;* A serial communications interface (SCI) for asynchronous serial I/O.andM;* A queued serial peripheral interface (QSPI) for interfacing to peripheralchips.andM;* 1K X 16 RAM, which can be battery-backed.andM;* A &quot;system integration module,&quot; which includes 12 programmable chip selects,a watchdog timer, a wait-state generator, and other control logic to providea &quot;zero glue&quot; interface for typical system designs.andM;The 2-Kbytes RAM is the largest that has yet been provided on a processorchip (not counting cache memory), and makes it possible for many applicationsto get by without any external RAM.andP;  No wait states are required to accessthe RAM, so it provides fast storage for the stack and commonly used data.andO;External RAM can be accessed at the same speed, but fast RAM chips arerequired to do so.andM;Figure 2 shows the chip layout.andP;  Fabricated in a 1-micron HCMOS process, itincorporates 420,000 transistors on a 333 X 354 mil die.andP;  The intermodule bus(IMB), which runs horizontally across the middle of the chip, is very muchlike the external system bus.andP;  It is even possible for an external bus masterto directly access the on-chip RAM and peripherals.andP;  While data paths withinthe CPU are 32 bits wide, the IMB and the external data bus are only 16 bitswide.andM;With few exceptions, each of the chip's modules is fully independent, andconnects only to the IMB.andP;  This design approach will allow Motorola to easilydevelop different versions in the future.andP;  It has also allowed the variousmodules to be developed independently.andP;  In fact, the CPU, TPU, and serial I/Omodules were developed by different design teams at different locations.andO;Early versions of the chip were fabricated and tested before the CPU portionwas complete, using an external processor to control the bus.andM;Motorola is developing a variety of modules which will allow high-volumecustomers to configure their own semicustom microcontrollers.andP;  Modules now indevelopment include EEPROM, ROM, DMA, and A/D.andP;  Motorola plans a family ofstandard versions targeted at various markets, including office automation,avionics, and telecommunications.andM;The CPU32andM;The CPU is a superset of the 68010 and a subset of the 68020.andP;  It is acompletely new implementation, including all new microcode, and uses a fullystatic design to allow the clock to be slowed or stopped to reduce powerconsumption.andM;The CPU microarchitecture is considerably different from other 68000-familydesigns.andP;  As in the 68020, a full 32-bit ALU is provided, so 32-bitoperations (using operands from registers) execute just as quickly as 16-bitoperations, and simple instructions execute in two clock cycles.andP;  However,the 68332 designers decided that the real estate required for a full barrelshifter (as in the 68020) was not justified.andP;  Instead, the hardwareimplements single-bit and four-bit shifts.andP;  Thus, multiple-bit shifts arefaster than a 68000, but not as fast as a 68020.andP;  A 31-bit shift instruction,for example, requires 14 clock cycles to execute, as compared to 8 clockcycles for a 68020.andM;Multiplication and division are also implemented differently than on other68000-family processors.andP;  Multiply speed is comparable to the 68020, whiledivision is significantly faster.andP;  An unsigned 32 X 16 divide requires only32 clocks, as compared to 44 clocks for a 68020.andM;Motorola estimates that the 68332's CPU performance with a two-clock memoryaccess is 80% of that achieved by a 68020 with a three-clock memory accessand the cache disabled.andP;  The drop in performance is due to the fact that the68020 has a 32-bit data path to the program memory, while the 68332 has onlya 16-bit path.andM;Some of the 68020's features were deemed to be too expensive in silicon areato justify their inclusion in the CPU32.andP;  The 68020 features that are notsupported are as follows:andM;* Memory indirect addressing mode.andM;* Call module and return from module instructions (CALLM and RETM).andP;  Theseinstructions were rarely, if ever, used, and were dropped from the 68030 aswell.andM;* Coprocessor instructions (CPxxx).andP;  The 68332 does not have a coprocessorinterface.andM;* Bit-field instructions (BFxxx).andP;  These may be missed for some applications,but single-bit test, set, and clear instructions are provided.andM;* BCD PACK and UNPACK instructions.andM;* Compare-and-swap instructions (CAS and CAS2).andP;  These instructions aredesigned for multiprocessor synchronization.andM;Bus error processing is also handled differently on the CPU32 than on the68010 and 68020.andP;  The 68010 and 68020 use the instruction continuationapproach, which requires that a large amount of machine state information besaved on the stack when a bus error occurs.andP;  The CPU32 uses instructionrestart instead.andP;  When a bus error occurs, the machine state is &quot;backed up&quot;to restore the state that existed before the instruction was started.andP;  Thestack frame produced on a bus error is only 12 words, as compared to 46 wordsfor a 68020.andP;  This significantly reduces the bus error context switchingtime.andM;Unlike the 68020, but like the 68000 and 68010, the 68332 requires 16- or32-bit data to be aligned on a 16-bit boundary.andP;  An attempt to read or writesuch data at an odd address produces an address error exception.andM;There are two new instructions:  LPSTOP and TABLE.andP;  The LPSTOP instructioncauses the chip to enter a low-power standby mode, in which the CPU is shutdown and software can select which of the on-chip peripherals should be lefton and which should be turned off.andP;  The internal clocks are stopped, and onlyan interrupt or a hardware reset will cause the chip to continue operation.andM;The TABLE instruction performs a table look-up and an interpolation.andP;  Ittakes as its operands a 16-bit value and a pointer to a look-up table of upto 257 words.andP;  The high byte of the 16-bit value is used as an index into thetable.andP;  The low byte of the 16-bit value is treated as the fractional part,and is used to interpolate between the addressed table value and the value atthe following location.andP;  There are two versions of this instruction, onewhich rounds the result and one which does not.andP;  This is a rather extremeexample of a CISC instruction, which is presumably justified by the speed-upobtained for a function that is common for the class of applications to whichthe chip is targeted.andM;The two new instructions are &quot;F-line&quot; instructions (the high 4 bits of theopcode are 1111).andP;  They are trapped on other 68000 family processors, sothese instructions can be emulated.andP;  This allows software developed on 68332to be easily ported to other processors in the family.andM;Like the 68010, the 68332 provides a &quot;loop&quot; mode that eliminates instructionfetches on simple loops by using a three-word instruction buffer.andP;  This modeis triggered when a one-word instruction is followed by a DBcc instruction(decrement and branch on condition).andP;  It provides the same effect as aninstruction cache for this minimal loop.andP;  (The 68020 does not include loopmode, since it has a 256-byte instruction cache.)andP;  The single instruction inthe loop can perform a memory-to-memory or register-to-memory operation, soloop mode can be used to implement fast block moves, block clears, checksums,and similar functions.andM;The 68332 uses a very unusual clock generation scheme.andP;  The initial versionof the chip has a maximum clock rate of 16.67 MHz, but can be driven by a32,768-Hz crystal.andP;  The slow clock provides a reference for an on-chipphase-locked-loop, which produces the internal clock at a frequency of up to16.67 MHz.andP;  This allows use of a small, low-cost watch-type crystal, andminimizes power consumption.andP;  The clock multiplication ratio can be set undersoftware control, allowing the clock to be dynamically slowed to reduce powerwhen no time-critical functions are being performed.andM;Time Processing UnitandM;Programmable timers have long been a common feature in microcontrollers.andO;Simple microcontrollers typically include two or three timers, often limitedto 8 bits each, with several different operating modes.andP;  Motorola pioneered amore sophisticated timer subsystem in their 6801, which allows outputs to bechanged when a preset time is reached, or a timer value to be captured whenan input changes.andP;  Intel extended this concept with their 8096 by adding aFIFO to store captured values and a content-addressable memory to storepending output events (see [mu]PR 2/88 p. 4).andP;  With the 68332's timeprocessing unit (TPU), Motorola has gone a step beyond all previous timerdesigns.andP;  It is apparent from the die photo that the TPU is nearly as largeas the CPU itself, which gives an idea of its complexity.andM;Figure 3 shows the block diagram of the TPU.andP;  Each of the 16 channels has itsown I/O pin and is fully independent.andP;  All channels have the samecapabilities.andP;  Each channel includes a 16-bit capture register, a 16-bitcompare/match register, and a 16-bit comparator.andP;  The two timer countregisters (TCR1 and TCR2) are free-running counters that are shared by allchannels, and can be clocked by prescaled versions of the system clock or anexternal input.andP;  The minimum resolution is 2 [mu]s for TCR1 and 500 ns forTCR2.andM;By themselves, the timer channels are not radically different from previousdesigns.andP;  Unlike traditional timers, however, the main CPU does not interactwith the timers directly.andP;  Instead, a dedicated microengine services thetimers, allowing many more time-critical operations to be performed withoutswamping the CPU with service requests.andP;  This microengine includes 1.5 Kbytesof microcode that provides a number of primitives to implement common timerfunctions.andP;  The microcode is executed at a rate of one instruction every twoclocks, or 8 million instructions/sec at 16 MHz.andP;  Motorola calls the TPUinstructions RISC-like, which seems to be sales hype for microcode.andM;The main CPU interfaces to the TPU via a bank of registers, implemented as adual-port RAM.andP;  System configuration registers control the general operationof the TPU, channel control registers determine the operating mode of eachchannel, and parameter registers provide control values for the timers.andO;There are six parameter registers for each channel.andP;  The parameter registersare also written by the TPU to provide information back to the CPU.andP;  Thedefinition of each of the six registers depends on the channel's operatingmode, as specified by its channel control register.andM;Table 1 lists the primitives and provides a brief description of theiroperation.andP;  There are numerous variations and options for most operations;the table provides only the most basic description.andP;  Channels can also belinked together in various ways, so the completion of an event on one channelcan initiate an event on another channel, or on multiple channels.andM;These functions have been chosen to match the needs of automobile enginecontrol systems.andP;  For example, the additional transition and missingtransition detection functions are used to detect missing or additionalspecial teeth on the flywheel, which identify reference points in theengine's rotation.andP;  The position-synchronized pulse generator function isdesigned to fire spark plugs and trigger fuel injectors at precise engineangles.andM;These functions may be less than ideal for other applications, and Motorolaplans future versions with different TPU microcode.andP;  It is also possible forusers to develop their own custom TPU microcode.andP;  The 2-Kbyte RAM can be usedas a writable control store, replacing the TPU's microcode ROM.andP;  This is notintended to be used in normal operation, but is designed primarily to supportdevelopment of custom microcode.andM;The TPU's microcontroller must process events from all 16 channels.andP;  Ascheduler, implemented in hardware, allocates time to each channel accordingto priority.andP;  Each channel is assigned a priority of high, medium, or low.andO;The scheduler divides the microengine's time into seven time slots.andP;  Out ofeach seven slots, four are allocated to high-priority channels, two tomid-priority channels, and one to low-priority channels.andP;  Multiple channelsat a given priority level are handled in round-robin fashion.andM;Serial InterfacesandM;Two serial interfaces are provided.andP;  Both are enhanced versions of the serialinterfaces provided on the 6805 and 68HC11 families of microcontrollers.andM;The SCI (serial communications interface) is a traditional UART with aprogrammable baud rate generator.andP;  In addition to the usual data formats, itsupports the 9-bit format originally used in Intel's 8051, in which the 9thdata bit serves as an address or control flag.andP;  This is very useful fornetwork protocols, since it allows address or control information to bedistinguished from data without requiring escape sequences or other datatransparency tricks.andP;  The SCI also supports the &quot;idle-line detect&quot; protocol,as used in the 6801.andM;The QSPI (queued serial peripheral interface) provides a high-speedsynchronous serial interface for connecting to peripheral chips.andP;  A widevariety of peripheral chips are available that use this type of interface,including A/D and D/A converters, display controllers, and small EEPROMs.andO;The data rate can be as high as 4.2 Mbits/sec, and clock polarity, clockphase, and word length are programmable.andM;The 16-entry QSPI queue is much more than a simple FIFO, and is implementedas shared RAM.andP;  Each queue entry includes a command byte that specifies thetransfer format (word length, etc.), plus a four-bit chip select value.andP;  Thisfour-bit value is provided on output pins, and can be used directly to selectone of four peripherals or decoded to select one of sixteen.andP;  Data read fromperipherals is written into the queue.andM;The QSPI can be programmed to repeat the queued commands indefinitely.andP;  Forexample, the QSPI can poll each channel of a multichannel A/D converterrepeatedly.andP;  The CPU simply reads the appropriate queue location to retrievethe most recent value from the desired channel.andP;  To the CPU, the A/D appearsas a memory-mapped device.andM;The QSPI provides an effective mechanism for interfacing a number ofperipherals using only a few I/O pins.andP;  Once it is initialized, accessingthese peripherals is as simple as accessing a normal bus-interfacedperipheral.andP;  The QSPI can also operate in a slave mode, which allows the68332 to serve as a slave processor to another 68332, a 68HC11, or a 6805.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-306-520  </DOCNO><DOCID>07 306 520.andM;</DOCID><JOURNAL>Datamation  May 15 1989 v35 n10 p32(2)* Full Text COPYRIGHT Cahners Publishing Co. 1989.andM;</JOURNAL><TITLE>A catalyst for open systems. (Carnegie Mellon University developsMach operating system kernel)</TITLE><AUTHOR>Rashid, Richard.andM;</AUTHOR><SUMMARY>The Mach operating system kernel, developed at Carnegie MellonUniversity, allows various operating system environments to workon the same hardware-software base.andP;  Mach allow systemapplications to manage CPU, communications, virtual memory andsecondary storage resources.andP;  Mach can be used as the lower layerin a two-tier operating system environment.andP;  Mach can also be usedas a 'pure' kernel with no operating system environment.andP;  Mach isavailable on a wide array of uniprocessor and multiprocessorsystems.andP;  Commercial versions are available from BBN AdvancedComputers, Encore Computer Corp., Evans and Sutherland's ComputerDivision, and NeXT Inc.andM;</SUMMARY><DESCRIPT>Topic:     KernelsOperating SystemsCarnegie-Mellon UniversityComputer systems integrationSystems SoftwareProduct Development.andM;</DESCRIPT><TEXT>A Catalyst for Open SystemsandM;Operating systems have become one of the most hotly contested battlegroundsfor open systems standards.andP;  Clashing on that battlefield are variousnational, international and industrial factions struggling to define,implement and ultimately convince users to buy their version of an opencomputing environment.andP;  Most of these campaigns have centered aroundoffshoots of the Unix operating system.andP;  There is still no industrialconsensus, however, on exactly which version of Unix should emerge victoriouson the battlefield and ultimately serve as the basis for an open systemsstandard.andM;The divergence of systems and standards raises fundamental issues concerningthe strategy vendors should use in developing open operating systems.andP;  Thatstrategy must somehow accommodate diversity, because it has becomeincreasingly important to provide support within a single-computingenvironment for multiple standards--multiple operating system environmentsthat can be tailored to different vendor or user needs.andP;  Moreover, vendorsfrequently need to provide customers with continuing access to proprietaryoperating systems developed during the 1960s and 1970s, the prime examplesbeing VMS, MVS and MS-DOS.andM;Traditional systems such as Unix or VMS are implemented all in one piece,with knowledge about the basic system structure spread throughout.andP;  They arepoorly suited to the compatible support of multiple operating systemenvironments.andP;  As a result, major computer vendors are frequently forced atconsiderable cost to support several completely distinct operating systemgroups--one for OS/2, one for Unix and still another for proprietary systems.andO;The users also pay a high price.andP;  Ballooming software development coststranslate into increased costs for the user and delays in the introduction ofnew features and new applications.andM;An alternative approach to building an operating system is to separate thoseparts of the operating system that control the basic hardware resources fromthose parts that determine the unique characteristics of an OS environment.andO;Those specific parts associated with the hardware resources are often calledthe operating system &quot;kernel.&quot;andM;The advantage of this separation scheme is that it can allow more than oneoperating system environment to be implemented on the same hardware/softwarebase.andP;  This means that machine dependent software need be written only oncefor each new architecture.andP;  It also allows, at least potentially, for morethan one operating system environment to be simultaneously supported innative mode on the same hardware.andM;The Mach Kernel, developed at Carnegie Mellon University, is an example ofthis layered approach to operating system design.andP;  The multiprocessor MachKernel incorporates within one system a number of key facilities that enablethe efficient implementation of all functions necessary to support binarycompatibility with existing operating system environments.andP;  More than justextensions to normal operating system facilities, these mechanisms can alsoserve as a foundation upon which Unix and other operating system functionscan be built.andM;Mach provides an unusually flexible execution environment for both system anduser applications.andP;  It exposes the management of CPU, communications, virtualmemory (VM) and secondary storage resources in a way that allows systemapplications to use those resources efficiently.andM;The key features of Mach in its role as a system software kernel are: supportfor multiple threads of control within a single address space; an extensibleand secure interprocess communications facility (IPC);architecture-independent VM management; integrated IPC/VM support, includingcopy-on-write message passing, copy-on-reference network communications andextensible memory objects; transparent share libraries to supply binarycompatibility with existing operating system environments; and anobject-programming facility integrated with transparent networkcommunications.andM;The Mach kernel provides software equivalents for the key elements ofuniprocessor and multiprocessor architectures.andP;  The Mach thread mechanism,for example, is a kind of software processor.andP;  By allowing multiple threadsto run within the same program, Mach permits a programmer to directly managemultiple CPUs in a multiprocessor.andM;Mach's interprocess communications facility provides the kind of I/O channelbetween threads that may exist between workstations on a network or within amultiprocessor with a message-passing bus.andP;  Interprocess communications andmemory management in Mach are tightly integrated.andP;  Memory managementtechniques are used whenever large amounts of data are sent in a message fromone program to another.andP;  This enables the transmission of megabytes of dataat very low cost.andM;One of the most unusual and important facilities Mach provides is the notionof a memory object, which an application program may create and manage.andP;  Thememory object is like a file or data container that can be mapped into theaddress space of a program.andP;  In traditional systems, the operating system hascomplete control of &quot;paging&quot; data to and from a data object.andP;  Mach, incontrast, allows the application that creates the memory object to act asthough it were the disk storage, or pager.andM;Mach virtual memory objects are represented as communications channels.andP;  On apage fault, the kernel sends a message to the backing storage communicationschannel of a memory object to get the data contained in the faulted page.andO;This provides the flexibility necessary to efficiently implement systemapplications.andM;There are two distinct ways in which a kernel system such as Mach can be usedto aid the development of open operating systems.andP;  First, the Mach Kernel canbe used as the lower layer of a two-tier operating system implementation.andP;  Insuch as scheme, the Mach kernel provides support for such major functionssuch as virtual memory, scheduling, interprocess communications and deviceaccess.andP;  The target operating system can then be implemented using thesefunctions.andM;Under this approach, the entire system, kernel and operating systemenvironment would be packaged as a unit and run in a privileged state, justas it would in a traditional OS design.andP;  In many respects, it would continueto resemble the more traditional operating systems it replaces.andP;  Oneadvantage here, however, is that more than one operating system environmentcan be implemented using the same kernel interface, thus reducing thesoftware effort required to bring to market a new architecture that supportsseveral operating systems.andM;The basic kernel, which could be made freely available to everyone, would notcompromise the proprietary added value of the particular operating systemenvironment that's layered above it.andP;  This is a big benefit to companies thatcould share the costs of porting the kernel to a new architecture.andM;A second way to build a layered operating system environment has even greaterpotential for open systems development.andP;  The kernel can be packaged by itselfas a &quot;pure&quot; kernel with no operating system environment.andP;  In this case, onlythe kernel would run in a privileged state.andP;  The rest of the operating systemenvironment would, in effect, run on top of the kernel as one or moreprograms--or, more precisely, as one or more server processes.andP;  Userapplications would run as before, but instead of making direct calls on theoperating system via system-calls traps, the kernel's communications andmemory management facilities would be used to communicate information betweenthe application and operating system processes.andM;The reason this implementation strategy is so attractive for open systems isthat it can allow more than one operating system environment to be supportedon the same machine, on the same kernel, at the same time.andP;  Systems such asUnix or OS/2 could potentially coexist in their native form.andP;  The Kernelbecomes a kind of universal &quot;socket&quot; into which more than one operatingsystem environment can be plugged, insulating that software from the hardwareitself.andM;Both of these approaches have been pursued by the Mach project at CarnegieMellon.andP;  The initial target operating system environment for Mach wasBerkeley's 4.3 BSD version of Unix.andP;  The commercial versions of Mach that areavailable today are, in fact, examples of 4.3 BSD Unix layered above Machkernel primitives.andP;  The recently announced joint research project among ATandamp;T,Convergent Technologies Inc., Intel Corp., Olivetti and Prime Computer Inc.andO;underscores the potential of Mach to support multiple operating systemenvironments.andP;  The consortium plans to use the Mach kernel to build amultiprocessor version of System V.4.andM;The wide range of uniprocessor and multiprocessor systems on which Mach isavailable is evidence of its portability.andP;  Mach has been ported touniprocessors and multiprocessors in the VAX family, the Sun 3 and Sun 4lines of workstations, IBM RT PCs, the Macintosh II, the 64-processor IBM RP3research parallel processor, the eight-processor IBM Ace workstation, theSequent Balance, the IBM 370 and the Intel 386 and i860.andP;  Implementations forthe MIPS R2000 and R3000 chips from MIPSInc.andP;  and the DEC Station 3100machine that uses the R2000 are nearing completion, and severalimplementations for the Motorola 88000 are under way.andM;Commercial versions of Mach are available from Cambridge, Mass.-based BBNAdvanced Computers; Encore Computer Corp. of Marlborough, Mass.; Evans andSutherland's Computer Division in Mountain View, Calif.; and NeXT Inc.andP;  Inaddition to these vendor releases of Mach, Mt Xinu Inc. of Berkeley, Calif.,andO;has announced that it will develop commercial end-user releases of Mach for avariety of machine architectures.andM;Obviously, one way in which the open systems cause can be furthered is toallow free access to basic software components.andP;  All software implemented bythe Mach project is licensed and distributed by Carnegie Mellon at no cost touniversities, research laboratories and corporations.andP;  In this way, Mach,which provides support for multiple operating system environments, is actingas a catalyst in the campaign for open systems.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-594-121  </DOCNO><DOCID>09 594 121.andM;</DOCID><JOURNAL>PC Week  Nov 12 1990 v7 n45 p155(5)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>SQL support levels vary for six front ends. (Software Review)(overview of six evaluations of front-end programs for SQLdatabases) (evaluation)</TITLE><AUTHOR>Currid, Cheryl; Mason, Jeffrey.andM;</AUTHOR><SUMMARY>Six front-end programs for Structured Query Language (SQL) database servers are reviewed: Blyth Software Inc's Omnis 5 1.10,Borland International Inc's Paradox 3.5 with SQL Link, DataEaseInternational Inc's DataEase SQL Professional, Gupta TechnologiesInc's SQLWindows 2.0, Oracle Corp's Oracle Tools for MS-DOS 5.1c,and Revelation Technologies Inc's Advanced Revelation 2.0 with SQLServer Bond 1.0.andP;  All the packages are designed for'client/server' systems, which split data base tasks between thefront end running on the local workstation and the back end on adatabase server.andP;  The programs are useful for redevelopingmainframe applications quickly.andP;  SQL support levels vary widelyamong the products, as do the techniques used to implement them;DataEase, Gupta and Oracle provide very good SQL support.andO;DataEase and Paradox are primarily end-user rather than developertools; Gupta provides the best support for procedural languages.andM;</SUMMARY><DESCRIPT>Company:   Blyth Software Inc. (Products)Borland International Inc. (Products)DataEase International Inc. (Products)Gupta Technologies Inc (Products)Oracle Corp. (Products)Revelation Technologies Inc. (Products).andO;Ticker:    BORL; ORCL.andO;Product:   Omnis 5 1.10 (Data base management system)Paradox 3.5 (Data base management system)SQL Link (Add-in-on software)DataEase SQL Professional (Program development software)SQLWindows 2.0 (Program development software)Oracle Tools for MS-DOS 5.1c (Data base management system)Advanced Revelation 2.0 (Data base management system)SQL Server Bond (Data base management system).andO;Topic:     Data Base Management SystemsData Base ServersEvaluationStructured Query LanguageSoftware Packages.andO;Feature:   illustrationtable.andO;Caption:   Analyst's scoreboard. (table)Specs. (table)andM;</DESCRIPT><TEXT>V I T A L S I G N SandM;By Cheryl CurridandM;and Jeffrey MasonandM;The corporate market for client/server applications is hot.andP;  With many firmslooking to downsize large mainframe or minicomputer applications, there is acritical need for industrial-strength LAN application environments.andM;For many, the right solution will combine a strong server back-end databasewith a new-generation client front-end tool.andM;Unlike common databases for PC LANs, these new combinations do notnecessarily come from the same vendor, nor do they use the same operatingsystem on the client and the server.andP;  In fact, because of differences infeatures and options, corporate information-system staffs may choose assortedoptions.andM;For some applications, they may employ multiple front-end tools against aback-end database server, while other scenarios may dictate a single frontend that accesses multiple back-end databases.andM;Technically, client/server operates differently on multiuser PC databasesthan do current-generation PC databases.andP;  Client/server combinations splitthe tasks of database applications between the front end, which runs on thelocal PC workstation, and the back end, which runs on a database server.andM;The user interface and certain workstation-related processing run on thelocal PC or workstation, while processing of database data runs on theserver.andP;  When the user requests information from the database, the query isconstructed on the workstation, or client, and sent to the database forprocessing.andM;Once the server gathers the results, it sends only the answers back to theclient -- not all the records in the database.andM;The benefit of this division of labor is generally better operation of theapplication, especially when large databases are used.andP;  Depending on thehardware and operating environment, response time for queries can rival thatof a minicomputer or mainframe.andM;Another potential benefit of blending these tools is getting mainframeapplications redeveloped in the shortest amount of time.andP;  Many users arelooking for front-end tools that are powerful enough to avoid resorting backto time-consuming third-generation languages such as COBOL or C.andM;In this review, PC Week Labs examines the following front-end tools designedfor Structured Query Language (SQL) databases: Blyth Software Inc.'s Omnis 51.10; Borland International Inc.'s Paradox 3.5 with Paradox SQL Link 1.0;DataEase International Inc.'s DataEase SQL Professional 1.0; GuptaTechnologies Inc.'s SQLWindows 2.0; Oracle Corp.'s Oracle Tools for MS-DOS5.1c; and Revelation Technologies Inc.'s Advanced Revelation 2.0 with the SQLServer Bond 1.0.andM;Both SQL support levels and techniques vary widely among the products.andP;  Forexample, some were built from the ground up for a client/server environment,while others were retrofit from a DOS environment.andP;  Although all productscould perform tested queries and updates, there were features in someproducts that made data-administration functions much easier to perform.andO;These effort-saving features, such as DataEase's ability to store its formson the back-end database server, were more often found in products built fromthe ground up as front-end tools.andM;During the evaluations, it became apparent that the internal design of thedatabase played a major role in the efficiency and synergy existing betweenthe client and the server.andP;  Some products directly interfaced with theback-end server tables, whereas others used replica tables or shadowdictionaries.andP;  This internal design was important when analyzing performance,accessing multiple databases and running applications on multiple serverplatforms.andM;Another difference among products was their primary appeal -- targetingeither developers or end users.andP;  While there is a considerable blurring oftools and techniques, certain products are more appropriate for one audienceor another.andM;The developer category goes deeper than the end-user category, since itincorporates many tools that help create sophisticated applications.andO;Products in this category often provide a comprehensive language, reportgeneration, forms generation, a debugger and access to external programminglanguages.andM;PC Week Labs considers SQLWindows, Oracle Tools and Omnis 5 to be moreoriented toward developers.andM;Products for the end user generally contain subset functions provided bydevelopers tools.andP;  This category does not provide as comprehensive anenvironment, but provides the user with ad hoc query capability that wouldinclude report generation and some simple forms generation.andM;PC Week Labs judges Paradox and DataEase as primarily end-user tools.andO;Advanced Revelation, with its SQL window querying capabilities and itsR/BASIC procedural language, spans both the developer and end-usercategories.andM;Another difference in products was whether they used a graphical userinterface (GUI) or a character-based orientation.andP;  A GUI includes manyfeatures not normally associated with character-based systems.andM;For example, GUI databases lend themselves more readily toward thedevelopment of object-oriented databases rather than structured, line-by-lineprocessing.andP;  Communication between GUI databases and other applications canbe accomplished through internal communication protocols found inside the GUIenvironment, such as Microsoft Corp.'s dynamic data exchange (DDE) that isoffered within Windows.andM;Although this review did not analyze performance -- primarily, speed -- indepth, the use of front ends against a back-end server appears not to have asignificant performance difference among the front ends.andP;  This is becausemost of the data processing occurs on the back-end server.andM;Another aspect that could have an impact on performance is the way productssupport SQL.andP;  Some products translate their own query or script language intoSQL for the back-end server.andP;  With embedded SQL, the SQL statements areprocessed without any mediation of the front end except for sending thestatement to the back end.andM;Translated SQL, on the other hand, requires that the product's internallanguage translate the statement into a SQL statement prior to sending it tothe back end.andP;  This process can add some overhead to the application.andM;In addition, some products provide far more transparent access to theback-end server data than others.andP;  Ideally, the front end should be able tolet the end user or developer have access to the data on the back end withoutknowing where the data resides.andM;It shouldn't matter where the data is located, either locally on a PC serveror remotely on a database server, a minicomputer or a mainframe.andM;And finally, because many companies have a mix of DOS, OS/2, Macintosh andUnix environments, some users will be more sensitive to the need for runningapplications on multiple operating systems.andP;  Omnis 5 is a good example of afront end that supports multiple environments.andP;  For all of the productsreviewed, support for multiple platforms is still being developed.andM;PC Week Labs found good choices for many application types.andP;  Whether it be amission-critical production application or a simple end-user query task, thetools available today should provide methods for implementing client/serverapplications.andM;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-879-119  </DOCNO><DOCID>07 879 119.andO;</DOCID><JOURNAL>IBM Systems Journal  Sept 1989 v28 n3 p479(15).andM;</JOURNAL><TITLE>A message management system for personal computers.andO;</TITLE><AUTHOR>d'Arielli, Luigi.andM;</AUTHOR><TEXT><ABSTRACT>This paper presents a design for a message management system thatreduces the coding effort for the application developer, gives theuser greater control over the treatment of application messages,and eliminates many problems of translation.andP;  Any message may bedirected to one or more devices (screen, printer) and/or files(log, activity), with the ability to exclude message elements(e.g., date and time) from being sent to any output destination,or to exclude a destination altogether.andP;  Because themessage-handling code and message texts are separated from oneanother and from the application code, the developer need onlyissue a message identifier and set the associated variable values.andO;The message identifier contains codes for both class and severity,and the developer provides default selection criteria that theuser can modify.andP;  These tables of selection criteria provide asimple yet highly flexible means of determining where each messagewill be sent and in what form.andP;  The simplicity of includingvariable information and the separation of message texts into amaster repository (where an information developer or translatorcan work on them) tend to improve the quality of messages to theuser by making them more consistent and informative.andP;  (Reprintedby permission of the publisher.)andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     Message SwitchingDesignCommunications ManagementCodingUser Interface.andO;Feature:   illustrationchart.andO;Caption:   General structure and interfaces. (chart)How a message is built. (chart)The message selection process. (chart)andM;</DESCRIPT></DOC>
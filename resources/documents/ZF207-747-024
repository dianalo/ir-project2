<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-747-024  </DOCNO><DOCID>07 747 024.andM;</DOCID><JOURNAL>Communications of the ACM  Oct 1989 v32 n10 p1199(18)* Full Text COPYRIGHT Assn. for Computing Machinery, Inc. 1989.andM;</JOURNAL><TITLE>Four paradigms of information systems development.andO;</TITLE><AUTHOR>Hirschheim, Rudy; Klein, Heinz K.andM;</AUTHOR><SUMMARY>The task of information systems development involves explicit andimplicit assumptions about human organizations, the nature of thedesign task and what is expected from the designers.andP;  Theseassumptions can be classified into four paradigms: functionalist,which deals with the interaction of individual elements in thesocial system and how they integrate; social relativist, whichemphasizes the social actor rather than the observer; radicalstructuralist, which focuses on the structure and analysis ofeconomic power relationships and neohumanist, which stresses theroles of different social and organizational forces in effectingchange.andP;  Each paradigm is examined in light of two systemdevelopment case studies, one involving automating typesetting andthe other concerning an expert system for airline enginemaintenance and repair.andM;</SUMMARY><DESCRIPT>Topic:     System DevelopmentSocial IssuesCase StudyExpert SystemsAutomation.andO;Feature:   illustrationcharttable.andO;Caption:   Information systems development paradigms. (chart)Summary of the four paradigms. (table)How paradigms are used in example case studies. (table)andM;</DESCRIPT><NOTE>Only Text is presented here; see printed issues for graphics.andO;</NOTE><TEXT>Developing computer-based information systems necessarily involves making anumber of implicit and explicit assumptions.andP;  The authors examine fourdifferent approaches to information systemsandM;development.andP;   All systems developers approach the development task wandM;ith a number of explicit andandM;implicit assumptions about the nature of human organizations, the nature ofthe design task, and what is expected of them.andP;  These assumptions play acentral role in guiding the information systems development (ISD) process.andO;They also dramatically affect the system itself This article will examine thekinds of implicit assumptions made during systems development.andM;Depending on the assumptions adopted, different systems developmentapproaches are identifiable and each of these leads to different systemoutcomes.andP;  Based an a detailed analysis of the literature, we will examinethe fundamental assumptions of four major kinds of systems developmentapproaches and discuss how they lead to different outcomes.andM;More specifically, we wish to show (1) that although there is a strong,orthodox approach to systems development, there are recently developedalternatives that are based on fundamentally different sets of assumptions;(2) that these assumptions primarily deal with the attitudes adopted towardreality and how to obtain knowledge about it; (3) that these assumptions areeither explicitly or implicitly made in adopting a particular developmentapproach; (4) that the ways in which system objectives are legitimized aredirectly related to the development approach adopted; and (5) that importantsocial consequences result from applying a particular systems developmentapproach.andM;Other researchers have also noted the importance of systems developerassumptions, but their work has focused on more specific aspects, e.g.,andO;analyst models of the users [25, 42], analyst hypotheses about the nature ofrequirements and behavior related to structuring problems [96], and analystanduser values [57].andP;  Whereas these studies employ empirical means todocument these assumptions, Bostrom and Heinen [14] have relied on ananalysis of the literature to document seven implicit theories and views ofdesigners as causes of systems failures.andP;  (The importance of implicitassumptions has also been noted more generally in [3, 4, 76, 80, 89]).andP;  Weagree with the previous research that a better understanding of developerassumptions is important and we wish to extend the line of inquiry.andP;  Inparticular, we feel there is a need to explore the most fundamentalfoundations from where such assumptions arise, and this is done by applying aphilosophical line of analysis.andM;The article is organized as follows.andP;  We begin by introducing two caseexamples that illustrate how different systems development assumptions becomemanifest in practice.andP;  These assumptions are then grouped into four paradigmsof information systems development and explained in detail.andP;  The rhetoricalvehicle used for explicating the paradigms are generic story types.andP;  Theparadigms are analyzed using the story types, dividing the discussion intothree parts: story line, interpretation, and analysis.andP;  We return to the caseexamples to show how the manifest differences in the development process andoutcomes can be explained by the four paradigms.andP;  We conclude by noting anumber of benefits associated with the identification and analysis of theparadigms.andP;  The article provides a new vehicle for theorizing about thenature, purpose, and practice of information systems development.andM;TWO EXAMPLESandM;Consider how the approaches taken in the following two systems developmentprojects differ.andM;Automating Typesetting or Enhancing Craftsmanship? Traditional newspaperproduction involves four major processes: writing, editing, typesetting, andprinting.andP;  Reporters and columnists write copy which is then edited.andO;Typesetters take the edited copy and relevant pictorial material, and lay outpages.andP;  Printers take the results and print the newspapers.andP;  Typical systemsdesigns focus on rationalizing newspaper production by combining tasks thatcan logically be done on the same electronic device, such as editing andformatting.andP;  Page layout is conceived as a natural extension of formatting.andO;A requirements analysis along these lines suggests that editors can performthe typesetting function because computers already aid the editors withediting and page layout.andP;  Editors can embed typesetting commands directly inthe final copy.andP;  Page layout is done on screen and sent to phototypesettingequipment.andP;  The editors become responsible not only for editing but also forpage make-up.andP;  High resolution screens; electronic cut, paste, and scalingfacilities; and previewing apparatus permit the typesetting function to beassigned to the editors.andM;In the UTOPIA project [29, 47], an alternative approach was tried at onenewspaper company.andP;  The systems development team consisted of unionrepresentatives and typesetters.andP;  Their goal was to establish an electronictypesetting support system that would enhance the position of the typesettingcraft in the newspaper industry.andP;  The newspaper's management was excludedfrom the design team so that typesetters' interests were given primacy in alldesign decisions, Existing turnkey systems were considered inappropriatebecause of built-in design constraints and management biases that did nottake into account the unique requirements of the typesetting craft.andP;  Thesemanagement biases emphasized cost savings, efficiency, and control leading tode-skilling, job losses, and an aesthetically inferior product.andP;  Dataprocessing specialists assumed an advisory role serving the typesetters'interest.andP;  In the requirements analysis, the design team viewed typesettingas an essential task requiring specialist skills that would be lost by itsintegration with editing.andP;  Two types of requirements were established: (1)transformation of edited texts into made-up pages; and (2) creation of anaesthetically pleasing product.andP;  Typesetting skills differ from editorialskills; editors are in charge of content, and typesetters are in charge ofform.' The typesetters were interested in retaining the quality oftypesetting and possibly enhancing their own productivity.andP;  To retainquality, systems design options focused on providing the flexibility anddiversity of the traditional tools of the typesetting trade by electronicmeans.andP;  To meet this objective, the team found it necessary to use hardwaremock-ups to overcome the limitations of the then-available technology.andP;  Whilesimilar to prototyping, the hardware mock-ups overcame the bias inherent inthe technology used for prototyping.andP;  The available prototyping tools wereunable to accommodate the craft skills that were used to meet the aestheticrequirements of newpaper page layout.andP;  To enhance the quality of typesettingoutput, additional system capabilities, such as scaling and finetuning thecontrast of pictures, were added.andP;  The UTOPIA approach resulted in anelectronic typesetting support system that enhanced the typesetters' skillsand productivity.andM;The UTOPIA model also required the establishment of a new work organization[28].andP;  While reporters have access to display terminals to write theirarticles, they do not code the text with typesetting commands.andP;  A centralproduction unit, where journalists and graphic workers cooperate closely, isresponsible for page editing and make-up, typing manuscripts, proofreading,incorporating major revisions, editing standard features such as TV listings,and coding individual articles.andP;  The editorial staff comprises editors andsubeditors, whose responsibilities are also changed.andP;  Subeditors work mostclosely with the typesetters to make up the pages.andP;  Editors are primarilyresponsible for maintaining a consistent overall viewpoint among differentarticles and serve as discussion partners for subeditors [28].andM;Developing an Expert System or a System for Experts? Deregulation has forcedairlines to become increasingly cost conscious, yet airline safety depends oncostly, high quality engine maintenance.andP;  In order to rationalize enginemaintenance, one airline company developed an expert system consisting of therules for engine maintenance and repair.andP;  During the knowledge acquisitionphase, rules were extracted from engineering specifications and maintenancehandbooks.andM;When engines arrived at the maintenance plant, mechanics disassembled themand placed the parts on work tables.andP;  Robots diagnosed possible faultsthrough automated measuring and sensing.andP;  The facts gleaned about the stateof the engine parts were fed to the expert system which then applied its rulebase to determine necessary repairs.andP;  It printed out a work schedule formaking the repairs which was then followed by the mechanics.andM;When the system was implemented, the promised cost decrease in enginemaintenance did not materialize; on the contrary, maintenance costs increasedby 13 percent.andP;  A redesigned system based on an alternative design strategywas sought.andP;  A new design team that included union representatives andmechanics was formed.andP;  Their cooperation was motivated by a coalition withmanagement which they saw as necessary to secure the viability of thecompany, and with it, their jobs.andP;  The design team first analyzed the reasonsfor the decrease in maintenance productivity and found that under the oldsystem, mechanics relied too heavily on computer-based fault diagnosis.andP;  Theydid not check nor challenge the computer diagnosis for possible errors.andO;These errors were the product of difficulties in formalizing the knowledgebase.andP;  Apparently, the mechanics' knowledge acquired through education andexperience could not easily be formalized and put into the rule base of theexpert system.andP;  There may also have been an error margin in the automaticsensing which created ambiguities.andP;  The new design team shifted the focus ofrequirements analysis from the acquisition of an expert rule base to thesupport of the mechanics' judgment in diagnosing maintenance needs, Therequirements study focused on the subtleties that come into play in decidingwhich maintenance is actually required for each engine part.andP;  The new designleft the mechanics in charge of the fault diagnosis, because their experienceand judgment was now considered indispensible.andP;  After the mechanics haddecided on the necessary repairs they would then consult the computer systemfor available repair options, availability of needed parts, etc.andP;  For thispurpose the computer system turned out to be very useful.andP;  This designapproach resulted in a system for experts rather than an expert system.andM;These two examples pose an interesting and important question: Do they pointto subtle yet fundamental differences that originate from conflicting systemsdevelopment philosophies, or are they merely variations of a single theme,namely one where a family of development approaches shares the sameunderlying philosophy? The answer to this question is important becausedifferent underlying philosophies may lead to radically different options interms of design features, implementation strategies, user satisfaction, andsystem use.andM;We seek to show that these differences are the product of fundamentallydifferent underlying systems development assumptions.andP;  We identify dominantpatterns resulting from differing sets of core assumptions that can be usedto characterize the array of current system development approaches.andP;  We donot claim that this is the only way to organize them, nor that theassumptions necessarily correspond to actual beliefs to which practitionersare committed.andP;  2Rather, the core assumptions have been derived from studyingthe descriptions of various systems development approaches that appear in theliterature.3andM;FOUR PARADIGMSandM;The most fundamental set of assumptions adopted by a professional communitythat allows its members to share similar perceptions and engage in commonlyshared practices is called a &quot;paradigm.&quot; Typically, a paradigm consists ofassumptions about knowledge and how to acquire it, and about the physical andsocial world.andP;  As ethnomethodological studies have shown [34] suchassumptions are shared by all scientific and professional communities.andP;  Asdevelopers must conduct inquiry as part of systems design and have tointervene into the social world as part of systems implementation, it isnatural to distinguish between two types of related assumptions: thoseassociated with the way in which system developers acquire knowledge neededto design the system (epistemological assumptions), and those that relate totheir view of the social and technical world (ontological assumptions).andM;Two types of assumptions about knowledge (epistemological) and the world(ontological) are given by Burrell and Morgan [18] to yield two dimensions: asubj ectivist-objectivist dimension and an order-conflict dimension.andP;  In theformer, the essence of the objectivist position &quot;is to apply models andmethods derived from the natural sciences to the study of human affairs.andP;  Theobjectivist treats the social world as if it were the natural world&quot; [18, p.andO;7] .In contrast, the subjectivist position denies the appropriateness ofnatural science methods for studying the social world and seeks to understandthe basis of human life by delving into the depths of subjective experienceof individuals.andP;  &quot;The principal concern is with an understanding of the wayin which the individual creates, modifies, and interprets the world in whichhe or she finds himself [or herself]&quot; (p.andP;  3) .In the order-conflictdimension, the order or integrationist view emphasizes a social worldcharacterized by order, stability, integration, consensus, and functionalcoordination.andP;  The conflict or coercion view stresses change, conflict,disintegration, and coercion.andP;  The dimensions when mapped onto one anotheryield four paradigms (see Figure 1): functionalism (objective-order); socialrelativism (subj ective-order); radical structuralism (objective-conflict);and neohumanism (subjective-conflict).andP;  This particular framework has beenchosen because it allows us to capture the distinguishing assumptions ofalternative approaches to information systems development in a simplified yetphilosophically grounded way.andM;The functionalist paradigm is concerned with providing explanations of thestatus quo, social order, social integration, consensus, need satisfaction,and rational choice.andP;  It seeks to explain how the individual elements of asocial system interact to form an integrated whole.andP;  The social relativistparadigm seeks explanation within the realm of individual consciousness andsubjectivity, and within the frame of reference of the social actor asopposed to the observer of the action.andP;  From such a perspective &quot;social rolesand institutions exist as an expression of the meanings which men attach totheir world&quot; [93, p.andP;  134].andP;  The radical structuralist paradigm emphasizesthe need to overthrow or transcend the limitations placed on existing socialand organizational arrangements.andP;  It focuses primarily on the structure andanalysis of economic power relationships.andP;  The neohumanist paradigm seeksradical change, emancipation, and potentiality, and stresses the role thatdifferent social and organizational forces play in understanding change.andP;  Itfocuses on all forms of barriers to emancipation-in particular, ideology(distorted communication), power, and psychological compulsions and socialconstraints-and seeks ways to overcome them.andM;These paradigms, initially identified by Burrell and Morgan [18] in thecontext of organizational and social research, also manifest themselves inthe domain of information systems development.' Yet to show how the paradigmsare actually reflected in ISD is complicated.andP;  The paradigms are largelyimplicit and deeply rooted in the web of common-sense beliefs and backgroundknowledge [90] which serve as implicit &quot;theories of action&quot; [4].andP;  Asimplifying vehicle was sought to help develop and articulate the paradigms,in particular, the types of behaviors and attitudes that follow from them.andO;Such a vehicle was found in the notion of &quot;generic stories&quot; or, moreprecisely, generalized story types (genres).andP;  Each story type consists oftypical classes of behavior that follow from the assumptions of a particularparadigm.andP;  For example, different types of behavior in requirementsdetermination arise depending on whether one believes in an objectiveorganizational reality or not.andP;  These types of behavior were identified andgrouped into story types.andP;  Each of these was derived by interpreting pools ofsystems development literature that share the assumptions of a particularparadigm.andP;  These pools have been identified by analyzing the specific coreassumptions and beliefs that are revealed in the concepts and examples theyemploy.andP;  This allows us to explicitly compare sets of assumptions thattypically have not been widely articulated or systematically compared.andM;After each story type has been articulated in some detail, we provide atheoretical interpretation and discuss some of its potential consequences.andO;(For stylistic reasons, we shall now drop the qualifier type and simply speakof story.andP;  The theoretic interpretation will take the form of discussing the(1) key actors of the storythe &quot;who&quot; part of the story; (2) narrative-the&quot;what&quot; of the story, what are the key features and activities; (3) plot-the&quot;why&quot; of the story, why did the action of the story take place the way itdid; and (4) assumptions-the fundamental beliefs held by the actors of thestory, discussed in terms of epistemological and ontological assumptions.andM;The four stories are neither equally well-developed nor known.andP;  The same istrue of their consequences.andP;  For the first story, there is a largeexperiential base from which to draw.andP;  It is the orthodox approach to systemsdevelopment and has been used to develop information systems for decades.andO;Its consequences, therefore, are reasonably clear cut.andP;  The other threestories are more recent and have not been widely applied.andP;  Thus practicalknowledge about them is sparse and their consequences largely conjectural.andO;They are presented in the rough chronological order in which they emerged.andM;The four paradigms, as depicted through the stories, are not as clear cut noras animated as they are made out to seem.andP;  There is overlap and theirdifferences are overstated for the purpose of effect.andP;  They are, in fact,archetypes-highly simplified but powerful conceptions of an ideal orcharacter type [80].andP;  These ideal types do not exist as real entities; rathertheir properties which are exhibited (to a greater or lesser degree) inexisting entities give the archetype meaning.andP;  The archetypes reflected inthe stories play an important role in conveying the essential differencesthat exist in alternative conceptions of and approaches to, systemsdevelopment.andM;STORY 1: THE ANALYST AS SYSTEMS EXPERTandM;Systems Development as Instrumental ReasoningandM;This story has progressed considerably over the years [24, 87, 88, 94], andhas been the source of many successful systems.andP;  The story suggests that allinformation systems are designed to contribute to specific ends.andP;  The role ofmanagement is that of the leadership group in the organization that knows ordevelops the ends which are then translated and specified in terms of systemsobjectives.andP;  The usual assumption is that the specification is as objectiveas possible.andP;  The resolution of polemical issues associated with objectivesis seen as the prerogative of management and not normally within the domainof the systems developer.andP;  As a result, the ends can be viewed as beingarticulated, shared, and objective.andP;  Of course, there are many kinds ofconflicts with which the system developer does deal, but the tools andmethods used typically concern only the choice of means to prespecified ends,not the substance of the ultimate ends of a system.andM;The primary role of the analyst is to be the expert in technology, tools andmethods of system design, and project management.andP;  Their application helps tomake systems development more formal and rational, placing less reliance onhuman intuition, judgment, and politics.andP;  Politics is seen irrational as itinterferes with maximal efficiency or effectiveness.andP;  As noted by DeMarco,[27, p.andP;  13] &quot;Political problems aren't going to go away and they won't be'solved.' The most we can hope for is to limit the effect of disruption dueto politics.andP;  Structured analysis approaches this objective by makinganalysis procedures more formal.&quot;andM;In this story there is one reality that is measurable and essentially thesame for everyone.andP;  Otherwise it would not be possible to have what McMenaminand Palmer [77] call the &quot;true requirements of the system.&quot; The role of thedeveloper is to design systems that model this reality [36] in a way thatwill turn the system into a useful tool for management to achieve their ends[7] .In principle, these ends coincide with organizational goals.andM;Through the concept of economic requirements, economic reality becomesmeasurable, taking on a naturelike, given quality.andP;  The economic reality(translated into quantitative, financial goals, and systems performancecharacteristics) allows system objectives to be derived in an objective,verifiable, and rational way.andP;  Systems design becomes primarily a technicalprocess.&quot;andM;InterpretationandM;Key Actors: Management, the system developer and users.andP;  Managers areresponsible for providing the system objectives.andP;  The systems developer isthe expert who takes the objectives and turns them into a constructedproduct, the system.andP;  Management dictates the ends; the developers usespecific means to achieve the ends.andP;  Users operate or interact with thesystem to achieve organizational objectives.andM;Narrative: Information systems are developed to support rationalorganizational operation and effective and efficient project management.andP;  Theeffectiveness and efficiency of IS can be tested by objective means testswhich are similar to the empirical tests used in engineering.andP;  Requirementsspecification builds on the notion of a manifest and rational organizationalreality.andP;  Information systems development proceeds through the application of&quot;naive realism&quot;-the notion that the validity of system specifications, datamodels, decision models, and system output can be established by checking ifthey correspond to reality.andP;  Reality consists of objects, properties, andprocesses that are directly observable.andM;Plot: The ideal of profit maximization.andP;  As an organization's primary goal isto maximize its shareholders' wealth, the developed information systems mustcontribute to its profitability.andP;  Management is the most appropriate group todecide how profitability is to be attained and thus, is empowered to specifywhat the system objectives should be.andM;Assumptions: The epistemology is that of positivism in that the developergains knowledge about the organization by searching for measurablecause-effect relationships.andP;  The ontology is that of realism since anempirical organizational reality that is independent of its perceiver orobserver is believed to exist.andP;  The paradigm is that of functionalism, whichis defined by Burrell and Morgan as an overall approach which: &quot;seeks toprovide essentially rational explanations of social affairs&quot; [18, p.andP;  26].andM;Analysis and DiscussionandM;The developer-as-systems-expert story, through its emphasis on various formsof modeling, focuses on grasping the underlying order of the domains in whichorganizational actors operate.andP;  In the process, it assumes that there aregeneral laws or regular patterns that help to explain and predict reality.andO;It seeks to capture these by identifying key organizational relationships andaspects in IS that help the actors to orient themselves and achieve theirobjectives.andP;  This simplifies a complex reality, making organizational lifemore rational.andP;  Rationality, in this case, relates to choosing the best meansfor achieving given ends (i.e., maximize efficiency and effectiveness).andP;  Thesystems development approach suggested by this story attempts to follow thescientific method.andP;  This aids its clarity and comprehensibility, and makes itwidely acceptable to the community at large.andP;  Moreover, it helpsoperationalize fuzzy issues and directs efforts to finding productivetechnical solutions.andM;The features of this story support a number of apparently appealing beliefs.andO;First, it allows the developer to play a neutral and objective role duringsystems development which helps in clarifying the implications of alternativesystem design options.andP;  Second, many would claim it makes the issues ofpower, conflicting interests, and system goals appear to be largely outsidethe domain of the systems developer.andP;  Moreover, a large number of systemshave been successfully completed by following the tenets of this story.andM;However, as Bostrom and Heinen [14] have pointed out, the systems designer'sassumptions associated with this story can lead to a number of conditionsthat contribute to system failure.andP;  The story, therefore, has a number ofpotential dysfunctional consequences.andP;  For one, the primary emphasis is oninvestigating means rather than discussing ends.andP;  There is an implicitassumption that the ends are agreed.andP;  But in reality, ends are controversialand the subject of considerable disagreement and debate.andP;  By assuming theends and thus system objectives are agreed, legitimation can become littlemore than a hollow force or thinly concealed use of power.andP;  The prespecifiedends meet the needs of certain system stakeholders at the expense of others.andO;There are also more fundamental problems with legitimacy.andP;  It is now widelydoubted that economic laws govern social affairs in a similar way as naturallaws govern the physical universe.andP;  Instead, it is believed that economicaffairs are governed by social conventions and the decisions of a powerfulsocio-political elite.andP;  There are no rational, deterministic laws that emergefrom an objective reality.andM;A reaction to the erosion of these legitimating beliefs is end userresistance to change.andP;  To overcome resistance to change, systems developershave relied on a series of approaches, games, and strategies.andP;  These havetaken the form of planned change models (e.g., the Lewin-Schein andKolb-Frohman models), implementation strategies [2, 63],counterimplementation and counter-counterimplementation strategies [6, 49],and the like.andP;  These approaches, however, simply perpetuate the notion thatsystems development and implementation is a type of game.andP;  They continue toconcentrate on means not ends.andP;  The assumption that the system obj ectivesare legitimate and agreed remains.andP;  Failure to focus on the legitimation ofthe ends has led to an inappropriate conception about why users resistchange.andM;The adoption of functionalism as the preferred paradigm for organizationalknowledge acquisition also poses problems.andP;  As Burrell and Morgan [18] pointout, the assumptions intrinsic to functionalism have proved to be at oddswith much of recent social science thinking, Functionalism's two essentialassumptions.andP;  (1) that there exists an objective empirical reality andpositivistic methods are the best way to make sense of it, and (2) that thenature of the social world is best conceived in terms of an integrated orderrather than conflict, are widely felt to be problematic.andP;  Many now argue thatfunctionalism has not been a particularly successful paradigm forunderstanding organizational and societal life, as the subject ofstudy-people-does not lend itself to study through positivistic means (cf.andO;[12, 32, 43, 53, 62, 95]).andP;  People have free will and observation is notneutral, This latter point reflects the fact that people as objects of studyalways &quot;observe back.&quot; They can perceive the observer's plan of study andcounteract it.andP;  Note, however, that the more recent forms of functionalism(cf [1, 31]) have recognized these problems and have proposed ways toovercome them.andM;In some of the more advances thinking in ISD, there is an awareness of thechanging nature of organizational reality facing the developer.andP;  It isexplicitly recognized that at any point in time a system can, at best,approximate the changing requirements emerging from the constantly shiftingtrends and policies of organizational life which can never fully be known todevelopers.andP;  Such insight transcends the mental &quot;cage&quot; of functionalisttenets i 1ISD and insofar as practitioners realize the consequences, theywill see value in the following stories.andM;STORY II: THE ANALYST AS FACILITATORandM;Systems Development as Sense MakingandM;The second story has emerged relatively recently (cf.andP;  [5, 9, 13, 20, 54,73]).andP;  It is partly a reaction to the shortcomings of the first and in manyways its opposite.andP;  It recognizes that knowledge about human means and endsis not easily obtained because reality is exceedingly complex and elusive.andO;There is no single reality, only different perceptions about it.andP;  Businessdoes not deal with an objective economic reality, but one that evolvesthrough changing traditions-social laws, conventions, cultural norms, andattitudes.andP;  Trying to discern economic laws is one way in which people try tomake sense of confusing experiences by imposing a possible order.andP;  No one hasa privileged source of knowledge, all see different parts.andP;  Furthermore, therole of people in shaping reality is very unclear.andP;  What they subjectivelyexperience as a willful choice of action may simply be a reaction induced byenculturated habits or by circumstances.andM;Management, too, tries to make sense of the confusion and instill others witha commitment to the organizational mission that is constantly evolving.andP;  ISare part of the continually changing social environment and somehow shouldhelp to identify which ends are desirable and feasible.andP;  The distinctionbetween ends and means is fluid and reversible.andP;  System objectives emerge aspart of the organizational construction of reality, the &quot;sense-makingprocess&quot; [8].andP;  The role of the system developer is to interact withmanagement to find out what type of system makes sense, but there is noobjective criterion that distinguishes between good and bad systems.andP;  It alldepends on what the parties come to believe to be true.andP;  The developer shouldwork from within the users' perspective and help them to find their preferredviews.andP;  He or she should ease the transition from one viewpoint to another,thereby alleviating possible resistance to change.andP;  Ideally the developer-byvirtue of prior experiences, wisdom or special insights-is able to reduce thepains of change.andP;  But, the purpose and direction of change is hidden from himor her just as much as it is from everyone else.andP;  The developer's expertiseis similar to that of the midwife who can ease the process of birth and makesure that the baby emerges safe and sound, but has no part in designing itsgenetic characteristics.andM;Any system that meets with the approval of the affected parties islegitimate.andP;  To achieve consensus or acceptance, continuous interaction amongall parties is critical.andP;  Through interaction, objectives emerge and becomelegitimized through continuous modification.andP;  Systems cannot be designed inthe usual sense, but emerge through social interaction.andP;  The mechanism ofprototyping or evolutionary learning from interaction with partialimplementations is the way technology becomes embedded into the socialperception and sense-making process.andM;InterpretationandM;Key Actors: Users and the systems developer.andP;  Users are the organizationalagents who interpret and make sense of their surroundings.andP;  The systemsdeveloper is the change agent who helps users make sense of the new systemand its environment.andM;Narrative: Information systems development creates new meaning.andP;  Theeffectiveness of the information system rests on its ability to help usersbetter understand the currently accepted conventions and meanings,Information systems development proceeds through the application of symbolicinteractionism, which suggests that organizational actors interpret systemobjectives and specifications and act according to the meaning theirinterpretation provides for them, Mead [78, p.andP;  78] captures the essence ofsymbolic interactionism when he writes &quot;Language does not simply symbolize asituation or object which is already there in advance; it makes possible theexistence or appearance of that situation or object, for it is part of themechanism whereby that situation or object is created.&quot;andM;Plot: None manifest.andP;  As the social environment is under continuousevolution, no particular rational explanations can be provided to 'explain'organizational reality.andP;  Assumptions: The epistemology is that ofanti-positivism reflecting the belief that the search for causal, empiricalexplanations for social phenomena is misguided and should be replaced bysense-making.andP;  The ontology is that of nominalism in that reality is not agiven, immutable &quot;out there,&quot; but is socially constructed.andP;  It is the productof the human mind.andP;  Social relativism is the paradigm adopted forunderstanding social phenomena and is primarily involved in explaining thesocial world from the viewpoint of the organizational agents who directlytake part in the social process of reality construction.andM;Analysis and DiscussionandM;The developer-as-facilitator story focuses on the complexity of reality whichis by its very nature, confusing.andP;  It does not try to conceal this complexityby pretending that there is an underlying order that can be captured insimplifying models.andP;  Reality is socially constructed and the product ofcontinual social interaction.andP;  The involvement in the social interactionproduces unique experiential knowledge.andP;  The emerging meanings are a functionof experience which is always changing and never quite the same for twopeople.andP;  The uniqueness and idiosyncratic nature of each situation does notallow it to be handled only by applying universal laws and principles.andP;  Thereis a shift from the rigorous scientific paradigm of prediction by expanatorylaws to interpretative accounts of experiences.andP;  The concept of rationalitydoes not play any significant role here.andP;  Developers act rationally if theysimply accept prevailing attitudes and values, remain consistent with generalopinion, and implementchanges in a way that does not threaten social harmony.andM;As this story emphasizes the complexity of systems development, it doubts theefficacy of objective and rigorous methods and tools.andP;  Instead, it favors anapproach to systems development that facilitates the learning of all who areconcerned and affected.andP;  This implies a switch in the role of the developerfrom one of system expert to facilitator who helps to stimulate reflection,cooperation, and experiential learning.andP;  In practice, the social relativistapproach seeks to provide specific tools that facilitator at his or herdiscretion may use to support the project group interaction.andP;  Examples arediary keeping, various forms of mappings (historical, diagnostic, ecological,and virtual [59]), special group pedagogy, use of metaphors to stimulatemental shifts (breakthrough by breakdown [70], etc.andP;  These tools can be usedby the organizational actors for exploring, learning, increasing awareness,inventing solutions to problems, and undertaking action [59].andP;  This isaccompanied by the belief that it is not so much the result of systemsdevelopment that is important, but the way it is achieved.andP;  Hence itintrinsically favors strong participation.andP;  The kind of systems that thisstory produces stimulate creativity and sense making.andP;  The use of creativityis not seen as a means to achieve any specific or wider benefits.andP;  The localor global effects of ISD, good or bad, are not a conscious concern.andP;  Thisstory does not support the notion of a political center that attempts tostrike a balance between individual and collective interests.andP;  Consequently,consensus is not viewed as a social means to maintain interest-basedcoalitions or for achieving an overall global optimum to which individualsinterests are subordinate.andM;The story suggests that all is relative; acceptance is the only thing thatmatters.andP;  Social interaction is crucial for acceptance but there is no way todistinguish between valid and fallacious (inauthentic, manipulative)consensus (what Habermas [39], terms &quot;naive consensus&quot;).andP;  Because of itsrelativist stance, it is completely uncritical of the potential dysfunctionalside effects of using particular tools and techniques for ISD.andP;  Differentproducts of systems development are simply viewed as the result of differentsocially constructed realities.andP;  Note how this differs from the next twostories.andM;STORY III: THE ANALYST AS LABOR PARTISANandM;Systems Development as Dialectic MaterialismandM;The third story is also a fairly recent reaction to the first (cf (16, 30,47, 58, 92]).andP;  It differs from the second by postulating that a fundamentalsocial conflict is endemic to society; yet it agrees with the first in thatthere is an objective economic reality, The conflict allegedly exists betweenthe interests of those who own the sources of production (shareholders of theorganization) and labor (cf [15]).andP;  Economic reality is explained in terms ofthe interdependent unfolding of the conflict between these two socialclasses.andP;  The conflict results from the objective condition of privateownership and contends that the invention of economic laws is a ploy by theowners of the sources of production to make the working class believe thatthere is no alternative way to arrange working conditions.andP;  Management hassided with the owners and are mere agents of their interests [34].andM;In this story, the developer is faced with a choice: to side with managementand become their agent, or join the interests of labor.andP;  In the first case,the systems would rationalize the interests of management and the owners.andP;  Inthis case, the developer will direct systems rationalization against theworkers' interests by affecting the intensity of work, changing theinstruments of work, or replacing the object of work altogether.andP;  Systemsdevelopment in the interest of management increases intensity of work byusing computers to direct the work flow or supervise workers, for instance byissuing detailed, optimally sequenced work schedules [30], monitoring machineoperations (keystroke counting, measuring idle time), etc.andP;  An example ofchanging the instruments or tools of work is the replacement of typewritersby word processors.andP;  An example of where the object of work has been replacedis in the watch industry where integrated circuits replaced mechanical watchmovements.andP;  In all these cases worker interests are jeopardized because ofloss of jobs, decreased dependence of management on labor, deskilling of jobsby increased specialization or standardization, and so forth.andM;Systems developers can choose, however, to side with the workers, designingsystems which help their interests.andP;  In this case, they should use technologyto enhance labor's traditional skills and craftmanship, attempting to makework both more rewarding-economically and psychologically-and deliver abetter product.andP;  There may also be productivity gains, but these must benefitthe worker: by shorter work weeks, more time spent on planning and organizingthe creative part of their work, time for continuing education, moreautonomy, and better wages.andP;  The systems developer needs to avoid replacinglabor by capital through automation.andP;  Technology could also help workers tomanage their own productive concerns-the interest of those who manage andthose who do the productive work would then coincide.andM;Trade union-led projects in Scandinavia such as DEMOS [30] and UTOPIA [47]are instances where systems development was placed in the hands of theworkers.andP;  No matter which role the systems developer chooses, the source ofsystem objectives is the collective interest of the conflicting classes:profits for the owners or improvement of working conditions for labor.andP;  Froma radical structuralist perspective, choosing the former leads to theexploitation of the common man.andP;  Thus, legitimate system objectives enhancethe lot of the workers who must earn a living through their labor.andM;InterpretationandM;Key Actors: Two classes (owners and labor), management, and the systemsdeveloper.andP;  The two antagonistic classes, the owners of the productiveresources and labor, are engaged in a classic struggle.andP;  The owners becomethe beneficiaries of information systems while labor becomes the victim ofsystem rationalization.andP;  Management acts as the agent of the owners.andP;  Thesystems developer chooses between being an agent for management or labor.andM;Narrative: Information systems are developed to support managerial control.andO;System objectives reflect the desire to support the interests of the ownersat the expense of the interests of labor.andP;  Information systems development isembedded in the historical unfolding of class struggle-it either strengthensthe side of the owners (ruling class) or their opponents, labor.andP;  Theunderlying hypothesis, that of dialectic materialism, suggests that thematerial economic conditions are fundamental for the shaping of classinterests.andP;  The social conflict between the two classes follows the patternof the dialectical triad: exploitation of one class by the other, revolt, andsynthesis.andP;  The synthesis takes the form of a new political order andideology.andP;  Information systems development is part of the rationalizingforces by which the owner class exploits labor.andP;  Plot: The ideal of evolutionfrom slavery through feudalism and capitalist market economy to acollectively planned and managed economy.andP;  The purpose of systems developmentshould be to help labor overcome the constraints of capitalism by supportinglabor activism.andP;  .andM;Assumptions: The epistemology is that of positivism in the specific form of amaterialist view of history and society.andP;  The ontology is that of realismreflecting the belief in a preexisting empirical reality.andP;  The paradigm isthat of radical structuralism reflecting a critique of the status quo withthe aim of providing the rationale for radical change.andM;Analysis and DiscussionandM;The developer-as-labor-partisan story focuses on the claim that systemsdevelopment intervenes in the conflict between social classes for prestige,power, and resources.andP;  Conflict is seen as endemic to society and generallyfollows a predictable pattern that can be discerned by analyzing vestedsocial interests and the structures and relationship supporting them.andP;  Anexample of this is the effects of rationalization on workers.andP;  The storydeliberately exhorts the developer to become an advocate of labor to redressthe balance of power between management and labor as the only morallyacceptable course of action.andP;  The story promotes the insight that allknowledge relates to human interests and thus a neutral science is impossible(c[ [32]).andP;  Culture, knowledge, and human interests are seen as intimatelyrelated.andP;  Cultural norms and values are revealed to be subtle, butnevertheless effective mechanisms of behavior control.andP;  They are a ploy tolegitimize managerial goals and turn workers into faithful servants of theruling elite.andM;As a consequence, user resistance is seen as positive because it is a sign oflabor becoming aware of its collective interest which in turn is aprerequisite for social progress.andP;  The story motivates the developer to seekcooperation with labor and their representatives.andP;  It advocates aparticipative approach but only with one party-labor.andP;  Only system objectivesthat evolve from the cooperation between labor and the developer areconsidered legitimate.andP;  This is thought to lead to systems that emphasizeenhancement of craftmanship and working conditions, and a higher quality ofproducts for the consumer (although possibly at a higher price).andP;  Rationalityis tied to the interests of labor.andP;  Only system objectives, tools, andmethods that enhance the position of labor and thereby lead to socialprogress are considered rational.andM;The story leads to a number of potentially dysfunctional consequences.andP;  Itembraces the notion of activism (in which it is more important to change theworld than to interpret it) which reduces the possibility of a justifiedconsensus where cooperation instead of conflict is sought.andP;  It is uncriticalof the effects of social differentiation introduced by organizing classinterests into unions or other forms of worker organization (politicalparties and the like); such effects are the manipulation of the constituencyby their leaders, and the effects of &quot;co-optation&quot; and relative isolation ofthe leaders who often become involved in different social spheres than theirconstituency.andP;  Ehn [28, p.andP;  358] also notes the demarcation disputes that newtechnology creates between different professional groups and trade unionjurisdictions: &quot;.andP;  .  .  the lack of trade union cooperation, not thetechnology, not the newspaper owners, suppliers, may ironically become thedecisive factor frustrating the dream of UTOPIA.&quot; That the UTOPIA team firstcontacted the graphics worker union &quot;made the other unions, [whether] on goodgrounds or not, critical towards UTOPIA, and thus frustrated the dream of ajoint design.&quot;andM;Moreover, this story has a tendency to oversimplify: for example, there areonly two parties, there is no conflict between workers and theirrepresentatives, there is a homogeneous management/owner class, and so on.andO;It also sees the lack of conflict as undesirable in that it reinforces thestatus quo, except when the classless society is reached as the end productof the struggle.andP;  It assumes there are immutable nature-like laws thatdetermine the future of society.andP;  This leads to the so-called fallacy ofhistoricism where all events are seen in terms of ah inevitable, evolutionaryconflict.andM;STORY IV: THE ANALYST AS EMANCIPATOR OR SOCIAL THERAPISTandM;Systems Development as Emancipation through Rational DiscourseandM;The last story is a reaction to the previous three.andP;  Whereas the others canbe observed in actual systems development cases, this story is hypotheticalto a large degree in that it has been constructed from theory [65, 67, 68,85].andP;  Yet a number of individuals have noted its attractiveness and claim tohave incorporated some of its principles in their systems developmentapproaches [20, 73].andP;  Through information systems development, organizationallife is changed, but the rationality of this change is heavily constrained bysocial influences which channel the values, norms, and perceptions of allparticipants.andP;  Through many forms of communication, shared meanings evolveinto a complex culture that cannot be reduced to a bipolar conflict among twoprincipal ideologies.andP;  There are two societal arenas of human action.andP;  One isthe realm of work where people extract their sources of livelihood.andP;  Thesecond is connected to the medium of language use for the purpose ofestablishing mutual understanding (as in the second story) and engaging inemancipatory discourse, The concepts of work, mutual understanding, andemancipation are the three fundamental domains around which society and otherforms of social organization are arranged.andP;  They are also the domains whereknowledge needs to be acquired, and each domain is related to different typesof knowledge.andP;  Habermas [38] terms these types &quot;knowledge interests.&quot;andM;Work is the first domain and it is related to the knowledge interest oftechnical control of natural objects, forces (weather, gravity, temperature,etc.), and people (as in coordinating the movements of a work force).andP;  It isa unique characteristic of the human being to seek knowledge to exercisebetter control over nature and people and thereby rationalize work [39,97]Habermas refers to this as the technical knowledge interest (TKI), and it isaimed at overcoming natural and social obstacles to obtaining products andservices for the continued maintenance and reproduction of the human species.andO;The principal means by which the TKI is realized is through the appliedphysical sciences.andP;  They are characterized by the dominance of instrumentalreasoning, or adopting positivism as the basis for checking the validity ofknowledge claims.andP;  Information systems are an important resource forachieving the TKI.andP;  The first story suggests how this can be done, However,information systems play an equally important role in the realization of twoother knowledge interests, mutual understanding and emancipation.andM;The knowledge interest in mutual understanding is aimed at improving theunderstanding of one's culture, one's own psyche, and the psyches of thosewith whom we interact (i.e., kin, friends, enemies).andP;  As opposed to theengineering sciences which serve primarily the TKI, the cultural sciences(history, literature, philosophy, psychoanalysis, etc.) serve the interest inmutual understanding.andP;  As mutual understanding in the social world isproblematic, hermeneutics has evolved to help with the difficulties ofinterpretation.andP;  Hermeneutics comprises the study of principles that can beapplied to make sense of situations and texts that are difficult to interpretbecause no established meanings apply.andP;  An example of a hermeneutic processis the way in which a court interprets the law to deal with a new case in away which is consistent with prior rulings.andP;  In this story, the developer isfaced with a hermeneutic issue when interpreting system requirements becausethe existing system is like an alien text that needs to be read [12].andO;Further, ISD poses a hermeneutic issue to the user in that it intervenes inthe established modes of sense making and communication.andM;The knowledge interest in mutual understanding on its own lacks a criticalperspective for two reasons: (1) It does not guard against distortedinterpretations.andP;  Such distortions can arise from biases such as ideology andthe limits of language use because &quot;our implicit beliefs and assumptionscannot all be made explicit&quot; [99, p.andP;  32]; (2) It does not necessarily leadto action against unjustifiable situations.andP;  Hermeneutics in this case helpsin understanding the limitations and barriers to the improvement of thequality of the human condition in the direction of maximal freedom fromphysiological needs and social domination.andP;  The removal of these barriers isachieved through the historical process of emancipation.andP;  This leads to thethird knowledge interest whose purpose is the establishment of truth andjustice asthe norm to regulate all human affairs-from the family toorganizations, government and international relations.andP;  The emancipatoryknowledge interest is concerned with social criticism and applications of theTKI and shared understandings to remove all unwarranted contraints to socialfreedom and personal growth.andM;In pursuing the knowledge interest in emancipation, the system developerelicits (through interaction) a shared understanding of the many obstacles tohuman communication.andP;  The developer needs to acquire an appreciation (insiderknowledge) of the different viewpoints and existential situations of thedifferent stakeholder groupings.andP;  But this cannot be done by externalobjective observation, genuine participation is crucial.andP;  Obstacles, however,abound.andP;  The developer needs to consider the following typical obstacles tohuman communication throughout systems development:andM;1.andP;  Authority and illegitimate power-they createandM;anxieties and cause people to distort or withhold information in order toprotect themselves.andM;2.andP;  Peer opinion pressure (&quot;group think&quot;)-it createsandM;tunnel vision for the sake of loyalty, reducing the validity of judgments bysuppressing possible validity checks through criticism.andM;3.andP;  Time, space, and resource limitations they preventandM;universal access to knowledge even though in principle it is available.andP;  Thisincludes the common situation that knowledgeable people remain silent due tolack of motivation to participate because of work overload or the sociallycreated need to withhold important information unless it is to one'sadvantage to engage in a debate.andM;4.andP;  Social differentiation-differences in the level of edandM;ucation, specialization and personal values and beliefs increase the risk ofmisunderstanding.andM;5.andP;  The bias and limitation of language use-distort perandM;ceptions and lead to narrow problem definitions through jargon and cognitiveanchoring.andM;All of these create difficulties of understanding the relevance andimplications of design issues across social and organizational boundaries.andO;Legitimate system objectives emerge from a free and open discussion thatleads to a shared understanding and does not suffer from the harmful effectsof these barriers.andM;In order to illustrate the tenets of this story more clearly, it is helpfulto envisage some key aspects of how systems might appear if their developmentfollows this story.andP;  All systems development would proceed with the threeknowledge interests in mind.andP;  Systems would have features to support thetechnical knowledge interest and these would be similar to those developedunder the functionalist influence, Other features would support the creationof shared meanings and reflect the knowledge interest in mutualunderstanding.andP;  This is similar to systems inspired by social relativism.andO;Finally, there would be a comprehensive set of features to supportemancipatory discourse.andP;  This means that information systems are developedthat facilitate the widest possible debate of organizational problems suchthat truly shared objectives could be agreed upon as well as policies forachieving them.andP;  Such a debate, free of all social pressure, which has thebest chance to correct psychological distortions due to individual bias, iscalled a rational discourse or an ideal speech situation.andP;  The goal ofinformation systems is to help with the institutionalization of an idealspeech situation which in turn validates a consensus about system objectivesand modes of design and implementation.andP;  The ideal speech situation wouldlegitimate a moving balance between the fundamental three objectives ofinformation systems development, namely improved technical control, bettermutual understanding and continued emancipation from unwarranted socialconstraints and psychological compulsions.andM;InterpretationandM;Key Actors: Stakeholders and the systems developer.andP;  The stakeholders are adiverse group of individuals including customers, labor, and theirrepresentatives, heterogeneous levels of management, and the owners of theproductive resources.andP;  They exist within a complex, intertwined set of socialrelationships and interactions.andP;  The stakeholders take part in communicativeaction.andP;  The systems developer acts as a social therapist and emancipator inan attempt to draw together, in open discussion, the various stakeholders.andM;Narrative: Information systems are developed to remove distorting influencesand other barriers to rational discourse.andP;  Systems development is governed bythe three knowledge interests.andP;  The technical knowledge interest directs thedeveloper to be sensitive to issues associated with effective and efficientmanagement of the system project.andP;  The interest in mutual understandingdirects the developer to apply the principles of hermeneutics, which examinethe rules of language use and other practices by which we improvecomprehensibility and mutual understanding, remove misunderstandings, anddisagreement or other obstacles to human communication [79].andP;  The knowledgeinterest in emancipation directs the developer to structure systemsdevelopment to reflect the principles of rational discourse.andM;Plot: The ideal of emancipation.andP;  Information systems should lead to anemancipation from all unwarranted constraints and compulsions (e.g.,andO;psychological, physical, and social) toward a state of justice, freedom, andmaterial well-being for all.andM;Assumptions: The epistemology adopted in this story is of two types:positivism for knowledge interests in technical control (which includes bothnature and man); and anti-positivism for knowledge interests in mutualunderstanding and emancipation.andP;  The ontology adopted is also of two types:realism for technical interests and nominalism or social constructivism formutual understanding and emancipation of interests.andP;  The adopted paradigm isthat of neohumanism which reflects the desire to improve the existence oforganizational actors (through their emancipation) by developing informationandM;systems that support a rational discourse.andM;Analysis and DiscussionandM;The story of developer-as-emancipator focuses on human potential and how itis threatened by ideology, power, and other distorting and unwarrantedconstraints.andP;  In distinction to the first story, it emphasizes what could berather than what is.andP;  This story adds to the notion of instrumentalrationality (in affairs associated with the TKI) and communicativerationality (in affairs governed by the knowledge interest in mutualunderstanding) the notion of discoursive or emancipatory rationality.andP;  Itemphasizes the use of human reason to both recognize deficiencies in theconditions of human existence and to suggest improvements.andP;  Such emancipationis nurtured in the arena of a rational discourse where the intelligibility,veracity, truthfulness, and appropriateness of all arguments are checkedthrough maximal criticism.andP;  Checks and balances on individual opinions areneeded to guard against unwarranted constraints and biases to allowundistorted communication to occur, which means that both the physical andsocial barriers to a rational discourse need to be identified and removed formaximal criticism to occur.andP;  The concept of rational discourse applies bothto the development and use of information systems [67].andM;Rational discourse is an ideal that cannot be fully implemented.andP;  By the useor development of information systems some, but not all, of the barriers to arational discourse could be mitigated.andP;  For example:andM;(1) data modeling could correct some of the bias andandM;distortion by semantic integrity checks; (2) proper organization of thesystem development process could provide rational motivations to participate,share and elicit missing information; (3) networks could help to overcome thelimitations of time and space; (4) conferencing systems could motivate peopleto contribute their expertise by advertising agendas and making it easy toappend comments and suggestions; (5) highly interactive, object orienteddesigns could help to overcome educational differences; and (6) propersecurity controls could protect individual rights through anonymity andmotivate people to communicate criticisms and radical change proposals byshielding them from the threats of the powerful.andM;This story seems appealing because it captures many positive features of theprevious stories and adds the important notion of emancipation.andP;  However,while theoretically strong, it is difficult to see how the story actuallyworks in practice.andP;  The story is normative without providing clear details onhow it could be implemented.andP;  For example, it is not clear how notions likethe systems development life cycle should be modified to accommodate thethree knowledge interests; what tools and techniques should be developed toapply the concept of rational discourse to systems development; how tobroaden the methods for integrity checking to guard against the numerousforms of fallacious reasoning; and so forth.andP;  A more fundamental issue iswhether people would be willing and able to radically change their behaviorto fit the ideal of rational discourse.andP;  Nor is it clear that people would bemotivated to participate in the debate or wish to take part if given theoption.andP;  Moreover, one must question the implicit assumption in the storythat there are no natural limits to human potential, that throughemancipation we can overcome the psychological and social constraints onhuman capabilities which have been inherited from the distorting influencesof the past.andP;  It is difficult to see how the goal of a society free ofideology and domination can be realized.andP;  One must also question theassumption that technological progress will be sufficiently powerful toovercome the significant physical constraints confronting the emancipation ofall.andM;Table I summarizes and highlights the salient details of the paradigms.andM;THE TWO EXAMPLES REVISITEDandM;The stories provide a relatively simple and straightforward way of outliningthe possibility of alternative conceptions about IS development.andP;  We havesuggested four stories, but there could be more.andP;  The importance, however,lies not so much in the fact that there are four (or more) stories, butrather that alternative conceptions of ISD which differ in very fundamentaland striking ways exist.andP;  It is specifically because of these fundamentaldifferences (largely based on differences in adopted assumptions), that thesystems produced will also differ.andP;  This can be noted in the two introductoryexamples presented earlier.andP;  The systems development approach taken in eachcase builds on a set of core assumptions which differ from those of thefunctionalist approach.andP;  Differences can be observed in both the developmentprocess, and in the developed system.andM;Development Process DifferencesandM;Process differences relate to the decisions made during systems development.andO;In the typesetting example, the UTOPIA project team made a conscious decisionto retain and enhance the craft, not to include management representatives,and not to be bound by the thenavailable page layout technology.andP;  Therationale for these decisions can be traced back to the paradigmaticassumptions that guided the development team.andP;  For example, the assumptionthat conflict is endemic to society in the radical structuralist paradigm,motivated the project team to focus on the conflict between typesetters andmanagement.andP;  The denial of the possibility of the system developer being aneutral expert committed them to bolstering the position of the worker in theperceived social struggle and to enhancing the craft of the typesetters.andO;This led to an emphasis on union leadership that put control of systemsdevelopment in the hands of a homogeneous group.andP;  It also heightened thesensitivity to the effects of ideological, managerial bias in that theexisting typesetting systems would make the craft largely redundant therebyenhancing management control over workers.andP;  Moreover, the UTOPIA project teambelieved the ideological bias was manifest in the components of thetechnology itself the social neutrality of technology was denied.andP;  As Kubiceknotes: &quot;This approach is based on the assumption that EDP-knowledge is notimpartial to the interests of capital and labor but rather biased by theperspective of capital and management&quot; [55, p.andP;  9].andP;  If available technologyhad limitations that would not allow the enhancement of the craft's future,then it would not be in the interest of the workers to accept existingtechnology as a design constraint.andP;  In the words of Ehn et al.: &quot;The tradeunions' ability .andP;  .  .  is limited in an increasing number of situations toa choice between yes or no to the purchase of 'turn-key packages' oftechnology and organization&quot; [39, p.andP;  439].andM;In the engine maintenance case, influence from the social relativist paradigmwas evident in the belief that mechanics' subjective skills (involvingexperience and judgment) were key in interpreting the symptoms of wear andtear in maintenance diagnosis.andP;  Knowledge was recognized as being subjective;there was no single 'reality.' Social relativist notions can also be seen inthe way the system was designed.andP;  It emerged through the interaction of thedesign team which comprised a coalition of union representatives, mechanicsand system developers.andP;  Hence control of systems development lay in the handsof a heterogeneous group.andP;  Members of the design team shared insights andconcentrated on the acceptance of the system by the mechanics.andP;  Neohumanistinfluence in the development process was visible in the recognition thatthere might be communication barriers within the coalition which needed to beaddressed by standards of fairness.andP;  Note the difference here regarding thenature of conflict which is assumed to be negotiable in neohumanism butineradicable in radical structuralism.9andM;Developed System DifferencesandM;Differences in developed systems relate to the output of systems developmentand include the following eight features:' 1.andP;  Technology architecture refersto the way in whichandM;specific hardware and software components are configured and matched with thestructural units of the organization.andP;  As is evident from both thetypesetting and engine maintenance example, the structural differentiationsupported by alternative technology architectures has a considerable impacton the opportunities and privileges afforded various user groups.andP;  Differenttypes of technology architecture in typesetting for example, can abolish,maintain or enhance typesetters' responsibilities.andM;2.andP;  Kind of information flows refers to the intended meanandM;ings of the information dealt with by the IS.andP;  For example, the meaning ofthe information of the first engine maintenance system was to formalize themechanics' diagnostic skills so as to leave them out of the diagnostic loop.andO;This differs from information intended to improve the diagnostic capabilitiesof the mechanics.andM;3.andP;  Control of users refers to how the information systemandM;would contribute to or diminish opportunities for one group exercising power,authority or other forms of social influence over another.andM;4.andP;  Control of systems development refers to the locus ofandM;influence over the systems development process.andP;  In principle this can liewith the people affected by the system or some external group or a mixture.andO;(This has been dealt with more fully in the section entitled DevelopmentProcess Differences.)andM;5.andP;  Access to information refers to who would have accessandM;to the information provided by the IS and with it, who stands to benefit fromimproved information,andM;6.andP;  Error handling refers to the arrangement for detectingandM;errors and who would deal with them.andP;  Depending on how errors are lookedupon, they can be used as a basis for external sanctions and rewards, as ameans of subjugation, or, more positively, as a challenge to creativity,source of learning and creation of new meanings.andM;7.andP;  Training refers to the role that education plays asandM;part of system change, who will be selected for training, whether it is seenas a means to enhance the individual and his or her social position, orwhether it is confined to mechanical skills for operating the system.andM;8.andP;  Raison d'etre refers to the primary reason for theandM;existence of the information system.andP;  For example, is it seen as a means forovercoming social barriers, for improving policy formation and competitiveadvantage, for enhancing management control over workers, for achievingcost-savings by replacing labor, etc.?andM;Tables II and III provide a comparison of the systems developed in thetypesetting and engine maintenance examples.andP;  The tables are structured insuch a way that they can be related to the description of the two examplesgiven earlier.andP;  The tables compare the features of the systems which wouldlikely have been developed if a functionalist approach had been adopted.andP;  Thecomparison is hypothetical,&quot; but nevertheless expresses what we think wouldbe the likely system differences in terms of the eight features introducedabove.andP;  Table 11 summarizes the system differences arising from a typesettingsystem developed under a moderated radical structuralist approach.andP;  It wasmoderated because the architects of the typesetting system, while denyingcooperation with management and refusing to take funds from them,nevertheless did not seek to wrestle complete control from them.andP;  Moreover,they did not challenge the basic tenets of a free market economy, i.andP;  e.,andO;they wanted to develop a competitive system which could be sold to othernewspaper companies.andP;  The idea here is not only to make money, but totransfer the software to other locations so that the typesetter's craft as asocial class is enhanced.andP;  Indeed, several UTOPIA reports &quot;state that thereis not incompatibility between making profits and demanding quality oftraining, work, and product,&quot; [28, p.andP;  353].andP;  Table Ill addresses thedifferences between an engine maintenance system first developed under thefunctionalist tradition, and then redone with a development approachcharacterized by influences from the social relativist and neohumanistparadigms.andM;Mixing of InfluencesandM;In practice, information systems development approaches are influenced byassumptions from more than one paradigm.andP;  However, the influence from oneparadigm is typically dominant.andP;  As an example consider the adaptation of thestructured systems analysis and design approaches (e.g., [27, 33, 48, 98, l0l] to the complexities of practice.andP;  The dominant influence is clearlyfunctionalist with the emphasis on identifying true requirements as isevident from McMenamin and Palmer [77, p. 3] who state: &quot;the specificationshould contain all the true requirements and nothing but the truerequirements,&quot; the assumption of a clearly definable system purpose, thebelief that it is possible to objectively model the current system which canbe tested through various structured techniques [33], the distinction betweenthe logical and physical system exists and the suggestion that one can bederived from the other [27], &quot;that there are precisely defined ways topartition essential features in such a way that the principles of essentialmodeling are observed&quot; [77, p.andP;  471.andP;  Nevertheless, there is often arecognition of the subjectivity and evolutionary nature of requirements.andO;Prototyping is the practical way of handling the subjective and emergingnature of requirements (cf [26]).andP;  Prototyping, though originally conceivedas an approach in its own right [82], is incorporated within the requirementsspecification stage of the structured approaches to mitigate the rigidity ofthe functionalist assumption of modeling &quot;true requirements.&quot; In prototyping,users and analysts interact to construct a working model of the system whichis then &quot;refined and modified in a continuous process, until the fit betweenuser and system is acceptable&quot; [19, p.andP;  163].andM;As is evident from the discussion of the typesetting and engine maintenancecases, the mixing of influences of various paradigms can and does occur in anumber of creative solutions to systems development problems which advancethe state of the art.andP;  The UTOPIA project is a good example.andP;  It showssystems development under a radical structuralist approach, but withmoderating influences.andM;CONCLUSIONSandM;In practice, it can be seen that the mixing of paradigmatic influences leadsto interesting and creative solutions; however, the development of thesesolutions has had to rely solely on the inventiveness of creativepractitioners who may or may not have been conscious of the philosophicalassumptions belonging to alternative paradigms.andP;  Should the finding of such'creative' solutions rely only on serendipity? We contend that advancementcould come about from the explicit documentation of the assumptionsunderlying the various paradigms, It would permit the generation of creativesolutions to practical problems to proceed in a more conscious and systematicway.andM;Moreover, a documentation of the assumptions underlying the paradigms allowssystems developers to become better aware of the assumptions and beliefs thatthey employ in their day-to-day activities.andP;  A better understanding of theconceptual foundations of their beliefs including the recognition of otherbelief alternatives can lead developers to seek creative solutions using thestrengths of each paradigm.andP;  However, each paradigm has weaknesses that willaffect the quality of the solutions it inspires.andP;  Without a systematicdocumentation of alternative paradigmatic assumptions, some of theseweaknesses may escape the attention of the practicing systems developer.andP;  Aconcise documentation of paradigmatic assumptions invites criticalassessment.andM;For the researcher, these systems development paradigms pose a number ofinteresting but difficult challenges.andP;  First, each paradigm is capable offurther development and refinement.andP;  It is the task of IS researchers toattend to such refinement.andP;  For example, the functionalist paradigm, asreflected in the current ISD literature, does not incorporate the latestthinking about functionalism as it exists in social theory [1, 31].andP;  Thechallenge facing researchers is to incorporate these advances into thevarious ISD paradigms.andP;  This appears to have been taken up by Winograd andFlores [99] in their absorption of essential insights from socialrelativism-namely a hermeneutic and phenomenological analysis of humanunderstanding-into their treatment of the software design problem.andM;Second, although it was not possible to relate systems developmentmethodologies to paradigms in this article, an exploration of theirrelationship would nevertheless appear to be a key research issue.&quot;andO;Methodologies such as ISAC [64], Soft Systems Methodology [20], and Multiview[100], which combine features of different paradigms need to be criticallyappraised.andP;  A criticism and grounding of existing methodologies by analyzingthem from the vantage point of different paradigms would seem to be a usefulvehicle for obtaining a detailed understanding of them [66].andP;  Moreover, theidentification of new ISD paradigms [65] could lead to the construction ofnew methodologies.andP;  An example in this direction is provided by the work ofGoldkuhl and Lyytinen [35], Lyytinen and Lehtinen [69], and Lehtinen andLyytinen [61].andM;Third, the identification of paradigms along with the set of philosophicalassumptions which each embraces provides a new vehicle for investigating newtheories about the nature and purpose of information systems development.andO;Currently, most research is focused only on the functionalist paradigm.andO;This, we argue, is not enough.andP;  Functionalist systems development is groundedin a set of common assumptions that concomitantly enlighten and enslave.andO;Alternative conceptions of ISD seem warranted (cf [45]) and will hopefullyemerge through further research.andM;Acknowledgments.andP;  This article has benefitted from the helpful comments ofKalle Lyytinen, Rob Kling, Niels Bjorn-Andersen, John Venable, and fouranonymous referees.andP;  Kalle Lyytinen's help in constructing a preliminaryversion of Table I is gratefully acknowledged.andO;</TEXT></DOC>
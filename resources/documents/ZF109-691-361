<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-691-361  </DOCNO><DOCID>09 691 361.andM;</DOCID><JOURNAL>Datamation  Dec 1 1990 v36 n23 p59(3)* Full Text COPYRIGHT Cahners Publishing Co. 1990.andM;</JOURNAL><TITLE>Ten steps to AD/Cycle. (preparing for IBM's AD/Cyclecomputer-aided software engineering applications developmentsystem) (tutorial)</TITLE><AUTHOR>Fosdick, Howard.andM;</AUTHOR><SUMMARY>IBM's AD/Cycle-Repository architecture for computer-aided softwareengineering (CASE) applications development received immediatesupport from about 30 independent software vendors (ISVs) upon itsintroduction in 1989.andP;  The ISVs see the architecture as a standardfor application development for years to come, although it willtake years for the architecture to take shape.andP;  Corporate MIS canprepare for AD/Cycle by following a ten-step program: get DB2experience; consolidate and, if necessary, reconcile data;organize and define a corporate applications portfolio; adopt theSystems Application Architecture (SAA); get CASE experience; adopta systems development methodology; upgrade to OS/2 ExtendedEdition; implement cooperative processing; take a crash course onRepository Manager/MVS; and adopt software metrics.andM;</SUMMARY><DESCRIPT>Product:   AD/Cycle (CASE software) (Business use).andO;Topic:     Applications ProgrammingProgram Development TechniquesStandardsStrategic PlanningMISProgram Development ToolsComputer-aided software engineering.andO;Feature:   illustrationtable.andO;Caption:   IBM's very own AD/Cycle products. (table)andM;</DESCRIPT><TEXT>Ten Steps To AD/CycleandM;On September 19, 1989, IBM became the standard bearer for the computer-aidedsoftware engineering (CASE) industry by laying out its plan for theautomation of the software development process.andP;  The company unveiled itsAD/Cycle-Repository architecture, the CASE standard that will permanentlyalter the way IS develops and maintains applications during the comingdecade.andM;Independent software vendors (ISVs) immediately saw the meaning and theimpact of the IBM announcement.andP;  Within days, some 30-odd companies hadcommitted to coexistence with or support of IBM's AD/Cycle.andP;  All understoodthat IBM's announcement was just the launch of a product cycle that wouldplay out over a period of several years--yet all saw the benefits of quicklystandardizing on a single CASE architecture.andM;The IBM Repository is the foundation of IBM's AD/Cycle architecture.andP;  TheRepository is a centrally controlled mainframe-based data store containingall of the information pertaining to a particular company's applicationsdevelopment process.andP;  It enables the integration of CASE tools, code reuse,cross life-cycle project management and, ultimately, the automation of thesoftware development process.andM;AD/Cycle itself is the somewhat nebulous, and still evolving, set of fullyintegrated CASE tools that IBM plans to bring to market over the next decade.andO;Developers will use these AD/Cycle tools to transform the Repository-basedinformation base into compilable applications code.andM;Since the IBM announcement, questions have arisen concerning how quickly IBMcan roll out the products necessary to implement AD/Cycle.andP;  And accusationshave flown about limited functionality in the few AD/Cycle products IBM hasreleased so far.andM;But all these concerns miss the point.andP;  The bottom line is that IBM has set adirection that will radically change the way IS develops and maintainsapplications.andM;As a result, more and more CASE ISVs are signing onto the AD/Cycle standard.andO;The real issue for IS managers is how best and how quickly to move theirdevelopment shops in the direction IBM is taking the industry.andM;The trick is to learn how to move your shop in the right direction forAD/Cycle without buying into specifics that may change or products that arenot mature.andP;  Here's how you can do it:andM;1.andP;  Get DB2 Experience.andP;  Repository Manager/MVS is not just any old DB2application; it is an exceptionally large and critical DB2 productionapplication--your shop's entire software development effort may somedaydepend on it.andP;  The implications for DB2 performance are obvious.andP;  Your shophad better be well beyond the stage where DB2 is only used for decisionsupport.andP;  If you aren't already doing so, you need to get experience inputting up critical production systems with DB2.andM;Industry consensus is that IBM's newest version of DB2 is a mature productthat is now fully capable of handling production applications (see &quot;TheMaturation Of DB2,&quot; March 15, 1990, p. 75).andP;  Don't hold back from investingin this strategic component of your company's infrastructure.andM;2.andP;  Consolidate And Cleanse Your Data.andP;  The repository concept stipulatesthat all organizational data belong to the enterprise and therefore must allbe logically centralized.andP;  This means that you must consolidate and, ifnecessary, reconcile your data.andP;  For example, if your data are currentlyowned and maintained by different departments, those data will have to bemerged if the applications development work for those departments is to bebased on a single repository.andP;  Differences and inconsistencies in duplicatedata used across departments must be reconciled.andM;If you use a data dictionary, you are already familiar with the many problemsdata centralization entails.andP;  Ultimately, you must prepare to migrate (orload) data into the Repository.andP;  In effect, the AD/Cycle-Repository commitsyour organization to having a full-time database administrator or databaseadministration function.andM;The Repository is also more than just a data dictionary; it holds informationpertaining to applications development, too.andP;  This means shops will have toconsolidate and reconcile their applications development information--sourcecode, COBOL COPY books, libraries, Structured Query Language Data DefinitionLanguage (SQL DDL).andM;3.andP;  Organize And Define A Corporate Applications Portfolio.andP;  The Repositoryis a means through which information about the design and building ofapplications is shared through all the phases of the AD/Cycle developmentprocess.andM;This means that your organization must take stock of, understand andrationalize all its applications.andP;  If your shop is one in which applicationshave grown up willy-nilly, IBM's AD/Cycle-Repository will force you to bringorder to your applications development environment.andP;  Learn everything you canabout the basic framework of the AD/Cycle architecture, within whichIBM-based IS shops will develop, manage and maintain future applications.andO;Your goal is to understand your applications in order to be able to map themonto this architecture.andM;One way to accomplish this is through the notion of an &quot;applicationsportfolio.&quot;andP;  The portfolio structures existing applications, defines therelationships between them and leads to a better understanding of how thecompany operates and what its IS needs are.andP;  Your ability to prioritizefuture applications in terms of business needs is key to the successful useof this technique.andM;Implicit in this process is the requirement that you commit your shop to theconcept of using enterprise modeling to map business goals and functions ontothe AD/Cycle-Repository framework.andP;  IS must build a functional model of howthe enterprise works and create an applications development plan tied to thebusiness's critical success factors.andM;4.andP;  Adopt Systems Application Architecture (SAA).andP;  AD/Cycle is IBM's SAAsolution to the software crisis.andP;  The more you align your organization'sstrategic applications development plans with SAA, the more closely you willorient your shop toward the requirements of the AD/Cycle-Repositoryarchitecture.andP;  Make SAA part of your systems planning, make your productpurchasing decisions within this context, gain experience in SAA technologiesand commit to SAA-blessed software and standards for future projects.andM;As the IBM SAA-blessed applications development environment, AD/Cycle willconform to SAA's Common User Access.andP;  Getting experience with and developingCUA-conformant applications is an important part of preparation for the newIBM-standard CASE environment.andM;SAA-compliant tools will of necessity be AD/Cycle- and Repository-capabletools, too.andP;  For example, to the extent that the new environment generatessource code, you can bet that code will be SAA COBOL.andP;  If you want to callthe Repository services from programming languages, you can be certain thesupported languages will be the SAA languages.andP;  You should gain developmentexperience with IBM's line of SAA products, such as the Interactive SystemProductivity Facility (ISPF) Dialog Manager, the Restructured ExtendedExecutor (REXX) language, C, the Cross System Product (CSP), PresentationManager and ISPF/PDF SCLM (ISPF/Program Development Facility SystemsConfiguration Library Manager.andM;If you don't like the idea of adopting SAA because it's too proprietary,remember that all those ISVs piggybacking on the AD/Cycle-Repository standardhave implicitly adopted SAA, too.andP;  These independents are making sure SAA isnot as proprietary as it might appear at first blush.andM;5.andP;  Get CASE Experience.andP;  Since AD/Cycle is IBM's CASE environment,experience with CASE tools is an obvious prerequisite.andP;  Tools from IBM andits AD/Cycle business partners (Bachman Information Systems Inc.,andO;KnowledgeWare Inc., Index Technology Corp., Synon Inc. and Systematica)should certainly be high on your list, but, given the wise commitment ofindependent software vendors to IBM's standards, experience with any numberof tools from ISVs that adhere to the AD/Cycle-Repository standard isvaluable.andM;The distinction between fron-end (systems analysis) and back-end (codegeneration) tools is important.andP;  Many shops have experience in one area orthe other, but few have tackled both, and even fewer have managed tointegrate the two.andP;  If you have adopted a single-vendor integrated CASE(I-CASE) solution, you may be ahead of the game--if your vendor keeps pacewith AD/Cycle-Repository developments.andP;  But if your shop has patched togetherits own quilt of front-and back-end CASE solutions, then you should put majoremphasis on integrating the tools and increasing the cohesion of yourdevelopment efforts.andP;  AD/Cycle is a component-CASE (C-CASE) framework, inwhich tools from different vendors are supposed to be plug-compatible.andM;If the experience of the past five years has proven anything about CASE, itis that absorbing this technology productively into an organization takestime.andP;  AD/Cycle is CASE at its most sophisticated.andP;  Start now, before theRepository matures, and you'll be ready when AD/Cycle becomes operational.andM;6.andP;  Adopt A Systems Development Methodology.andP;  CASE is more than a set oftools, it is an applications development methodology.andP;  If your organizationcurrently has no systems development methodology (SDM), your first step onthe road to CASE will be to select an appropriate one.andP;  The next step willtake the most time--integrating the new methodology into your organization.andO;This involves training staff and changing the basic ways in which analystsand programmers operate.andP;  For organizations and people with vested interests,this change can be traumatic.andP;  This cultural change can be the biggestchallenge organizations face in moving toward the AD/Cycle-Repositoryenvironment.andM;Perhaps more common than organizations without any SDM are those that havetoo many.andP;  It's not unusual to find different groups within largeorganizations that are quite sophisticated in this regard--so sophisticatedthat they have tweaked and tuned several methodologies into their own hybridSDM.andP;  The advent of a repository-driven environment enforces conformity.andO;While IBM's Repository supports more than a single SDM, coherence amongmultiple methodologies is a prerequisite.andM;7.andP;  Upgrade To OS/2 Extended Edition.andP;  IBM has made clear that PS/2s runningOS/2 Extended Edition comprise its AD/Cycle CASE workstation.andP;  Independentsoftware vendors are likewise basing their AD/Cycle-compliant tools on thishardware platform.andP;  This implies an expensive upgrade in PC hardware for manyIS sites.andP;  This evolution will come at any rate, but knowing that it isessential to the new AD/Cycle-Repository CASE system gives IS managers areason to pursue this path sooner.andM;You'll also want to cross-train your staff to become familiar with bothmainframe and PC environments.andP;  Get your mainframers used to using a PC as anentrance point to the mainframe, even if only via simple 3270 terminalemulation.andP;  Ultimately, AD/Cycle erodes the importance of traditionalmainframe coding skills used in COBOL, the Customer Information ControlSystem (CICS) and the Information Management System (IMS); your staff willneed training in the use of CASE tools and in enterprise- and data-modelingtechniques.andM;If your PC staff doesn't have mainframe IDs yet, set them up now.andP;  The staffwill need to become familiar with such multiuser concepts as security,transactional-teleprocessing monitors and common commands of the MVSoperating system.andP;  They'll also need to understand operational procedures formultiuser applications such as backup and recovery.andM;Ten years into the PC evolution, the AD/Cycle-Repository system representsthe first true integration of IBM mainframe and PC/workstation of IBMmainframe and PC/workstation technology for software developers.andM;8.andP;  Implement Cooperative Processing.andP;  Basic to the AD/Cycle-Repositoryvision is the concept of cooperative processing between developers'workstations and a centrally controlled repository.andP;  The workstations supportthe CASE tools while the repository integrates the data for the tools andmanages the full life cycle development process.andP;  For organizations that havetraditionally developed applications on their mainframes, this represents aparadigm shift.andP;  They must reorient themselves to workstation-based softwaredevelopment.andM;Shops that have avoided networking beyond that required in 3270 VTAMconnections are also in for a change.andP;  The new model of centralized computingbrings intelligent workstations into the heart of IS in the context of anetworked architecture.andP;  If your site has not explored networking, you'llneed to gain experience with local area networks, peer-to-peer networking,the LU 6.2 communications protocol and cooperative processing.andM;9.andP;  Take A Crash Course On Repository Manager/MVS.andP;  There is a lot you can doto learn about the Repository short of buying it in its early releaseversion.andP;  IBM has published the basic manual set for the initial product.andO;Substantive articles are starting to appear in the trade press.andP;  Beaverton,Ore.-based Sage Software Inc. even provides PC repository orientationtraining software.andP;  You might also want to contact R/AD, the internationalusers group for the Repository and AD/Cycle at (312)-644-6610.andM;Part of your staff's education in the Repository should include modelingexperience.andP;  The Repository supports Entity/Attribute/Relationship modeling,but IS staff members need experience in various other logical and physicaldata modeling techniques, as well.andP;  Of particular importance is theRepository's &quot;Information Model,&quot; the basis for data integration in theRepository and the vehicle through which the various CASE tools share data.andM;You should keep current with IBM's latest changes to and developments in itsRepository even if you don't purchase the product.andP;  That will help you judgethe maturity of this standard, track its progress and keep current on howother products fit in.andP;  Because of its impact on ISVs' product developmentdecisions, the AD/Cycle-Repository standard will ultimately affect even thosewho don't purchase IBM's products.andM;10.andP;  Adopt Software Metrics.andP;  The CASE concept treats programming as anengineering discipline, not an art.andP;  A fundamental tenet of CASE is thatsoftware development productivity can be measured.andP;  Metrics underlie thisphilosophical shift, and this is why the AD/Cycle-Repository architectureincludes cross life cycle project management.andM;To this end, many organizations have adopted IBM's function points as onemeasurement yardstick, while others have closely followed the productivitymeasurement work of such experts as T. Capers Jones.andP;  Whatever approach youchoose, as your organization moves into the new world of AD/Cycle-Repository,you'll need some way to measure the effects on your development effort.andO;Without such metrics, it will be difficult for you to judge the progressyou're making.andM;Nearly all industry analysts predict that IBM's Repository and AD/Cycle willdefine the standard CASE environment of the 1990s.andP;  But this environment willmature--perhaps even change completely--over the course of the decade.andM;Far-sighted Is managers can do much to accelerate this evolution in theirshops without over-committing their resources.andO;</TEXT></DOC>
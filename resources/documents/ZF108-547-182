<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-547-182  </DOCNO><DOCID>08 547 182.andM;</DOCID><JOURNAL>Release 1.0  Annual 1990 v90 nDIRECT p87(10)* Full Text COPYRIGHT EdVenture Holdings 1990.andM;</JOURNAL><TITLE>User tools panel. (panel discussion)</TITLE><AUTHOR>Kaplan, S. Jerrold; Kapor, Mitchell; Landry, John; McEvoy, DennisL.; Reinstein, Harry; Tesler, Lawrence G.andM;</AUTHOR><DESCRIPT>Topic:     Program Development ToolsUser NeedsSoftware DesignFuture of ComputingUser InterfaceProduct Development.andM;</DESCRIPT><TEXT>Esther  Dyson, EDventure Holdings: The first user tool with which I becamefamiliar - this is partly a story about Ben Rosen I didn't tell lastnight-was something Mitchell designed: 1-2-3.andP;  You all think of that as aspreadsheet, but Ben used it for everything.andP;  He took phone messages in it.andO;He kept records of conference attendees in it.andP;  Lots of people use it as aword processor, database, telephone dialer, or to build macros.andP;  The reasonthis is such a successful user tool isn't inherent to it.andP;  What makes itsuccessful is that people become familiar with it through constant use.andP;  Theycall it intuitive, but it isn't.andP;  It feels intuitive because people get usedto using it.andM;In previous years this panel was called the Hot Apps Panel or something likethat.andP;  We'd sit around and say, &quot;What are the hot apps going to be of 1987 orwhat-have-you?&quot; The hot apps of 1990 and beyond are not going to be apps.andO;They'll be tools that enable users to create their own apps to get beyond theinflexibility of the current ones.andP;  If I turn on my computer, it goes intoXyWrite, which is what I use for everything.andP;  It's not the world's mostflexible tool, but it's too much trouble to switch into anything else.andP;  Theguys here are going to talk about things that will be somewhat more flexible.andO;Jerry  Kaplan is the designer of Agenda.andM;Jerry  Kaplan, GO Corp.: With Ed.andM;Dyson: Yes, with Ed Belove and so forth.andP;  Jerry's working on something calledMagic, an Al spreadsheet.andP;  He used to work at Teknowledge, so he knows a fairamount about Al, although he was the only marketing guy there which reallywasn't much of a coup.andM;[Laughter]andM;His company, GO Corp., has an unannounced product, so he's not going tointroduce himself because he's not supposed to talk about what he's up to.andO;He's here though as someone who has thought deeply about these issues.andP;  Theother four - you've heard from Mitch - will give you a sense of who they areand what they're working on.andM;John  Landry, Agility Systems: Last night I asked  Esther what she wanted meto talk about.andP;  In her typical deterministic, Type-A personality way, shesaid, &quot;Talk about anything you want.andP;  Talk about yourself.&quot; I thought that'sprobably exactly what she told Ben Rosen, so I've asked a number of myfriends to come up hereandM;[Laughter]andM;I would say that John  Landry is a hen of a nice guy.andP;  But seriously--andM;[Laughter]andM;For five years I worked for McCormack andamp; Dodge and Cullinet.andP;  I was one ofthose mainframe lepers who used to come to this conference.andP;  Believe it ornot, there are a lot here.andP;  I don't know if that's a bad sign or we shouldcall this the Mainframe Computing Conference.andP;  In any case, in September oflast year I was head of development at Cullinet.andP;  We sold the company, thankGod, to Computer Associates.andP;  I decided to inflate my golden parachute andstart a company.andM;Through  Esther - who as a matchmaker on this got no finder's fee - I hookedup with Tom Malone, a professor at MIT's Sloan School.andP;  He is best known forheading the Center for Coordination Science, an academy for groupware.andO;Through meeting him, I got to see some stuff that I was truly blown away by.andO;Tom had built two systems that are well-known - at least in academia - asprototypical groupware applications.andP;  One is known as Information Lens; theother, Object Lens.andP;  I immediately saw an application that was beyond whatTom had originally designed them for.andP;  They had the potential to change theway people deal with each other as well as external and internal computersystems.andM;So we formed Agility Systems to  develop and market a new class ofapplications built upon a substrata of already existing electronic-mailsystems.andP;  It's what I call interpersonal or interorganizational computing.andO;Steve Jobs talked about interpersonal computing - at least that's what theagenda said he talked about - so I'd like to continue with that and ask you,&quot;What else is wrong with the NEXT machine?&quot;andM;[Laughter]andM;Bill Gates would say only Steve Jobs could stand up here and get 500 of thetop software professionals in the US to pay $2000 to act as his focus group,and he comes for free !andP;  [Applause]andM;In five minutes, I can't discuss everything we're doing at Agility Systems.andO;But one of the things I want to bring up - Mitch alluded to this as hedescribed his trials and tribulations with MCI mail - is that work-groupcomputing should not be  considered a departmental-type phenomenon.andP;  Becauseof the mail systems, it could be a worldwide phenomenon.andP;  Over the last 12months, every major public electronic-mail carrier - MCI, ATandamp;T, BritishTelcom, Western Union, Internet - has interconnected.andM;Because the major private mail-system vendors - IBM, DEC, DG, HP - haveadopted the X.400 standard for electronic mail, all the local-mail systems can be tied to the public-mail systems.andP;  The appropriate analogy is thetelephone network.andP;  Just as you can get from any desktop in the world to anyother by phone, so you can with electronic mail.andP;  Stop thinking of mail as alocal phenomenon.andP;  Think of it as a vehicle for global interconnectivitywhich we could exploit very nicely.andM;Secondly, stop thinking of electronic mad as text messages sent betweenpeople.andP;  Tom Malone's research at MIT showed that business messages typicallyare semi-structured.andP;  A meeting announcement can be represented by a form,which can 1) Be passed through the mail.andP;  When this occurs, two thingshappen.andM;Once the composition becomes a graphical user interface, it is very easy forpeople to use.andP;  They just have to point and  click; identify the message,from a list and send it.andP;  Even better, agents on the receiving end canexecute transactions when they receive a message.andP;  The message does not haveto be sent to any parti(-ular person.andP;  It can be sent to an agent interfacedto a system like Dow Jones News Retrieval, Nexus or the McCormack andamp; Dodgeaccounts payable system, which  captures information.andP;  composes it, and sendsit back to the person who requested it.andP;  With a mail-centric system and asimple graphical user interface, we have the capability for people tocommunicate with each other as well as systems with which they areunfamiliar.andP;  That's what we're doing at Ability.andP;  Thank you.andM;[Applause]andM;Dennis McEvoy, Cooperative Solutions: As Mitch  did, I brought my laptop andbrought my Diconix printer.andP;  I did bring the right cable, but found that thenew new driver I had installed printed out the test pattern rather than mynotes.andP;  So I went back to the old tried-and-true method and hand wrote mynotes.andM;[Laughter]andM;Esther asked me to explain how somebody from the world of mainframetransaction processing and fault tolerant computers could get into theclient/server revolution.andP;  My background was at Tandem Computers - the worldof transaction processing and worse.andP;  When I say OLTP, most of you think ofArrow Line Reservation Systems and ATMs and other such highly visibleapplications.andP;  OLTP represents about 25 percent of the worldwide computermarket - about $30 billion in 1989 - according to the Gartner Group.andP;  OLTP isa world of stringent performance and data-integrity requirements andapplications that can scale to support tens or hundreds of thousands of usersin a 24-hour-a-day, seven-day-a-week operation.andP;  It's a world dominated bymainframes and  dumb terminals.andP;  Its worldwide application development isstill in the hands of highly trained specialists, and there are not enough ofthem.andM;This world, however, hasn't been blind to the pc revolution.andP;  The people init are, tantalized by the inexpensive computing power available in thedesktop.andP;  They're, envious of those productive graphical user interfaces andthe approachable personal-productivity applications.andP;  They're intrigued bythe new architectures for servers that combine the low cost and inexpensiveprocessing power of pcs with the data integrity, processor architectures andexpandability of mainframes.andM;Many people think these two technologies are, going to be merged in aclient/server  computer by making pc programs multi-user with SQL serverDBMSes underneath them.andP;  Or they think we're going to put a graphical userinterface in front of programs  developed for the mainframe.andP;  it's not goingto happen that way any more than we got the best wordprocessing packages onthe pc by importing what was on Wang or Lanier to the, pcs.andP;  The client/server revolution is going to come about  through developing newsoftware and new architecture to leverage that new client/server environment.andM;The biggest problem facing large corporations isn't the expensive cost ofmainframe MIPS or the unproductiveness of their terminal interfaces.andP;  it'sthe backlog in  developing applications.andP;  During the  80s we've seen the pcrevolution, the  development of the mainframe-directed CASE industry and theemergence and proliferation of standards.andP;  But  corporations still facethree-year backlogs and 18- to 24-month development cycles for producing newapplications.andP;  Dramatically reducing this cycle and broadening the base ofdevelopers of of on-line business applications will leverage  client/serverarchitecture and the standard-based platform.andM;One way to leverage the productive graphical user interface would be tocreate a visual programming environment in which you don't have to remembersyntax, semantics and the names of various things.andP;  By using a multi-userapplication-development system with conversion control and transmissionmanagement - the things you don't get today even from large mainframe-basedsystems - and by taking advantage of object-oriented development techniques,we can attack the application development and maintenance problems.andM;Finally, we have to take advantage of the power we have on the desktop toreduce the tremendous complexity facing an application developer today.andP;  Usethose inexpensive MIPS rather than human thinking power to determine what torun on the client, what to run on the server, how to recover from errorsautomatically, how to guarantee transaction integrity and all of thosenitty-gritty problems people have to program for.andP;  These arc what takeapplication development so long.andM;I agree with  Esther.andP;  We don't need more standards right now.andP;  We need toinnovate more and to attack the problem of application development.andP;  We can'tcontinue to five with the premise that with each new generation of hardware,software is going to fall further and further behind.andP;  We're going to have anexciting 1990s as we apply innovation to the standards and wonderfulplatforms we created in the  80s.andP;  Thanks for your attention.andM;[Applause]andM;Harry Reinstein, Aion:  Esther just said, &quot;Go ahead.&quot; So she either expectsthat everybody knows me or that I've been in the industry long enough that ifyou don't, it doesn't matter.andP;  JohnandM;Landry and I were identified in the write-up as coming from an older era.andO;We're likened to the smaller reptiles that managed to down size and becomepets ...andM;[Laughter] ...in the human world.andP;  In sonic sense, this could well be true.andO;Given this position  Esther's put me in, I'm going to put this  conferenceand the work you all are doing into a historic context, which is important tounderstand.andP;  The papers by some of the bright people in computing like vonNeumann, whom I liked because he's one of the few in the industry who did hiswork before I joined it...andM;[Laughter] ...can be read at places like Stanford.andP;  There are someinteresting comments in them.andP;  He  did two things that set the standard forthe 30 years or so that we've been involved in the industry.andP;  When he cameacross extremely difficult problems in the handling of his hardware, hedeclared them to be program issues, not hardware issues.andP;  That's lived withus for a long time.andP;  The other thing, he said was that the issues of todaycould be left for a later time and another paper...andM;[Laughter] ...so we owe him a lot.andP;  But programming did indeed start with himand others, and quickly became an endeavor in which we supported each otherby writing tools and things we could use as programmers.andP;  Eventually we splitthe programming industry into application programmers and &quot;real&quot; programmers,those of us who are systems people and really understand the machine.andM;It's important to note what happened when we moved to theapplication-programming orientation.andP;  We enlarged by a substantial amount thenumber of people who  could build solutions.andP;  However, we still maintainedthe idea that the people who benefited from information technology were, notthose who controlled it.andP;  As Mitch and others have pointed out, a wholereligion was developed in which the priests or the maintainers of thedata-proccssing organization were not those being administered to.andM;But the use of technology has shifted from the back office, which has driventhis industry for 30 years, to the front office.andP;  This is an importantfundamental shift.andP;  Back-office applications - general ledger, accountspayable, inventory control were relatively simple, stable and computational.andO;Front-office uses mean support of customers using technology in areas thatare complex, not simple; dynamic, not stable; and definitely judgemental, notcomputational.andP;  They need the tools to control that from which they benefit.andM;During the pc revolution it looked as if control truly was being put into thehands of people benefiting from it.andP;  But this movement hasn't gone farenough.andP;  We must build applications that are highly complex, but whoseeconomics of change and development must be attractive on an order  ofmagnitude greater than in the past.andM;There are three critical technologies emerging: workstations, networks andinferenc-based data processing.andP;  Third-generation computing will be here fora long time, but it will not solve these front-office problems.andP;  Neither willfourth generation.andP;  James Martin calls the inference-based solutions fifthgeneration.andP;  Whatever generation we call them, they are an important aspectof how we can bring the flexible, instead of one-size-fits-all, approach toapplication-development systems.andP;  This an an area Aion is involved in.andP;  It'san area all of us have to be involved in over the next  decade.andP;  Thank youvery much.andM;[Applause]andM;Lawrence G. Tesler, Apple Computer: I don't have any notes.andP;  I brought myportable, but I didn't bring a printer or a pencil so I had to borrow onefrom Andrew Singer.andP;  Fortunately I know what I want to talk about.andP;  I want tocomment on some things Mike Quinlan and Mitch Kapor said.andP;  One of themcommented that multimedia might make computers easier to use.andP;  I wonderwhether multimedia will make computers easier to use, which I frankly doubt,or whether we will make multimedia easy to use.andP;  If it's the first way,thinking of Mitch's VCR example, then the consumer-electronics companies willwalk away with multimedia.andP;  I certainly hope it's the latter.andM;What I'd like to talk about is this elusive thing called user programming.andO;In the preparatory material for the conference,andM;Esther said maybe users won't ever program.andP;  Maybe we'll have user modelingor something like that.andP;  But I've never quite given up on the idea users canprogram.andP;  In fact users today do what programmers did 15 years ago.andP;  They'redoing spreadsheets, writing macros and so on.andP;  They're also doing drawingswhich used to he done by writing programs.andP;  There's no question that userscan program.andP;  We just have to make sure they don't know they're doing it.andO;What does it take? As Mitch pointed out, anyone who wants to write a programhas to know what he wants.andP;  Sometimes I sit down in the mood to write aprogram.andP;  I get that hacking mood.andM;[Laughter]andM;I sit down and realize I don't know what I want it to do.andP;  If you don't knowwhat your program's supposed to do, you're certainly not going to getstarted.andP;  In general, software innovations occur when people realize theyneed or could use something they don't have.andP;  This realization is the firstStep to programming.andP;  Then you have to get them to consider they can make thecomputer do it by writing a program instead of searching through menus,thumbing through the manual or asking a friend how to do it.andP;  How do we dothat? The system needs to provide some assistance in ways I won't get into.andM;The next thing - and progress has been made in this area is to help usersconceptualize the program.andP;  We can see that users have been forced to thinkabout the steps they execute to make something happen.andP;  Macro language andHyperTalk show that users are used to that on step-at-a-time thinking.andO;However, as Mitch mentioned, programmers are people who can think of thingsand keep them organized at many levels at a time.andP;  There are a couple ofproblems to solve.andM;How can users visualize the program they're writing, not just the staticversion, but the running version as well? Fortunately, there's been a lot ofgreat research in universities on program visualization.andP;  That will be key -as well as new innovations from the industry - to solving this problem.andM;Finally, how can the user form and use the abstractions necessary to buildprograms more complex than just a few simple statements? Here againsophisticated help systems that use Al techniques will be able to assist auser.andM;I've not tried to give all the answers because frankly we have someproprietary work going on, but these arc the issues that have to be addressedto enable user programming.andP;  I'm fairly optimistic and think user programmingwill become widespread.andP;  Of course as soon as it does, people - as they didwith spreadsheets - will say, &quot;This isn't programming anymore.&quot; So I'll be uphere in a few years to give another speech.andP;  Thanks.andM;[Applause]andM;Dyson: Jerry says he's waiting for me to ask a question so he can saysomething.andP;  What did you have on your mind, Jerry?andM;Kaplan: You invited me to the conference, and I said I wouldn't speak.andP;  Butgiven all your hospitality, I may as well say something.andP;  I want to take aheretical point of view.andP;  Mike Quinlan talked about paradigm shift.andP;  We'retalking here about software.andP;  The problem of making computers more accessiblein the next five to ten years is not going to be a software problem.andP;  It'sgoing to be a hardware problem.andP;  How many people here own a portable orlaptop computer?andM;[All in audience raise their hands.]andM;Kaplan: How many have it here in the room?andM;[Very small show of hands]andM;I've got four hands.andP;  Very interesting.andP;  I'm going to give half a speech hereby asking the question, &quot;Why don't you have your portable here in the room?&quot;andO;We talk a lot about computers and connectivity as a means for people tocommunicate.andP;  The real problem is that computers come between people.andP;  Whatwe need to do is to get them out from between the people so that they cantalk to each other.andP;  The purpose of computers is to enhance communication,not to impede it.andP;  Today's machines are used by individuals who are alonewith the door shut.andP;  They're not designed for use in social settings like theone we're in, or being with a client or talking with another individual.andP;  Theproblem is the base format of the hardware.andP;  With your permission, I'llcontinue this speech next year.andM;[Laughter]andM;Dyson: Is this a product announcement, Jerry? Okay.andP;  He'll be back next yearif he get's it out on time.andM;[LaughterlandM;Kaplan: If I had gotten it out on time, it would be here this year.andM;[Laughter]andM;Dyson: Okay.andP;  There are two things people want to do with computers.andP;  One isprogramming in the sense of giving the computer some rules to follow, tellingit to do ten things when they're not there and identifying the situations inwhich to do them.andP;  The other is using the computer as a medium.andP;  As Jerrysaid, let this thing be a pipeline or a glass window, not a mine field thatmust be walked across before you can communicate with someone else.andP;  I havethis panel of six guys, aU with neat user tools.andP;  But am I going to end up inthe situation I'm in with XyWrite? I have tremendous power within theparticular environment I've chosen -  Landry's Liaison or one or another ofyour applications - but how do I get beyond your closed environment to thesecond guy's environment? I'm not talking about a standard.andP;  Reinstein: Atthe heart of this issue - which is an absolutely correct one - is determiningwhat it will take to put the power of information technology directly intothe hands of those trying to shape it.andP;  We have to provide the interfaces tothe people using these systems in terms of getting to the solutions, not interms of the problems.andP;  If we were aU sitting around here as a design group -coming as I do from an IBM background this is about the size of the designgroups we used to work with -  [Laughter] As I did at IBM, I'll tell you whatthe design is and then you'll do what you want anyway.andM;[Laughter]andM;If we were designing a payroll system, we would decide we ought to have somepaychecks because those are useful.andP;  Somebody might step up and say, &quot;Thereshould be a net pay field on this, and the net pay should be gross pay minusdeductions.&quot; Someone else might offer some logic and say, &quot;If a person'sexempt, then the overtime is zero so the gross pay is going to be base payplus nothing.&quot; And so on.andP;  The point is we talked in terms of the specificsof the problem, not in the steps to the solution.andP;  That's the move we have tomake.andP;  That's where tremendous leverage will emerge.andM;Dyson: Okay.andP;  What you said is absolutely true.andP;  Does it mean we're all goingto use the same objects and have different applications operating on the sameobjects? If so, how is that going to work?andM;Reinstein: We're all going to use the same set of underlying technologies,which may appear differently to each of us.andP;  The inference technologiesbasically are different from the straightforward processing technologies inthat they process descriptions rather than programs.andP;  The object technologiesare absolutely essential.andP;  The inference technologies applied to objects aregoing to be the base as they are applied to rules and other things.andM;Mitchell Kapor, ON Technology: This year and next year, programs are going tointeract radically with each other - both in the Apple platform and in theWindows' platform, through AppleEvents  on the one hand and DDE on the other.andO;Applications will make themselves AppleEvent clients.andP;  The same will happenon the Window side.andP;  That means everything can or will have an API toeverything else and at some point will be user scriptable.andP;  For the firsttime in a mass-market pc platform, applications will use each other's data ina way that's quite free and  quite standard, and radically unlike today'ssituation.andP;  It will take a couple of years at least for this to manifestitself to the majority  of users.andP;  With the right kind of hooks andstandards, even XyWrite will support something someday.andM;Dyson: it has more of an API than a lot of word processors.andP;  McEvoy: Youfocus on things from the  question of the applications, which is asingle-user point of view.andP;  Sharing data is what you really want to do.andO;That's a multi-user view, which is what we need to move to.andM;Reinstein: In the world of data, we have a lot more to do in terms ofdifferent views and whether data is hierarchical or relational or whatever.andO;In the world of programming the only structural elements ever really inventedare the subroutine and the module.andP;  We,'ve really never gone beyond that tothe elements of a parameter people can deal with.andP;  That's changing in thingslike object orientation and inference technology and will enable explosivegrowth in application-development platforms.andM;Dyson: Yes.andP;  I do not totally agree with you, Harry, but we do want to gowith you.andP;  Dennis, we really do want to go beyond everything  having accessto  data so that my application  doesn't have to  do everything itself butcan call on somebody else's.andP;  The problem is getting all these APIs to talkto each other.andP;  John, you face that more than anybody.andP;  What are you  doing?andO;Because you can not support 2900 different APIs.andM;Landry: in terms of APIs this is going to be a rather mainframe-orientedstatement.andP;  Esther's referring to the messages being sent to servers thatexecute transactions on other machines and return the results via mail.andP;  AtCullinet I  developed the enterprise computing architecture, which was purelya cooperative-processing base system.andP;  We found  and given their work incooperative processing, maybe Dennis and Harry might find - there's a lot ofresistance in the marketplace to writing cooperative-processing applicationsbecause there's no book to buy on it.andP;  You don't know how much to put on oneend or the other.andP;  People also have a huge investment in their existingsystems.andM;One of the means - I swallow hard on this - to overcome that problem and tohook into other people's systems is God damned terminal emulation usingexisting systems.andP;  Scripted terminal emulation is a powerful way of gettinginformation out of systems.andP;  We're looking at how to make it available in avery different way.andP;  Like Mitch, I believe that DDE-type structures are theway applications are going to communicate because, for God's sake, we'llnever get our act together to have a common-person object.andP;  Or we'll have onerecord that spans 10 billion bytes.andP;  That's never going to happen becauseit's going to be passive interconnection on demand.andM;Robert F. Berland, IBM: I've been dealing a lot lately with customerexecutives, who look at what's going on outside their business about 60 to 70percent of the time.andP;  Am area of major concern to me dovetails with somethingMitch said.andP;  One of the things our industry lacks is what I'll call aninformation designer.andP;  We've got many companies that provide informationdatabases, but there doesn't seem to be a marriage of end-user tools andtechnologies with the information providers.andP;  Using multimedia to combinethese would be a breakthrough.andM;If all we do is treat multimedia as a tool set, and all we do is treatprogramming as something for the programmers, we're going to miss something.andO;Do you guys see the working relationship with &quot;information design?&quot;andP;  Abreakthrough for me,  Esther, occurred when you had Edward Tufte at yourconference two years ago.andP;  He's one of the only guys I've ever heard talkabout how to look at and go after information, by which I mean data,graphics, image and text - the whole ban game.andP;  Are you seeing that?andM;Dyson: Are people listening to Ed Tufte? Not enough.andP;  The notion of not justdesigning the programs but designing the information, designing thevisibility and Berland: It's going to have to be a collaborative effort.andM;Dyson: Yes.andP;  Thank you.andP;  What you said is so true there's no response to it.andO;SoandM;[Laughter] Berland: That doesn't give me a warm feeling,  Esther.andM;Dyson: No.andP;  Does anybody in the line-up have anything in particular to sayabout DDE and APIs?andM;Jeff Miller, GUIdance: Yeah.andP;  I was very excited about what Mitch had to sayabout software designers.andP;  Then it seemed as if it was all undone if they'regoing to design with the current level of APIs, which are designed forprogrammers.andP;  Our company deals a lot with the Windows and the PM APIs.andP;  Theyare ridiculously complex and hard to use.andP;  There are good reasons for thatbut they're difficult for anyone who's not a great programmer.andP;  We're lookingfor something that's more related to what people rather than programmers do.andM;Dyson: Are tools supposed to hide the API, Mitchell?andM;Kapor:  Even though it could ruffle some feathers, which is not my intent,let me say something publicly that a lot of developers already know.andP;  Look atDDE vs.andP;  AppleEvents.andP;  Apple had a series of meetings in which they got allthe major spreadsheet developers into a room and bashed their heads togetheruntil they agreed on common denominators.andP;  There's a cultural processinvolved when you get people together to come to a consensus, not about whatthe plumbing is, but how it is going to manifest itself to the ordinary user.andO;As a platform provider Apple continues to understand and execute this processbetter than Microsoft.andM;I have every expectation, though, because of Microsoft's intelligence andaggressiveness, that if they're currently missing an opportunity they'regoing to catch up.andP;  If you believe the openness of your platform depends onhow well you integrate the cultural factors, then platform providers need totake that seriously.andP;  They must not worry just about doing incrediblyterrific infrastructure and plumbing, but they need to make the process ofevolving the platforms much more collaborative than it's been.andP;  I hope othercompanies continue to follow Apple's lead in this respect because, and blessApple, they are the champions of this.andP;  I hope it spreads widely.andM;Dyson: Is Bill Gates in the audience? Originally I suggested his speech tidebe DDE, et cetera.andP;  Maybe we can get him to change it back or else do,&quot;What's wrong with DDE?&quot; Tester.- People driving a car don't want to knowabout steering mechanisms, the baR joint, linkages and an that stuff, butthey do want to feel the road.andP;  The job of the system architect is to setthings up so that the user may not know the API, but they can feel the road.andO;If users are completely decoupled from what's really going on, then theywon't get the control they want.andP;  They'll know they're not getting it eventhough they won't know exactly why.andM;Miller.- Every group of users is going to require a different road feel.andP;  Wehave to start thinking about the API for road feel -  Dyson: It's like afeeling of grammar.andP;  You have a sense of what you can and cannot do and whatthe rules are.andP;  Maybe you visualize it with some kind of a tree or you havechanging messages of which Ashlar's Vellum is probably the best example, butyou want the user to feel he, not his computer, is powerful.andP;  Reinstein:These issues and the ones Bob brought out are related.andP;  The solution has tobe that we really begin to develop very different tools for people to buildthe navigation systems and the information processing systems they need.andO;I've built a lot of operating systems - they're out there all over the world.andO;I really believe we've got to change the basis on which we offer the tools ofsoftware and program design to the industry as well as the way we offer thosetools to everybody.andP;  I'm not sure it's the road we have a feel for.andP;  We'restill a horse-and-buggy industry.andP;  It's not the road we're feeling.andP;  It's theback of the horse.andM;[Laughter]andM;Dyson: Who remembers extrapolations from a horse? Well.andP;  That was a goodstory I'll teff you some other time.andP;  Sheldon J. Laube, Price Waterhouse: Iwant to congratulate Mitch for making public the hidden shame of the softwareindustry: The vast majority of people don't use the vast majority of wondrousfeatures placed in software.andP;  I am constantly talking to vendors who want meto switch to their system because it has all these good features.andP;  I explainthat we don't want to switch because most of the people in my company barelyget through the day with their computers.andP;  They consider using the computer afight.andP;  Whether it's 1-2-3 or XyWrite, they are barely using it.andP;  These areexceptionally smart people, on whom we spend tens of millions a year tryingto increase their computer literacy.andP;  When I tell them there are otherdimensions to using the computers, they give me this blank stare.andM;We have this nebulous idea of tools for end-users.andP;  Who does the panel havein mind as an end-user? In the US, I have 15,000 professionals in my company,of whom virtually all have computers on their desks.andP;  Are they end-users? Arethey the target for all of these tools? Are all end-users the same kind? Arethey all the same within a firm? Are they different? Are they stratified?andM;Dyson: You're going to get different answers from the panel.andP;  There's alsoLarry's point that you don't sit down and say you want a program.andP;  You have areal problem and that's why some people have been solving real problems in1-2-3.andP;  The trick is to make something that's both flexible and powerful.andM;Reinstein: You're quite right.andP;  There are many end-users.andP;  The ones we'retrying to address are those problem specialists in taxes or inventory orwhatever.andP;  They want to build a software application to assist them or othersin doing what they know how to do very well.andP;  So we're trying to buildapplication shells, using fresh space technology, that are developmentplatforms highly specialized to the problem.andP;  We're trying to build thetechnology to offer all software manufacturers - be they application orsystems - the tools to build those kinds of applications with us.andM;Dyson: So in some sense you're even building applications with configurationtools?andM;Reinstein: That's correct.andM;McEvoy: Our target is application developers within corporations.andP;  Notnecessarily professional programmers but people who may know some programmingconcepts, may do 1-2-3 macros or may have written a BASIC program once.andO;Either they want to run their business using the computer, or they don't wantto wait 18 to 24 months to get the applications developed by the MISdepartment to run that part of their business.andM;Dyson: The assumption is that someone has SQL Server already?andM;McEvoy: The assumption is they're sharing data and someone has set up rulesfor sharing data.andM;Tesler.andP;  We have a top-down or bottom-up strategy, however you'd like to lookat it, starting with people who are already fairly sophisticated in the sensethat they have written macros, HyperTalk programs and so on.andP;  We're trying tobroaden that audience incrementally.andP;  I won't claim that someday we'll haveeverybody programming, but...andM;Landry: Mine includes more or less everybody, which puts venture capitalistsabsolutely into shock.andP;  From our perspective, people who have telephones area potential target since we've got the tools to augment what we normallyassociate with telephones.andP;  We look at people who need information beyondthat available from their organization.andP;  Typically that win mean an executiveor a manager, but it may be someone else.andP;  If a meeting announcement messagecomes in, the &quot;agent&quot; can look at that message and, if it's urgent, put it inan urgent folder.andP;  However if it's not, it can be automatically forwarded tothe secretary, who then becomes the user.andP;  In that way we have a very broadbase of potential end-users.andM;Dyson: Who sets the rule to define urgent?andM;Landry: There are two levels: the end-user level and the programmatic level.andO;The end-user can build templates.andP;  The system will look at the messagetemplate which will specify what rule applies.andP;  In the other case adata-processing professional can get more power out of the system by actuallygoing into a language-based agent development environment.andM;Kaplan: I often have a problem when I'm asked this question, because there'susually an exception.andP;  You're trying to identify a specific set of people andthe fact is that it's not the right way to break down the problem.andP;  SometimesI'm a user.andP;  Sometimes I build tools.andP;  Sometimes I do other things.andP;  I'm surethe same is true throughout your organization.andP;  When you look to see who yourusers are, don't mistake a list of names as the identifying property of yourusers.andP;  Look instead at the goals people have at a particular time forgetting value out of a computer.andP;  Maybe I can slightly twist the question tomake another point -  Dyson: You're a master at it.andM;[Laughter]andM;Kaplan: We often ignore the emotional aspects of computing.andP;  Mitchell made aninteresting point which is absolutely true.andP;  We tend to ignore one of themajor impediments to people using our equipment which is that our machinesmake them feel stupid.andP;  What we have to do is to make people feel smartbecause nobody is going to spend time at a machine or use a tool that doesn'tgive them a positive emotional experience.andM;Dyson: Thank you.andP;  Mitchell?andM;Kapor: What question are we talking about?andM;Dyson: You can answer Andy or I'll ask Andy Singer if he wants his pencilback? Andrew Singer?andM;Andrew Singer, Radius: An interesting shift has to happen over the next fiveto ten years.andP;  Once upon a time data existed only in very large chunks calledfiles.andP;  There was a file for this and a file for that.andP;  In fact, those thingsused to be stacks of cards.andP;  I remember that IBM payroll system you workedon.andP;  It never got my cheeks right - probably because there was a room thislarge full of people working on it.andP;  Those files were replaced by somethingcared the database and a central view for all the parts.andP;  Something like thatis going to have to happen for programming.andP;  The programming tool has to beatomized.andP;  Your instinct for grammar or something like that is exactly right,but a precursor is having not the plumbing but standard pipe sizes.andM;When Apple talks to developers about multimedia, spreadsheets orwhat-have-you, they say, &quot;We're going to need that half-inch pipe, aquarter-inch pipe and a sewer-sized pipe would be useful too.&quot; Those are theingredients you can build around.andP;  I see that happening for programming.andO;Until it becomes atomized we're not going to see end-user programming.andM;Dyson: Thank you.andP;  This is going to raise interesting questions for theintellectual property panel.andP;  What you do with all those little atoms ifyou're a vendor? Mitchell?andM;Kapor: The discussion about tools raises the important issue of putting theprocess of tool evolution into the social context.andP;  Spreadsheets arespreadsheets.andP;  They have not migrated into the operating system.andP;  That'sfine.andP;  A lot of the things people want to do today, though, with end-userprogramming tools are not like 1-2-3 or macros.andP;  They're okay if they're inthe spreadsheet, and the spreadsheet is the spreadsheet.andP;  But they want toolsthat are applicable to a greater range of different applications.andP;  Here wehave a problem, because if the platform providers don't support the tools sothat they become part of the common denominator, the chances of the toolsbeing widely adopted decrease.andP;  However, if they support the tools, the tooldevelopers may begin to feel that whatever they do will be taken over by theplatform providers and they'll be screwed.andM;So one of the bottlenecks in tool evolution is how fast things get into theplatforms.andP;  Since there is healthy competition among platform providers, wecontinue to see evolution.andP;  The platforms are opening up through things likeDDE and AppleEvents and other things.andP;  That's a good thing, but ultimately ifyou're a mail stop that isn't Redmond, Cupertino or Mountain View, you'regoing to face the problem I just mentioned.andP;  You'll want to develop a pointproduct or a tool for a segment and hope you can establish yourself sosuccessfully that you don't get overrun by the platform provider promisingthe tool for the next generation of their system.andP;  The choke point ultimatelyis in the platforms.andP;  The only solution is to modularize the platforms andmake them so open parts can be plugged and unplugged by anybody.andM;Dyson: Yeah.andP;  I think Dennis was going to ask Steve Jobs yesterday why hedidn't just license NextStep to solve some of that problem and not just limitit to the NEXT hardware.andP;  Kaptan: Mitchell's getting at the issue: What's atool? What's an application? What's worth mentioning is that some of thelatest software technologies, particularly those involving objectorientation, do provide an organization for programs which blurs thisdistinction between tools and applications.andP;  We're going to see a differentstructure for portions of the software industry which will involve exchangesof objects among application developers and different kinds of economicagreements.andM;Dyson: Thanks.andP;  This is a very important point.andM;McEvoy: Mitchell was talking about making tools broadly applicable but that'sexactly the problem and we've been creating it.andP;  The problem with Windows,PM, LAN Manager and the 1000 API calls - their broad applicability - is alsotheir strength.andP;  The only way we're going to make it easier to developclasses of applications is by developing tools segmented for them.andP;  If you'relucky, you'll pick a segment you can build a large company around.andP;  If wecontinue to make general-purpose tools, they're going to be used only bypeople who can program and understand hundreds of API calls.andM;Dyson: Thanks.andP;  It's now the break so I'd like the three of you who have beenstanding there so patiently to state your question or comment briefly, andwe'll see if it requires a response.andP;  Marc Canter, MicroMind: I'mdisappointed the panelists haven't picked up on Mitch's comment earlier thatpeople are afraid to move beyond the small circle of skills they've mastered.andO;Isn't one of our key needs to develop standards, tool kits or exemplars sopeople can be comfortable trying new things?andM;Dyson: Yes.andM;Reinstein: I agree with the idea that people don't use aU of Lotus or all oftheir word processors, but I have found exactly the opposite with commercialusers.andP;  They are eager to try new things.andP;  They are building newapplications, and they are putting more and more power onto the desktops oftheir workers.andP;  Where people are spending  100 billion in informationtechnology, I don't see any reticence to try new solutions.andP;  The thing is, wehave to provide them.andM;Dyson: Okay.andP;  There's valid disagreement here.andP;  Some people are scared.andP;  Ididn't know what to do with my LT portable because I couldn't figure outwhether it was set up.andP;  Finally I had Sasha Barilov help me.andP;  It turned outit wasn't that hard.andM;Larry Heimendinger, Nantucket: I spent 16 years banging around insidemainframe operating systems.andP;  When I got my first pc in 1979 1 was struck bythe paucity of services of the operating systems.andP;  For a long time I'vewondered - and heard others in the industry batting around the same issue -why the applications don't cooperate with each other.andP;  Point number one:There's a tremendous burden on the operating System manufacturers to createservices that are basic to managing the resources of a computing environmentso applications can cooperate with each other.andP;  Point number two: Mitch, fora long time I've been using the building/architect analogy to describe thedifference between design and implementation.andM;Dyson: And he copyrighted it -  Kaplan: Public domain, folks.andM;[Laughter]andM;Heimendinger: People have a tremendous need to create software that's goingto be appropriate for them.andP;  Object-oriented programming is a great newparadigm, but how do you teach people to be good designers and goodarchitects? Point number three: Most developers I know tend to like this workbecause they love the thrill of accomplishing something and being in absolutecontrol.andP;  If a machine starts to talk back, will that stifle development?andM;Kapor: The way architects are trained is very different from the wayengineers are trained.andP;  Half an architect's training in graduate school is instudio courses.andP;  They design things under the close supervision of a seniorprofessional designer.andP;  Their work is critiqued by the other students and bythe person who's leading the design study.andP;  This apprenticeship model couldapply perfectly well to software.andP;  Nobody has done it yet, but the time isright to begin to try some experiments.andM;Dyson: As a confirmed capitalist I think there's going to be a lot of jumpingout there, and the market will teach people to do good design.andM;Thank you all.andP;  We're going to see if we can't change the title of BillGates' talk.andP;  Somebody please warn him.andP;  Have a wonderful break, and thankyou very much.andM;[Applause]</TEXT></DOC>
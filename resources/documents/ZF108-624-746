<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-624-746  </DOCNO><DOCID>08 624 746.andM;</DOCID><JOURNAL>Dr. Dobb's Journal  July 1990 v15 n7 p46(6)* Full Text COPYRIGHT Mandamp;T Publishing 1990.andM;</JOURNAL><TITLE>Drawing character shapes with Bezier curves: a modern approach toan old problem. (tutorial)</TITLE><AUTHOR>King, Todd.andM;</AUTHOR><SUMMARY>A sample program is developed for drawing a character shape withBezier curves to demonstrate their advantages.andP;  Bezier curves areparametric curves that are specified by a small number of pointsdefined by a polynomial equation.andP;  The curves offer severaladvantages to the definition and storage of typographic charactershapes: storage is compact and efficient, defined shapes arecontinuous and smooth, smooth curves of two or more joined curvesegments can be generated, fonts can be scaled and sized at thetime of display, Bezier curves can represent both straight andcurved character features and they can be computed with relativeefficiency.andP;  Font design, the rendering of Bezier curves, thesample program and timing of the program are discussed.andM;</SUMMARY><DESCRIPT>Topic:     Curve FittingCharacter GeneratorsCharacter GraphicsMethodsProgramming InstructionTutorial.andO;Feature:   illustrationchartprogram.andO;Caption:   Elements of a Bezier curve. (chart)Attributes of typographic characters. (chart)An application that draws characters as a collection of Beziercurves. (program)andM;</DESCRIPT><TEXT>Text is the most common medium of exchanging ideas, theories, and concepts.andO;learned in school, the building blocks of printed text are typographiccharacters.andP;  A complete set of characters of a certain design or style isknown as a &quot;font.&quot; Currently, there exist more than 10,000 different fontdesigns for the Roman alphabet.andM;Until the last few years, most computer systems did not devote resources topresenting text in any but the most primitive form: either dot-matrix orstroked characters.andP;  With increased computing power, larger memory, andhigher resolution displays and printers, personal computer systems can nowhandle typographic characters with greater fidelity than before.andM;In this article, we'll take a look at one of the most common ways forrepresenting and rendering typographic character shapes on a computer - theBezier curve.andM;Bezier CurvesandM;A Bezier curve is a parametric curve that is specified using a small numberof points.andP;  This implies a compact and efficient means for storing thedefinition of a character shape.andP;  Bezier curves have other properties thatmake them particularly useful for representing the shapes found intypographic characters.andM;The Bezier curve was originally developed in the early 1970s by the Frenchmathematician Pierre Bezier for Renault (the automaker), as a way to describethe three-dimensional shapes and surfaces of cars.andP;  in the two-dimensionalworld, Bezier curves were not used until recently by manufacturers of digitaltypesetting equipment.andP;  Instead, they relied on straight lines, circles, andarcs to represent typographic shapes mostly because these werewell-understood and easy to compute efficiently.andM;Adobe, in its implementation of the Postscript page description language, wasthe first mainstream manufacturer to use Bezier curves.andP;  Since then, othermanufacturers have followed suit.andM;The equation that defines a general Bezier curve is a polynomial.andP;  Thispolynomial can be of any order or degree, but as the order increases, so doesthe computational requirement.andP;  Rather than try to model a complex shape witha higher-degree polynomial, it is more practical to construct a compositecurve that is built by joining together several simpler Bezier curves.andP;  Thesesimpler curves are of degree three - the cubic Bezier form.andM;With this form, a Bezier curve  Segment is specified by four points, called,control points.&quot; Two of these points define the positions of the curve's endpoints.andP;  The other two points control the shape of the curve.andP;  Figure I showsthe important features of a cubic Bezier curve (hereafter referred to simplyas Bezier curve).andM;Representing CharactersandM;A Bezier curve has several properties that make it well suited torepresenting typographic characters, the first being that the defined shapeis both continuous and smooth.andM;Second, the curve is tangent to the line formed by the end point and thenearest control point.andP;  This is useful in creating smooth curves that consistof one or more curve segments joined together.andP;  The reason is that if the twocurve segments are joined properly then the resulting curve will also becontinuous.andP;  This occurs if the adjacent curve segments share a common endpoint, and if the nearest control points for each curve, as well as thecommon end point, are all collinear.andM;Third, because the curves are defined by parametric equations, the fonts,which are built up from the curves can be scaled and sized at the time ofdisplay.andP;  This is done by multiplying the results derived from the equationsby some scaling factor.andM;Bezier curves are also well behaved under other kinds of mathematicaltransformations, such as rotation and shearing.andP;  This was a problem with theline/ arc representation used by many digital type manufacturers: The shapeswere well behaved for scaling and translation, but not for shearing.andP;  (Asheared circle does not remain a circle but becomes an ellipse.)andM;In addition, Bezier curves have the property of being bounded by the controlpoints, which define it.andP;  No portion of the curve extends beyond the edges ofthe box formed by drawing lines between adjacent control points.andP;  If youcollapse the box so that all the control points are collinear, then theBezier curve defines a straight line.andP;  This means that Bezier curves can beused to represent both the straight and the curved features of a character.andM;Finally, Bezier curves can be computed relatively efficiently using a methodknown as the  &quot;deCasteljau&quot; algorithm.andP;  While not as fast as Bresenham orother circle-drawing methods, it is fast enough for modern microprocessors.andM;The Bezier Equation The general form of a Bezier curve segment is:andM;[Mathematical Expression Omitted]andM;The cubic form of the Bezier curve, for a two-dimensional coordinate space,can be more easily described by a pair of parametric equations, whichdetermine the x and y coordinates of points on the curve.andM;The x component of a Bezier curve is defined by the formula:andM;x(t) = [(1-t).sup.3][x.sub.1] + 3t[(1-t).sup.2][x.sub.2] +3[t.sup.2](1-t)[x.sub.3]+ [t.sup.3][x.sub.4]andM;The formula for y is the same, except y replaces x in the equation above.andO;The variable t is the parameter for the equation and is varied from 0 to 1.andM;Designing FontsandM;When you design a font it is important to draw the character shapes at a sizethat will ensure that all features of the font can be accurately captured.andO;Also, because it is possible that the font may be enlarged greatly (forexample, as part of a billboard), it is best to draw the prototypical font atan equally large scale.andM;In Adobe's implementation, character shapes are defined on a grid of 1000 x1000 points, where a point is 1/72 of an inch.andP;  An 11-inch page isapproximately 825 points long.andP;  So, for typical publishing applications thisis a reasonable choice.andM;Characters within a font have certain features or attributes, which are usedin their design.andP;  One attribute is the baseline.andP;  This is a horizontal linethat passes through the font and is used for vertical alignment of acharacter.andP;  All (or nearly all) parts of an &quot;a&quot; remain above its baseline,while the tail of a &quot;g&quot;  also known as its descender) extends below.andM;Another feature is the sidebearings.andP;  This is the amount of space on the leftand right sides of a character.andP;  The side-bearings can be different for eachcharacter in a font, but typically are the same.andP;  The sidebearings areincluded in the total width of the character.andP;  In mono-spaced fonts (such ascomputer line-printer fonts), the character width is the same for allcharacters.andP;  Typographic fonts have proportionally spaced characters, whereeach character's width depends on its individual design.andM;You may have heard or read about &quot;hints&quot; buried in the definitions ofPostscript fonts (Type 1 Adobe format).andP;  These hints describe minoradjustments to the way in which the shape is calculated as the size of theletter becomes very small.andP;  This is necessary because the typical displaydevice is a raster device - composed of discrete pixels.andP;  As the letter isreduced in size, there may be some distortion of the character due toround-off errors related to the calculations of which pixel a line is in.andO;The &quot;hints&quot; provide information to the rendering system so that thedistortion is minimized, and the shape is consistent with the font designer'soriginal intent.andM;Rendering Bezier CurvesandM;The most straight forward way of rendering a Bezier curve is to use theparametric equations shown earlier.andP;  it is not too difficult to express thesetwo equations in C, Pascal, or Fortran, using floating-point values.andP;  Tocalculate a series of points along the curve, just vary the parameter t from0 to 1 in fractional increments and calculate the corresponding values for xand Y.andM;A faster but less straightforward method of rendering Bizier curves is thedecasteljau algorithm.andP;  With this approach, the control box, which surroundsthe Bezier curve is divided into two smaller control boxes.andP;  These boxes areeach successively divided into two smaller boxes, and so on, in a recursivemanner, until a specific degree of accuracy is obtained.andM;At that time, the specific segments of each of the smallest control boxes aredrawn.andP;  The net result is that the Bezier curve is approximated by a seriesof straight-line segments.andP;  The first order hounding box is defined by thepoints a0, b0, c0, d0.andP;  One of the second order bounding boxes is defined bythe points a0, a1, a2, a3.andP;  The other second order bounding box is defined bythe points a3, b2, c1, d0.andP;  Figure 3  [omitted] shows how all these pointsrelate to one another.andP;  The point al is calculated by finding the midpoint ofthe line that connects a0 and b0.andP;  The other points (a2, a3, b1, b2, and c1)are calculated in a similar manner.andM;A Sample ProgramandM;Listing One [omitted] contains the entire source for a program, whichdisplays a character shape represented by a composite Bezier curve.andM;To do this, we must first have a function that will draw a Bezier curvesegment.andP;  In the listing is a function called draw_bezier1().andP;  This functionaccepts a variable of type BEZIER_BOX, which contains the x and v coordinatesof the four control points for the Bezier curve segment.andP;  The function thencalculates the points on the Bezier curve from the parametric equations (asdiscussed earlier), and draws line segments between them.andM;A second function, called draw-bezier2(), takes the same arguments asdraw_bezier1(), but draws the curves using the deCasteljau rendering method,also discussed earlier.andM;Both the functions draw_bezier1() and draw_bezier2() have been written sothat the accuracy at which the Bezier curves are drawn can be adjusted.andP;  Fordraw bezier1(), the Bezier curve is approximated by drawing straight linesbetween points, which are separated by a distance, which is on the order ofthe resolution of the display device.andM;This display threshold value is maintained in the variable DPU.andP;  To arrive atan appropriate value for DPU, calculate the maximum resolution of the screenand divide that by the size of the prototypical font.andP;  Because the DPUdepends on the resolution of the display device, the application is somewhatdevice-dependent.andM;For draw_bezier2(), the display threshold is determined by the functionaccurate().andP;  In this implementation, how you determine when the approximationis accurate enough, is to keep a simple count of the number of times thecurve has been subdivided.andP;  The variable B_cutoff contains the number ofdivisions, which are considered accurate.andP;  The variable B_level contains thecurrent division count.andP;  For screens of resolution of about 600 x 400, aCut-off of 3 is quite good and nearly as accurate as the literal renderingemployed in draw_bezier1().andP;  If a cut-off of 4 is used, the resultingcharacters are indistinguishable between draw_bezier1() and draw_bezier2().andM;To make drawing a particular character easier, I included a function calleddraw_letter().andP;  This function allows you to place the character anywhere onthe screen.andP;  It also allows you to define the color of the font outline, thefill color, the desired point size to display the character, and therendering function.andM;Another argument to draw_letter() is an array of BEZIER_BOX variables.andP;  Thisshould contain a series of Bezier curve definitions which, when drawncollectively, will result in the desired character.andP;  The array of curvedefinitions is ended by a sentinel curve definition whose first x coordinateis set to BFLAG.andP;  The second x,y pair of this sentinel curve is thecoordinates of a point inside the character's outline.andP;  This point is used bythe fill function,andM;When you run the program, you will see a series of &quot;a&quot; letterforms printed onthe same line in decreasing size.andP;  You can choose which rendering method youwould like by supplying either the letter &quot;d&quot; (for deCasteljau) or the letter&quot;I&quot; (for literal) as the first command-line argument.andP;  You must specify oneof these.andM;TimingandM;Although my first implementation of drawing fonts with Bezier curves used theliteral rendering method, I was amazed at the difference in speed with whichthe characters were rendered with the deCasteljau method.andP;  At the same time,the quality of the presentation was the same as with the literal method.andM;These timings were performed on an AT compatible 286 running at 12.5 MHz witha Hercules graphics display system.andM;There are a few calls in the source that are unique to Turbo C. These arerelated to Turbo C's graphics library and area: closegraph(), floodfill(),initdriver(), lineto(), moveto(), setcolor(), selfillstyle(), andsetlinestyle().andP;  One call whose arguments may need changing is initdriver().andO;The last argument in this call is the path to where the device drivers arestored.andP;  You may need to change this to match your system's configuration.andM;ImprovementsandM;There is a lot of room for extending this program.andP;  The most obvious is thatthe font has only one character in it the letter a. This allows for onlylimited expression.andP;  It actually took me a couple of hours to develop theletter from scratch) to an acceptable form.andP;  Some letters in the alphabetshould be easier and a few would be harder.andM;Another improvement would be to design a structure that would containcharacter-width information for an entire font.andP;  I chose not to do this forreasons of simplicity.andM;Other possible improvements include speeding up the renderer and improvingquality at low-resolutions by adding a hinting mechanism.andM;AvailabilityandM;All source code is available on a single disk and online.andP;  To order the disk,send $14.95 (Calif.andP;  residents add sales tax) to Dr. Dobb's Journal, 501Galveston Dr., Redwood City, CA 94063, or call 800-356-2002 (from insideCalif.) or 800-533-4372 (from outside Calif.).andP;  Please specify the issuenumber and format (MS-DOS, Macintosh, Kaypro).andO;</TEXT></DOC>
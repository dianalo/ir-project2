<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-156-534  </DOCNO><DOCID>08 156 534.andM;</DOCID><JOURNAL>Dr. Dobb's Journal  Jan 1990 v15 n1 p38(12)* Full Text COPYRIGHT Mandamp;T Publishing 1990.andM;</JOURNAL><TITLE>ZEN for embedded systems. (an implementation of FORTH) (technical)</TITLE><AUTHOR>Tracy, Martin.andM;</AUTHOR><SUMMARY>ZEN is a 'tiny' but powerful version of the Forth programminglanguage that is highly readable, composes highly compactprograms, is inherently ROMable (fitting in an 8K-bit read-onlymemory) and is extensible in ROM.andP;  Professional Forth code isusually tightly packed, highly optimized, hand coded, anddifficult to understand.andP;  The new 'personal' ZEN 1.7 version ofForth implements the ANSI X3J14 BASIS 7 standard for theprogramming language.andP;  Details of the architecture, the use ofrandom-access memory and ROM address spaces, the restart anderror-handling mechanism, and support of mass storage by ZEN aredescribed.andP;  The extensibility of ZEN in ROM involves installingthe development system in the target hardware.andP;  The ZEN codeprovided is version 1.6 which is not endorsed by the ANSI X3J14committee.andM;</SUMMARY><DESCRIPT>Topic:     Programming LanguagesFORTHImplementationEmbedded SystemsCoding.andO;Feature:   illustrationprogram.andO;Caption:   Listing one: ZEN version 1.60. (program)andM;</DESCRIPT><TEXT>ZEN for Embedded SystemsandM;ZEN is a tiny Forth with a big purpose: It is a model Forth designed forreadability.andP;  Have you ever noticed that there are no intermediate Forthprogrammers?andP;  You are either a rank beginner or a black-belt guru.andP;  Why?andP;  Myguess is that after reading Leo Brodie's Starting Forth (or my own MasteringForth), you are told that the next step to learning Forth is to read thesource code to the language itself.andP;  This sounds like a good idea;unfortunately, the source code of a professional Forth system is likely to betightly packed, handcoded, over-optimized, and generally incomprehensible.andO;If you can make it through all of what, you are in a good position to write abook of your own.andM;What you need is a Forth that is written mostly in ...andP;  you guessed it!andP;  Dr.andO;Dobb's Journal has a long tradition of publishing personal implementations ofcomputer languages, from Tiny Basic (January 1976 issue) to Small C (May 1980issue).andP;  So to continue the tradition, we are proud to present ZEN, the tinyForth.andM;Programs written in ZEN can be quite small, about half the size of programswritten in C.andP;  In these days of megabyte memory, is small size important?andO;Yes.andP;  Small size often means high speed.andP;  On-chip memory generally runs atleast twice the speed of off-chip memory.andP;  A 68HC11 has only 8K of internalmasked ROM.andP;  The most popular DSP chip, the TMS32010, has only 4K.andP;  Even ifthe density of on-chip memory doubles each year, three years from nowmicroprocessors will support only 64K of internal ROM.andM;In recognition of the importance of small programs in embedded applications,ZEN is inherently ROMable and easily fits in an 8K PROM.andP;  Not only that, butZEN is extensible in ROM.andP;  How can a program grow in ROM?andP;  Assume that ZEN isresident in a single-board computer (SBC) and is talking to a host computerover an RS-232 serial line.andP;  Put a RAM chip in an empty ROM socket, and thensend source code to ZEN with instructions to compile it to the addressoccupied by the RAM.andP;  ZEN will write the program there but will assume thatall references to RAM point to a separate address space, normally the on-chipRAM.andM;Test the program intractively and, once it works, tell ZEN to read the RAMimage and burn it into a PROM.andP;  Finally, remove the RAM chip, plug in thePROM, and you're done.andP;  The idea of running the development system in thetarget hardware may seem novel; what it means is that all testing anddebugging take place in the target system.andP;  The host computer is used only asa terminal and disk server.andP;  The chances of a working program not workingwhen you burn the final PROM are utterly remote.andM;ZEN InternalsandM;Before you study the ZEN implementation (see Listing One, page 98), you musthave a fairly good understanding of Forth.andP;  For example, you should know thatthe body of a CODE definition contains machine code.andP;  You may wish to treatthe 80 or so CODE words in the ZEN kernel as black boxes, but be sure youknow what they're supposed to do.andP;  Otherwise, be aware that Forth assemblersdiffer somewhat from classical assemblers.andP;  In most Forth assemblers,operands precede operators.andM;AL 0 [BX] MOVandM;instead ofandM;MOV [BX],ALandM;Furthermore, the ZEN assembler uses numeric local labelsandM;DX AX OR 1 L# JZ AX PUSH 1 L: BX PUSHandM;instead of usingandM;OR AX,DX JZ away PUSH AX away PUSH BXandM;ZEN 1.7 for the 80X86-based IBM PC is a direct-threaded Forth.andP;  The SIregister points to the next address to execute in a list of compiledaddresses.andP;  The NEXT interpreter transfers control to the machine code atthat address, simultaneously adjusting SI to point to the next address.andM;NEXT WORD LODS AXJMP;andM;The overhead of interpreting a list of ZEN words is therefore twoinstructions per word.andP;  A list of addresses, however, takes far less memorythan a series of jumps or calls.andP;  In a sense, threaded Forths trade speed formemory.andP;  In other words, threaded Forths compile tokens, but the token of aword is simply the address of that word.andP;  Microsoft's Compiled Basic andmodern &quot;cddr-coded&quot; LISPs have recently copied this method.andM;Assume that SI points into a Forth definition at a point where it executesDUP.andP;  That means that SI points to the compiled address of machine code thatduplicates the item on top of the stack.andP;  The C; command is an abbreviationof END-CODE.andP;  This implementation of ZEN keeps the top stack item in the BXregister.andP;  DUP executes is only three instructions -- one for PUSH and twomore for NEXT.andP;  This optimization applies to many other machine-codedprimitives, such as DROP and @.andM;Zen is a small model (64K) Forth.andP;  all four segment registers contain thesame segment address.andP;  The origins and sizes of the separate RAM and ROMaddress spaces are specified on block 1.andM;ZEN Word SetandM;The ANSI Forth standardization effort is well under way.andP;  The currentdocument, ANS X3J14 BASIS 9, is available for $6 from the X3J14 Secretariat(c/o FORTH, Inc., 111 N. Sepulveda Blvd., Manhattan Beach, CA 90266).andP;  TheBASIS is modified at each meeting until it becomes the draft proposal that,after a period of public review and revision, becomes the ANSI ForthStandard.andP;  ZEN 1.7 is an unofficial implementation of BASIS 7 and providesall required words.andP;  It supports the double number, file access, and BLOCKextensions.andM;The stack manipulation words found in ZEN are:andM;DUP DRO SWAP OVER ROT ?DUP 2DUP 2DROP 2SWAP 2OVER 2ROT andgt;R R@ Randgt; 2SR 2Randgt; NIPTUCK PICK ROLLandM;Roll is defined in high-level because it cannot be efficiently mapped intomachine code.andP;  You will find that 2andgt;R and 2Randgt; obviate almost any need forROLL.andP;  In case you are not familiar with NIP and TUCK, they are equivalent tothe phrases SWAP DROP and SWAP OVER, respectively.andP;  NIP is especially handyand is a single instruction on the Harris RTX 2000 Forth Processor.andP;  It onlytakes a single instruction (plus NEXT) on the 80X86 as well.andM;The single-precision arithmetic operators form this set:andM;+ - * / MOD / MOD * / 1+1/ 2* 2/ NEGATE ABS  MAX MINandM;1+ and 1- increment and decrement, respectively.andP;  2* and 2/ shift once rightand left, arithmetically.andP;  Notice that 2+ is not available.andP;  Use CELL+instead to move to the next cell in an array.andP;  Use CELLS instead of 2* tochange cells into bytes, as in:andM;1024 CELLS ALLOT.andM;Many single-precision operators have double-number equivalents.andM;D+ D- D2* D2/ DNEGATE DABS DMAX DMINandM;Multiplication and division generally mix precisions to avoid calculationswith unnecessary accuracy.andM;UM* UM/MOD  */MOD M* M/MOD M+ Sandgt;D Dandgt;SandM;A full complement of logical and comparison operators exists.andM;AND OR XOR NOT 0andless; 0= 0andgt; andless; = andgt; Uandless; WITHIN D0= Dandless; D= TRUE 0 1andM;WITHIN is especially powerful because it compares within in a circular numberspace.andP;  It can be used to control the duration of an event by comparing thecurrent value of a self-incrementing counter to some future value.andP;  All othercomparison operators can be based on WITHIN.andM;These are the memory access primitives:andM;@ ! C@ C! 2@ 2! D@ D! CMOVE CMOVEandgt; MOVE +!andM;D@ and D! are equivalent to 2@ and 2! except that the order of cell storageis not specified.andP;  MOVE is a smart CMOVE that moves without overlappingbytes.andP;  It cannot be used to fill memory with a character.andM;Here are the flow-of-control operators:andM;BEGIN WHILE REPEAT UNTIL AGAIN IF ELSE THEN DO LOOP +LOOP I J LEAVE UNDO EXITEXECUTE @EXECUTEandM;UNDO removes one level of DO ...andP;  LOOP support from the return stack,allowing EXIT to execute within the loop.andP;  UNDO EXIT is the preferred methodfor leaving a word from inside a loop.andP;  @EXECUTE is exactly equivalent to @EXECUTE, but is much faster.andM;These are the number conversion and formatting commands.andM;BASE DECIMAL HEX CONVERT VAL?andP;  PAD andless;# # #S SIGN HOLD #andgt; .andP;  U. D. D. RandM;Output conversion and formatting takes place at PAD 1- and downwards, leavingPAD itself free for applications.andP;  VAL?andP;  converts strings to numbers, andBASIS 6 defines numeric, string, and character literals.andM;[ASCII] ASCII cccc&quot; LITERALandM;ZEN adds DLITERAL, the double-number equivalent of LITERAL.andP;  ASCII and[ASCII] make the following character into an ASCII literal inside and outsidea definition, respectivey.andP;  The string literal operator &quot;(quote) works onlyinside a definition and accepts the folowing string of characters, up to thenext&quot;, as a string literal.andM;COUNT SKIP SCAN /STRING FILL BLANK ERASE-TRAILING STRING .&quot; EVALUATEandM;SKIP SCAN and /STRING are natural factors of WORD.andP;  SKIP and SCAN closely mapthe 80x86 string operator SCAS.andP;  /STRING is a generic substring operator; itcan be used to select any part of a string.andP;  STRING is the fundamental stringcompiler and is used by the &quot;and.&quot; commands.andM;EVALUATE is the most powerful string operator: It interprets any string.andO;EVALUATE is used for forward referencing, macro definition, and any otherinstance of late binding.andP;  For example, coldstart uses the phrase READYevaluate for device initialization.andP;  Suppose you add a device that requiresits own initialization:andM;: READY ( new initialization) READY;andM;READY is redefined to include the new initialization.andP;  READY EVALUATEexecutes this new version, which in turn executes the previous version.andM;The interpreter level uses these words:andM;BLKandgt;IN TIB#TIB SPAN STATE FORTH CONTEXT ' FIND WORD CR TYPE EXPECT KEYS KEY?andO;KEY EMIT PAGE MARK TAB BL SPACE SPACES .(( DEPTHandM;Most forths have words such as KEY?, which is true if a key is available;PAGE, which clears a screen or page; MARK, which TYPEs in emphasized mode;and TAB, which repositions the cursor to a given X Y coordinate.andP;  None ofthese words have been standardized.andP;  In addition, ZEN supports KEYS, whichaccepts characters without echoing or editing.andP;  In general, if the inputstream is coming from a human being, use EXPECT; otherwise, use KEYS.andM;The compiler layer adds these words:andM;CURRENT DEFINITIONS [] ['], C, COMPILE [COMPILE] IMMEDIATE RECURSEandM;RECURSE allows a definition to reference itself.andP;  Remember, though, that thesize of the return stack is likely to be limited.andP;  The following definingwords are provided:andM;CREATE VARIABLE CONSTANT:; 2VARIABLE 2CONSTANT VOCABULARYandM;Two other defining words are used to build ZEN: USER and XFER.andP;  USER createsa user variable, whose address is based on its offset from the address in thepseudoregister u.andP;  A user variable is private to each task in a multitaskingenvironment.andP;  XFER creates a transfer command, whose action is specified byits offset in an execution vector pointed to by the user variable x.andP;  Bychanging this execution vector, input and output can be redirected todifferent devices or files.andP;  Because x is a user variable, each device can becontrolled by a different task, so a background task can spool text to theprinter while a foreground task paints graphics on a screen.andM;RAM vs.andP;  ROMandM;The RAM and ROM address spaces in ZEN are kept entirely separate.andP;  Thedictionary, machine code, and tables are built in ROM, and the data fields ofvariables and arrays are built in RAM.andP;  Each word that refers explicitly toRAM has an equivalent that refers instead to ROM.andM;RAM  ROMandM;CREATE  VARIABLE C, ,ALLOT HERETHERE DOESandgt;  GOESandgt; andgt;BODY  andgt;DATAandM;Let's say you want to make a table of powers of ten:andM;CREATE TENS 1, 10, 100, 1000, 10000,andM;The TENS table will be built in ROM.andP;  Suppose you want an array of sevencels:andM;VARIABLE DAYS 6 CELLS ALLOTandM;The DAYS array will be built in RAM.andP;  Notice that VARIABLE allocates thefirst cell.andP;  It is not possible to initialize DAYS because anything stored inRAM disappears when the power is turned off.andP;  You can use GAP to allocateuninitialized cells in ROM, but you will rarely need to do so.andM;DOESandgt; refers to the body of a defined word in ROM.andM;:COLOR \ set CREG to the value n. CREATE (n), DOESandgt; @ CREG!;andM;8 COLOR RED 12 COLOR GREENandM;Executing RED will store 8 into CREG.andP;  DOESandgt;DATA to the data field of adefined word in RAM.andM;:KOUNTER\self-incrementing object.andP;  VARIABLE DOESandgt;DATA 1 SWAP +!;andM;KOUNTER ALPHA KOUNTER BETAandM;Each execution of ALPHA will increment its value.andP;  To read this value, youmust be able to recover the data field address.andM;'ALPHAandgt;DATA? (prints value)andM;Use andgt;BODY to recover the parameter field address of an object inandM;ROM: 'REDandgt;BODY? (prints 8)andM;Restart and Error HandlingandM;The restart and error-handling mechanism, designed by Wil Baden, waspublished in FORML 1987.andP;  The Forth command-line interpreter is QUIT; it isthe default Forth application.andM;:QUIT RESET BEGIN CR QUERY interpret OK? AGAIN;andM;When Forth begins executing, it goes to ABORT and from there to QUIT.andP;  Thefunction of ABORT will be performed by every error recovery sequence.andP;  ABORTis the default Forth error restart sequence.andM;:ABORT BEGIN PRESET QUIT GRIPE AGAIN;andM;In QUIT, the work of clearing the data stack is factored into RESET.andP;  Thedata stack, however, is not completely cleared; one item is left, but thishas no impact on existing programs.andP;  In ABORT, PRESET clears both stacks allthe way to the bottom.andM;You now have a way to customize the error recovery sequence.andP;  In addition,ABORT shows the pattern for dedicating an application: The defaultapplication is QUIT, and the default error recovery sequence is GRIPE.andP;  GRIPEsounds like TYPE and takes the same parameters, address, and length.andP;  Itdisplays the error message provided by ABORT.andP;  It may also attempt to displaythe name of the word being interpreted.andM;PRESET leaves both stacks empty.andP;  Invoking the next word will put the addressof the return point on the return stack.andP;  RESET leaves that address alone.andP;  Aword can get back to that location by RESET EXIT.andP;  On the return, theparameters for an error message string are assumed.andM;The default application and default error recovery sequence can be changed,and ABORT&quot; will still work with them.andM;:err RESET;andM;:ABORT&quot; [COMPILE] IF [COMPILE]&quot; COMPILE err [COMPILE] THEN; IMMEDIATEandM;err in the definition of ABORT&quot; cannot be replaced with RESET, but you canbuild a variable error message string and follow it with RESET EXIT or RESET;to emulate ABORT&quot;.andM;The following trivial example changes the default application to indent threespaces for every value on the stack before receiving new input.andP;  This processis preventative debugging: If you are surprised by the indentation then youare in trouble.andP;  Also, the example demonstrates logical structure as youcompile a definition from the keyboard.andM;The error recovery message is changed as well.andM;:OLD-ABORT ABORT;andM;:INDENT DEPTH STATE @-3*SPACES;andM;:SHELL BEGIN CR INDENT QUERY interpret OK? AGAIN;andM;:ABORT BEGIN PRESET SHELL CR.&quot; Abort:&quot;GRIPE AGAIN;andM;ABORT installs a new application and error handler.andP;  OLD-ABORT reinstalls oldapplication and error handler.andM;With PRESET and RESET you can establish intricate error recovery and restartnetworks.andP;  The following generic QUIT can be used to restart the defaultapplication in most implementations.andP;  The idea is to return to the positionjust before you invoke your dedeault application.andM;:QUIT RESET Randgt;CELL-andgt;R;andM;Mass StorageandM;ZEN supports both text files and traditional Forth BLOCKs.andP;  The text filesupport includes these words:andM;CREATE-FILE  OPEN-FILE CLOSE-FILE DELETE-FILE  RENAME-FILE READ-FILE WRITE-FILE SEEK-FILE  FILESIZE FILEPOS READ-LINE  WRITE-CR IO-RESULTandM;READ-FILE and WRITE-FILE read a sequence of bytes from the current positionin the file to and from a buffer in memory.andP;  SEEK-FILE and FILEPOS change theposition of a file, and FILE-SIZE returns its size.andP;  READ-LINE reads a lineof text, and WRITE-CR writes an end-of-line terminator.andP;  To write a line oftext, use WRITE-FILE followed by WRITE-CR.andP;  All file primitives work with afile identifier returned by CREATE-FILE or OPEN-FILE, so multiple files aresupported.andP;  Error codes, if any, are returned in IO-RESULT.andM;The BLOCK support includes these words:andM;BLOCK BUFFER UPDATE SAVE-BUFFERS FLUSH LOADandM;Running ZENandM;You can find the source code and executable image of ZEN in the fileZEN190.ARC on CompuServe in the DDJ Forum.andP;  ZEN is also available on theGENIE, ECFB, and BIX bulletin boards.andP;  Execute the file ZEN.COM and pressandless;RETURNandgt;.andP;  You should see the OK message.andP;  ZEN has a small set of debuggingwords you can use to look around:andM;WORDS .S? DUMPandM;You can compile and test definitions from the keyboard, or type GO to compilethe text file KERNEL.SRC.andP;  Use any text editor this file.andP;  I use the Sidekickpop-up editor.andM;Use GUARD to protect all words in the dictionary from FORGET.andP;  EMPTY restoresthe dictionary to the previous GUARDed word set.andM;I hope you enjoy ZEN and find it useful.andP;  Please send all comments andcriticisms to me.andM;Martin is a DDJ contributing editor and a consultant.andP;  He can be reached at2819 Pinkard Ave., Redondo Beach, CA 90278.andO;</TEXT></DOC>
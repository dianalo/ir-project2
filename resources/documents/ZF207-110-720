<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-110-720  </DOCNO><DOCID>07 110 720.andO;</DOCID><JOURNAL>IEEE Software  Jan 1989 v6 n1 p98(10).andM;</JOURNAL><TITLE>Developing integrated environments with ASDL. (Abstract-Type andScheme-Definition Language)</TITLE><AUTHOR>Kramer, Bernd; Schimidt, Heinz-Wilhelm.andM;</AUTHOR><TEXT><ABSTRACT>The Abstract-Type and Scheme-Definition Language (ASDL) is a newformalism and object-oriented programming environment kernel thatenables the development of well-integrated yet extensibleprogramming environments.andP;  ASDL integrates an object-oriented typesystem, syntax-directed translation schemes, and target-languageinterface.andP;  The type system supports data abstraction,inheritance, and dynamic instantiation.andP;  The syntax-directedtranslation schemes consist of generic functions forcontext-dependent and semantics-oriented object manipulation.andO;Semantic information is attached to transient data objects whichare typed by dynamic instantiation, automatic storage allocation,and garbage collection.andP;  ASDL is part of a prototype environment,Graspin, which enables the development and testing of distributedsoftware on workstations.andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     System DevelopmentIntegrated SystemsProgram Development ToolsSystem DesignObject-Oriented LanguagesApplicationsKernels.andO;Feature:   illustrationchartprogram.andO;Caption:   Diagram of an ASDL-based development. (chart)Object types defining the abstract syntax of the toy language Adt.andO;(program)Structure mapping induced by the well-sorted translation scheme.andO;(chart)andM;</DESCRIPT></DOC>
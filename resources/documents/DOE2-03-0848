<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> DOE2-03-0848 </DOCNO><TEXT>A system for simulation of distributed algorithms for a collection ofworkstations connected by a local area network is presented. The system,called {mu}, is intended for programmers who want to parallelize a program(or parts of it) in order to tap the CPU and memory space of idle workstations.Writing such parallel programs is difficult. {mu} simplifies this tasksignificantly in many ways. First, {mu} uses only a small set of communicationprimitives on top of a regular programming language and makes the detailsof their implementation transparent to the user. {mu} translates theprogram into a discrete event system and interfaces with a simulatedprocessing environment. The user need not be familiar with the simulationmechanism. Second, the environment is under complete control of the programmer.Tradeoffs such as communication speed vs. CPU speed can be easily tested,and decisions depending on them can be made more easily. Third, debuggingis much simpler. The asynchronous and nondeterministic nature of thecomputation is preserved even though the simulation is executed on onemachine. Fourth, {mu} is also the basis of a package for distributedprogramming. With it, {mu} programs are stripped (automatically) of theirsimulation parts and can be executed on several workstations with, inmost cases, no modifications by the user. Several examples of applicationprograms are presented.</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-732-743  </DOCNO><DOCID>09 732 743.andM;</DOCID><JOURNAL>PC User  Dec 5 1990 n147 p46(5)* Full Text COPYRIGHT EMAP Business andamp; Computer Publications(England) 1990.andM;</JOURNAL><TITLE>Character building. (font technology) (includes related article oncompanies offering fonts) (Cover Story)</TITLE><AUTHOR>Jackson, Peter.andM;</AUTHOR><SUMMARY>The current trends towards graphical user interfaces (GUIs) andthe need to share documents between different machine typeswithout loss of format highlight questions about font technology.andO;For users who format and print on the same machine,incompatibility problems do not arise.andP;  For those who exchangedocuments over different platforms, incompatibility can be a realproblem.andP;  Recent agreements between Microsoft and Apple, andbetween IBM and Adobe Systems only serve to confuse the issuefurther.andP;  In font technology, the real division is betweenbit-mapped fonts, where the character is built up dot by dot, andoutline fonts, where each character is represented by a set ofmathematical equations that can be adjusted to order.andP;  Recentattention is shifting to screens' imaging models in an attempt toutilize the same outlines for font rasterisers and printers andgenerate smooth text for GUIs.andM;</SUMMARY><DESCRIPT>Topic:     FontsFuture of ComputingBit-Mapped GraphicsGuidelinesPage Description Languages.andO;Feature:   illustrationphotographtable.andO;Caption:   Company contacts. (table)andM;</DESCRIPT><TEXT>Character buildingandM;It's hard to believe that differing opinions about making marks on papercould have much effect on the PC business.andP;  But the seemingly trivial issueof font technology has come close to breaking up the long-term partnershipsbetween IBM and Microsoft as well as Apple and Adobe, and has forced fontproducers and printer manufacturers to take sides in an unnecessary standardswar.andM;And the final, inevitable result is confusion for users, who are faced withincreasingly difficult decisions about the printer and screen technologiesthey should choose for the future.andM;Will Adobe Systems' PostScript maintain its position as the prime choice forhigh-quality printing?andP;  Will the joint Apple/Microsoft TrueType standardprovide anything that PostScript can't?andP;  What technology will be used tomatch screen displays with printed output?andP;  And who will supply the screenand printer fonts, and make sure that they work together on different screensand printers?andP;  These are all good questions that deserve better answers thanthey've been getting.andM;GUIs and fontsandM;But one thing everybody agrees on is that these issues are all coming to ahead because of the general shift towards graphical user interfaces (GUIs)and the need to exchange documents between different types of machine withoutlosing any of the formatting.andM;While users were once content with text screens and hard copy that bore norelation to the screen display, the arrival of the Apple Macintosh andPC-based GUIs like Microsoft Windows and OS/2's Presentation Manager hasaccustomed them to multiple typefaces and styles on screen and has led themto expect WYSIWYG printed output.andP;  This is fine as long as users stick to oneenvironment -- that is, as long as they never want to move a formatteddocument from the Macintosh to Windows, say, and still display and print itcorrectly.andM;But if document exchange is required, then the incompatibilities between theimaging and font technologies used by the different GUIs currently make lifevery difficult.andP;  For example, a document created on the Macintosh using aparticular set of screen fonts in certain sizes and styles won't displaycorrectly under Windows unless the identical screen fonts are available; andeven if both machines are using a common font like Times Roman, there's noguarantee that the two versions of the font will have the same charactersizes or spacing.andM;Printing fontsandM;Printing creates similar problems.andP;  Say the Macintosh has a PostScript-basedLaserWriter printer, while the Windows-based PC has a LaserJet III.andP;  Boththese printers use scaleable fonts, and both have the Times Roman fontbuilt-in, so users might expect that printing a document using that font willproduce identical results on both printers.andM;But the font formats and scaling mechanisms used are different in each case,and again there's no guarantee that the document's formatting will bemaintained.andP;  Even using a PostScript printer on both machines will only workif the document uses the limited set of built-in fonts that every PostScriptprinter has, or if both the Macintosh and the PC have the same set ofPostScript fonts installed.andM;Font compatibilityandM;In an ideal world, every computer and printer would use the same imagingmodel and share the same set of low-level routines to draw graphics and texton screen or paper.andP;  But that's unrealistic.andP;  Each GUI has its own screenimaging model -- QuickDraw for the Macintosh, GDI for Windows, GPI forPresentation Manager, and X.11/NeWS for Sun workstations, for example -- andon the output side there are Hewlett-Packard's Printer Control Language(PCL), which dominates the market, and PostScript.andP;  There's no chance at allof merging these into a single consistent model across all screens andprinters.andM;But font formats are a different matter.andP;  For most users font compatibility,allowing formatted documents created on one system for one type of outputdevice to be displayed or printed correctly on other systems and devices, ismore important than an exact match between low-level graphics routines forscreen and paper across incompatible systems.andP;  And improvements in fonttechnology have made it possible for identical fonts to work across multipleimaging models.andM;That font technology combines 'outline fonts' -- mathematical representationsof text characters -- with 'rasteriser' software that scales characteroutlines up or down to any size and creates bit-mapped characters to matchthe actual resolution of the target screen or printer (see boxout, page 50).andO;The font outlines are independent of the output device, and can be used withdifferent screen imaging models as long as rasteriser software is written towork with each model.andM;Adobe Type ManagerandM;The recent releases of OS/2 1.3 and Adobe Type Manager (ATM) for Windows 3.0,following the success of ATM on the Macintosh, shows what can be done.andP;  ATM,built into OS/2 1.3 as standard and sold separately for other environments,is a rasteriser that takes PostScript fonts and uses them to create screentext, using the same fonts in every case but adapting to work with theQuickDraw, GDI and GPI standards when it actually comes to putting bitmaps onthe screen.andM;In addition, it can use its rasteriser to generate character bitmaps forprinters too, so that a non-PostScript printer like the DeskJet can printtext in any size and style using PostScript fonts.andM;With ATM, as long as every machine has the same set of PostScript fontsinstalled, users can readily move documents backwards and forwards betweenMacintoshes and PCs running Windows and Presentation Manager applications,with text formatting and appearance intact.andP;  The same document can be printedon any device connected to any machines, whether it's a 9-pin dot-matrixprinter, a DeskJet or a 600dpi laser printer, and it won't only look the samebut will also have all the line and page breaks in the right places.andM;But in some ways, the arrival of ATM is actually an admission of failure byAdobe.andP;  If Adobe had had its way, and PostScript had become the universalimaging model for screens and output devices, then ATM wouldn't have beennecessary.andM;PostScript could have become the universal standard because it's actually ageneral-purpose language that can be adapted for any output devices,including screens.andP;  And Adobe's Display PostScript was intended to do forscreens what PostScript did for printers, making the screen imaging modeldevice-independent so that documents could be displayed identically on anyscreen, no matter what its size or resolution.andM;However, adopting Display PostScript was a big step for GUI developers tocontemplate.andP;  Not only would it mean abandoning existing screen imagingmodels like QuickDraw and GDI, but it would give Adobe control over a majorslice of any GUI environment using it.andP;  And given Adobe's reputation forjealously guarding its proprietary technology -- encrypting its font filesnot once but twice, for example, and including secret mechanisms to improveperformance and appearance when Adobe fonts were matched with Adobe-licensedPostScript printers -- that seemed too risky.andM;The birth of TrueTypeandM;And in the end, it was Adobe's secrecey and its insistence on keeping itsfont formats under lock and key that prompted the development of Apple'sTrueType technology, and its dramatic adoption by Microsoft.andM;The birth date of TrueType can be fixed fairly precisely to mid-January 1988.andO;At that time Adobe had been lobbying furiously to get Apple and IBM tolicense Display PostScript.andP;  There was sales resistance from both targets,however, largely because Adobe insisted on maintaining control of the DisplayPostScript code -- and the encrypted fonts that went with it -- as well ascharging hefty licensing and royalty fees.andM;And the door was finally slammed in Adobe's face by Apple's vice president ofproduct development, Jean-Louis Gassee.andP;  Gassee said that Apple had nointention of supporting multiple imaging models for displyas and that,instead of licensing Display PostScript, it would enhance the QuickDraw modelto provide similar facilities.andM;After that rather off-the-cuff announcement had been made, the development ofTrueType was inevitable.andP;  If Apple wanted to mimic the functions of DisplayPostScript in a new and improved QuickDraw, then the most obvious requirementwas a scaleable outline font technology that could provide true WYSIWYGdisplays at respectable speed on any Macintosh.andP;  And if Apple was going toinvent its own technology in any case, so that it could maintain control ofits system software, there was no reason to mimic Adobe's methods of storingand rendering fonts.andM;So when a new font technology called Royal was unveiled at a Macintoshdevelopers' conference in May 1989, as part of the major System 7.0 upgradeplanned for 1990, it was radically different fron PostScript.andP;  The fonts useddifferent mathematical techniques to describe character outlines (see boxout,page 50), and promised faster screen drawing and more compact rasterisingcode at the cost of larger font files.andP;  But the major difference lay in theway fonts are described and the type of information that's coded into fontfiles.andM;In PostScript Type 1 files, short fragments of PostScript code are used todescribe the raw outlines of the characters, while the rest of the filecontains two levels of 'hints' that the PostScript rasteriser can use.andM;These hints, which apply either globally to every character or to individualcharacters, provide extra information that can be used to improve theappearance of printed characters.andP;  For example, hints could tell thePostScript interpreter how to adjust the widths of character stems to makethem uniform across a font.andM;TrueType's featuresandM;In TrueType technology -- the Royal codename, with its possible subconsciousreference to the Adobe royalties that Apple wouldn't be paying, waseventually dropped -- character outlines and hinting are handled quitedifferently.andM;First, the character outlines are described, not in terms of the rasteriserinstructions required to draw them, but as collections of mathematical 'guidepoints' that the rasteriser can join with smooth curves to form the charactershape.andP;  And second, the hints in TrueType fonts are written in a 'hintinglanguage' that can be used to implement any type of hinting mechanism,including those used in Adobe Type 1 fonts.andP;  The TrueType hinting programs ineach font adjust the guide points of the font outlines before the rasteriserdraws and fills in the characters, so that the rasteriser is simplified atthe cost of font file complexity.andM;This approach puts much more 'intelligence' into the fonts themselves, andmakes it possible to build in features that Adobe leaves to applications.andO;For example, the font can contain information about kerning pairs andligatures, so that it can adjust the spacing between character outlines orsubstitute the correct ligatures when users type certain pairs of characterslike 'ff, 'VA', or 'ae'.andP;  Apple originally intended to build these featuresinto System 7.0's outlines font technlogy, with the Line Layout Managerhandling intercharacter spacing for all applications using TrueType fonts.andO;But the Line Layout Manager was dropped from System 7.0 in an attempt tospeed up the new operating system's release, and unless font producers putthe extra information in their TrueType fonts, it might well be abandonedaltogether.andP;  Unless the Line Layout Manager is supported in every font,there's not much point in it being supported in any of them.andM;But for those outside the Macintosh world, the major attraction of theTrueType standard was that it was completely open.andP;  Apple announced that itwould publish the full specifications of the font format, the hintingmechanisms and the rasteriser that would be built into System 7.0, and saidthat it had commitments from all the major type foundries except Adobe,including Bitstream, Agfa-Compugraphic, Monotype, URW and ITC, to produceTrueType fonts.andM;TrueType versus ATMandM;Like ATM, which was actually announced for the Macintosh as a pre-emptivestrike a week before Apple's initial unveiling of its Royal technology, theTrueType rasteriser can drive printers as well as screens.andP;  But unlike ATM,which automatically works perfectly with PostScript printers, TrueType had tobe written to co-exist with existing PostScript fonts and output devices.andM;For example, TrueType could use its own fonts to generate screen displays,but could then switch to PostScript fonts in the printer rather thandownloading TrueType bitmaps if it spotted a matching PostScript font.andP;  Thiscould pose a problem, as there was no guarantee that TrueType Times Romanwould match PostScript Times Roman precisely, and exact correspondencebetween screen and printer output would be lost.andM;The font warandM;But while Apple was typically going its own way, Microsoft and IBM werecasting around for outline font technologies to use in their own graphicalenvironments.andP;  For Microsoft that meant Windows 3.0 and Presentation Manager,while IBM's concerns were wider; it needed font technology for its entireSystems Application Architecture (SAA) line, including OS/2, and for its AIXworkstations.andM;Inside the industry it was widely assumed that Microsoft, under strongpressure from Hewlett-Packard, would opt for the Intellifont technologyjointly developed by HP and Agfa-Compugraphic.andP;  And IBM was pushing for whatit called an Intelligent Font interface (IFI), allowing users to addwhichever font technology they required, irrespective of what rasteriser wasactually included with the operating system.andM;But at the Seybold Computer Publishing Conference in September last year,Microsoft dropped its bombshell: it had decided to adopt Apple's TrueTypetechnology for Windows and Presentation Manager, and in exchange Apple hadagreed to implement the PostScript clone interpreter Microsoft had acquiredby bying Bauer Enterprises.andM;There was instant uproar, with Adobe's president John Warnock emotionallycalling Microsoft's explanations &quot;garbage mumbo jumbo&quot; and instantlyundertaking to publish the details of Adobe's proprietary font format andencryption mechanisms.andM;NeXT's Steve Jobs, already committed to Display PostScript on hisworkstations, said that Apple had made a &quot;big mistake&quot; in developingTrueType, and that it would take two years for the new technology to matchthe technical quality of ATM.andP;  But Microsoft's Bill Gates responded thatTrueType offered the best performance and tools support, adding that Adobe'ssecretive attitude made ATM an unattractive alternative.andP;  &quot;The word 'open'appeared about seven days ago in their vocabulary,&quot; he said, in an obviousdig at Warnock and Adobe.andM;Gates still left the door open for other font technologies, however, with anod towards the IFI concept supported by IBM.andP;  Support for Intellifont waspromised in OS/2, and even ATM wasn't ruled out.andP;  But the standard fonttecnology for OS/2 and Windows from Microsoft was to be TrueType, and theBauer TrueImage page description language was due to be built into futureApple printers.andM;The big question was IBM's attitude to the deal.andP;  It announced immediatelythat it would join Microsoft in supporting TrueType, but left its optionsopen.andP;  And in March this year, the final decision was made; IBM's standardimaging model across the SAA and AIX lines was to be PostScript, using ATM'sfont technology, with support for TrueType limited to low-end PS/2 machines.andM;Again, there was uproar.andP;  The IBM deal with Adobe would force Microsoft toship ATM with OEM versions of OS/2 2.0 along with TrueType, and IBM's idea ofsupporting different font technologies as dynamic linked libraries (DLLs) --allowing users to mix and match scaled fonts of any type in a single document-- seemed calculated to cause confusion and doubt among users.andP;  Microsoftinstantly said that TrueType would accomodate any vendors' fonts, includingAdobe's PostScript formats, and that TrueImage would include rasterisers forboth TrueType and PostScript.andM;The dust settlesandM;So far, however, all this is speculation.andP;  There's no TrueType rasteriser andthere are no TrueType fonts on the market, and there won't be until Appleships system 7.0 and Microsoft delivers the promised Windows 3.1.andP;  On theother hand, ATM now exists for the Macintosh, Windows 3.0 and OS/2, has anenormous installed base of PostScript users to aim at, has IBM's backing, andhas a choice of more than 600 exiting fonts ready to go.andM;Users who stick to PostScript and ATM won't have to worry about multiple fontformats and printers with two rasterisers, and the opening of the PostScriptfont format and hinting secrets will bring down the prices of both PostScriptprinters and fonts as competitors flood into the new open market.andM;So the unexpected outcome of last year's font wars is that Adobe, whichseemed certain to be trampled underfoot by the combined mass of Microsoft andApple, is in a very strong position.andM;Existing PostScript users can carry on as before, with better screen imagingand cheaper printers and fonts on the way, while those customers examiningthe font market can buy PostScript secure in the knowledge that it'll besupported identically across all platforms.andM;TrueType, however, is stalled.andP;  Until Apple releases System 7.0, users won'teven have a chance to see it in action, and it'll have to be very good indeedto tempt users.andP;  Why buy a new and untried technology that has to go throughhoops to support PostScript devices -- particularly typesetters -- when thereal thing is available either bundled or as a cheap add-on, and is gettingcheaper by the month?andM;Of course, TrueType and PostScript aren't the only font technologies on themarket, and others like Intellifont, Bitstream's Speedo and Sun's F3 (seeboxout, page 50) have their supporters and their market niches.andP;  But mostMacintosh and PC users will be presented with one or the other, and facedwith a choice that will govern how documents are exchanged from machine tomachine, how they're displayed on screen and how they can be printedconsistently from machine to machine.andP;  And as things stand at the moment, theonly real cross-platform solution is ATM and PostScript.andM;A deal is struckandM;Perhaps this explains why Apple and Adobe announced in September this yearthat they'd resolved their differences.andP;  Apple announced that System 7.0would be compatible with ATM, so that Adobe's code could co-reside with thebuilt-in TrueType rasteriser and users could mix PostScript and TrueTypefonts in documents.andP;  These documents would then print on either PostScript orTrueImage printers, or on dumb printers, with the Apple and Adobe rasterisersworking side by side.andM;PostScript won't now go away -- unlike Jean-Louis Gassee, whose offhanddismissal of Display PostScript spawned TrueType, and whose departure fromApple immediately improved its relations with Adobe.andM;Bit-mapped fontsandM;The main division in digital font technology is between bit-mapped andoutline font types.andP;  The bit-mapped type is more familiar; here eachcharacter shape is built up dot by dot, and the resulting collection ofcharacters is stored to make up a complete bit-mapped font.andP;  All textcharacters on a PC screen are bit-mapped, the number of dots making up eachcharacter determined by the resolution of the screen, and any printed text isagain produced from bit-mapped characters.andM;But each bit-mapped font must be designed to match the resolution of theoutput device and the size of the characters that'll be required.andP;  And foreach font family at each resolution -- Times Roman on a 300dpi laser printer,say -- a complete new bit-mapped font must be produced for each type sizerequired.andP;  This, unfortunately, takes up a lot of memory.andM;With the arrival of the Macintosh, the bit-mapped font problem was extendedto screen displays.andP;  The Macintosh makes no distinction between graphics andtext on its bit-mapped screen, and text was produced by extracting charactersfrom bit-mapped fonts stored in the computer's System file.andM;Again, the choice was limited by storage constraints, and only a few sizes ofeach font were available.andP;  The Macintosh coped with other sizes by scalingexisting font bitmaps up or down, and produced italic, bold and other texteffects by manipulating bitmaps with crude mathematical transformations.andP;  Butthe onscreen results were horrible.andM;Outline fontsandM;Outline fonts solve the storage and scaling problems of bit-mapped fonts byrepresenting characters in a different way.andP;  In an outline font, eachcharacter is represented by a set of mathematical equations that describe itsshape in outline form; then, when a character in a particular size isrequired, software in the output device scales the outline to the right sizeand fills it with dots to produce a bitmap that can be printed.andM;There are many advantages to this.andP;  First, outline fonts are independent ofthe output resolution required, and it's the responsibility of theoutline-filling software -- called a 'rasteriser' -- to produce characterbitmaps that match the output device's resolution.andP;  Second, each character inan outline font can be scaled to any size without loss of detail, as themathematical equations produce smooth results no matter what scaling factoris applied.andM;Third, storage requirements are greatly reduced because a single outline fontfile can represent any and all type sizes.andP;  Fourth, the reduced size ofoutline font files means that variants such as bold and italic can behandcrafted as separate outline fonts, with much better output quality.andM;And finally, the device independence of outline fonts allows text files to beprinted identically on any laser printer or typesetter, the only differencebeing that the text will look better on higher-resolution devices.andM;Soft fontsandM;In the PC world, however, bit-mapped fonts have until recently been the rulerather than the exception.andP;  The Hewlett-Packard LaserJet set the standard,with a limited set of built-in bit-mapped fonts like Courier and Line Printerand the ability to add more either by plugging in a ROM cartridge holdingmore bitmaps or by downloading bit-mapped 'soft fonts' from the computer'shard disk as and when required.andM;The biggest boost for bit-mapped fonts, though, was the arrival of soft-fontgenerators, like Bitstream's Fontware, Hewlett-Packard's Type Director --jointly developed with AgfaCompugraphic -- and SWFTE's Glyphix, that couldproduce soft fonts in any size required for downloading to particular printertypes.andM;These packages are actually rasterisers, building their bit-mapped fonts fordownloading, or for use in print preview displays in packages likeWordPerfect and Word, from font outlines.andP;  However, they must be matched toparticular printing devices and application software packages, and are soldas add-ons to those packages.andM;The integration of soft fonts into applications has been greatly improved,however, and many PC packages will now recognise soft fonts, use them intheir print previews and send them automatically to the printer when usersspecify them.andP;  however, the problems of storage-hogging and device-dependenceare still significant.andM;The best-known source of outline font technology is Adobe Systems' PostScriptpage description language and its matching Adobe Type Library of PostScriptfonts.andP;  PostScript is a complete language, and any PostScript output deviceincludes a language interpreter that takes PostScript code and turns it intoa bit-mapped representation of a page at the device's maximum resolution.andM;RasterisersandM;PostScript Raster Image Processors (RIPs) are available for many typesetters,particularly those from Linotype, as well as being built into an increasingnumber of laser printers at various resolutions.andP;  But in every case, the sameoutline fonts can be used, with the PostScript rasteriser rendering the textin any size and at any resolution required.andM;But there's more to font outline technology than might appear at first sight.andO;For a rasteriser, filling in a scaled character outline isn't just a matterof putting the outline over a notional 300dpi piece of graph paper andblackening each dot whose centre falls within the line.andP;  If this is done,there can be problems with asymmetrical character stem widths -- for example,if one vertical stem is just wide enough for five dots to be drawn while theother is just too narrow.andP;  Similarly, slanting lines and curves can produce'drop-outs', where pixel centres are just outside the outline but wherethey're necessary to preserve the character shape or appearance.andM;HintingandM;the technique of including extra information in a font to preserve itsappearance at any scale is called 'hinting', and each rasteriser uses its ownhinting techniques.andP;  In PostScript fonts, for example, hints adjust the stemwidths of characters within a font to make them more uniform at differentscales, and can flatten curves at low resolutions to make them look lessjagged.andP;  In TrueType fonts, on the other hand, the hints can be more complexand can move individual points in a font outline before rasterising begins.andM;The importance of hinting has encouraged font designers to encrypt theiroutline fonts and to conceal the hinting mechanisms.andP;  Adobe did thissuccessfully with its PostScript fonts.andM;The secret PostScript font format was called Type 1, while Type 3 fonts,without the hinting mechanism, used an open pure-PostScript format and couldbe produced by anybody.andP;  Intensive work went on at companies like Bitstreamto clone Type 1 fonts, and Bitstream finally succeeded by cracking theencryption and producing fonts that were identical in width and size -- withthe same 'font metrics' in other words -- as their Type 1 equivalents, andcould be used on PostScript printers and clones.andP;  However, Bitstream couldn'treproduce Adobe's character-level hinting mechanism, still giving Adobe theedge.andM;Now that Adobe has opened up its Type 1 format, under the pressure of theTrueType deal between Apple and Microsoft, things are much simpler for thetype makers.andP;  Type 1 fonts, complete with the hinting mechanism, can now beproduced by anybody and sold to work with PostScript printers.andP;  AndPostScript clone-makers can now adjust their rasterisers to handle the Type 1format fully, thereby driving down the cost of PostScript-compatible printersand the accompanying fonts.andM;Screen fontsandM;Most recently, attention has switched from printers to screens as processingpower and RAM capacities have increased.andP;  There's no theoretical reason whyfont rasterisers shouldn't use the same outlines as printers to generatesmooth screen text at any size for GUIs like the Macintosh, Windows andPresentation Manager.andP;  And now there's no practical reason either, asprocessors are fast enough to do the rasterising in real-time and RAMcapacities are high enough to allow the bitmaps produced by the rasteriser tobe cached in RAM.andM;That extra memory is required, however, it's worth noting that the defaultcache size of the first screen rasteriser, Adobe Type Manager, is only 32Kbless than the maximum RAM capacity of the first Macintosh.andM;Adobe Type Manager for the Macintosh, Windows 3.0 and Presentation Managerwill allow users to share a single set of Type 1 font outlines between thescreen and any output device, with the printer bitmaps either being producedby the screen rasteriser and downloaded or built up from internal versions ofthe same outlines.andM;And Bitstream's FaceLift for Windows 3.0 will do the same thing with its ownSpeedo outline fonts and its specially-marked Type 1 fonts.andP;  Either way, theresult is true WYSIWYG -- and a great leap forward over the early bit-mappedLaserJet days when all too often it was Courier or nothing.andO;</TEXT></DOC>
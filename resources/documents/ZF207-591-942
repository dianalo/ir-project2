<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-591-942  </DOCNO><DOCID>07 591 942.andM;</DOCID><JOURNAL>PC Week  Sept 4 1989 v6 n35 p73(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>'Think' must be explicit step in programming: fast compilationsrob programmers of valuable reflection time.andM;</TITLE><SUMMARY>Programmers must include human thought in the code generatingprocess.andP;  Current generations of fast processors, debugging toolsand code generators leave little time for human input.andO;Programmers must be trained on the importance of code reviews andchanges prior to final compilation.andP;  Programmers naturally want tosee the results of their work as quickly as possible.andP;  However,code generated with modern tools may not work out quite as wellwithout earlier review.andM;</SUMMARY><DESCRIPT>Topic:     MicrocomputersApplications ProgrammingCode GenerationDebuggingProgram Development Tools.andM;</DESCRIPT><TEXT>By Robert HolmesandM;Our attempts to improve programmer productivity by giving them the bestavailable compilers, debuggers and other development tools may havebackfired.andM;Use of these extremely potent platforms for compiling PC program modules hasreduced the waiting time to a few seconds per module, scarcely enough timefor any productive thought by the programmer.andM;Before the advent of 80286-based machines, a programmer had to wait from 30seconds to several minutes for the completion of a compile.andP;  This was enoughtime for the programmer to reflect on the changes or additions that had justbeen made to the code.andP;  In many cases, this led to the realization that therewere errors.andP;  Corrections were made before any time was lost in testing theerroneous module.andM;The current era of almost instantaneous turnaround seems to be generating abreed of programmer who is willing to allow the error-checking capabilitiesof the development software to replace human thought and reflection.andP;  I wouldnot argue against using the power of the computer to detect those classes oferrors for which it is well-suited -- syntax errors, for example.andP;  My concernis that because the computer is so fast, the human mind is being omitted fromthe proceedings.andM;What's the remedy for this problem?andP;  I do not think replacing theprogrammer's fast 386 machine with an IBM PC XT or equivalent is anacceptable solution.andP;  The fast hardware would still be required during theunit- and system-testing phases.andM;The real solution would seem to be in the way we train our programmers andtheir managers.andP;  A new emphasis must be placed on the importance of reviewingnew code and changes to existing code before embarking on a compilation.andM;This discipline will not be easy to achieve.andP;  It seems to be human nature towant to see the results of effort as soon as possible.andP;  A programmer's firstlook at results is a successful compilation, though the code generated maynot produce the desired results.andP;  The current steps of programming -- codeand compile -- should be modified.andM;In the age of batch computing, programmers considered themselves lucky ifthey could get one compile of a program in a 24-hour period.andP;  In those times,the steps of programming were plan, code, review, correct and compile.andP;  Theprimary purpose of review was to eliminate syntax errors so that the compilewould be successful.andP;  However, errors in logic and other non-syntax errorswere also discovered and corrected during this review.andM;The modern equivalent should look like this: plan, code, think, correct andcompile.andP;  I don't mean to imply that today's programmers do not think.andP;  ThePC software of today shows quite clearly that a great deal of thought hasbeen expended by both programmer and designer.andP;  My point is that theopportunity for thought has been eliminated by high-speed machines and needsto be replaced by an explicit step in the programming process.andM;----------Robert Holmes is a consultant for a large California utility company.andP;  Theopinions he expresses are his own.andO;</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> DOE1-02-0740 </DOCNO><TEXT>The applicative model of computation makes possible the development ofprogramming languages with several attractive features. Programs maybe proved to execute correctly. Features of these languages remove somesources of programmer error, and can make correct programs easier tobuild and maintain. In this report we discuss how software for applicativelanguage programs can automatically detect and exploit parallelism totake advantage of current and future parallel processing systems. Weuse an applicative language, SISAL, to show the sources of parallelism.A prototype SISAL system is available to execute some sample programsand help us examine how well the implementation exploits potential parallelism.An outstanding problem in applicative language design and implementationis copy optimization. The single assignment semantics of these languagesrequires frequent data structure copying in some programs. We exemplifythe importance of doing this optimization well, and show that high-qualitycode generation is also important for applicative languages. 27 refs.,7 figs., 1 tab.</TEXT></DOC>
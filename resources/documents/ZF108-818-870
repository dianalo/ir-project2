<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-818-870  </DOCNO><DOCID>08 818 870.andM;</DOCID><JOURNAL>PC Week  Sept 3 1990 v7 n35 p48(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>When you have power tools, you don't need power users. (Cast inCode) (column)</TITLE><AUTHOR>Coffee, Peter.andM;</AUTHOR><SUMMARY>A prevailing trend in the software industry is the idea of movingusers back to 'hand tools' and away from power tools.andO;Direct-manipulation interfaces and realistic graphics are makingsoftware more concrete, because there are obvious ways toaccomplish certain tasks.andP;  This concreteness makes users stoplooking for easier and better ways to do things and, as a result,productivity and ingenuity are often lost.andP;  Software developersneed to take some time to consider what could be done to makesoftware more powerful.andP;  Lotus Development Corp's 1-2-3/Gspreadsheet software and Meta Software's MetaDesigndiagram-drawing software offer users more than technique stuck ina graphical user interface.andP;  A spreadsheet formula is described asa relationship rather than a procedure with 1-2-3/G Solver andMetaDesign allows the user to draw what he is thinking, instead ofthinking about how to draw it.andP;  These power tools diminish theneed for power users.andM;</SUMMARY><DESCRIPT>Product:   Lotus 1-2-3/G (Spreadsheet software) (design and construction)MetaDesign (Computer program) (design and construction).andO;Topic:     Software DesignSoftware PublishersUser NeedsWYSIWYG.andM;</DESCRIPT><TEXT>You needed a lot of imagination to work with the software of yesteryear.andO;Text displays with occasional stick-figure graphics meant that only abstractthinkers could be productive users, except perhaps in word processing, wheretext is a concrete thing.andM;In every other application, limits on user interaction gave software arunning start toward features that built on abstraction, such as embeddedprogramming languages and other power tools that made the machine do more ofthe work.andM;With today's realistic graphics and direct-manipulation interfaces, however,software can get more concrete.andP;  This is a mixed blessing -- perhaps even agenuine threat to users' productivity.andP;  People interact with their tools inthe way that the tools make most obvious, whether or not it's the mostproductive approach.andM;Current software trends are leading users back to &quot;hand tools&quot; instead of thepower tools that most dramatically aid the user.andP;  When users of spreadsheets,for example, can plug a variation into an assumption to see how it changestheir results, that's just what they do.andM;The &quot;Data Table&quot; command in Lotus 1-2-3 gets far less use than it shouldbecause users don't look for abstract ways to do things when the concretemethods are plain to see.andM;It's mostly a matter of what's obvious: If they were using BASIC, a tableprinted with nested loops would be the natural solution, and users wouldactually get a clearer view of the problem's overall behavior, probably inless time.andM;Software developers need to step back from the realistic graphics and directinteraction of today's new software platforms, and ask themselves what theycan do to make software that is truly powerful and not just an increasinglyfaithful imitation of the pre-PC desktop.andM;For example, any spreadsheet (electronic or paper) can calculate results fromassumptions, but only with the Solver in Lotus 1-2-3/G do we finally see aspreadsheet that moves beyond fixed roles of &quot;input&quot; and &quot;output.&quot;andM;The 1-2-3/G Solver treats a spreadsheet formula as describing a relationship,not a procedure.andP;  The user can treat any cells as variables and ask, &quot;Whatvalues in these cells will let me have what I want in these other cells?&quot; Theuser can also seek a maximum or minimum value for any particular cell,subject to stated conditions in other cells.andM;All of this is completely integrated with the spreadsheet, including itsgraphics; the program can cycle through the answers that it finds, changingspreadsheet and graphs to match.andM;What You See Is WYSIWYGandM;Notice how different this is from merely taking a technique, such as linearprogramming, and putting it into a graphical user interface.andP;  A softwaredeveloper could look at a textbook, say, &quot;Gee, we can do this,&quot; and proudlydeliver an application that lets users set up WYSIWYG tables of equations anddraw nicely shaded graphs of feasible regions.andM;By contrast, the Solver buries these details, and does it so well that when Ifirst looked at 1-2-3/G, I grossly underestimated the Solver's power: Itlooked too simple to be capable of anything important.andM;I recently found another true power tool, MetaDesign from Meta Software, adiagram-drawing tool that resolves every complaint I've ever had aboutprograms such as Apple's MacDraw on the Macintosh.andM;You want to make this box the same size as that one?andP;  Menu pick, point andclick.andP;  You want these boxes equally spaced along a diagonal?andP;  Click on&quot;spread,&quot; &quot;horizontal,&quot; &quot;vertical&quot; and &quot;OK,&quot; and it's done.andM;MetaDesign runs on both Windows PCs and the Macintosh, and it's a great wayto draw what you're thinking instead of having to think about what you'redrawing.andM;(Meta Software is in Cambridge, Mass., and can be reached at (800) 227-4106.)andM;In the same way, the 1-2-3/G Solver lets you concentrate on deciding whichnumbers are important, instead of thinking about how to compute them.andM;Each is a power tool that reduces the need for power users.andP;  That's whatsoftware developers should be trying to deliver.andO;</TEXT></DOC>
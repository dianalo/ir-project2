<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-347-946  </DOCNO><DOCID>07 347 946.andO;</DOCID><JOURNAL>ACM Transactions on Programming Languages andamp; Systems  April 1989v11 n2 p212(36).andM;</JOURNAL><TITLE>Designing families of data types using exemplars. (technical)</TITLE><AUTHOR>LaLonde, Wilf R.andM;</AUTHOR><TEXT><ABSTRACT>Exemplars are useful for designing families consisting ofintegrated data types that are variations on each other.andP;  Anexemplar is a special sample object whose purpose is to serve as amodel for other objects.andP;  Class-based inheritance hierarchies failto serve data-type family design adequately.andP;  An exemplar systemproviding an unlimited number of uncoupled specificationhierarchies is proposed.andP;  Uncoupled hierarchies separate thespecification of a data type from its implementation.andP;  TheSmalltalk language illustrates the use of exemplars to produceuncoupled hierarchies.andP;  Smalltalk inherently supportsprogramming-by-exemplars, but the method is used relativelyinfrequently.andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     Data TypesAlgorithmsProgramming LanguagesObject-oriented ProgrammingHierarchical OrganizationData StructuresProgramming.andO;Feature:   illustrationcharttableprogram.andO;Caption:   (Inheritance versus specification). (chart)An illustrative subset of the list operations. (table)A class-based implementation. (program)andM;</DESCRIPT></DOC>
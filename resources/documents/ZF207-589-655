<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-589-655  </DOCNO><DOCID>07 589 655.andM;</DOCID><JOURNAL>Communications of the ACM  May 1989 v32 n5 p594(12)* Full Text COPYRIGHT Assn. for Computing Machinery, Inc. 1989.andM;</JOURNAL><TITLE>The SEI education program: the challenge of teaching futuresoftware engineers. (Software Engineering Institute)</TITLE><AUTHOR>Gibbs, Norman E.andM;</AUTHOR><SUMMARY>The demand for computers and software increases so rapidly thatprojections indicate that by the early part of the 21st century,every person in the US will have to be a software engineer.andO;Currently, there are no set software engineering principlesidentified.andP;  Making the production of software less laborintensive and more technology intensive is one way to gainintellectual control over the entire software production processand become more efficient in its creation.andP;  Automation is notenough because it takes 15-20 years for it to be accepted intocommon practice in industry.andP;  A main goal of the Carnegie-MellonUniversity Software Engineering Institute is to accelerate thistransition of new software engineering technology.andP;  Theestablishment of software engineering principles and an educationcurriculum for potential software engineers to follow isdiscussed.andP;  The need for qualified teachers and the criteria fortraining them is also discussed.andM;</SUMMARY><DESCRIPT>Topic:     Computer EducationSoftware Engineeringm CriteriaForecastingCarnegie-Mellon University. Software Engineering Institute.andO;Feature:   illustrationphotographtablechart.andO;Caption:   Current curriculum modules. (table)Current SEI academic affiliates. (chart)andM;</DESCRIPT><NOTE>Only Text is presented here; see printed issues for graphics.andO;</NOTE><TEXT>THE SEI EDUCATION PROGRAM: THE CHALLENGE OF TEACHING FUTURE SOFTWAREENGINEERS The demand for computers and software in our society is increasingcontinuously.andP;  Projections of this demand, coupled with pessimisticprojections of increases in the productivity of software developers, indicatethat by early in the next century, every man, woman, and child in the UnitedStates will have to be a software engineer.andP;  The telephone company was facedwith similar projections for operators in the 1920s, but the development ofnew technology allowed users of telephones to perform nearly all the dutiesof operators.andP;  Today, however, the technology to allow users of computers toperform the duties of software engineers is unlikely to be available in theforeseeable future.andP;  Instead, we will have to increase the productivity (andnumber) of the current and next generation of software engineers.andM;Coping with &quot;No Silver Bullet&quot;andM;Although we aspire to engineer software by applying principles of science andengineering to the software process, few software engineering principles havebeen identified as yet ([8], pp.andP;  369-380).andP;  Brooks says &quot;There is no singledevelopment, in either technology or in management technique, that by itselfpromises even one order-of-magnitude improvement in productivity, inreliability, in simplicity&quot; ([2], p. 10).andP;  We might say that softwareengineers are attempting to do what civil engineers would have to do to buildbridges under the constraint that right triangles have not yet beendiscovered.andP;  However, we need not wait for all the principles to bediscovered.andP;  Just as medicine was practiced before medical science wasaccepted, software engineering can be practiced before its principles havebeen fully defined.andM;Improving the productivity of software engineers requires new ways ofthinking about software and better methods of producing it.andP;  One way to gainintellectual control over the software production process and become moreefficient is to make the production of software less labor intensive and moretechnology intensive.andP;  The Software Engineering Institute (SEI) at CarnegieMellon University expects that this shift will be attained through automationbased on sound models and principles.andP;  However, automation alone will not beenough--after new software technology is invented, it takes 15 to 20 yearsfor it to be accepted into common practice in industry ([11], p. 100).andM;The term software refers to a program and all of its associated informationand materials needed to support its installation, operation, repair, andenhancement.andP;  Software engineering refers to the disciplined application ofengineering, scientific, and mathematical principles and methods to theeconomical production of quality software.andP;  A software engineer is someonewith the necessary skills, experience, and discipline to practice softwareengineering.andM;A main objective of the SEI, then, is to accelerate this transition of newsoftware engineering technology.andP;  The institute addresses all aspects oftechnology transition, including technological, managerial, legal, economic,and professional concerns.andP;  The SEI Education Program focuses on the latter.andM;Education Needs of Software EngineersandM;Users of new technologies need to be educated and trained.andP;  We distinguisheducation from training: education is a long-term activity designed to builda foundation of knowledge and reasoning abilities; training is a short-termactivity with a specific goal.andP;  Training builds upon an educationalfoundation to develop a skill or teach performance of a process rather thanreasoning about processes.andP;  The challenge to educators of software engineersis to provide the appropriate foundation so that the expected advancements intechnology can be used effectively after relatively short training periods.andM;Since software engineers work in a product-oriented field, they require adifferent kind of education than that typically provided by research-orientedcomputer science departments.andP;  To meet the needs of an emerging profession,the founders of the SEI envisaged a graduate professional degree analogous toan MBA (master of business administration).andP;  The degree program would presenta variety of principles, tools, and skills from disciplines such as computerscience, computer engineering, industrial engineering, management science,mathematics, psychology, and economics.andP;  In spite of its recent closing, theeducational successes of the Wang Institute of Graduate Studies were wellaccepted by the practitioner community and can be viewed as an early protoypeof such a program [1].andM;The professional master's degree at a university is not the only educationalmodel.andP;  Much of the knowledge of software engineering resides in industry,with people who do not necessarily have advanced degrees.andP;  To access thisknowledge, educational programs may include apprenticeships or workexperience.andP;  In addition, practicing software engineers need continuingeducation within their organizations.andP;  New educational partnerships anddifferent kinds of working relationships need to be formed amonguniversities, industry, and government agencies.andM;To increase the number of qualified software engineers, universities need toincrease the number of high quality software engineering programs.andP;  Yet, wework against the enormous inertia of an education system that (properly) doesnot respond quickly to new needs.andP;  The approval of new programs within auniversity may require approval of the faculty of the department, thedepartment chairman, the dean, the college curriculum committee, the businessoffice, and in some cases a board of regents and the state legislature--aprocess often requiring several years.andP;  (See &quot;Computer Science and SoftwareEngineering.&quot;)andM;In addition, universities have limited resources to offer softwareengineering.andP;  Computer science faculty remain overburdened with a largenumber of students and many courses to teach.andP;  Teaching a new softwareengineering course means not teaching something else.andP;  Also, most faculty donot have a background in software engineering.andP;  Attracting new faculty withindustry experience is difficult; competent software engineers hesitate toleave industry to work in universities, where they may have lower salaries,more modest computing facilities, and fewer software engineering supporttools.andP;  Furthermore, they may not have &quot;appropriate&quot; academic credentials bythe standards of a research-oriented university or department.andP;  Thus, we havetoo few faculty with too little knowledge of software engineering.andP;  Simplyincreasing the number of Ph.D.andP;  researchers is not the answer.andP;  Again, thesolution to the resource problem requires cooperative efforts amonguniversities, industry, and government.andM;A Strategy for EducationandM;The Department of Defense (DoD) contract that established the SEIspecifically mentions education as a mission of the Institute, saying, &quot;Itshall ...andP;  influence software engineering curricula development throughoutthe education community.&quot;andP;  The SEI Education Program defines and manages thisactivity, which is carried out primarily by educators and practitioners whocollaborate with the SEI.andM;The SEI cannot give grants or subcontract its technical activity, nor can itbecome a degree-granting institution.andP;  Rather, its role is to serve as afocal point for developments in software engineering education and as acatalyst that influences computer science and software engineering curricula.andM;SEI Education Program activities are unique among curriculum developmentefforts.andP;  University curriculum development efforts are usually voluntary andhave few resources devoted to them; moreover, they are rarely given highpriority in rewarding faculty [10].andP;  Ten percent of SEI funding is earmarkedfor education, so the SEI is able to devote more resources to this activitythan have ever been available within any single university or otherorganization.andM;The curriculum development activities of the SEI Education Program alsodiffer significantly from those of volunteer professional societies such asthe ACM or the IEEE Computer Society.andP;  An important difference is that theSEI has the resources to have a continuing presence while professionalsocieties need to work under the constraint of convening committees ofvolunteers whenever needs dictate or interest is high.andP;  While thesecommittees perform an important service to the profession by engenderingcooperation and building consensus, they can only devote a limited amount oftime to such activities.andM;In contrast, the SEI is able to support ongoing development of curricula andcurriculum materials.andP;  Its fulltime Education Program staff works withaffiliated institutions to develop, test, and implement curricula.andP;  The SEInot only acts as a catalyst for curriculum efforts from geographicallydispersed institutions; it also serves as a central source of information forteaching software engineering and maintains a growing store of educationmaterials that are regularly reviewed and updated.andM;Graduate CurriculumandM;The central development activity of the SEI Education Program resides in itsgraduate curriculum project, which began in the summer of 1985.andP;  The goal ofthe project is to identify and disseminate a body of knowledge that will helpcurrent and future software engineers be more productive.andP;  This requiresdocumenting the body of knowledge called software engineering as thediscipline evolves, an ongoing activity that includes identifying fundamentalsoftware engineering principles and the best current software engineeringpractice and methodology.andP;  Current software engineering technology must beidentified as well--workstations, tools and environments, and assessmentmethods for software engineering practices, for example.andM;After the overall content of software engineering is documented, parts ofthat content must be selected and packaged to provide the appropriate breadthand depth of coverage for different curricula and institutions.andP;  In order toprovide flexibility, the SEI subdivides content areas into units calledcurriculum modules, each of which explicates a coherent body of knowledge.andO;The content of software engineering may ultimately consist of 50 to 100curriculum modules.andM;Curriculum modules are developed by visiting educators, computer scientists,and software practitioners, most of whom spend four to six weeks in residenceat the SEI.andP;  During this time the author produces a document that outlines abody of knowledge, describes educational objectives and prerequisites,suggests effective methods of teaching the material, and provides anannotated bibliography of relevant literature.andP;  The module is reviewedinternally (at the SEI) and externally, revised as needed, and made availableto the educational community.andP;  The module and associated collection ofteachng materials (such as lecture aids, case studies, worked examples, andother materials that may be useful to instructors) may be thought of as aneducator's kit for a specific body of knowledge.andP;  As educators use themodule, the kit is revised and augmented.andM;The first five SEI curriculum modules were released for public review at afaculty development workshop in September 1986.andP;  Subsequent workshops wereheld in April 1987, October 1987, April 1988, and January 1989.andP;  To date, 20curriculum modules have been released to the educational community (see Table1).andP;  All workshops have attracted over 100 educators with an average totalattendance of 150.andP;  Attendance indicates the tremendous need and demand formore and better software engineering educational materials.andM;Curriculum modules can be built into education programs in a number of ways.andO;The SEI envisages packaging software engineering curriculum in these ways,among others:andM;* Master of software engineering degree program (MSE degree with twovariants, one for experienced practitioners and one for new BS CS graduates)andM;* Software engineering specialization within a computer science master'sdegree program (MS CS degree)andM;* Software engineering electives within a computer science master's degreeprogramandM;* A one- or two-semester overview for undergraduatesandM;* Software engineering project coursesandM;* Intensive short courses in industryandM;* Survey courses or seminars for managers and decision makersandM;Encouraging and helping others to implement the curriculum is vital to thetechnology transition mission of the SEI.andP;  Our strategy is based on the ideathat if many people have a stake in the curriculum, it has a better chance ofbeing accepted and used.andP;  Thus, the SEI does not prescribe educationalsolutions but rather cooperates, coordinates, disseminates, and supports.andO;Many outside educators and experts come to the SEI to learn and tocontribute.andM;Software engineering experts have been involved with the SEI EducationProgram in several ways.andP;  Educators have spent one month during the summer atthe SEI to work on module development; they have used sabbaticals and leavesof absence to spend longer periods working on support materials, educationalsoftware, and other projects.andP;  Practitioners, who have less flexibility forextended visits, have collaborated with module designers at SEI workshops andhelped review modules.andP;  (However, one curriculum module was written by asoftware quality assurance manager from a major aerospace company.)andM;The SEI intends to promote further interest in the curriculum by providingsubstantial support for instructors wishing to use it, includingdemonstrating hardware and software resources that support the curriculum.andO;The Institute will also continue to conduct faculty development workshops tohelp increase the number of qualified faculty.andP;  By having the SEI disseminateeducational materials, the task of offering software engineering courses andprograms becomes less onerous.andM;A few universities and industrial and government organizations will beselected from among the SEI's affiliates for special consideration inimplementing and testing the curriculum and its various packages.andP;  The SEIEducation Program staff monitors the effectiveness of the transition effortand assesses the quality of the curriculum and support materials.andP;  In 1987,the Wichita State University became the first SEI curriculum primary testsite.andP;  The university has started a software engineering specializtion withinits computer science master's degree program.andP;  In this instance, the programcame as a result of a professor's spending 18 months in residence at the SEIcontributing to curriculum development efforts.andP;  In February 1989, the KansasBoard of Regents officially approved this new software engineering graduateprogram.andP;  In addition, the newly formed School of Computer Science atCarnegie Mellon University is considering offering an MSE degree programstarting in the fall semester of 1989.andM;Because of the present nature of software engineering, much of the curriculumis based on current best practice and emerging principles.andP;  Such material ismore volatile than that based on many established principles; thus it needsto be updated regularly.andP;  The result is an evolving curriculum that must bemonitored continually.andP;  The SEI Education program has the resources andstaying power to do this properly.andP;  The SEI sponsors an annual conference insupport of the graduate curriculum project and its other educationalactivities.andP;  At the conference educators share experiences and materialsdiscuss equipment and software, participate in panel and birds-of-a-featherdiscussions, and attend faculty development workshops.andP;  The first conferencewas held in April 1987, the second in April 1988, and a third is scheduledfor July 1989.andM;Recognizing the importance of textbooks, SEI has entered into an agreementwith Addison-Wesley Publishing Company for the development of a series ofsoftware engineering books to support the teaching of curriculum modules.andO;Educators and practitioners may separately or jointly participate in writingthese books.andM;Master of software EngineeringandM;The SEI plays an active role in the development of recommendations forcurriculum leading to a master of software engineering (MSE) degree.andP;  Thefirst version of this curriculum was drafted in October 1985 and reviewed byacademic affiliates and participants of the Software Engineering EducationWorkshop.andP;  Held at the SEI in February 1986, the workshop provided an exampleof how the SEI serves as a catalyst for worthwhile activity.andP;  This was thefirst workshop on software engineering education held since an InterfaceWorkshop convened at the University of California, Irvine, in 1976.andP;  The 1986workshop was cosponsored by Wang Institute of Graduate Studies (which was anacademic affiliate), and attracted 25 leading software engineering educatorsand experts from industry, government and universities.andP;  Included wererepresentatives from five institutions with existing graduate softwareengineering programs: Imperial College, Seattle University, Texas ChristianUniversity, University of Stirling, and Wang Institute.andP;  To initiatediscussion, all participants provided position papers on an aspect ofsoftware engineering education; the papers were distributed to allparticipants three weeks in advance of the workshop.andP;  Based on the papers,participants were divided into working groups to discuss principles ofsoftware engineering, current software engineering curricula, an &quot;ideal&quot;software engineering curriculum for the immediate future, and what educationshould be advocated for future software engineers.andP;  Comments and suggestionsfrom workshop participants were incorporated into a revised draft curriculumthat was distributed for review in April 1986.andP;  The first published versionappeared as an SEI technical report in April 1987.andM;The SEI held a curriculum design workshop the following year.andP;  This workshopviewed the earlier work as the requirements and specification phases of theproject.andP;  Its goal was to use the revised draft curriculum to design a set ofcore courses that could be implemented at a variety of institutions.andP;  (See&quot;MSE Curriculum Design Workshop.&quot;)andM;Video DisseminationandM;Recently, the SEI has extended its transition efforts by establishing a videodissemination project.andP;  Through this project, the SEI cooperates withcolleges, universities, industry, and government to produce and delivergraduate courses on modern software engineering.andP;  The medium for delivery isvideotape initially, with live satellite broadcasts following asparticipation increases.andP;  The primary audience is software developmentpractitioners, but the courses are also suitable for current computer sciencegraduate students.andM;The courses, which are of high quality consistent with the standards andtraditions of Carnegie Mellon University, are often delivered to receptionsites formed by one or more industry or government organizations inpartnership with a local college or university.andP;  These organizations providemost of the students for the courses and, as the program grows, can helpprovide resources needed by the schools for advanced software engineeringeducation.andP;  The schools provide the faculty and offer academic credit for thecourses.andP;  Our goal is to help the academic institutions becomeself-sufficient.andP;  By working first as tutors, their faculty gain enoughexperience to eventually teach the courses without the SEI tapes.andM;A pilot course, &quot;Formal Methods in Software Engineering,&quot; was offered ateight test sites (five in cooperation with local industry or governmentinstallations) beginning in January 1988.andP;  The course was taught by MarkArdis of the SEI Education Program and offered for credit at Carnegie MellonUniversity.andP;  The format of the pilot course was tutored video, which requiredboth the videotape of the lectures and the active participation of aninstructor (the tutor) at each reception site.andP;  The tapes were produced incandid classroom format, that is, the tapes were recorded during actuallectures to a student group (in this case, Carnegie Mellon students and SEItechnical staff members).andP;  At three of the eight reception sites, the tutorsare now teaching a formal methods course on their own.andM;The SEI offered two courses during the fall semester of 1988.andP;  These courses,which are based on the work of the graduate curriculum project, are part ofthe core curriculum leading to a professional master of software engineeringdegree at cooperating academic institutions.andP;  The SEI is now seeking theparticipation of additional reception sites.andM;Undergraduate EducationandM;In terms of numbers of students affected, the SEI Education Program can makeits greatest impact by influencing undergraduate computer science curricula.andO;It has established an undergraduate software engineering education project toexert that influence in effective ways.andP;  The project has two immediate goals:(1) to increase the awareness of instructors and students about thedifferences between programming and software engineering and (2) to developcurriculum guidelines and support materials to facilitate teaching softwareengineering in undergraduate computer science programs.andP;  In addition, along-term project goal is to monitor the software engineering profession todetermine appropriate times and places to establish an undergraduate softwareengineering degree.andM;To help educators prepare for and teach a senior-level project course, theSEI has published a technical report describing the structure of aone-semester, proejct-based software engineering course.andP;  This course exposesstudents not only to the typical software development activities(specification, design, implementation, testing) but also to those aspects ofsoftware engineering that distinguish it from programming; projectmanagement, budgeting, quality assurance, configuration management, andadherence to standards.andM;Further support for project courses has been published as a package ofsoftware maintenance exercises.andP;  This package includes source code (in Ada)and documentation for a 10,000-line system.andP;  The exercises include examplesof corrective, adaptive, and perfective maintenance, and they can also beused to help teach Ada, configuration management, and code reviews.andM;The SEI is helping educators interested in using Ada in the classroom, manyof whom are considering changing to Ada as the primary language ofinstruction.andP;  The effects of such a change are far-reaching in a curriculum,and few educators have the experience with Ada to predict those effects.andP;  Tohelp identify problems and solutions related to the use of Ada as a firstprogramming language, the Education Program sponsored the SEI Workshop on Adain Freshman Courses in June 1987.andM;The workshop brought together innovative educators and textbook authors, whowere able to identify several ways in which the SEI could contribute to theimprovement of these courses.andP;  The results of that workshop were published inan SEI report.andP;  One side effect of the workshop is that two of the attendees,authors of successful freshman-level Pascal textbooks, are now consideringproducing Ada versions of their books.andP;  Another attendee's university has nowadopted Ada as its introductory programming language.andM;To gain first-hand information on teaching Ada in freshman courses, the SEIis involved in three pilot studies.andP;  The institute has provided hardware andsoftware support to three academic affiliates, West Virginia University, TheWichita State University and Clemson University, who are using Ada in theircourses and reporting their experiences to the SEI.andP;  In addition to promotingthe use of Ada in the three participating schools, these studies will allowthe SEI to share those schools' experiences with many others.andM;Other undergraduate courses can also contribute greatly to a student'sunderstanding of the issues of software engineering.andP;  This is especially trueof beginning courses in programming and data structures, which teach onlyprogramming-in-the-small traditionally.andP;  Through improved educationalmaterials, the project will encourage educators to presentprogramming-in-the-large concepts and thus prepare students for increasedsoftware engineering content throughout the undergraduate computer sciencecurriculum.andM;Academic AffiliatesandM;Academic affiliates play an important role in the SEI Education Program.andO;Academic affiliation provides a means for educational institutions to jointhe SEI in cooperative efforts of mutual interest.andP;  Affiliates mayparticipate in the SEI's education efforts by becoming actively involved inthe development of the graduate curriculum, or by implementing part or all ofthe curriculum.andP;  In addition, affiliates may participate in SEI research,development, or technology transition projects, as well as workshops,conferences, and other activities.andP;  Affiliates receive preferentialconsideration for access to SEI projects, information, and technology;inclusion at limited attendance meetings at the SEI; and selection as testsites for educational and technology transition efforts of the SEI.andM;The affiliation process formally begins with a proposal to the SEI.andP;  Thisproposal includes a brief description of the way in which the institutionintends to participate as an affiliate, a description of their resources tosupport software engineering activities, curriculum vitae for appropriatefaculty members, and designation of an administrative liaison.andP;  The SEIselects institutions to become academic affiliates based on factors such astheir level of commitment to participate in joint projects and thecompatibility of their plans and capabilities with the needs of the SEI.andO;Academic affiliates encourage faculty members with relevant experience toapply for visiting appointments at the SEI and to participate in activities;and they provide, jointly with the SEI, appropriate support for thoseselected.andM;In the summer and fall of 1985, three visiting faculty members helped the SEIdefine and initiate the SEI academic affiliates program.andP;  Since then, over 50educators and experts have been in residence at the SEI to contribute toEducation Program projects.andM;SummaryandM;The SEI educational activities are unique and exciting for a number ofreasons.andP;  They are the first known attempt to facilitate the orderlyevolution of a curriculum in a rapidly developing discipline.andP;  The SEIactively helps place the curriculum into a variety of educational models andpromotes faculty development and the production of teaching materials so thatmore persons are better qualified to teach software engineering.andP;  SEI effortsgain leverage by involving permanent staff with outside experts andeducators.andP;  Expertise and experience are shared with educators fromuniversities, industry, and government; and course materials are delivered inprinted form and on videotape.andM;Through the Education Program, the SEI is taking the lead in increasing thenumber of new software engineers and improving the quality of practitioners.andO;Current and future software engineers are being prepared for the transitionof software engineering from a labor-intensive activity to atechnology-intensive activity.andP;  The SEI Education Program is building theinfrastructure necessary to make software engineering less of an aspirationand more of a profession.andM;In this age, as universities come under increasing public pressure to remedythe ills of a system that seems to pay little attention to high-qualityteaching, textbook writing, course development, or curriculum design, itappears that a national center, such as the one for software engineeringeducation at the SEI, can help foster recognition for quality educators.andO;Many of the activities of the SEI Education Program could be applied to otherscience and engineering disciplines.andP;  The sooner such centers areestablished, the sooner we can work to reestablish the importance ofteaching-related activities in our educational system.andO;</TEXT></DOC>
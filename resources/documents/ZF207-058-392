<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-058-392  </DOCNO><DOCID>07 058 392.andM;</DOCID><JOURNAL>Communications of the ACM  Feb 1989 v32 n2 p265(2)* Full Text COPYRIGHT Assn. for Computing Machinery, Inc. 1989.andM;</JOURNAL><TITLE>Abstracts from other ACM publications. (technical)andM;</TITLE><DESCRIPT/><NOTE>Only Text is presented here; see printed issues for graphics.andO;</NOTE><TEXT>Abstracts from Other ACM PublicationsandM;ACM Computing Surveys September 1988andM;Statistical Profile Estimation in Database Systems Michael V. Mannino,Paicheng Chu, and Thomas Sager A statistical profile summarizes the instancesof a database.andP;  It describes aspects such as the number of tuples, the numberof values, the distribution of values, the correlation between value sets,and the distribution of tuples among secondary storage units.andP;  Estimation ofdatabase profiles is critical in the problems of query optimization, physicaldatabase design, and database performance prediction.andP;  This paper describes amodel of a database of profile, relates this model to estimating the cost ofdatabase operations, and surveys methods of estimating profiles.andP;   Theoperators and objects in the model include build profile, estimate profile,and update profile.andP;  The estimate operator is classified by the relationalalgebra operator (select, project, join), the property to be estimated(cardinality, distribution of values, and other parameters), and theunderlying method (parametric, nonparametric, and ad-hoc).andP;  The accuracy,overhead, and assumptions of methods are discussed in detail.andP;  Relevantresearch in both the database and the statistics disciplines is incorporatedin the detailed discussion.andM;For Correspondence: Michael V. Mannino and Thomas Sager, Department ofManagement Science and Information Systems, University of Texas of Austin,Austin, Texas 78712; Paicheng Chu, Department of Accounting and ManagementInformation Systems, Ohio State University, Columbus, Ohio 43210.andM;Semantic Data Models Joan Peckham and Fred MaryanskiandM;Semantic data models have emerged from a requirement for more expressiveconceptual data models.andP;  Current generation data models lack direct supportfor relationships, data abstraction, inheritance, constraints, unstructuredobjects, and the dynamic properties of an application.andP;  Although the need fordata models with richer semantics is widely recognized, no single approachhas won general acceptance.andP;  This paper describes the generic properties ofsemantic data models and presents a representative selection of models thathave been proposed since the mid-1970s.andP;  In addition to explaining thefeatures of the individual models, guidelines are offered for the compriosnof models.andP;  The paper concludes with a discussion of future directions in thearea of conceptual data modeling.andM;For Correspondence: Department of Computer Science and Engineering,University of Connecticut, Storrs, Connecticut 06268.andM;Transactions on Database Systems December 1988andM;Extended Algebra and Calculs for~1NF Relational Databases Mark A. Roth, HenryF. Korth, and Abraham SilberschatzandM;Relaxing the assumption that relations are always in First-Normal-Form (1NF)necessitates a reexamination of the fundamentals of relational databasetheory.andP;  In this paper we take a first step towards unifying the varioustheories of~1NF databases.andP;  We start by determining an appropriate model tocouch our formalisms in.andP;  We then define an extended relational calculus asthe theoretical basis for our~1NF database query language.andP;  We define  aminimal extended relational algebra and prove its equivalence to the~1NFrelational calculus.andP;  We define a class  of~1NF relations with certain &quot;good&quot;properties and extend our algebra operators to work within this domain.andP;  Weprove certain desirable equivalences that hold only if we restrict ourlanguage to this domain.andM;For Correspondence: Department of Computer Science, University of Texas atAustin, Austin, TX 78712-1188.andM;A Homogeneous Relational Model and Query Languages forandM;Temporal Databases Shashi K. GadiaandM;In a temporal database, time values are associated with data item to indicatetheir periods of validity.andP;  We propose a model for temporal databases withinthe framework of the classical database theory.andP;   Our model is realized as atemporal parameterization of static relations.andP;  We do not impose anyrestrictions upon the schemes of temporal relations.andP;  The classical conceptsof normal forms and dependencies are easily extended to our model, allowing asuitable design for a database scheme.andP;  We present a relational algebra and atuple calculus for  our model and prove their equivalence.andP;  Our data model ishomogeneous in the sense that the periods of validity of all the attributesin a given tuple of a temporal relation are identical.andP;  We discuss how torelax the homogeneity requirement to extend the application domain of ourapproach.andM;For Correspondence: Computer Science Department, Iowa State University, Ames,IA 50011.andM;Update and Retrieval in a Relational Database Through aandM;Universal Schema Interface Volkert Brosda and gottfried VossenandM;A database system that is based on the universal relation (UR) model aims atfreeing its users from specifying access paths on both the physical and onthe logical levels.andP;  All information about the logical structure of thedatabase (i.e., its conceptual scheme) is hidden from users; they need onlyto know the attribute names, which now carry all the semantics of thedatabase.andM;Previous work on UR interfaces has concentrated on the design andimplementation of query languages that serve to facilitate retrieval of datafrom a relational database.andP;  On the other hand, updates are always handled asbefore, which means that users still have to know the logical structure ofthe database in case they want to insert, delete, or modify tuples.andM;In this paper the concepts underlying a UR interface, which is really&quot;universal,&quot; are presented; it is based on the UR model, and it permits notonly queries but also updates: Combinations of attributes that mayparticipate in an update-operation (&quot;objects&quot;) have to be specified duringthe design phase of the database, and are then embodied into the databasescheme by an extended synthesis algorithm.andP;  They form the basis for anyinsertion or deletion operation.andP;  A precise definition of &quot;insertable&quot;tuples, and of the insert- and delete-operation in this new context, isgiven.andP;  It is then shown that these operations modify a database state insuch a way that a representative instance always exists.andP;  This isaccomplished by providing a more detailed version of Sagiv's uniquenesscondition and by exploring the structure of nonunique objects.andP;   Since theunderlying database always has a representative instance, this instance canbe used to define the window function for retrieval.andP;  It is shown that it isstill possible to compute windows by a union of minimal extensions joins.andM;For Correspondence: V. Brosda, Institut fur Informatick, TU Clausthal,Erzstrasse 1, D-3392 Clausthal-Zellerfeld, West Germany; G. Vossen, Lehrstuhlfur angewandte Mathematik, insbesondere Informatik, RWTH Aachen,Templergraben 64, D-5100 Aachen, West Germany.andM;A Simple Bounded Disorder File Organization with GoodandM;Performance David B. LometandM;A bounded-disorder (BD) file is one in which data are ogranized into nodesthat are indexed, e.g., by means of a B-tree.andP;  The data nodes are multibucketnodes that are accessed by hashing.andP;  In this paper we present two importantimprovements to the BD organization as originally described.andP;  First, recordsin a data node that overflow their designated primary bucket are stored in asingle overflow bucket which is itself a bucket of the data node.andP;  Second,when file space needs to be increased, partial expansions are used thatemploy elastic buckets.andP;  Analysis and simulation results demonstrate thatthis variant of the BD organization has utilization, random accessperformance, and file growth performance that can be competitive with goodextendible hashing methods, while supporting high-performance sequentialaccess.andP;  The simplicity of the organization results in simple algorithms forrealizing the organization.andM;For Correspondence: Digital Equipment Corporation, 110 Spit Brook Road,Nashua, NH 03062.andM;Properties and Update Semantics of Consistent Views Georg Gottlob, PaoloPaolini, and Roberto ZicariandM;The problem of translating view updates to database updates is considered.andO;Both databases and views are modeled as data abstractions.andP;  A dataabstraction consists of a set of states and of a set of primitive updateoperators representing state transition functions.andP;  It is shown how complexupdate programs can be built from primitive update operators and how viewupdate programs can be built from primitive update operators and attention ispaid to a class of views that we call &quot;consistent.&quot;andP;  Loosely speaking, aconsistent view is a view with the following property: If the effect of aview update program on a view state is determined, then the effect of thecorresponding database update is unambiguously determined.andP;  Thus, in order toknow how to translate a given view update into a database update, it issufficient to be aware of a functional specification of such a program.andP;  Weshow that consistent views have a number of interesting properties withrespect to the concurrency of (high-level) update transactions.andP;  Moreover weshow that the class of consistent views includes as a subset the class ofviews that translate updates under maintenance of a constant complement.andO;However, we show that there exist consistent views tht do not translate underconstant complement.andP;  The results of Bancilhon and Spyratos are generalizedin order to capture the update semantics of the entire class of consistentviews.andP;  In particular we show that the class of consistent views is obtainedif we relax the requirement of a constant complement by allowing thecomplement to decrease according to a suitable partial order.andM;For Correspondence: G. Gottlob, Institut for Applied Mathematics, C.N.R.,andO;Genoa, Italy and Department of Computer Science, Stanford University,Stanford, CA 94305; P. Paolini, Department of Electronics, Politecnico diMilano, Milan, Italy and A.R.G., Milan, Italy; and R. Zicari, Department ofElectronics, Politecnico di Milano, Milan, Italy and Electrical Engineeringand Computer Science Departments, University of California at Berkeley, CA94720.andM;Transactions on Mathematical Software December 1988andM;ALGORITHM 665andM;MACHAR: A Subroutine to Dynamically Determine MachineandM;Parameters W.J.andP;  CodyandM;Numerical software written in high-level languages often relies onmachine-dependent parameters to improve portability.andP;  MACHAR is an evolvingFORTRAN subroutine for dynamically determining thirteen fundamentalparameters associated with a floating-point arithmetic system.andP;  The versionpresented here operates correctly on a large number of differentfloating-point systems, including those implementing the new IEEEFloating-Point Standard.andM;For Correspondence: W. J. Cody, Mathematics and Computer Science Division,Argonne National Laboratory, Argonne, IL 60439-4844.andM;Solving Systems of Nonlinear Equations Using the Nonzero ValueandM;of the Topological Degree Michael N. VrahatisandM;Two algorithms are described here for the numerical solution of a system ofnonlinear equations F(X) = [theta], where [theta] = (0, 0,..., 0)[epsilon]R.sup.n., and F is a given continuous mapping of a region D inR.sup.n into R.sup.n.andP;  The first algorithm locates at least one root of thesystem within an n-dimensional polyhedron, using the nonzero value of thetopological degree of F at [theta] relative to the polyhedron; the secondalgorithm applies a new generalized bisection mthod in order to compute anapproximate solution of the system.andP;  The size of the original n-dimensionpolyhedron is arbitrary, and the method is globally convergent in a residualsense.andM;These algorithms, in the various function evaluations, only make use of thealgebraic sign of F and do not require computations of the totpologicaldegree.andP;  Morevoer, they can be applied to nondifferetiable  continuousfunctions F and do not involve derivatives of F or approximations of suchderivatives.andM;For Correspondence: Department of Mathematics, White Hall, CornellUniversity, Ithaca, NY 14853.andM;ALGORITHM 666andM;CHABIS:  A Mathematical Software Package for Locating andandM;Evaluating Roots of Systems of Nonlinear Equations Michael N. VrahatisandM;CHABIS is a mathematical software package for the numerical solution of asystem of n nonlinear equations in n variables.andP;  First, CHABIS locates atleast one solution of the system within an n-dimensional polyhedron.andP;  Then,it applies a new generalized method of bisection to this  n-polyhedron inorder to obtain an approximate solution of the system according to apredetermined accuracy.andP;  In this paper we briefly describe the user interfaceto CHABIS and present several details of its implementation, as well as anexample of its usage.andM;For Correspondence: Department of Mathematics, White Hall, CornellUniverstiy, ithaca, NY 14853.andM;An Algorithm for the Multiplication of Symmetric Polynomials John S.andO;GaravelliandM;Although the cycle index polynomial for a permutation group can often beeasily determined, expansion of the figure counting series in a Polyaenumeration presents computational difficulties for object sets with higherdegrees of symmetry and more than modest size.andP;  An algorithm that does notrequire algebraic symbol manipulation is derived for multiplying symmetricpolynomials represented by partitions.andP;  Because the repetitive identificationand collection of common terms are eliminated and storage requirementsreduced, this algorithm is useful in  rapidly expanding the figure countingseries in such Polya enumeration problems as the counting of chemicalisomers.andM;For Correspondence: Biomolecular Analysis Facility, College of Pharmacy (M/C781), University of Illinois at Chicago, Box 6998, Chicago, IL 60680.andM;A Global Optimization Algorithm Using Stochastic DifferentialandM;Equations Filippo Aluffi-Pentini, Valerio Parisi, and Francesco ZirilliandM;SIGMA is a set of FORTRAN subprograms for solving the global optimizationproblem, which implements a method founded on the numerical solution of aCauchy problem for a stochastic differential equation inspired by statisticalmechanics.andM;This paper gives a detailed description of the method as implemented in SIGMAand reports the results obtained by SIGMA attacking, on two differentcomputers, a set of 37 test problems which were proposed elsewhere by thepresent authors to test global optimization software.andM;The main conclusion is that SIGMA performs very well, solving 35 of theproblems, including some very hard ones.andM;Unfortunately, the limited results available to us at present do not appearsufficient to enable a conclusive comparison with other global optimizationmethods.andM;For Correspondence: F. Aluffi-Pentini, Dipartimento di Metodi e ModelliMatematici per le Scienze Applicate, Universita di Roma, &quot;La Sapienza,&quot; ViaA. Scarpa 10, 00161, Roma, Italy; V. Parisi, Dipartimento di Fisica, 2.sup.aUniversita di Roma, &quot;Tor Vergata,&quot; Via Orazio Raimondo, La Romanina, 00173Roma, Italy; F. Zirilli, Dipartimento di Matematica, Universita di Roma, &quot;LaSapienza,&quot; Piazzale Aldo Moro, 2, 00185 Roma, Italy.andM;FORTRAN Codes for Estimating the One-Norm of a Real orandM;Complex Matrix, with Applications to Condition Estimation Nicholas J. HighamandM;FORTRAN 77 codes SONEST and CONEST are presented for estimating the 1-norm(or the [infinity]-norm) of a real or complex matrix, respectively.andP;  Thecodes are of wide applicability in condition estimation since explicit accessto the matrix, A, is not required; instead, matrix-vector products Ax andA.sup.T.x are computed by the calling program via a reverse communicationinterface.andP;  The algorithms are based on a convex optimization method forestimating the 1-norm of a real matrix devised by Hager [Condition estimates.andO;SIAM J. Sci.andP;  Stat.andP;  Comput.andP;  5 (1984), 311-316].andP;  We derive new resultsconcerning the behavior of Hager's method, extend it to complex matrices, andmake several algorithmic modifications in order to improve the reliabilityand efficiency.andM;For Correspondence: Department of Mathematics, University of Manchester,Manchester, M13 9PL, England.andO;</TEXT></DOC>
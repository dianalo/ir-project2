<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> DOE1-78-0409 </DOCNO><TEXT>The design of faster relational data-base query processors to improvethe data-retrieval capability of a data-base was the goal of this research.The emphasis was on evaluating the potential of parallel implementationsto allow use of multiprocessing. First, the theoretical properties ofapplying relational operations to distributed data were considered toprovide an underlying data distribution and parallel-processing environmentmodel. Next, analytical models were constructed to evaluate various implementationsof the select, project, and joint relational operations and the updateoperations of addition, deletion, and modification for a range of datastructures and architectural configurations. To simulate the performanceof the query processor for all cases, the individual operator modelsneeded to be extended for complex queries consisting of several relationaloperations. A solution to modeling multi-step queries was the use ofa general normal form to express a query. This normal-form query treeused combined operations to express relational-algebra equivalent queriesin a standard form. This standard-tree form was then used to constructanalytical models for multi-step queries. These models provide the capabilityto simulate the potential of different forms of parallelism in solvingcomplex queries. The analysis of results of the analytical models presentsa logical design for a multiprocessor query processor. This logical queryprocessor using multiple processors and employing parallelism illustratedthe potential for an improved query processor when the analytical-modelresults of complex queries were compared to a benchmark of some currentdata-base systems.</TEXT></DOC>
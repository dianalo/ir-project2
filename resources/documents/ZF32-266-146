<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> ZF32-266-146 </DOCNO><DOCID>09 473 969</DOCID><JOURNAL>Technologic Computer Letter  June 4 1990 v6 n18 p8(1)* Full Text COPYRIGHT Technologic Partners 1990.andM;</JOURNAL><TITLE>The end of the decade. (supercomputer market)andM;</TITLE><DESCRIPT>Topic:     SupercomputersParallel ProcessingMassive ParallelismMarket AnalysisIndustry AnalysisComputer IndustryOutlookSoftware Design.andM;</DESCRIPT><TEXT>The End of the decadeandM;So where does the market potential lie?andP;  Not surprisingly, we come outsomewhere in between the zealots and the skeptics.andP;  In 1976, the first CRAY-1supercomputer went to Los Alamos National Laboratory to design weapons.andP;  Ithad no operating system and no applications software.andP;  It has taken 14 yearsof &quot;tweeking and tuning&quot; to optimize most of the popular scientific/technicalcodes for vector processing.andP;  Cray Research is now almost viewed as&quot;mainstream.&quot;andP;  There are 245 Cray systems installed, and the company'scatalog of software features hundreds of application packages.andP;  Theperformance gain has apparently been well worth the programming pain.andP;  But ittook time.andP;  It seems reasonable that building a comparable repertoire ofoptimized software for massively parallel machines will take just as long.andO;If that's the case, we probably won't see the broad commercialization ofmassively parallel systems until sometime late in this decade.andM;Software is the pacing factor for the expansion of the massively parallelmarket.andP;  To date, the pace has been slow; despite over twenty years ofresearch, precious few applications that exploit massive parallelism havemoved into commercial applications.andP;  At present, if a customer has anapplication that is well-suited to parallel computing, and if the customer iswilling to take the time to adapt the job to the machine, a parallel approachwill win every time.andP;  Languages and compilers have been developed that easethe task of expressing algorithms that already rely on parallel approaches,but compilers that convert a conventional program into a form suitable formassively parallel computing are nowhere near good enough, and some expertsquestion whether such automation is, in fact, possible.andM;Some early users acknowledge a role for massive parallelism in the future,but question whether these machines will ever be more than modern-day arrayprocessors tuned for a short list of specialized software codes.andP;  (We recallsimilar pessimistic predictions about the future of Seymour Cray's firstvector machines a few decades back.)andO;</TEXT></DOC>
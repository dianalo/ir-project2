<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF107-975-858  </DOCNO><DOCID>07 975 858.andM;</DOCID><JOURNAL>Communications of the ACM  Dec 1989 v32 n12 p1439(17)* Full Text COPYRIGHT Association for Computing Machinery 1989.andM;</JOURNAL><TITLE>Episodic skeletal-plan refinement based on temporal data. (ONCOCINmedical expert system) (technical)</TITLE><AUTHOR>Tu, Samson W.; Kahn, Michael G.; Musen, Mark A.; Ferguson, Jay C.;andO;Shortliffe, Edward H.; Fagan, Lawrence M.andM;</AUTHOR><SUMMARY>ONCOCIN, a medical expert system designed for use by physicianstreating cancer patients, is described.andP;  The system's objectivesare to extend the skeletal-planning technique into an area wherethe duration of actions and history of past events are important,and to develop an interactive system accessible to unskilledusers.andP;  The ONCOCIN knowledge base uses a hierarchical model ofits domain; it models treatment protocols as skeletal plans andincludes some of the heuristics needed to convert t he skeletalplan into an actual plan.andP;  A 'Reasoner' module manages the patientdatabase and for generating therapy recommendations for specificpatients.andP;  Problems with the Reasoner include its lack of atruth-maintenance system or a back-tracking algorithm.andP;  The userinterface also is not fully integrated.andP;  ONCOCIN encourages a newstyle of interaction between humans and computers.andM;</SUMMARY><DESCRIPT>Topic:     Artificial intelligenceExpert SystemsMedical Advice SystemsAlgorithmsKnowledge-Based SystemsDecision Support Systems.andO;Feature:   illustrationchart.andO;Caption:   The components of ONCOCIN's plan for a specific patient. (chart)Temporal network of intervals (chart)The planning algrorithm. (chart)andM;</DESCRIPT><NOTE>Only Text is presented here; see printed issues for graphics.andO;</NOTE><TEXT>Episodic Skeletal-Plan Refinement Based on Temporal DataandM;ONCOCIN is a therapy-advice system designed for use by physicians in thetreatment of cancer patients.andP;  It has two objectives: (1) the extension ofthe skeletal-planning technique to an application area where the history ofpast events and the duration of actions are important, and (2) thedevelopment of an interactive decision-support system acceptable tocomputer-naive users in a busy environment.andP;  Satisfying the requirements ofthese two objectives has led us to make several modifications to thetraditional expert system technology.andP;  These modifications include theintegration of a rule- and frame-based expert system with a temporaldatabase, the use of augmented transition networks to represent proceduralknowledge, and a control structure that allows a parallel run-time interfacethat encourages mixed-initiative interaction between the system and the user.andM;The classical domain-independent planners that descended from STRIPS [8]USUALLY HAVE FOUR COMPONENTS: a description of the state of the world, a goalto achieve, a set of actions that can change the state of the world, andknowledge about the domain or planning strategies.andP;  In programs such as NOAH[23], NONLIN [28], and SIPE [30], a plan is a set of ordered actions to becarried out by an agent, such as a robot arm.andP;  Each action has fixedpreconditions and has known effects on the state of the world.andP;  The plantransforms an initial state into a goal state.andP;  The usual assumptions arethat only the agent affects the state of the world, and that the effects ofthe actions are instantaneous.andP;  A planner searches through the space ofpartial plans until it finds a plan that satisfies the conditions in the goalstate.andP;  Related research has concentrated on ordering the actions to achieveconjunctive goals [3, 23, 28), on developing sophisticated control structures[26], and on incorporating temporal durations in plan actions [1, 29].andM;In many real-world application areas, most assumptions of these traditionalplanners are not applicable.andP;  In domains such as medical therapy planning,there are unobservable underlying processes that determine the observablestate of the world.andP;  Therapy actions change the state of the world byinfluencing incompletely understood underlying processes.andP;  The initial stateof the patient usually is not known with certainty; the goal of therapy(either cure or palliation of disease without excessive toxicity) may not beachievable, and the effects of the actions (that is, of the therapeuticinterventions) are highly uncertain.andP;  Thus, the techniques of single-agentstate-space planning are not applicable to our application area [17].andM;In general, we would like to model explicitly the underlying dynamicprocesses and the uncertainties they encompass.andP;  (1)  Such a model wouldallow us to generate and evaluate plans in terms of the projected effects ofthe interventions.andP;  In certain cases, however, there exist standard plans forclasses of problems, and domain-specific heuristics to modify theprototypical plan actions in response to information gathered during planexecution.andP;  In this setting, a style of categorical planning that usesshallow domain knowledge can be employed.andP;  This style of planning, asimplemented in ONCOCIN, relies on the planner specializing and instantiatinga skeletal plan that specifies procedures and actions that are known to beeffective in similar cases.andP;  This approach deals with uncertainty to theextent that the planner does not compose one complete plan for the entiretime during which the patient is being treated on the standard plan.andP;  (2) The system has a short planning horizon, and it assumes the interleaving ofplanning and execution of plan steps.andP;  At each planning session, the systemfollows the procedures specified in the standard plan, and generates atherapy recommendation that is an extension of the ongoing treatmentsequence.andP;  As the plan is executed, the planner modifies the standard planperiodically in response to the observed reactions to the earlier actions.andO;Since a patient's response to therapy is highly uncertain, later steps in thetherapy depend heavily on the patient's response to earlier steps.andP;  As aresult, the planner must be able to track the therapy process over time andto capture the temporal relationships of events represented in itstime-oriented database.andM;Another characteristic of the skeletal plans in our problem domain is thatthe actions to be taken extend over time.andP;  In ONCOCIN, the granularity of theplanning horizon as defined by the patient's clinic visits is finer than thatof some of the actions.andP;  For example, the administration of a combination ofdrugs may extend over several clinic visits.andP;  Therefore, it is crucial forONCOCIN to model explicitly the durations of the actions it recommends, andto be able to determine when an action is no longer current.andP;  Thus, planningin ONCOCIN also is a process of creating and managing temporal intervals thatpersist from one planning session to another.andM;The current prototype ONCOCIN system has been developed on the XeroxInterlisp D-machine environment.andP;  (3)  It has been field tested inStandford's Oncology Clinic since 1986.andP;  Using the knowledge-acquisition toolthat was developed in parallel to the system, we entered 36 standard skeletalplans for cancer treatment in the knowledge base.andP;  Currently, we areinvestigating the possibility of porting the system to general purposeplatforms for wider dissemination.andM;THE NATURE OF THE APPLICATION AREAandM;AND DESIGN CONSIDERATIONSandM;Our investigation of the planning and user-interface issues grew out of ourexperiences with ONCOCIN's application area.andP;  ONCOCIN assists physicians withmanagement of patients who are receiving standard chemotherapy (4) regimens,or are enrolled in experimental plans for treating cancer with drugs.andO;Clinical oncologists' incomplete understanding of the physiological processesthat govern tumor growth does not allow them to use first principles todetermine the optimal treatment for various forms of cancer.andP;  Instead, theycarry out complex formal experiments called clinical trials to compare thecosts and benefits of alternative therapies.andP;  The procedures for carrying outthe clinical trials are described in detailed protocols that specify theschedule of drug treatment, laboratory tests, X-ray examinations, and otherprocedures.andP;  Each protocol document describes the initial doses and themethods of administration of the drugs, and specifies how the doses should bemodified subsequently.andP;  Once the efficacy of a chemotherapy sequence for aclass of patients is established in such controlled experiments, thatsequence is used as a standard chemotherapy regimen for similar cases.andO;Although a standard chemotherapy regimen is not a formal experiment, it mayinclude multiple chemotherapies, and administering each of these may requirethat extensive treatment-modification procedures be applied during the courseof cancer therapy.andM;A typical protocol is that of the Northern California Oncology Group'ssmall-cell lung cancer clinical trial which compares the efficacy of usingalternating combinations of drugs called VAM (5) and POCC (6) with that ofusing the single combination CAVP.andP;  (7)  Prophylactic radiation therapy alsois given to selected patients on each of the two branches of the experiment(Figure 1).andP;  When physicians treat a patient on this protocol, they have todecide whether chemotherapy or radiation is appropriate at the current stageof therapy for that particular patient.andP;  If the chemotherapy POCC is to begiven, then the drug dose and the method of administration (for example, bymouth or by vein) have to be determined for each of the four drugs in thecombination.andP;  These decisions must be made in the context of the detailedrules in the protocol for attenuating (reducing) drug does based on thepatient's current blood-cell counts and other laboratory-test results, aswell as the response to previous drug treatments.andP;  In addition, the physicianhad to determine when the patient should come back for the next treatment,and must order laboratory tests and X-ray examinations to be performed at orbefore that time.andP;  Again, the protocol specifies guidelines for the physicianto follow.andM;In a major cancer center, more than 50 such protocols may be activesimultaneously.andP;  Many more standard regimens also may be in use.andP;  The numberand complexity of these protocols and regimens require either that thephysician refer frequently to the protocol documents or that another sourceof reminder information be available.andP;  ONCOCIN plays the role of aninteractive assistant, helping busy physicians who are treating patients inaccordance with these complex treatment guidelines.andP;  The system prompts thephysician for data relevant to the current treatment situation, reminds thephysician which tests need to be ordered, and supplies a recommendation basedon a knowledge base made up of protocols and standard chemotherapy regimensas interpreted by our collaborating oncologists.andM;For ONCOCIN to be accepted in the daily routine of a busy medical clinic,several considerations arising from both the application problem and the userenvironment must be addressed in the design and implementation of theplanning system.andM;ONCOCIN models the treatment protocols as skeletal plans with some of theheuristics necessary to convert the skeletal plan to an actual plan for aspecific patient.andP;  The protocol schema (see Figure 1) specifies the skeletalplans for which further refinement is required.andP;  The refinements are encodedin a large body of heuristic medical knowledge that specifies how therapyplans should be modified in light of patient findings that are atypical.andO;Some of the refinement heuristics are specified explicitly in the protocolguidelines; others are captured only as standard medical practices used bythe clinicians.andP;  One challenge in designing this type of planning system isto represent and use the diverse types of knowledge embodied in the standardskeletal plans and in the plan-refinement heuristics.andM;In administering a protocol, the patients' past response to treatment is amajor determinant of current therapy options.andP;  As treatment may extend overseveral months, the physicians have opportunities to observe the patients'responses to earlier treatment steps and to adjust subsequent therapy actionsaccordingly.andP;  The system, therefore, must be able to track the therapyprocess over time and to capture the temporal relationships of eventsrepresented in its temporal database.andM;The user environment in a typical oncology clinic provides us with anotherset of constraints.andP;  For any medical advice system to be accepted byphysicians, it must recognize their primary role in patient care, and mustallow them to control the consultation process and the final therapy plan.andO;It must emulate the clinical tools already familiar to the physician, improvetheir effectiveness, and not place additional constraints on their currentactivities.andP;  Above all, it must be efficient, providing fast and reliablerecommendations to the physician.andM;These domain and user-environmental considerations translate into a set ofdesign goals that must be met by ONCOCIN.andP;  The need to enter a large numberof protocols and regimens in the knowledge base while still producingrecommendations rapidly required that we develop a knowledge-representationframework that allowed efficient acquisition of structurally similarprotocols while facilitating identification of and access to relevantknowledge at run time.andP;  The progress of each patient over time must berecorded in a form such that sophisticated temporal data retrieval can beused to support the required temporal reasoning.andP;  This requirement influencesboth the storage of patient data and the query language used to specify datain ONCOCIN rules.andP;  Furthermore, the need for the user to remain in controlwhile the computer prompts for the data specified in protocols required thatwe develop inference and control methods both to implement the planningalgorithm and to guide data entry while permitting user initiatives.andP;  Ourresponse to these design consideration is described here.andM;OVERVIEW OF THE ONCOCIN SYSTEMandM;The design goals described in the previous section led to a systemarchitecture with several components (Figure 2): (1) a knowledge base inwhich the skeletal plans and refinement heuristics are represented; (2) atime-oriented database called TNET [14] that represents patient data andtherapy plans; and (3) two run-time processes, called the Interviewer and theReasoner, that manage the data-entry and consultation session [12].andM;The separation of the Reasoner and Interviewer processes enhances systemresponsiveness and allows flexibility in the design and modification of theuser interface.andP;  When a user initiates a consultation session with ONCOCON,the Interviewer presents to the user an electronic flowsheet that mimics thatpaper flowsheet used in our oncology clinic.andP;  The flowsheet allows physiciansto review the patient history and to enter current data in an environmentwith which they are already familiar.andP;  Physicians have control over thedata-entry process; they can enter any data on the flowsheet at any timeduring a consultation session [16].andP;  Thus, we avoid the rigidcomputer-directed dialogues that characterized first-generation expertsystems.andM;As the Interviewer accepts patient data, it passes them to the Reasoner,which updates the TNET patient database and constructs the therapyrecommendation.andP;  The Reasoner receives data on the current clinic visit fromthe Interviewer through an asynchronous message-passing protocol.andP;  Thisinformation about the current patient state, together with the history ofpatient facts and past treatment actions from the database, allows theReasoner to tailor the protocol to the particular patient.andP;  ONCOCIN'srecommendation consists of a set of proposed therapy actions, laboratorytests, and an appropriate date for the patient's next visit to the clinic.andO;The Interviewer provides the Reasoner's advice to the physician by displayingit at the appropriate location on the graphical flowsheet.andP;  The physicianthen has the option of asking for simple explanations of the recommendedactions before approving or overriding any of them.andM;In the following pages, we describe in more detail the components of ONCOCINthat underlie these models of planning and of human-machine interaction.andO;First we present the representation of the skeletal plans, then therepresentation of the instantiated partial plan and the history of worldstate.andP;  Finally, we present the planning module that uses the skeletal plansand data about the external world to instantiate the partial plan.andM;REPRESENTATION OF THEandM;SKELETAL PLANSandM;When a patient is treated on a protocol, that protocol defines the structureof plans and provides the guidelines for limiting the possible range of planalterations.andP;  We model an oncology protocol as a skeletal plan consisting ofa hierarchy of actions and their sequencing relationships.andP;  To represent theskeletal plan and the refinement knowledge, the system must represent thehierarchy structure of the plan complonents, the procedural specification ofthe ordering among the plan actions, and the heuristic knowledge that mapsthe patient's response to past therapies to modifications of the standardtreatment actions.andP;  These three components of planning knowledge arepresented by a frame hierarchy [20], by generators that are implemented asaugmented transition networks (ATN) [31], and by rules and tables [5],respectively.andM;Structural ComponentsandM;ONCOCIN's knowledge base is composed of a collection of cancer protocols andaccepted medical heuristics, some of which may be common to all protocols.andO;Because the protocols may contain multiple sequences of chemotherapies orradiation therapies, and each chemotherapy may contain multiple drugs thatare administered in several steps, called subcycles, we model the structuralfeatures of a protocol with frames representing the protocols, radiationtherapies, chemotherapies, subcycles, and drugs.andM;These frames are organized in PART-OF and ISA hierarchies using anobject-oriented language developed in our laboratory and called OZONE [15].andO;The PART-OF hierarchy mirrors the compositional relationships among thestructure elements of a protocol.andP;  A frame representing a specific protocolpoints to frames representing the specific chemotherapies and radiationtherapies contained in that protocol.andP;  Similarly, chemotherapy and subcycleframes point to drug frames.andP;  Figure 3 shows the PART-OF hierarchy of thesmall-cell lung cancer protocol identified by the protocol number &quot;20-83-1.&quot;andM;The ISA hierarchy represents the class-subclass organization of the differentways that a particular kind of plan component can be used (Figure 4).andP;  Forexample, several protocols may use the same chemotherapies or drugs indifferent manners.andP;  These alternative ways of using a specific chemotherapyor drug would be valid specializations of those chemotherapy or drug classes.andO;The representation of classes and their specializations allows us to encodeboth the generic concepts and their variations in the domain.andP;  All frames ofa class share the same attributes, which are defined in the class frame.andP;  Asin other frame systems, specializations of a class may have their ownattribute values, and common attribute values may be inherited from ancestorsalong the ISA links in the frame hierarchies.andM;To facilitate automated construction of the knowledge base and indexing ofprotocol knowledge, we have severely restricted the possible classspecializations in ONCOCIN.andP;  Associated with each class frame is a predefinedkey called the context of the class.andP;  The first-level specializations of theclass are named by the context variable of that class: The protocol class maybe specialized by its protocol-number context (for example, protocol&quot;20-83-1&quot; or protocol &quot;2091&quot;); the drug class may be specialized by thedrug-name context (for example, &quot;vincristine&quot; or &quot;procarbazine&quot;); and so on.andO;Further specializations of the subclasses are restricted to contexts of thoseclasses that contain the subclass in the PART-OF hierarchy of the skeletalplan.andP;  For example, different chemotherapies containing the drug vincristinemay use that drug in different ways.andP;  Thus, the subclass for administeringvincristine in the POCC chemotherapy may be created to distinguish it fromone for administering vincristine in another chemotherapy.andP;  Furthermore,vincristine may be used in different ways in the two subcycles of POCCchemotherapy.andP;  This would require further specialization of the vincristineclass using the &quot;subcycle&quot; context.andP;  Finally, we may want to distinguishvincristine in subcycle A of POCC as used in the protocol 20-83-1 fromvincristine in subcycle A of POCC as used in the protocol 2091.andP;  Eachsubclass of a class thus can be distinguished by the different ways it can beused by the classes containing it (see Figure 4).andM;These ISA specializations based on predefined contexts form discriminationnetworks on which ONCOCIN bases its knowledge-indexing scheme.andP;  All thefactual, heuristic, and procedural knowledge is grouped by the context inwhich it applies.andP;  Given a collection of contexts, the system can retrieveonly the knowledge that is applicable in those contexts.andP;  In a largeknolwedge base with scores of protocols encoded.andP;  This indexing schemeimproves the run-time efficiency of the system.andP;  During a particularconsultation session, the system can retrieve the relevant knowledge withoutsearching through other portions of the knowledge base.andM;Procedural SpecificationsandM;In clinical trials of cancer therapy, the ordering of the plan actions isspecified in the protocol.andP;  ONCOCIN encodes this kind of procedural knowledgein generators that are implemented as augmented transition networks.andM;The possible plan actions--such as giving VAM or POCC chemotherapies--in thesequence are encoded as part of a table of states, and the sequencingrelationships among the actions are represented as transitions between thosestates (Figure 5).andP;  Each entry in the table has a state name and a set oftransitions.andP;  Each transition has a condition part, a next-state slot,possibly a set of associated actions, and a transition type that indicateswhether the traversal through the network should be suspended so that theassociated action can be carried out.andP;  For example, the duration ofadministration of a chemotherapy may be longer than a single clinic visit.andO;The traversal of the network is suspended until the action has beencompleted.andP;  Each time the generator is invoked, the state table for theappropriate protocol is used to determine where that patient is in the courseof treatment.andP;  From each state, the Reasoner follows the first transitionwhose condition evaluates to &quot;true.&quot;andP;  The current state is then set to thenext state.andP;  If there is an action associated with the transition, it iscarried out.andP;  The traversal continues until the Reasoner comes to a statethat has a transition of the type &quot;return.&quot;andP;  At that point, the current stateis returned as the value of the generator state variable.andP;  At the nextinvocation of the generator for the same patient, the Reasoner retrieves thesaved state variable from the database and resumes the traversal of thetransition-state table from the previously saved state.andP;  Thus, the Reasonermaintains a record of the location of the patient in the treatment path.andP;  Onsuccessive invocations of the planner, the patient state is advanced based onthe patient's history and current status.andM;Heuristic KnowledgeandM;Clancey [4] noted that plan selection in skeletal planning is a form ofheuristic-classification problem solving.andP;  In heuristic classification, dataand their abstractions are heuristically matched to a set of preenumeratedsolution elements.andP;  In ONCOCIN, the protocols allow a set of variations onthe standard therapy actions to be used.andP;  For example, a protocol may specifythat a drug dose can be attenuated to 75 or 50 percent of the standard dosefor that drug.andP;  These therapy actions and their variations are the solutionelements in ONCOCIN's planning process.andP;  During each consultation session,the planner requests data on the state of the patient, and uses theguidelines in the protocols to match the patient state to the appropriatetherapy actions.andP;  These guidelines are the heuristic knowledge that drivesONCOCIN's plan-selection and plan-refinement processes.andP;  They are encoded asMYCIN-style production rules indexed by the contexts in which they apply andthe parameters whose values they conclude.andM;Decisions about recommended therapy often depend on the past status of thepatient as well as on current data.andP;  ONCOCIN's rules are written in alanguage that includes, (in addition to the usual arithmetic, set, andlogical expressions), syntax for referring to past clinic events and therapyactions.andP;  The rule language takes advantage of the hierarchically organizedpast-therapy events represented in the patient database to reference thepatient data.andP;  The patient data are referenced in the context of the therapyevents (for example, radiotherapy or a specific chemotherapy) that applied atthe time the data were entered.andP;  For example, a knowledge-base developer canrefer to &quot;the first value of the white-blood-cell count in the previouschemotherapy.&quot;andP;  Evaluating expressions such as this during the execution ofONCOCIN rules causes database queries to be made.andP;  These queries determinethe patient's status in relation to the therapeutic actions that have takenplace in the past.andM;Figure 6 is an example of one such ONCOCIN rule.andP;  The rule queries thedatabase about a toxicity event that might have occurred during the currentprotocol treatment.andM;For the purpose of matching the way some domain knowledge is conceptualizedin traditional oncology protocol documents, some of the rules in ONCOCIN'sknowledge base have a tabular form in their action part.andP;  This format allowsus to represent compactly actions that are predicated on the combinations oftwo observations.andP;  Figure 7 shows one such table.andM;REPRESENTATION OF THE PARTIAL PLANandM;AND OF THE PATIENT DATABASEandM;In ONCOCIN's application area, the protocols require that the patient betreated in multiple phases, so the planning process needs to be repeated ineach phase.andP;  Planning on a given visit depends on the previous treatmentactions as well as on the previous and current patient conditions.andP;  Thesystem needs to maintain a temporal database describing both the time courseof the patient states and the plan actions that either have been executed orare still in effect.andP;  Such a database allows the therapy planner to generatea plan of actions based on the patient's responses to past treatment.andP;  (See[14] for additional discussion of ONCOCIN's temporal database.)andM;The representation of the plans follows from our view of plan actions asentities that persist over time, and from the need to monitor the progress ofplan execution.andP;  Each instance of the plan action that is applied to aparticular patient is represented as a temporal interval that has a startingpoint and a stopping point.andP;  Because the actions are applied and terminatedat definite times by the physicians, the starting and stopping times of theactions are known with certainty.andP;  Each interaction with ONCOCIN istime-stamped with a &quot;current time.&quot;andP;  As successive phases of planning andplan execution are carried out, the &quot;current time&quot; moves forward.andP;  Actionswhose scheduled stopping times are later than the &quot;current time&quot; arerepresented by open intervals.andP;  An open interval has a &quot;start time&quot;attribute, but no stop time&quot; attribute.andP;  Actions that have terminated before&quot;current time&quot; are represented by closed intervals that have both &quot;starttime&quot; and &quot;stop time&quot; attributes.andP;  Thus, the planning system maintains thenotions of &quot;now&quot; versus &quot;the past&quot; in its plan actions.andM;In addition to &quot;start time&quot; and &quot;stop time,&quot; an interval has other attributesthat specify the details of the action that the interval represents.andO;Intervals are instantiations of the static knowledge-base classes.andP;  Forexample, the administration of the drug vincristine to a patient on aparticular visit is an instance of the vincristine drug-administrationspecialization of the &quot;drug&quot; class.andP;  What is true of that specialization isalso true of the instance.andP;  Other attribute values need to be determineddynamically.andP;  For example, there may be a cycle number associated with achemotherapy action, or a drug dose with the action of administering a drug.andO;These attributes cannot be fixed in the static knowledge base, and must beconcluded from the rules during the planning sessions.andM;As long as the interval representing an action is &quot;open,&quot; the attributevalues of the interval remain &quot;current,&quot; and do not need to be recomputed.andO;As the Reasoner creates plans during successive planning sessions, itdetermines which actions have ended and which have been started.andP;  Determiningthat an action has terminated, and thus closing the interval associated withit, has the effect of marking a collection of assertions about their intervalas no longer true in the current state.andP;  Thus, determining the attributes ofopen intervals, and closing intervals that have been completed, are ONCOCIN'sequivalent of STRIPS' use of add and delete lists.andM;The result of an ONCOCIN planning session is a hierarchy of actions, theattributes of each action having been determined in the planning process(Figure 8).andM;The representation of patient states is dictated by the fact that, inoutpatient chemotherapy treatment, the data collection and decision pointsoccur when the patient comes to the clinic on a visit.andP;  The basic unit oftime therefore is a descrete patient visit indexed by a calendar date.andP;  Foreach patient, ONCOCIN's database contains a patient node that holds staticpatient data, as well as a time line of discrete visits that store thetime-varying data.andP;  The static patient node and the sequence of visits aremodeled as time intervals similar to the plan-action intervals.andP;  The staticPATIENT interval starts when the patient data are first recorded in thesystem, and remains open as long as there is the possibility of more databeing entered for the patient.andP;  The VISIT nodes are modeled as zero-durationintervals, the start and stop times of which are the same.andP;  The patient dataentered on that visit are stored as attributes of the visit.andP;  Because eachvisit is indexed by a calendar date, all the time-varying data are timestamped.andP;  Thus, the same attribute may have values differentiated by the timeat which each of those values was valid.andM;The ONCOCIN database uniformly represents patient information, visitobservations, and clinically significant therapeutic actions as temporalintervals that have definite starting and stopping times.andP;  These intervalsform a temporal network that models the history of the patient states.andP;  Asintervals are created by the Reasoner during the successive stages ofprotocol planning, they are put into the temporal network, and their orderingand subinterval relations are precomputed and stored in links among theintervals.andP;  Figure 9 shows an example of an ONCOCIN patient database.andM;This temporal network of ordered intervals forms the basis for thetime-oriented queries of the rule language.andP;  Because data are stored inintervals indexed by dates, and the intervals are organized into a networkwith links storing the ordering and subinterval relationships, the databasecan respond to a query for data relative to a definite event by following theprecomputed links.andP;  For example, in response to a query requesting the doseof the drug methotrexate given to patient 76-64-41 in the most recent VAMchemotherapy (see Figure 9), the temporal network can quickly find the lastVAM node (associated with the February 27 visit), and can follow thesubinterval links to retrieve the dose stored in the last methotrexate node.andM;IMPLEMENTATION OF ONCOCIN'S REASONERandM;ONCOCIN's Reasoner is responsible for managing the patient database and forgenerating the therapy recommendation and related advice for a patient'svisit.andP;  It uses the representation of the protocols, the past data stored inthe patient database, and the current data entered through the Interviewer toinstantiate the appropriate components of the therapy-plan schema for thecurrent clinic visit.andP;  Instantiating a plan component consists of eitherrecognizing that a current action should be continued, or creating aninterval in the temporal network associated with the action, and determiningthe attributes of that action.andP;  For example, on the March 20 visit of patient76-64-41 in Figure 8, the Reasoner established that the patient shouldcontinue to be treated on the 20-83-1 protocol.andP;  It initiated a POCCchemotherapy action and the four drug-administration actions that wereassociated with the associated with the beginning of the POCC action.andO;Finally, it determined the attributes of each therapy action, such as the&quot;dose&quot; attribute of the drug administration, before presenting the therapyplan to the user.andP;  To accomplish its planning task, the Reasoner may ask theuser for data by sending data-request messages to the Interviewer.andP;  The user,on the other hand, may enter data in any order, indicate explicitly that aparticular datum is not available, or choose to ignore the Reasoner's requestfor data.andP;  (8)andM;It is clear from this discussion and from Figure 2 that the design of theReasoner should (1) embody the problem-solving method of the system; (2) usethe heterogeneous knowledge representations in the knowledge base, accessingonly those portions of the knowledge relevant to the current planningsession; (3) contain a control structure that allows data entry throughasynchronous message passing with the Interviewer; and (4) have an interfaceto the temporal database that the Reasoner is managing.andP;  To accomplish thesedesign goals, we developed a Reasoner consisting of a planner that encodesthe skeletal-planning algorithm; an inference module that executes rules,tables, and generators by backward and forward chaining; an I/O module thatserves as an interface between the Reasoner and the Interviewer; and adatabase handler that provides the routines that other modules call to createthe TNET intervals and to assert conclusions into the database.andP;  The plannerinvokes the inference module to carry out goal-oriented reasoning.andP;  Theplanner, I/O module, and database handler activate the inference module fordata-driven reasoning (Figure 10).andM;This decomposition of the Reasoner separates domain- and task-independentinference mechanisms from the task-level planning module.andP;  The inferencemodule thus provides a reasoning service that the planner module can use toaccomplish its goals.andP;  The planner accesses the knowledge base that containsthe skeletal schema for a plan, and uses the inference module for the dualpurposes of determining which actions should be instantiated according to theschema, and of finding values for the attributes of the instantiated actions.andM;Planning ModuleandM;The planning module is the component of the Reasoner that encodes ONCOCIN'shiearchical skeletal-refinement instantiation algorithm.andP;  During theconsultation session, it invokes the inference module to determine which ofthe existing open intervals associated with therapy actions are to continue,and which new intervals need to be started.andP;  It calls the database handler toinstantiate the components of plans that need to be carried out at thatpoint.andP;  It then sets as goals for the inference module the attributes of theplan actions that need to be found.andP;  In establishing the components of theplan hierarchy, the planner finds the contexts of the frame hierarchy thatare relevant for the current planning session.andM;The planning algorithm is summarized in Figure 11.andP;  When the planner isstarted in a consultation session, it first updates the temporal networkusing rules associated with each class to determine whether any of thecurrently open intervals need to be closed.andP;  For a chemotherapy, for example,if the actions of administering the drugs associated with the chemotherapyhave been completed, and if a specified number of days has passed since thebeginning of the chemotheraphy action, the interval associated with thechemotherapy action is closed.andM;The planner then starts from the most general therapy-component class andrecursively determines the components of the static action hierarchy thatshould be part of the plan for the current session.andP;  The task of determiningeach of the needed plan actions is given to the inference module.andP;  For someclasses--such as those for chemotherapy and radiation therapy--generatorsencoding the sequencing information are used to determine the next action totake.andP;  For others--such as those for the drugs to give on a particularvisit--there are rules to determine the actions to instantiate.andP;  Unless atherapy action is continuing from the past, an interval in the temporalnetwork is created for each of the current actions.andP;  The inference module isagain invoked to determine the values of the attributes of each instantiatedaction.andP;  The attributes that need to have values--such as the drug dose orthe cumulative dose for a drug administration--are specified in the staticdescriptions of the action in the frame hierarchy.andP;  Because the actions toinstantiate and the attribute values of each instantiated action areuniformly represented as parameter values, a single inference module is usedfor making both kinds of decisions.andM;In the hierarchical plan-instantiation process, a decision made at a higherlevel in the hierarchy may need to be retracted after its components arerefined.andP;  In ONCOCIN's domain, this typically occurs when the system decidesthat no adequate dose of a drug can be given because the patient is alreadyexperiencing toxic reactions.andP;  This decision to withhold chemotherapytreatment comes after the system has explored the details of thatchemotherapy.andP;  Thus, the presumption of administering the chemotherapy needsto be retracted.andP;  When such an override occurs, the planning module backs upto the top of the plan hierarchy and starts replanning, using the newlyconcluded information as the starting point.andM;As the planner instantiates the components of the current plan, itestablishes the contexts in the knowledge base that are applicable to thecurrent session.andP;  The rules, tables, and generators indexed under thesecontexts become available for concluding values of goal parameters that maystill be pending.andP;  When all the contexts--and hence all the reasoning methodsapplicable to a goal parameter--have been explored, the planner waits formore data from the user.andP;  Once the user signals that data entry is complete,the planner marks as unavailable those goal parameters that depend on onlyuser-supplied data.andP;  It then activates the inference module to forward chainon this change in the state of the parameter value.andP;  The inference modulefires those rules whose precondition is that a parameter value is not givenby the user.andP;  Other rules that depend on the availability of the parametervalue are rejected.andM;When all the goal parameters have been found or have been declaredunavailable, the planner signals the Interviewer to display the therapyrecommendation.andP;  The physician can either accept the recommendation or makemodifications to it.andP;  Any such modifications are saved to the database inlieu of ONCOCIN's own recommendations.andP;  Thus, the database reflects what wasactually done for the patient, regardless of ONCOCIN's recommendation.andM;Inference ModuleandM;In addition to providing the usual forward- and backward-chaining mechanisms,the inference module is designed to make use of the knowledge encoded inheterogeneous representations of rules, table, frames, and generators, and toaccommodate the asynchronous messages that come from the Interviewer.andP;  Themessages may be data messages indicating the current values of clinicalfindings, or status messages, such as a message indicating the completion ofdata entry.andP;  To manage these varied knowledge representations, the inferencemodule imposes certain formats on its inputs and output.andP;  As describedhere,it finds the values of parameters by executing reasoning methods.andM;Parameters: A parameter may be an attribute of a therapy action (includingthe action's name) or an attribute of the patient.andP;  Thus, the dose to give ofa drug-administration action and the white-blood-cell count of a patient areboth parameters in ONCOCIN.andP;  A parameter may have a value.andP;  To distinguishdifferent instances of parameter values, we associate a parameter value witha reasoning context and with a time context.andM;The reasoning context of a parameter value is simply the object with whichthat value is associated.andP;  For the attribute values of the therapy-planactions, the reasoning contexts are precisely the instances of the predefinedframe-hierarchy contexts.andP;  For example, the parameter value &quot;drug dose is 2(mg)&quot; is an attribute of a vincristine drug-administration action in Figure8.andP;  Thus the vincristine drug administration, as part of subcycle A of POCCchemotherapy in the protocol 20-83-1, is the reasoning context of thedose-parameter value.andM;The time context of a parameter value is the time span during which the valueis valid.andP;  In terms of the temporal network, that is the time span betweenthe start time and the stop time of the interval of which the parameter is anattribute.andP;  Thus, for the dose parameter of the vincristine drugadministration in Figure 8, the time context is the interval [20-Mar-86,NIL].andP;  (9)  That is, relative to the &quot;current time&quot; of the database,20-Mar-86, the parameter value of 2 mg is still valid.andP;  The time context ofthe dose value distinguishes that value from the vincristine doses givenearlier.andP;  Specifying the reasoning context and time context of a parameteruniquely determines that parameter's value, if one is known.andM;A crucial assumption of the inference module is that planning is beingcarried out for the current time context.andP;  That is, the inference module isconcluding parameter values for intervals that are still &quot;open.&quot;andP;  Thereasoning contexts of all parameter values in the current time context arecalled the reasoning contexts of the inference module.andP;  The reasoningcontexts of the inference module can change during the consultation sessionas the planner elaborates the components of the current plan.andP;  For example,when the planner instantiated the POCC chemotherapy action in Figure 8, thereasoning contexts of the inference module were the intervals open at thattime: the 20-83-1 protocol interval and the POCC chemotherapy interval.andO;After the vincristine action was instantiated, the subcycle and drugintervals were added to the current reasoning contexts.andM;During the planning process, a parameter may be in one of several states.andP;  Inaddition to maintaining the state of &quot;having a value&quot; or &quot;not having avalue,&quot; the Reasoner keeps other parameter-state information.andP;  For parametersthat have values usually supplied by the user, the user may indicate that theparameter value requested by the Reasoner is not available.andP;  That action putsthe parameter into a &quot;value not given&quot; state, and signals the Reasoner toattempt to use default rules to conclude values for the parameters.andP;  All thereasoning methods to conclude the value of a parameter may fail.andP;  In thatcase, the parameter is marked as &quot;not available.&quot;andP;  For those parameters thathave values, the values are not used in forward chaining until they are&quot;finalized&quot;--that is, until all the available reasoning methods to concludethe parameter value have been tried.andP;  Thus, a drug dose is not used tocompute the current cumulative dose until the current dose has been roundedto the nearest pill size.andM;Reasoning Methods: A reasoning method (10) may be a directive to ask the userfor data, or it may be one of the rules, generators, and tables present inthe knowledge base.andP;  (11)  Each reasoning method concludes the value of aparameter, and is indexed by that parameter in the knowledge base.andP;  Thereasoning method also is indexed by the context in which the reasoning methodapplies.andP;  For example, a rule to conclude a drug dose may apply in thecontext &quot;drug vincristine in POCC chemotherapy in protocol 20-83-1.&quot;andP;  Thus,to access a reasoning method, the inference module must specify the contextsin which the reasoning method applies and the parameter whose value thereasoning method concludes.andP;  The reasoning methods also may have side-effectactions in addition to the effect of returning a parameter value.andP;  Forexample, a rule that concludes that the chemotherapy should be delayed alsomay send a display message to the user indicating that consultation with theprincipal investigator of the protocol is appropriate.andP;  A generator returns astate variable as a value, but the transition to that state variable may beaugmented with actions that, for example, conclude that a specificchemotherapy should be given.andM;The inference module manipulates the reasoning methods on two levels.andP;  On onelevel, the reasoning methods are rules, tables, generators, and instructionsto request the Interviewer for values of parameters.andP;  As such, thesereasoning methods require interpreters designed specifically to manipulatetheir internal data structures.andP;  On another level, these reasoning methodsrepresent reasoning tasks that ultimately succeed or fail in returning valuesfor parameters.andP;  New reasoning-method types that follow the conventions ofthe inference module can be added to the knowledge base easily.andP;  Once aninterpreter for the new reasoning method is written, the inference module canmanipulate it like any other reasoning method.andM;Operation of the Inference Module: The inference module can be invoked in oneof three ways (Figure 12).andP;  First, the planner can invoke it to find valuesfor goal parameters (by calling the &quot;FIND VALUE&quot; function).andP;  Second,theplanner can request that new reasoning methods be used in concludingexisting goal parameters (by calling the &quot;EXECUTE METHOD&quot; function).andP;  Third,the inference module can be activated when any one of the planner, thedatabase handler, and the I/O module determines that there are changes to thestate of the parameters (by calling the &quot;ASSERT VALUE&quot; function).andM;The planner starts the reasoning process by invoking the inference module todetermine components of the treatment hierarchy and their attributes.andP;  Inthat process, the planner determines the reasoning contexts of the inferencemodule.andP;  As the planner instantiates the component actions that are part ofthe current plan, the inference module uses the contexts associated withthese component actions to index into the reasoning methods that are relevantfor the current planning session.andP;  For example, when the chemotherapy POCC ischosen as the current chemotherapy to be given in the treatment sequence ofprotocol 20-83-1, the reasoning methods indexed by the &quot;20-83-1, POCC&quot;context become available in the current planning session.andP;  This indexingmechanism allows the inference module to access only those reasoning methodsthat are relevant to the current session, instead of having to try all thereasoning methods in the knowledge base.andM;When the planning module defines as a goal the determination of the value forsome parameter, it directs the inference module to collect the reasoningmethods that can conclude a value for this goal parameter in the currentreasoning contexts.andP;  The inference module then invokes the appropriateinterpreters to execute these reasoning methods.andM;A reasoning method usually has some conditional part associated with it.andO;Rules and tables have premises, and a generator has the transitionsassociated with the states.andP;  Executing a reasoning method depends on findingthe values of parameters in its conditional part.andP;  If necessary, theinterpreter of the reasoning method sets these parameters as subgoals andthen backward chains to find the values of these parameters.andP;  At any givenpoint during the consultation session, the system may be unable to determinethe values of such parameters.andP;  Either the values depend directly orindirectly on data that the user has not supplied, or there is no reasoningmethod to determine these parameter values in the current reasoning contexts.andO;In either case, the parameters and the reasoning methods that depend on theparameters' values to continue executing become a suspended inference task.andO;Such tasks are placed in a list indexed by the parameter whose value ismissing.andP;  The inference module then switches to another goal for which itdoes have reasoning methods to execute.andM;As the inference module executes, it concludes values that may allow theplanner to instantiate new plan actions.andP;  Establishing new plan actionscreates additional reasoning contexts for the inference module, and thereasoning methods indexed under the reasoning contexts become available foruse by the inference module.andP;  Some of the reasoning methods may be applicableto the existing goal parameters in the list of suspended inference tasks.andP;  Inthat case, the suspended tasks are reactivated and the reasoning methods areused to conclude values for the goal parameters.andM;When all the goals set up by the planning module either are satisfied or arewaiting for additional data, the inference module halts and waits foradditional user-supplied data.andP;  Such halts are minimized, and theconsultation time decreased, if the user enters requested data as soon as aquestion mark appears in the pertinent field on the graphical flowsheet.andO;Data entry by the physician may cause new conclusions to be asserted into thedatabase.andP;  The new conclusions in turn may activate suspended inference tasksthat have been awaiting those newly concluded parameter values.andM;When the useri ndicates that he has supplied all the data for the session,the Reasoner checks to see whether the static knowledge base has any rule forconcluding the data that are still missing.andP;  If it does not, it marks themissing data as not available, and the reasoning methods that depend on themissing data are not used.andP;  In either case, as the state of the parameterchanges, the inference module forward chains, using the new information aboutthe parameter state.andP;  The process continues until all the reasoning methodsfor concluding the value of a parameter have been tried or have beendiscarded because of missing data.andM;Database HandlerandM;The database handler is a set of routines through which modifications to thetemporal network are made.andP;  It asserts data and conclusions into thedatabase, and it is called by the planning module to open and close intervalsin the temporal network.andM;As the gatekeeper of the database, the database handler is responsible fordetecting and signaling inconsistencies in the database.andP;  When called toassert a parameter value into the database, the database handler checks tosee whether there is already a value for the parameter in the same time andreasoning context.andP;  If there is no such value, it asserts the new value intothe patient database.andP;  If there is already a value that is different from thenew value, then the database handler saves the new value and sets an&quot;override&quot; flag.andP;  When the planner finds that the &quot;override&quot; flag is set, itenters its retraction and replanning mode, as described earlier.andM;The database handler plays an active role in the inference process.andP;  After aparameter value is asserted into the database, if there is a reasoning methodon the list of suspended reasoning tasks that needs this parameter valuebefore it can be executed, the inference module is activated to forward chainon the new parameter value.andM;I/O ModuleandM;The separation of the reasoning and interface aspects of ONCOCIN into twoparallel processes allows us to have a simple I/O module for the Reasoner.andO;All the screen-management tasks are delegated to the Interviewer.andP;  The twoprocesses communicate through asynchronous message passing.andP;  The I/O modulesends messages to the Interviewer at the request of the planning andinference modules, and it dispatches the messages that arrive from theInterviewer.andP;  During the planning process, the Reasoner may request parametervalues from the user or may display textual comments to the user.andP;  TheInterviewer messages include those that supply parameter values and thosethat indicate status information, such as &quot;abort the session&quot; or &quot;data entryhas been completed.&quot;andP;  These Interviewer messages may change the state of theparameter values and thus activate the forward chaining mechanism, or theymay cause the planner to terminate the consultation.andM;DISCUSSIONandM;This article has presented an approach to planning in a domain where the taskof the planner is to monitor the progress of a dynamic system, and to suggestactions to take based on a preformed skeletal plan.andP;  We have described indetail the representation of the skeletal plans and the associated refinementheuristics; the representation of time-ordered data in the contexts of theactions taken in the past; and the planning andinference mechanisms that makeuse of both the skeletal plans and the historical sequence of world states toinstantiate a detailed plan for a limited time horizon.andM;Many of the planning issues with which we had to grapple in the design ofONCOCIN--such as how to use preformed skeletal plans that are modified ininterleaved planning and execution, how to represent procedural knowledge,how to model actions that have durations, and how to maintain time-ordereddata--have been independently investigated in the planning literature [1, 6,9-11, 29].andP;  In this section, we first put ONCOCIN in perspective by comparingand contrasting our system with other systems that deal with similar issues.andO;We then consider the possibility of generalizing ONCOCIN's approach to otherdomains.andP;  Finally, we discuss the limitations of our design choices.andM;Comparison with Other PlannersandM;ONCOCIN's planning, performed by instantiating and modifying standard plans,is a variant of the skeletal-planning method developed in Friedland's MOLGEN[9].andP;  As in MOLGEN, the ordering and interaction of the plan actions, soimportant in conjunctive goal planning, is assumed to be given in theskeletal plan.andP;  In the absence of well-defined and achievable goals, andgiven that the effects of the plan actions are highly uncertain, theproblemof action ordering is complex and possibly is underspecified.andP;  Instead ofreasoning about the necessary ordering of actions, the system assumes thatthat aspect of planning has been done by the domain specialists who designedthe standard plans.andP;  ONCOCIN, like MOLGEN, plans by selecting a skeletal planand then instantiating and refining the actions.andM;There are significant differences, however, between ONCOCIN and MOLGEN.andO;First, ONCOCIN emphasizes the successive instantiation of a skeletal planover time, rather than the creation of a plan that satisfies a goal.andP;  Thus,the current version of ONCOCIN does not have the goal-matching phase ofMOLGEN's skeletal-plan selection.andP;  (12)  Also, MOLGEN's refinement hierarchyis one of increasingly specialized laboratory operators.andP;  Heuristic rules areused to select the one instance of a class of laboratory techniques thatimplements a plan step.andP;  The ONCOCIN hierarchy consists of therapeuticcomponents that can be related in time through sequencing, repetition, orconcurrency.andP;  This procedural information may be complex, and may depend onthe patient's reactions to previous plan actions.andM;This style of incremental planning by instantiating procedural skeletal plansbears a strong resemblance to the Procedural Reasoning Systems (PRS) [10,11].andP;  Both ONCOCIN and PRS embody the insights that execution of preformedplans is an important way to accomplish tasks in the real world, and that, ina dynamic environment, it is necessary to react to information that becomesavailable after a partial plan is executed.andP;  Both systems model proceduralknowledge as discrete state transitions that specify the current andsubsequent behaviors of the systems, and both systems modify their plans forthe immediate future after executing part of the plan and then gatheringadditional information.andM;PRS was designed as the reasoning and planning component of an autonomousrobot.andP;  It explicitly allows for nondeterministic procedures, failure inexecuting an action, and introspective reasoning about its own goals andactions.andP;  ONCOCIN, on the other hand, is designed to generate therapy advice,where it is important for the system to be faithful to the prescriptive anddeterministic procedures embodied in the skeletal plans, and for the systemto defer to the judgment of the user.andP;  Thus, the system generates arecommended plan, but it carries out no action to affect the external world.andO;Instead, it assumes that whatever actions the user records in its databasecan be, and have been, carried out.andM;One important difference between ONCOCIN and PRS is that the state of theworld in ONCOCIN's task domain is the patient's condition, which isdetermined by underlying, unobervable physiological processes.andP;  Therelationship between past actions and the history of a patient's conditiongives information about the underlying processes, and thus can influencedecisions about current actions.andP;  Therefore, it is not sufficient for thesystem to consider only its current beliefs and current observations, as PRSdoes.andP;  Instead, ONCOCIN maintains a temporal database in which the history ofthe patient condition and therapy actions are stored.andP;  The plan refinementheuristics specifically look for relationships among past events to decideonthe current action.andP;  In each planning session, the database is extended viainstantiation and refinement of a portion of the skeletal plan that isapplicable in the current state.andM;This emphasis on episodic monitoring of the progress in carrying out askeletal plan differs from systems that also model the temporal durations ofplan actions.andP;  In both Allen's TIMELOGIC [1] and Vere's DEVISER [29], forexample, the temporal durations of the actions place additional constraintson the planning process, and a temporal reasoner uses these constraints tofacilitate the ordering of plan actions.andP;  In ONCOCIN, the ordering of actionsis specified in the skeletal plan, and the system does not have to generatean ordering from the preconditions, effects, and durations of the actions.andO;Instead, the system has to recognize the appropriate action for the currentplanning session in the protocol.andP;  For that purpose, the system needs tomaintain the notion of &quot;now&quot; versus &quot;the past&quot; in its plan actions, and toreplan based on the additional information gathered, unlike the other systemsthat do not monitor the execution of the plans they create.andM;The temporal database implemented in ONCOCIN is designed to maintainassertions whose validities change over time.andP;  We are primarily interested inrecording actions that are initiated and terminated at known times, and inmaking queries that use these actions as selection contexts.andP;  Thefunctionalities that we developed for using time-ordered andcontext-dependent data are analogous to the functionalities of traditionaldatabases.andP;  This approach is in sharp contrast to the work described in Dean[6] on maintaining time-ordered assertions.andP;  His technique, called time-mapmanagement (TMM), extends predicate-calculus databases to handle temporalinformation that is incomplete, metric, and defeasible.andP;  Assertions in thedatabase are represented as time tokens that have intervals associated withthem.andP;  Constraints on the occurrences of the time tokens are represented asfuzzy intervals.andP;  The time-map manager maintains the consistency anddependencies among the assertions by using a data-dependency network.andP;  Itclips the persistence of assertions when there are apparent contradictionsthat can be resolved by imposing additional constraints on the duration ofthe intervals associated with the assertions.andP;  Unresolvable contraditions arereported to the application program using the time map.andM;On the other hand, the temporal database in ONCOCIN has little deductivecapability.andP;  Its capability to close existing intervals automatically when anew interval of the same type has been asserted is analogous to TMM'sclipping operation.andP;  Except for this built-in operation, the state of thedatabase is controlled entirely by the Reasoner.andP;  For ONCOCIN, the existenceof a hierarchically structured skeletal plan simplifies the task oftemporal-interval management.andP;  Whereas other systems need to propagaletemporal constraints explicitly among the proposed plan actions, in ONCOCINthe plan actions are already structured into PART-OF relationships.andP;  Theserelationships of the plan-action hierarchy define the subintervalrelationships.andP;  The static structural hierarchy of plan actions thuscorresponds to a hierarchy of temporal intervals.andP;  If the system knows thatan action is no longer current, it can assume that all that action'scomponent actions also occurred in the past.andM;Generality of the SystemandM;The design of the ONCOCIN system addresses the requirements of cancer-therapyprotocols.andP;  However, ONCOCIN's representation and reasoning techniques arenot limited to that particular domain.andP;  The ONCOCIN approach can be appliedto any application area that has the following characteristics:andM;1.andP;  A skeletal plan exists that can be applied in a given case.andM;2.andP;  Heuristic knowledge can be used to specialize the skeletal-plan actionson case-specific basis.andM;3.andP;  Multiple planning sessions occur in the course of a skeletal plan'sexecution.andM;4.andP;  The selection and ordering of theplan actions are specified in theskeletal plan.andM;5.andP;  Instances of plan actions may persist over time.andM;The oncology protocols have an immediate generalization to other clinicaltrials conducted in the other specialties of medicine that test theefficacies of alternative treatments.andP;  Although the domain knowledge invarious clinical trials differs, the process of instantiating plans fromskeletal plans is similar.andP;  With minimal changes, ONCOCIN has already beenadapted to provide advice to physicians monitoring patients in a clinicaltrial of treatment for hypertension [21].andM;The applicability of ONCOCIN's plan-instantiation technique depends on abalance between uncertainty and stability in the effects of the planoperators.andP;  The uncertainty in the consequences of the operators makes itdifficult for the system to project into the future, but the ranges ofvariation are sufficiently stable that rules can be written for adaptingplans to the observed consequences of previous actions.andP;  In domains whereeffects of operators are more certain, the skeletal plans that ONCOCIN takesas given are subject to planning as well.andP;  On the other hand, in domainswhere the consequences of actions are less predictable, it is difficult todevelop skeletal plans that are reusable in similar situations.andM;Limitations of the DesignandM;ONCOCIN's Reasoner, knowledge base, and patient database are designed tosatisfy the requirements of the cancer-chemotherapy planning problem and ofthe clinic environment.andP;  ONCOCIN uses the structured knowledge of protocolsand chemotherapy regimens to construct therapy and test-orderingrecommendations on a visit-by-visit basis.andP;  The knowledge-base structure,indexed by a set of well-defined contexts, is optimized for automated entryof a number of similar skeletal plans.andP;  The time-oriented database allows thevisit-oriented display that the Interviewer requires, and provides responsesto the complex temporal queries that the Reasoner makes.andP;  The controlstructure allows the physician user to control the data-entry process and tooverride the suggested therapy plan.andP;  However, as we have gained experienceentering more protocols in the knowledge base and testing the system inclinical use, we have identified several limitations of our current design.andM;Reasoner Problems: The Reasoner has neither a truth-maintenance system in thestyle of Doyle [7] nor a backtracking algorithm that maintains the choicepoints during the planning process.andP;  When the user changes the data suppliedto the planning module, the planner has no means of retracting only thoseconclusions that depend on the changed data.andP;  Instead, it must back up to thetop level, throwing away all the conclusions it has computed, and restart theplanning process.andP;  A similar restarting from the top level occurs when thesystem derives a conclusion that is inconsistent with its earlierpresuppositions.andP;  This kind of inconsistency typically arises when the systemdetermines, at the drug level of its plan refinement process, that thechemotherapy should be delayed.andP;  Thus, a decision at a high level in theplanning hierarchy may depend on lower-level conclusions.andP;  Because it has nobacktracking algorithm, the current implementation of the planner uses an adhoc method to save the current conclusion, which it uses to restart theplanning process.andM;Problems in Representing Knowledge and Data: The fixed contexts in therepresentation of skeletal plans make it difficult to represent additionalvariants of a concept when the basis for the variation is not one of thepredefined contexts.andP;  For example, within a chemotherapy, the directions foradministration of a drug may be give 50 mg in the first hour by vein followedby 100 mg by mouth.&quot;andP;  Because in the knowledge base the administration of adrug is an atomic action, and is not decomposed by additional contexts, suchdetailed drug-administration specifications cannot be reasoned withinONCOCIN.andM;The incorporation of a plan as part of the patient database allows us to seethat plan as an extension of a database containing ongoing therapy actions.andO;This representation, however, blurs the distinction between the plan and thedescription of the patient.andP;  In particular, there is no provision forconstructing multiple alternative plans.andP;  Although the protocols usually donot call for alternative plans, this restriction prevents us from basingtherapy recommendations on alternative hypotheses about patient states.andP;  Italso makes it difficult to construct parallel representations of theprotocol's suggestions and the physicians' own therapy plans.andM;Integration problems with the User-Interface Program: The intervalrepresentation of the plan makes possible the handling of complexpatient-database queries relative to past therapeutic events.andP;  This hierarchyof temporal intervals, however, has no corresponding representation in theInterviewer, which is based on a flowsheet consisting of rectangular matricesof data indexed by the dates of the visits [16].andP;  Events that have durationsof other than a single day have no natural representation on the flowsheet.andO;Conversely, some operations on the flowsheet--such as inserting a new visitbetween past visits--are not easy to perform on the interval hierarchy; onthe flowsheet, there is no way to indicate where in teh internal temporalhierarchy the new visit should be placed [32].andP;  Further research onrepresenting and reasoning with time-oriented medical records is needed.andM;SUMMARYandM;We have described a technique for using skeletal planning in domains whereuncertainty about the effects of actions makes it difficult to derive plansfrom first principles.andP;  The technique does not require the system to projectthe effects of actions into the future.andP;  Instead, it relies on compiledheuristics and on observed reactions to past actions to determine theappropriate modifications to the skeletal plan in the current planningperiod.andP;  It requires that the system explicitly maintain the history of theactions taken and the observations on the states of the world at differentpoints in time.andP;  The plan actions typically have temporal durations, and thedata are contextually dependent on these temporal events.andP;  Both the planactions and the data about the states of the world are integrated into atemporal database that handles complex queries about the states of the worldrelative to the actions taken in the past.andP;  In our application area--thetherapeutic management of patients who have cancer--we designed the knowledgebase such that its organization reflects a hierarchical model of the skeletalplans we are using.andP;  The control and inference mechanisms used in ONCOCINencourage a mixed-initiative style of human-computer interaction.andM;Acknowledgments.andP;  Many people have contributed to the ONCOCIN project overthe years.andP;  In the early phase of ONCOCIN redesign process, Miriam Bischoff,Carli Scott, and Curtis Langlotz were especially helpful.andP;  The other membersof the ONCOCIN project--David Combs, Christopher Lane, Janice Rohn, andClifford Wulfman--continue to influence the form and function of the Reasonerand of the knowledge base.andP;  Our work would not have been possible without ourcurrent collaborating oncologists Robert Carlsor Charlotte Jacobs, RichardLenon, and Andrew Zelenetz.andP;  Lyn Dupre edited the manuscript, and made itmuch more readable.andM;REFERENCESandM;[1] Allen, J.F., and Koomen, J.A.andP;  Planning using a temporal world model.andP;  InProceedings of the Eighth International Joint Conference on ArtificialIntelligence (Karlsruhe, W. Germany, Aug. 8-12, 1983), pp.andP;  741-747.andM;[2] Bischoff, M.B., Shortliffe, E.H., Scott, A.C., Carlson, R.W., and Jacobs,C.D.andP;  Integration of a computer-based consultant into the clinical setting.andO;In Proceedings of the Seventh Annual Symposium on Computer Applications inMedical Care (Baltimore, MD, Oct. 23-26, 1983), pp.andP;  149-152.andM;[3] Chapman, D. Planning for conjunctive goals.andP;  Artif.andP;  Intell.andP;  32, 3 (July1987), 333-377.andM;[4] Clancey, W.J.andP;  Heuristic classification.andP;  Artif.andP;  Intell.andP;  27, 3 (Dec.andO;1985), 289-350.andM;[5] Davis, R., Buchanan, B.G., and Shortliffe, E.H.andP;  Production rules as arepresentation for a knowledge-based consultation program.andP;  Artif.andP;  Intell.andO;8, 1 (Feb.andP;  1977), 15-45.andM;[6] Dean, T.L., and McDermott, D.V.andP;  Temporal data base management.andP;  Artif.andO;Intell.andP;  32, 1 (Apr.andP;  1987), 1-55.andM;[7] Doyle, J.A.andP;  Truth maintenance system.andP;  Artif.andP;  Intell.andP;  12, 3 (Nov.andO;1979), 231-272.andM;[8] Fikes, R.E., and Nilsson, N.J.andP;  STRIPS: A new approach to the applicationof theorem proving to problem solving Artif.andP;  Intell.andP;  2, 3/4 (Winter 1971),189-208.andM;[9] Friedland, P.E., and Iwasaki, Y.andP;  The concept and implementation ofskeletal plans.andP;  J. Automated Reasoning 1, 2 (1985), 161-208.andM;[10] Georgeff, M.P.andP;  Lansky, A.L., and Bessiere, P.andP;  A procedural logic.andP;  InProceedings of the Ninth International Joint Conference on ArtificialIntelligence (Los Angeles, CA, Aug. 18-23, 1985), pp.andP;  516-523.andM;[11] Georgeff, M.P., and Lansky, A.L.andP;  Reactive reasoning and planning.andP;  InProceedings of the Ninth International Joint Conference on ArtificialIntelligence (Seattle, WA, July 13-17, 1987), pp.andP;  667-682.andM;[12] Gerring, P.E., Shortliffe, E.H., and van Melle, W.andP;  TheInterviewer/reasoner model: An approach to improving system responsiveness ininteractive AI systems.andP;  AI Magazine 3, 4 (Fall 1982), 24-27.andM;[13] Hickam, D.H., Shortliffe, E.H.andP;  Bischoff, M.B., Scott, A.C., and Jacobs,C.D.andP;  The treatment advice of a computer-based cancer chemotherapy protocoladvisor.andP;  Annals of Internal Med.andP;  103, 6 (Dec.andP;  1985), 928-936.andM;[14] Kahn, M.G., Ferguson, J.C., Shortliffe, E.H., and Fagan, L.M.andO;Representation and use of temporal information in ONCOCIN.andP;  In Proceedings ofthe Ninth Annual Symposium on Computer Applications in Medical Care(Baltimore, MD, Nov. 10-13, 1985), pp.andP;  172-176.andM;[15] Lane, C.D.andP;  The Ozone ([O.sub.3]) Reference Manual.andP;  Tech.andP;  Rep.andO;KSL-86-40, Knowledge Systems Laboratory, Stanford University, Stanford, CA,1987.andM;[16] Lane, C.D., Walton, J.D., and Shortliffe, E.H.andP;  Graphical access tomedical expert systems: II, Designs of an interface for physicians.andP;  Methodsof Info.andP;  in Med.andP;  25, 3 (July, 1986), 143-150.andM;[17] Langlotz, C.P., Fagan, L.M., Tu, S.W., Sikic, B.I., and Shortliffe, E.H.andO;A therapy planning architecture that combines decision theory and artificialintelligence techniques.andP;  Comp.andP;  Biomed.andP;  Res.andP;  20, 3 (June 1987), 279-303.andM;[18] Langlotz, C.P., Fagan, L.M., Tu, S.W., and Sikic, B.I.andP;  ONYX: Anarchitecture for planning in uncertain environments.andP;  In Proceedings of theNinth International Joint Conference on Artificial Intelligence (Los Angeles,CA, Aug. 18-23, 1985), pp.andP;  447-449.andM;[19] Long, W.J., Naimi, S., Criscitiello, M.G., and Kurzrok, S. Reasoningabout therapy from a physiological model.andP;  In Proceedings of MED-INFO 86(Washington, DC, Oct. 26-30, 1986), pp.andP;  756-760.andM;[20] Minsky, M.andP;  A framework for representing knowledge.andP;  In Readings inKnowledge Representation, R.J.andP;  Brachman and H.J.andP;  Levesque, Eds.andP;  MorganKaufmann, Los Altos, CA, 1985, 245-262.andM;[21] Musen, M.A.andP;  Automated Generation of Model-Based Knowledge AcquisitionTools.andP;  Pitman, London, 1989.andM;[22] Musen, M.A., Fagan, L.M., Combs, D.M., and Shortliffe, E.H.andP;  Use of adomain model to drive an interactive knowledge editing tool.andP;  Inter.andP;  J.andO;Man-Machine Studies 26, 1 (Jan.andP;  1987), 105-121.andM;[23] Sacerdoti, E.D.andP;  A Structure for Plans and Behavior.andP;  American Elsevier,New York, 1977.andM;[24] Shortliffe, E.H.andP;  Medical consultation systems: Designing for doctors.andO;In Designing for Human-Computer Communication, M.S.andP;  Sime and M.J.andP;  Coombs,Eds.andP;  Academic Press, London, 1983, 2099-238.andM;[25] Shortliffe, E.H., Scott, A.C., Bischoff, M.B., Campbell, A.B., vanMelle, W., and Jacobs, C.D.andP;  ONCOCIN: An expert system for oncology protocolmanagement.andP;  In Proceedings of the Seventh International Joint Conference onArtificial Intelligence (Vancouver, Canada, Aug. 24-28, 1981), pp.andP;  876-881.andM;[26] Stefik, M.andP;  Planning and metaplanning, (MOLGEN: part 2).andP;  Artif.andO;Intell.andP;  16, 2 (May 1981), 141-146.andM;[27] Swartout, W.R.andP;  Explaining and justifying expert consultation programs.andO;In Proceedings of the Seventh International Joint Conference on ArtificialIntelligence (Vancouver, Canada, Aug. 24-28, 1981), pp.andP;  815-822.andM;[28h Tate, A.andP;  Generating project networks.andP;  In Proceedings of the FifthInternational Joint Conference on Artificial Intelligence (Boston, MA, Aug.andO;22-25, 1977), pp.andP;  888-893.andM;[29] Vere, S.A.andP;  Planning in time: Windows and durations for activities andgoals.andP;  IEEE Trans.andP;  Patt.andP;  Anal.andP;  and Mach.andP;  Intell.andP;  PAMI-5, 3 (May 1983),246-267.andM;[30] Wilkins, D.E.andP;  Domain-independent planning: Representation and plangeneration.andP;  Artif.andP;  Intell.andP;  22, 3 (Apr.andP;  1984), 269-301.andM;[31] Woods, W.A.andP;  Transition network grammars for natural language analysis.andO;Commun.andP;  ACM 13, 10 (Oct.andP;  1970), 591-606.andM;[32] Wulfman, C.E., Isaacs, E.A., Webber, B.L., and Fagan, L.M.andP;  Integrationdiscontinuity: Interfacing users and systems.andP;  Tech.andP;  Rep.andP;  KSL-88-12,Knowledge Systems Laboratory, Stanford University, Stanford, CA, 1988.andM;(1) See {19, 27} for examples of systems that use causal models to generatetherapy plans.andM;(2) A parallel research project called ONYX {17, 18} explicitly addresses theproblem of uncertainty.andM;(3) The version of ONCOCIN described in this article is descended from anearlier version that was implemented on a DEC 2060 mainframe computer.andP;  Thesystem was completely redesigned in the process of porting to theworkstation.andP;  See [2, 12, 25} for descriptions of the earlier system.andM;(4) A chemotherapy is a single drug or a combination of drugs administered totreat a disease.andM;(5) The chemotherapy name &quot;VAM&quot; is derived from the individual drugs VP-16.andO;Adriamycin, and methotrexate.andP;  Adriamycin is also known by its generic name&quot;doxorubicin.&quot;andM;(6) The name &quot;POCC&quot; is derived from procarbazine, Oncovin, CCNU, andcyclophosphamide.andP;  In this article, and in the ONCOCIN knowledge base, thegeneric name &quot;vincristine&quot; is used instead of &quot;Oncovin.&quot;andM;(7) The name &quot;CAVP&quot; is derived from cyclophosphamide, Adriamycin, and VP-16.andM;(8) When the Reasoner indicates to the Interviewer that it needs a datum, theInterviewer displays a question mark in the appropriate location on thegraphical flowsheet.andP;  This question mark indicates to the physician whichcurrent datum is required by the system, but the user still decides when andwhether to provide the requested information.andM;(9) &quot;NIL&quot; in this context indicates that the interval's end point is notknown yet.andM;(10) The term reasoning method used here should not be confused with methodas used in object-oriented programming.andP;  In ONCOCIN, a reasoning methoditself is implemented as an object in our object system.andM;(11) There is no explicit reasoning method associated with accessing theframe hierarchy.andP;  By default, the inference engine always checks the framehierarchy for the value of the parameter it is seeking.andM;(12) The equivalent of skeletal-plan selection in ONCOCIN would be theselection of the treatment protocol plan for the patient.andP;  It is notdifficult to match patients' diseases and health statuses to the protocolsfor which these patients are eligible.andP;  However, the actual assignment of apatient to a specific protocol depends on the preferences of individualphysicians.andP;  Thus, ONCOCIN still needs to be told to which protocol thepatient has been assigned.andM;LAWRENCE M. FAGAN is an associate director of the Medical Computer ScienceResearch Group and co-director of the Medical Information Sciences Program atStanford University.andP;  He has directed the cancer therapy expert systemproject since 1983.andP;  His interests include the representation of temporalknowledge in expert systems, the design of therapy planning computerprograms, and man-machine interface questions.andP;  Dr Fagan received his B.S.andO;from MIT, Ph.D.andP;  in Computer Science from Stanford, and M.D.andP;  degree from theUniversity of Miami.andM;JAY C. FERGUSON is a senior knowledge engineer at the Xerox knowledge BasedSystems Competency Center.andP;  Ferguson has been involved with artificialintelligence and relational database systems for the past 11 years.andP;  hisresearch interests include the development of a semantically soundepistemological framework for knowledge representation, model-basedrepresentations and reasoning systems, self-organizing systems and theapplication of objectivism to the theoretical foundations of machineintelligence.andP;  Author's Present Address: Knowledge Based Systems CompetencyCenter, Xerox Corporation, 800 Phillips Road, Building 897-01C, Webster, NY14580.andM;MICHAEL G. KAHN is an assistant professor in Internal Medicine at WashingtonUniversity School of medicine.andP;  He received a B.S.andP;  in Biological Sciencesand a B.A.andP;  in Chemistry from the University of California-Irvine in 1975 andan M.D.andP;  degree from the University of California-San Diego in 1979.andP;  Hecompleted specialty training in Internal Medicine in 1983.andP;  His researchinterests include temporal reasoning and temporal representation in medicalexpert systems.andP;  Author's Present Address: Washington University School ofmedicine, Dept.andP;  of Medicine, Box 8121, St. Louis, MO 63110.andM;MARK A. MUSEN is an assistant professor of Medicine and Computer Science atStandford University.andP;  He received Sc.B.andP;  and M.D.andP;  degrees from BrownUniversity in 1977 and 1980, respectively.andP;  He pursued clinical training inInternal Medicine at Stanford University Hospital from 1980 to 1983.andP;  In1988, he received his Ph.D.andP;  from Stanford University.andP;  His current researchcontinues to concentrate on the development of automated tools thatfacilitate the construction and maintenance of knowledge-based systems.andM;EDWARD H. SHORTLIFFE is an associate professor of Medicine and ComputerScience at Stanford University.andP;  He received an A.B.andP;  in Applied Mathematics(Harvard, 1970), a Ph.D.andP;  in Medical Information Sciences (Stanford, 1975),and an M.D.andP;  (Stanford, 1976).andP;  He was principal developer of the MYCINexpert system, for which he received the ACM's Grace Murray Hopper Award in1976.andM;SAMSON W. TU is a scientific programmer on the ONCOCIN project at theStanford Medical School.andP;  He is responsible for developing the ONCOCINReasoner and knowledge base.andP;  He received an M.S.andP;  degree in computerengineering from Stanford in 1985, and his research interest primarily lie indesigning planning systems for medical therapy.andM;Mailing Address for Tu, Musen, Shortliffe and Fagan is Medical ComputerScience, medical School Office Bldg., X15, Departments of Medicine andComputer Science, Stanford University School of Medicine, Stanford, CA94305-5479.andO;</TEXT></DOC>
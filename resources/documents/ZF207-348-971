<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-348-971  </DOCNO><DOCID>07 348 971.andM;</DOCID><JOURNAL>Data Based Advisor  Feb 1989 v7 n2 p99(1)* Full Text COPYRIGHT Data Based Solutions 1989.andM;</JOURNAL><TITLE>Missing the point; the point to SQL isn't merely academic.andO;(structured query language)</TITLE><AUTHOR>Pascal, Fabian.andM;</AUTHOR><SUMMARY>SQL's (Structured Query Language) relational nature is the mostimportant aspect of the standard, as it provides support for moreproductive end user tools.andP;  Facilities of relational DBMSs thatimprove usability and productivity of applications includeset-orientation, which reduces data and messaging traffic; dataindependence, and theoretical simplicity and completeness.andP;  Thesefeatures also reduce the need for programming expertise, errors,maintenance and logical-physical confusion.andP;  SQL's ability toprovide portability to PC applications is important but this isprimarily for the development of portable COBOL and Capplications.andM;</SUMMARY><DESCRIPT>Topic:     Structured Query LanguageStandardsApplicationsRelational LanguagesSoftware Engineering.andM;</DESCRIPT><TEXT>Missing the PointandM;I recently listened to a panel of database management system vendors andindustry experts at COMDEX discussing SQL.andP;  This group perceived the value ofSQL for PC users solely in terms of connectivity and the portability oftraditional applications (read: procedural code) to other platforms.andP;  I alsorecently read an article in these pages in which two authors question thevalue of SQL as an end user tool (see Cheryl Currid and Craig Gillett'sarticle, &quot;Are Users Ready for SQL?&quot; in the Dec. 1988 issue of Data BasedAdvisor).andP;  In both cases I was struck by the prevailing failure of bothvendors and users to grasp the real importance of SQL in the PC environment.andM;The PC industry -- at least that part of it that doesn't ignore or resist theissue altogether -- sees SQL's only value in terms of easing connectivity andportability.andP;  Connectivity refers to the capability of PCs to speak SQL toother PCs (as in a LAN SQL Server situation) or to other platforms acting asservers (such as gateways to mini and mainframe DBMS hosts).andP;  Users ofstandalone PC applications, according to this school of thought, have nothingto gain from SQL and should ignore it.andP;  Portability refers to the ability todevelop applications on the PC, with embedded SQL, in traditional programminglanguages, then port them to run on other platforms.andP;  In this environment,there's no benefit from SQL unless you want to develop portable COBOL or Capplications.andM;SQL's value in this arena is unquestionably significant.andP;  Recentdevelopments, such as LAN SQL servers and connectivity strategies, are adirect result of SQL and probably wouldn't have been attempted without it.andO;But the notion that it's due only to SQL being a standard language and thatthis is its only value for users is a misconception.andP;  The main importance ofSQL is that it supports the relational model, however incompletely orimperfectly.andP;  Indeed, its fidelity to the model gives SQL its practicalvalue, both as a standard and as a foundation for better end user tools.andM;Think for a moment.andP;  Why did we have to wait for an SQL standard in order toachieve connectivity and the portability of applications?andP;  Aside from SQL --which is criticized for not being a &quot;real&quot; language -- there exists a varietyof popular or standard languages, any of which could have been chosen forthis purpose.andP;  And we can't just blame IBM for pushing SQL, since they alsosupport some of those other languages.andP;  So, why did IBM bother with SQL whenusing one of the other languages would have also eliminated any need to embedSQL?andM;The reason, of course, is the relational character of SQL, whichdistinguishes it from other languages.andP;  Because a relational DBMS isset-oriented, rather than record-oriented, it reduces the amount of data andmessaging traffic to a degree that doesn't overwhelm communication networks,as record-at-a-time engines do.andP;  Set processing, data independence,theoretical simplicity and completeness of a relational DBMS are alsointended to overcome the fundamental usability and productivity problems ofprocedural code on any platform (be it connected or standalone mode), as wellas the need for programming expertise, logical-physical confusion, errorproneness, maintenance burdens, etc.andP;  Embedding SQL in programs is more a wayof making it easier for programmers to cope with traditional languages, whichthey refuse to renounce, than the major advantage for PC users.andM;It is, therefore, imperative for those who genuinely have the PC end user atheart to keep their eyes on the relational ball.andP;  If the relationalfunctionality underlying SQL DBMSs is understood, it becomes easy to realizethe implications for productive end user tools, and to demand the propersupport from vendors.andP;  For example, does a product let the end user takeadvantage, in an accessible format (forms, prompted query, natural language,etc.), of the full power of relational operators such as JOIN, UNION,INTERSECT or DIVIDE, or do they have to program an equivalent?andP;  Do datadefinition facilities allow access to relational integrity features enforcedby the DBMS, or do they have to be designed by users in every application?andM;By focusing on these issues, users will discern how SQL-based relationalengines are superior to those that are not, and demand (1) full relationalsupport and (2) end user tools that adequately exploit it, from the vendors.andO;They only need to look at tools developed by Metaphor, Gupta, XDB and othersto see how the relational features underlying SQL contribute to the qualityof end user tools -- and at what happens when these features aren't supportedby the back end or are exploited at the front end.andP;  $TThese days we'rewitnessing boasts by an array of PC vendors that their tools now support SQLdatabases -- including vendors who just a few weeks ago declaredrelationality irrelevant to users.andP;  We're being told that this approachcombines the familiarity of existing PC front ends with the power of SQL backends, allowing users to mix and match them at will.andP;  Leaving aside theprocedural tools (which are not a productive alternative), if there arerelational advantages to SQL servers, how can they be tapped with tools thatignore relational features?andM;Given the industry approach, it's no wonder that users concentrate on SQL asjust a language, and question its practicality.andP;  They've been distracted withfamiliar, frequently flashy tools.andP;  They fail to realize the limitations andfull end user potential inherent in the relational approach, and,unfortunately, eschewed by vendors.andM;Fabian Pascal is a Washington DC analyst, consultant and author specializingin relational database management and SQL on the PC.andP;  He is affiliated withCodd andamp; Date International.andP;  He can be reached at (202) 966-2754.andO;</TEXT></DOC>
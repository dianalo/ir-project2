<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-661-731  </DOCNO><DOCID>09 661 731.andM;</DOCID><JOURNAL>AI Expert  Dec 1990 v5 n12 p40(6)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Process states as decision criteria.andO;</TITLE><AUTHOR>Raeth, Peter G.andM;</AUTHOR><SUMMARY>Users need help in managing the large amounts of data required tooperate modern processes.andP;  Expert-system techniques involvedinclude process states used over a period of time that indicatewhat actions are appropriate.andP;  Build a knowledge base aboutdecisions and related criteria without regard to its being used bythe inference engine.andP;  The knowledge base needs to be restructuredfor use by the inference engine when the knowledge base has beenentered.andP;  This type of expert-system technology needs carefulattention to detail and much planning.andP;  Updating and training anexpert system is an important part of the process.andM;</SUMMARY><DESCRIPT>Topic:     Expert SystemsDecision MakingProduct DevelopmentTutorialProcess ManagementKnowledge-Based SystemsSystem DesignMethodsProgram Development Techniques.andO;Feature:   illustrationcharttable.andO;Caption:   The three basic steps. (chart)Building a binary tree from a sorted knowledge base. (table)Restructured form of sorted knowledge base. (chart)andM;</DESCRIPT><TEXT>PROCESS STATES as DECISION CRITERIAandM;The process states implied by a sequence of sensor samples can be used asdecision criteria to support recommendations and action.andP;  Using thesecriteria to good effect is an ideal application for expert systems.andM;In &quot;Expert Systems in Process Observation and Control&quot; (AI EXPERT, Sept.andO;1990, pp.andP;  54-59), I explained that keeping up with modern processes requiresa large volume of real-time information.andP;  Processes like those found inmanufacturing, power generation, health monitoring, and market analysis canbe difficult to manage because of their speed and the amount of informationthey involve.andP;  This information must be collected and integrated to determineprocess states that lead to decision criteria and, ultimately, to action.andM;Process states that are active over a length of time often indicate thatcertain recommendations and actions are appropriate.andP;  Recommendations andactions result from decisions supported by observation of active processstates, which are implied by raw sensor samples.andP;  One recommendation could be&quot;Check feed temperature sensor and associated wiring due to rapid switchingof temperature value&quot;; an example action might be &quot;Automatic shutdown ofsteam supply to column and activation of venting system due to dangeroustemperature in room and low temperature in column.&quot;andP;  This action could becaused by steam escaping into the ambient atmosphere.andM;To use what is known about process states and appropriate recommendations andactions, we need a way to build an expert system that associates them withthe process states that precipitate them.andP;  A three-step method, shown inFigure 1, can put together such a system.andM;BUILDING A KNOWLEDGE BASEandM;You should build a knowledge base about decisions and their related criteriawithout regard to its use by the inference engine.andP;  The knowledge-engineeringteam should concentrate on the process in question rather than on computersor some special syntax.andM;The bounding of the knowledge domain and the acquisition of knowledge are twoclassic bottlenecks in expert-system development.andP;  The knowledge-acquisitionmethod I'll describe here can alleviate this problem.andM;Domain bounding.andP;  Domain bounding is implied in the method of capturing theknowledge.andP;  A distinct boundary is drawn around each decision that could bemade; it encompasses the criteria corresponding to each decision captured inthe knowledge base.andP;  Thus, the domain boundary (as understood in the classicsense) actually comprises many minute boundaries.andP;  You'll see how these smallboundaries are kept from conflicting with each other, even though some mayoverlap.andM;Knowledge acquisition.andP;  Two kinds of knowledge are captured by this system.andO;The first kind is composed of the decisions themselves; the second is eachdecision's corresponding criteria.andM;The two kinds of knowledge are entered into a relational database.andO;Overlapping criteria are resolved automatically by the inference engine'spreprocessor.andP;  Decisions are based on the current and prior existence ofprocess states and other decisions (taken either discretely or statisticallyaccumulated).andP;  Each decision is associated with a list of criteria that mustbe satisfied before its related recommendation or action can be suggested.andO;In addition, each criterion has an associated &quot;history&quot; factor.andP;  This factoris a period of past time, counting back from the present, over which thegiven criterion may have been satisfied.andP;  For instance, it may be importantto know whether or not a switch was &quot;on&quot; during the past five seconds.andM;The history factor can be specified as greater than zero if history isimportant or made equal to zero if only the present condition of thecriterion is needed.andP;  A mechanism for capturing and organizing this type ofknowledge can take the form of a relational database's input screen and thedatabase-management software's editing, deleting, and inserting functions.andM;Listing 1 illustrates the input screen.andP;  As you can see, each decisioncriterion is made up of a criterion name and history.andP;  The name and historyfields of two different criteria must match before the two criteria are saidto be the same.andP;  As we we'll see later, the matching of criteria from two ormore recommendations dramatically affects how the knowledge base isrestructured for the inference engine.andM;To illustrate the use of the knowledge-base input screen, we can draw twosimplified safety actions from a distillation example.andP;  First, the steam flowshould be halted and the room vented whenever the steam appears to beescaping.andP;  Second, a maintenance worker should perform a diagnostic on thecooling-water system if it switches temperature rapidly.andP;  Here's how theseactions could be captured in a knowledge base:andM;DECISION: Shut Down Steam Flow CRITERION: NAME: UNCHECKED.AMBIENT.TEMPHISTORY: 0andM;DECISION: Engage Venting System CRITERION: NAME: UNCHECKED.AMBIENT.TEMPHISTORY: 0andM;DECISION: Diagnose Cooling Water System Due To High/Low Temp.andP;  SwitchingCRITERION: NAME: LOW/HIGH.COOLING.TEMP HISTORY: 0andM;Exercising careful quality control on the knowledge base before you use it iswell worth your while.andP;  Basic checks such as spelling, use of criteria thatare not defined states or decisions, decisions without criteria, andduplicate descriptions of decisions should be minimized.andM;RESTRUCTURING KNOWLEDGEandM;Once the knowledge base has been entered, it must be restructured for use bythe inference engine.andP;  The inference engine uses a form of the knowledge basequite unlike that used by the knowledge-engineering team.andM;Several activities take place during the restructuring of the knowledge base:andM;* A frequency index is created that tells how often each decision criterionappears in the knowledge baseandM;* The decision criteria are sorted within each decision's definitionaccording to their frequency in the knowledge baseandM;* The decision themselves are sorted first according to the number ofcriteria they each have (lowest number on top) and then according to thefrequency of each of their criterion (highest occurrence on top)andM;* A binary decision tree is constructed from the resulting sorted/formattedknowledge base.andM;Sorting the decisions themselves along with their related criteria allows theinference engine to work with the knowledge base on the basis of the mostcommon information.andP;  The implication is that the process domain is assumed toexhibit most often the criteria that occur most often in the knowledge base.andO;This sorting technique also makes the binary decision tree more efficient interms of the number of nodes required to represent a given knowledge base,but other sorting disciplines could be used.andP;  For instance, theknowledge-engineering team could assign a priority factor to each processstate and decision.andP;  This factor would indicate the team's judgment as to howlikely it is the given state or decision would occur.andM;Once the knowledge base has been sorted, a discrimination network isconstructed in the form of a binary decision tree by placing the firstdecision on the tree with its associated criteria.andP;  The top criterion is thetree roort and the decision is the leaf.andP;  In a similar fashion, the otherdecisions are placed on the tree with their associated criteria according tohow they match criteria already placed on the tree.andM;This binary tree does not depend on any given order of decisions or criteria;each hangs on the tree regardless of whether it is a decision or criterion.andO;Table 1 gives the major steps required to build the tree.andP;  Turbo Pascal v.andO;5.0 code that implements these steps is available on the AI EXPERT BulletinBoard System.andM;A generalized sorted knowledge base and its transformation into a binary treeis shown in Figure 2.andP;  The tree is traversed in a top-down, depth-firstfashion.andP;  The left branch of each node is the branch taken if the criterionis satisfied; the right side is taken if the criterion is not satisfied.andP;  Thetraversal continues until a decision is achieved, and the decision report isupdated.andP;  After a decision is reached, the traversal continues down the rightbranch of the node.andP;  This traversal continues until the leaves of the treeare reached.andP;  Each time the state or decision report is updated, the binarytree must be traversed.andP;  (Knowledge-base transformation and traversal code isalso available on the AI EXPERT BBS.andP;  This code assumes the history fieldalways equal zero so that only currently active process states areconsidered.)andM;Figure 3 shows how the distillation example would look after the sorting andrestructuring steps.andP;  Once the knowledge base has been restructured as shown,the inference engine can deliver decisions appropriate to the active processstates.andM;Recall the process-state sequence that resulted from the sensor samples.andO;Here's how this sequence is repeated; the process states lead directly todecisions that take the form of recommendations and actions:andM;Nominal Cooling Temp.andP;  achieved at Time = 10 Nominal Cooling Temp.andP;  lost atTime = 70 Low/High Cooling Temp.andP;  occurred at Time = 90 Unchecked AmbientTemp.andP;  achieved at Time = 130andM;If the process-state sequence was present and the inference engine had thedecision tree shown in Figure 3, it could notify the distiller operator thatmaintenance was required on the cooling equipment.andP;  It could also initiateshutdown of the steam flow to the column.andP;  Here's apossible message flow tothe operator:andM;Possible maintenance required on cooling temperature equipment.andP;  ExperiencedLOW/HIGH.COOLING.TEMP at Time = 90 Shutting down steam flow.andO;UNCHECKED.AMBIENT.TEMP Began at Time = 130 Engaging venting system.andO;UNCHECKED.AMBIENT.TEMP began at Time = 130andM;PITFALLSandM;Implementing this kind of expert-system technology requires a lot of carefulthought and attention to detail.andP;  For instance, you must decide what theexpert system should do when no process states are active.andP;  Perhaps you'llwant an &quot;all normal&quot; state for each parameter, or at least a &quot;no activestate&quot; with an appropriate recommendation.andM;Developing a process observation and control expert system takes a lot oftime and a deep understanding of the process itself.andP;  It goes without sayingthat the system will only be as smart or as comprehensive as itsknowledge-engineering team allows.andM;Remember that the techniques described here will not detect novel situationsfor which the system hasn't been specifically trained; for those, you'll needsomething like neural-network technology.andP;  While neural networks can be usedin conjunction with traditional expert systems, they're not at all based onthe same principles.andP;  One of the biggest issues in neural nets that has yetto be resolved is the problem of self-explanation--neural nets cannot easilyexplain a given conclusion because they don't store or process information inhuman-understandable terms.andM;Don't let a system like this one (or any automatic system) run on its ownwithout some human supervision; these techniques can't use common sense ashumans do.andP;  Also, the knowledge base probably will not be as comprehensive asthe experience of a human expert.andP;  You shouldn't assume that an expert systemhas more knowledge or experience than a human.andM;Training and updating an expert system is as important and time-consuming astraining and updating a human expert.andP;  The difference is in consistency ofknowledge use and retention, areas in which expert systems excel.andO;Consequently, you must also ensure that conflicting information doesn't creepinto the knowledge base, a common event when more than one expert isinvolved.andM;Some may say that the techniques described here sound a lot like AND/OR logicthat could be implemented in hardware or via traditional sequential code.andO;Although this is true for specific and unchanging state and decision cases,keep in mind that the complexity of construction in hardware and sequentialcode increases with the complexity of the states' specifications, especiallystates that are time-dependent and based on combinations of samples fromseveral sensors.andP;  With expert-system techniques, one need only take thetrouble to fill in a spreadsheet or database screen, which makes going fromconcept to reality very fast.andM;Furthermore, additional problems come up when you try to modify hardware andsequential code to add, change, or remove states or decisions.andP;  Sequentialcode requires a good programmer and hardware requires a hardware expert, butexpert systems require only a domain expert who can enter data into aspreadsheet or database screen.andM;IN CLOSINGandM;A large mass of data is needed to manage modern processes and humans needhelp coping with the data overload.andP;  I've described expert-system techniquesfor using raw data to indicate process states that lead to recommendationsand actions and the importance of having a knowledge-acquisition methodunconstrained by syntax and oriented to the domain expert.andP;  The example was adistillation process, but these techniques are useful for observing andcontrolling any time-sampled system.andM;Peter G. Raeth is an Air Force major who manages and conducts research intoadvanced computing methods for military applications.andO;</TEXT></DOC>
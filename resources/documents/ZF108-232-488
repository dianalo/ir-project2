<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-232-488  </DOCNO><DOCID>08 232 488.andM;</DOCID><JOURNAL>PC Week  March 12 1990 v7 n10 p54(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>Within the timebox, development deadlines really work. (rapidapplications development techniques)(Applied Intelligence)(column)</TITLE><AUTHOR>Martin, James.andM;</AUTHOR><SUMMARY>Rapid application development (RAD) and other new programmingmethodologies use the Timebox concept, a method of meeting rigiddeadlines that lets some system functionality slip by postponingrefinements in order to deliver the application on time.andP;  Addingrefinements after the first version has been in use is oftenbetter than doing so during initial development because users maychange their minds about what a system needs after working withit.andP;  Excessive prototyping causes 'creeping functionality' thatdoes not easily converge into a usable application.andP;  The Timeboxmethodology quickly builds a first version in a modular form thatcan be easily changed and added to.andP;  It assigns a time frame thatcannot be extended.andP;  Deadlines must be realistic for the Timeboxapproach to work.andP;  Individual construction teams work on smallsystems or subsystems that can be rapidly completed.andM;</SUMMARY><DESCRIPT>Topic:     Program Development TechniquesProgramming ManagementComputer-aided software engineeringProductivity.andO;Feature:   illustrationchart.andO;Caption:   Applications development within a timebox. (chart)andM;</DESCRIPT><TEXT>New development methodologies such as rapid application development (RAD) useDu Pont's Timebox concept, in which the development deadline is immovable,but the functionality may slip.andM;People in many walks of life have to meet deadlines.andP;  Writers, televisionproducers and seminar developers, for example, must deliver material by acertain date, which means the content of the material may slip.andM;Methodologies such as RAD apply a similar constraint to the building of ISapplications: There is a deadline that is immovable, but the functionality ofthe system may slip.andP;  The system must work, carrying out its basic functions,but the refinements may have to be postponed in order to meet the deadline.andM;Seventy-five percent of a system's functionality can be created relativelyquickly with an automated code generator, especially if reusable structuresare employed.andM;The next 15 percent may take as long to create as the first 75 percent, andthe system may have to be successively refined before the last 10 percent iscompleted.andM;Many of the features in the last 10 percent could be dropped or postponed fora subsequent release.andM;If the refinements are added after the first version of the product has beenin use, they will probably be subject to change.andM;Adding RefinementsandM;It is often better to add refinements after the first version has been in usebecause users change their minds about the required functionality of a systemafter working with it for a while.andM;One of the dangers of prototyping methodologies or iterative development isthat the functions of a system can grow in an uncontrolled fashion.andP;  Users ordevelopers often add functionality so that the design does not convergequickly into a usable system.andP;  This is referred to as &quot;creepingfunctionality.&quot;andM;The more powerful the prototyping tools, the more the developers areencouraged to experiment, to add functions or to overengineer the system.andO;This can become expensive and can prevent a system from being delivered ontime.andM;Perhaps the best way to combat creeping functionality is to place a rigidlimit on the time permitted to produce a working system.andP;  Within a definedtimebox, a working system must be built.andM;With RAD, the core of a system is built quickly and the refinements are addedlater.andP;  The system grows like an onion, with successive layers of refinementbeing implemented.andM;It is this refinement that makes setting a deadline practical.andP;  The Timeboxlife cycle allows refinements to be made until the deadline nears, at whichtime a working system must be delivered.andM;Du Pont's Timebox was first used in the company's fibers division, which wasmoving to a highly automated manufacturing environment.andP;  It was necessary tocreate complex application software quickly, and Du Pont recognized that itis better to get a basic version of the system working, learn from theexperience of operating with it and then design an enhanced version than itis to wait for a comprehensive system at a later date.andM;Du Pont's experience implies that:andM;-- The first version must be built quickly.andM;-- The application must be built so that it can be changed and added toquickly.andM;Du Pont stresses that the Timebox methodology works well for the company andis highly practical.andP;  It has resulted in automation being introduced morerapidly and effectively.andM;Du Pont quotes large costs savings from the methodology, and variations ofTimebox techniques have since been used in many other corporations.andM;RAD methodology applies the Timebox concept to its construction phase, asshown in the figure.andP;  A construction (or SWAT) team is given a time framewithin which a system must be constructed.andM;Prior to the assigned time frame, the functions and design framework of thesystem are defined.andP;  After the time frame, the system is evaluated and adecision is made as to whether to put it into production.andM;The time frame cannot be extended; however, the functionality of the systemmay be trimmed to complete the system within the time allotted.andM;Within the time frame, continuous iterative development is done with endusers and IS developers working closely together.andP;  The team is under pressureto produce a working system by deadline.andM;A Timebox approach, or team development in general, does not work well ifthere is pressure to meet an impossible deadline.andM;The setting of the deadline, or the selection of functions to be accomplishedwithin an allotted time, should be the responsibility of the team or systemsanalyst working on the project.andP;  Meeting the deadline is easier if the teamis familiar with the tools and techniques, and confident in what they canaccomplish.andM;Before deciding on a realistic deadline, the SWAT team should make its ownestimation as to how long the project will take.andP;  This estimate should bemade at or before the end of the final joint applications design (JAD)workshop, within the RAD user design phase.andM;By the end of the final JAD workshop, the following should be estimated: thenumber of function points, inputs, outputs, logical internal files, externalfiles and queries, and their complexity (high, medium or low).andM;An experienced SWAT team knows what it can achieve.andP;  It examines the JAD anduses its own guidelines for determining how long the project will take andwhether additional assistance is needed.andM;It may allocate a certain period of time for startup, a number of person-daysfor each transaction type, a period for integration testing and a period forhanding over the project.andM;SWAT teams should work on systems or subsystems that can be completed in ashort time.andP;  If the overall project is large and complex, it should bedivided into subsystems, which can be built at the same time by separateteams.andM;The SWAT team effectively signs a contract with management saying, &quot;We willbuild a system of that scope by a certain date.&quot;andM;Changing the ScopeandM;If the scope changes during the construction phase, more development time maybe needed, or required functionality must be dropped.andP;  Any change in scopeshould be agreed upon with management during the construction phase.andM;Limiting functionality to meet the deadline does not mean quality must becompromised.andP;  It is essential that SWAT teams have pride in their work; noself-respecting team would put out work that was less than the highestquality.andM;The delivered system must be as bug-free as possible and must provide a setof functions that meets the user's needs when the system is put intoproduction.andP;  Integrated CASE tools make it much easier to achieve technicalquality.andM;Functionality can vary substantially without reducing the usability of thesystem.andM;Many software and electronic products today have excessive functionality thatoften bewilders users.andP;  The return on development investment goes down whenunwanted or marginal functions are added.andM;The Timebox development concept places an inflexible limit on thefunctionality to be supported and the time taken to produce a working system.andM;Next week I will discuss how innovative management techniques can lead tohigher productivity.andM;----------The concepts embodied in RAD are described in a new volume in the JamesMartin Report Series.andP;  For more information on this volume, call (800)242-1240.andP;  For information on seminars, contact (in the United States andCanada) Technology Transfer Institute, 741 10th St., Santa Monica, Calif.andO;90402 (213) 394-8305.andP;  In Europe, contact Savant, 2 New St., Carnforth,Lancs., LA5 9BX United Kingdom (0524) 734 505.andO;</TEXT></DOC>
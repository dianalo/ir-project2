<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-715-753  </DOCNO><DOCID>09 715 753.andM;</DOCID><JOURNAL>Communications of the ACM  Dec 1990 v33 n12 p19(14)* Full Text COPYRIGHT Association for Computing Machinery 1990.andM;</JOURNAL><TITLE>Real-time data acquisition at Mission Control. (Lyndon B. JohnsonSpace Center's Mission Control Center)</TITLE><AUTHOR>Muratore, John F.; Heindel, Troy A.; Murphy, Terri B.; Rasmussen,Arthur N.; McFarland, Robert Z.andM;</AUTHOR><SUMMARY>The Lyndon B. Johnson Space Center's Mission Control Center (MCC)has replaced its mainframe-based data acquisition equipment withthe Real-Time Data System (RTDS), a complex system based on aUnix-like operating system.andP;  The new technology helps NASA flightcontrollers make crucial decisions about shuttle control.andP;  RTDSprovides a greater degree of automation of complex mentalcalculations that flight controllers were formerly compelled toperform themselves.andP;  RTDS includes more graphics than itspredecessor's system, and it is designed to capture and use theaccrued knowledge of senior flight controllers who will soonretire, leaving MCC with a staff of primarily young workers withno experience with the Apollo program.andM;</SUMMARY><DESCRIPT>Topic:     Data Acquisition SystemsUnited States. Johnson Space CenterReal-Time SystemsExpert SystemsUNIX-Like Operating Systems.andO;Feature:   illustrationchart.andO;Caption:   Data acquisition software. (chart)Communication display. (chart)Real time wind display. (chart)andM;</DESCRIPT><NOTE>Only Text is presented here; see printed issues for graphics.andO;</NOTE><TEXT>Real-Time Data Acquisition at MISSION CONTROLandM;Perhaps one of the most powerful symbols of the United States' technologicalprowess is the Mission Control Center (MCC) at the Lyndon B. Johnson SpaceCenter in Houston.andP;  The rooms at Mission Control have been witness to majormilestones in the history of American technology such as the first lunarlanding, the rescue of Skylab, and the first launch of the Space Shuttle.andO;When Mission Control was first activated in the early 1960s it was truly atechnological marvel.andP;  This facility, however, has received only modestupgrades since the Apollo program.andP;  Until recently it maintained amainframe-based architecture that displayed data and left the job of dataanalysis to flight controllers.andP;  The display technology utilized in thissystem was monochrome and primary displayed text information with limitedgraphics (photo 1).andM;An example display of 250 communication parameters is shown in Figure 1.andP;  Themainframe processed incoming data and displayed it to the flight controllers;however it performed few functions to convert raw data into information.andP;  Thejob of converting data into information upon which flight decisions could bemade was performed by the flight controllers.andP;  In some cases, whereadditional computational support was required, small offline personalcomputers were added to the complex.andP;  Flight controllers visually copied dataoff the console display screens, and manually entered the data into the smallpersonal computers where offline analysis could be performed.andM;Although this system was technologically outdated, it contained years ofcustomizing efforts and served NASA well through the early Space Shuttleprogram.andP;  Several factors are now driving NASA to change the architecture ofMission Control to accomodate advanced automation.andP;  First is the requirementto support an increased flight rate without major growth in the number ofpersonnel assigned to flight control duties.andM;A second major concern is loss of corporate knowledge due to the uniquebimodal age distribution of NASA staff.andP;  Hiring freezes between the Apolloand Shuttle programs have resulted in NASA being composed of two primarygroups.andP;  Approximately half of NASA consists of Apollo veterans within fiveyears of retirement.andP;  The other half consists of personnel under the age of35 with Shuttle-only experience.andP;  NASA considers it highly desirable tocapture the corporate knowledge of the Apollo veterans in knowledge-basedsystems before they retire.andP;  Because the mainframe complex is primarilyoriented to data display, it is a poor environment for capturing andutilizing knowledge.andM;These factors have resulted in aggressive efforts by NASA's MissionOperations Directorate to utilize the following: a distributed system ofUnix[TM] engineering-class workstations to run a mix of online real-timeexpert systems, and traditional automation to allow flight controllers toperform more tasks and to capture the corporate knowledge of seniorpersonnel.andP;  Starting with the first flight of the Space Shuttle after theChallenger accident, the Real-Time Data System (RTDS) has played anincreasingly significant role in the flight-critical decision-making process.andM;Applications ExamplesandM;The application of these techniques has resulted in a new look and feel toMission Control, evidenced by a new communication and tracking system display(Figure 2) that includes all of the information contained on the traditionalmonochrome text display shown in Figure 1.andP;  The display utilizes graphics toorganize the information into a schematic.andP;  It also contains rules which drawinferences about the systems performance and operation from the telemetry.andO;Previously, a major part of an operator's training was to learn how to lookat complex displays of digital data and build a mental model of the system.andO;Only after this training was complete, could an operator be trained toevaluate the situation and make recommendations.andP;  Utilizing the RTDS approachallows the operator to utilize the expertise of senior operators captured inthe display program to build a mental model of the system and jump tolearning how to evaluate the system.andM;This effort has also resulted in dramatic new and unexpected capabilities.andO;for example, flight controllers who monitor the shuttle's Remote ManipulatorSystem (RMS) traditionally determined the position of the robot arm byobserving digital readouts of the angles of each of the arm's joints.andP;  Acombination of offline tools and mental gymnastics allowed operators todetermine the arm's position and advise astronauts on operation.andP;  Photo 2shows an RTDS application which acquires real-time telemetry of the arm'sangles and animates a view of the shuttle showing the arm's position.andP;  Photo3 shows the system deployed in Mission Control during the Hubble SpaceTelescope mission.andP;  This application not only lowers the flight controller'sworkload, but also allows the controller to visually monitor for potentialcollisions of the shuttle and payloads.andM;In another example, flight controllers typically monitored the performance ofthe shuttle's flight instruments by watching numeric displays of instrumenttelemetry describing the shuttle's attitude angles or the bearing to thelanding site.andP;  RTDS now provides a workstation-based graphic emulation of theflight instruments that allows flight controllers to view the instrumentsfrom the astronaut's point of view.andM;RTDS also provides a Reaction Control System Expert System that monitors theperformance of the 38 attitude control jets on the shuttle via real-timetelemetry and determines the valid attitude control modes based on the jetavailability.andP;  By allowing the operator to manually declare jets as failed,the system can evaluate the effects of potential next failures.andP;  This expertsystem contains approximately 100 rules and was developed under the G2[TM]Expert System Shell (photo 4).andP;  This rapid &quot;what-if&quot; capability allowedflight controllers to anticipate a potential loss of control condition whenseveral jets failed during the STS-31 mission.andM;RTDS has also been applied to real-time data sources other than spacecrafttelemetry.andP;  One of the most significant applications has been in theevaluation of weather data.andP;  The flight director is the NASA individual inMission Control with final authority on all flight decisions.andP;  One of themost difficult tasks for the flight director during landing is the selectionof runways based on winds.andP;  Because the shuttle during landing is essentiallya very large glider, it has very critical crosswind limits.andP;  Traditionallyduring landings the weather officer would read out wind values from thelanding site and the flight director was required to determine, by consultinga paper crosswind graph, if the winds were within limits.andP;  this could getquite hectic as there are several runways and the winds at Edwards Air ForceBase are notoriously variable.andP;  RTDS provides an application which receivesthe wind reports electronically from the landing sites, computes crosswindcomponents, applies flight rules to determine if winds are within limits, anddisplays the results graphically to the Flight Director in real time (Figure3).andP;  This application dramatically lowers the flight director's workload andenhances the safety of flight.andM;In developing RTDS, NASA met several challenges in the use of Unixworkstations to operate in real time and to provide real-time expert systemsand color graphics in mission-critical environments.andP;  All of theseapplications required access to real-time data.andP;  The remainder of thisarticle explains the techniques developed to acquire real-time data underUnux and supply it to expert systems.andP;  The techniques described have nor onlybeen used on Space Shuttle but also on aeronautics applications.andP;  Systemshave been developed using RTDS for aircraft flight test operations by NASA'sDryden flight Research Facility [2] for monitoring the X-29, and by the AirForce Flight Test Center [1] for monitoring the F-15 Short Takeoff andLanding demonstrator aircraft.andM;Hard and SoftandM;Real-time ConstraintsandM;The most important item to understand in developing real-time Unixapplications is the difference between hard and soft real-time constraints.andO;As defined by Stankovic [3] real-time systems are those where the correctnessof a computation is a function of both the result of the computation and thetime at which the computation is delivered.andP;  Hard real-time systems are thosein which the function is completely failed if the computation does not alwaysmeet the time constraint.andP;  Soft real-time systems are those in which systemperformance is degraded if the time constraint is not always met, but can befulfilled if the conditions are met with a response distribution.andP;  A typicalhard real-time system is an aircraft flight control system where loss ofcontrol occurs if the system does not meet time constraints.andP;  An example of asoft real-time system would be an airline reservation system in which slowresponse results in degraded operations but not system failure.andM;RTDS had to meet both hard and soft real-time constraints.andP;  The hardreal-time constraint occurred in the acquisition of real-time data intoworkstations.andP;  The soft real-time constraints were in the performance offault-detection algorithms, fault-detection rule-based expert systems, anddata displays.andP;  Understanding the difference in these types of constraints inthe key to successful implementation.andM;Unix Data Acquisition isandM;A Hard Real-Time ConstraintandM;RTDS receives Space Shuttle telemetry as soon as the data reaches MissionControl.andP;  (Figure 4) Telemetry is a uniquely structured data stream.andP;  Inorder to minimize hard real-time processing in the Unix workstations, thebasic telemetry-processing roles of bit, frame, and subframe syncrhonization,and parameter extraction (decommutation) were performed in a dedicatedtelemetry processor (Loral Instrumentation ADS-100 or System 500).andP;  Theextracted parameters (approximately 5000 16 bit words per second) werecommunicated to the workstations (Concurrent 6600) via a Direct Memory Access(DMA) interface.andP;  The DMA is based on the Digital Equipment Corporation'sDR-11W standard using an Ikon Corporation interface board installed in theworkstation.andP;  This is a common interface used in the telemetry processingcommunity.andM;The telemetry processors buffers the incoming telemetry data in a 1000-wordFirst-In-First-Out (FIFO) buffer.andP;  The buffer is transmitted over theinterface when polled by the workstation.andP;  The hard real-time constraint wasthat the FIFO buffer would lose data (overflow) and require a reset if it hadnot been polled before it filled.andP;  The Unix workstation had to poll thesystem sufficiently to drain the buffer before it overflowed.andM;Unix has some well-known problems that hinder its use in hard real-timeapplications.andP;  Unix normally does not provide the capability to assign hardpriorities to tasks.andP;  This makes it impossible to require that a task executeat a given rate, such as polling a telemetry processor at four times asecond.andP;  This is complicated by the fact that in most Unix implementationsthe kernel cannot be preempted.andP;  Thus even if an external device, such as atelemetry processor, needs service, the kernel may block its servicing.andO;Additionally, most Unix schedulers reduce a task's switching priority inproportion to the processor time used.andP;  This is a problem when dataacquisition is to be performed continuously over a several-day mission.andP;  MostUnix implementations perform task swapping.andP;  In addition, virtual memoryversions also perform on-demand paging.andP;  If a task has critical code or datapaged to secondary memory or if the entire task is swapped out, then the timeto recover critical code and data may violate real-time constraints.andP;  Unixalso typically buffers all disk transactions in buffer cache in primarymemory.andP;  This introduces an uncontrolled factor in critical disk tasks suchas data logging.andM;Concurrent Corporation's Real-Time Unix (RTU[TM]) has specific features toallow the user to deal with these constraints [4].andP;  Specifically, RTU allowstasks to lock a memory segment, and to circumvent the normal changes inswitching priority by specifying a fixed real-time switching priority.andP;  RTUprovides contiguously allocated disk files that allow user to bypass the diskbuffer cache mechanism and perform direct writes to disk.andP;  RTU provideskernel preemption within specified time constrainsts.andM;Even with these capabilities, data acquisition systems and real-timeapplications under Unix must be carefully structured.andP;  Specifically, thetasks performing data acquisition must be isolated from applicationsprocessing so that increasing the applications load does not prevent the dataacquisition from meeting the hard real-time constraints.andP;  In order to dealwith this problem, a technique was developed to take advantage ofmulti-processing capabilities (Figure 5).andP;  In this technique a singlestripped-down task manages the DMA controller, instructing it to filldifferent segments of a ring buffer in sequence.andP;  This ring stuffer wasidentified as the highest priority real-time task in the system.andP;  A secondtask, called the buffer stuffer, reads the ring and performs decoding stepsto place data into time-homogeneous buffers in shared memory that can beaccessed in parallel by many applications.andM;The two stuffers interact in several ways.andP;  The buffer stuffer is set to areal-time priority so that its switching priority does not degrade withaccumulated CPU time, but at a lower priority than the ring stuffer toprevent interfering with the hard real-time performance of the DMAmanagement.andP;  The ring and buffer stuffers communicate their positions in thering through shared memory.andP;  If a buffer being accessed by the buffer stufferis about to overwritten by the ring stuffer, then the ring stuffer stillperforms DMA to meet the real-time constraint and prevent overflow of thetelemetry processor FIFO.andP;  The data is transferred into a bit bucket, a sparebuffer used specifically for this purpose.andP;  Although this mechanism can losedata, previously acquired data is not contaminated.andP;  Whenever data is lost,tasks are notified by flags in shared memory.andP;  When two processors areavailable in a workstation, the two stuffers are run in parallel on separateCPU's to prevent contention.andM;This dual-stuffer technique was also implemented in an 80386 personalcomputer running the Lynx[TM] real-time operating system to acquire weatherdata for the Flight Director Winds application.andP;  The weather data wasacquired over an asynchronous serial line and placed in a ring by one task,and organized for evaluation in time-homogeneous buffers by another task.andM;Shared memory is vital for inter-process communication in this approach.andP;  TheUnix ATandamp;T System V shared memory implementation is very good for real-timedata acquisition and distribution.andP;  It is important to perform the dataacquisition task as a service and make acquired data available to allapplications by shared memory.andP;  If shared memory is not available, then eachapplication would have to perform significant data acquisition tasks and thiswould severely limit the number of simultaneous applications.andP;  Shared memorywas also an important troubleshooting too for the data acquisition software.andO;Normal debugging techniques typically involve messages written into files orto the terminal.andP;  This assumes that the debugging techniques will not impactthe proper operation of the process.andP;  However, in a real-time environment theuse of such techniques significantly affects the timing characteristics ofthe system and cannot be used.andP;  Instead, RTDS logs information about the dataacquisition (such as pointers, number of bytes transferred, overflow flags)to shared memory.andP;  RTDS uses these flags to provide graphic monitors (Figure6) which can be observed in real time to troubleshoot data acquisitionproblems.andM;Several other RTU features are critical to the performance of RTDS.andP;  Theseincluded the ability of an application to delay for time period less than onesecond.andP;  This function was required because high-priority tasks such as thebuffer stuffer had to delay for incoming data and the standard Unix minimumsleep of one second was too long to meet rate constraints.andP;  RTU provides amechamism allowing delays as short as one millisecond.andP;  RTU also provided atime of day clock (for rate calculations) and signals for trapping floatingpoint errors--a critical function because noise in data can cause errors andapplications must trap and handle these errors.andM;This technique has been highly successful in processing real-time data.andO;During a recent mission, a workstation running a moderate applications loadran for over three days without an overflow occurring.andP;  With a heavily loadedworkstation we experience an overflow every 10-12 hours.andP;  This vulnerabilityoccurs because the ring stuffer runs as a Unix application and contextswitches from application state to kernel state whenever it executes the DMAController driver.andP;  If another application requests a kernel service whilethe ring stuffer is in application state, the context switch of the ringstuffer can be delayed.andP;  To minimize the effects of this case we modified thetelemetry processor board to automatically reset itself when an overflowoccurs.andP;  This is not completely satisfactory as data loss occurs during thereset and we are currently developing a version of the DMA driver thatperforms all of the ring stuffer activity in the kernel.andM;RTDS is an interesting statement on the power of current engineeringworkstations.andP;  The Apollo Mission Control Center used for the lunar landingsin 1969 processed less than 1000 parameters a second in the large mainframesof the time.andP;  RTDS processes 4000 parameters a second in a singleworkstation.andM;Data Display and ExpertandM;Systems areandM;Soft Real-Time TasksandM;When RTDS started we thought of data display and computation alongtraditional mainframe-based terms.andP;  Specifically, all data was to bedisplayed and all computations run on every data sample.andP;  After some earlyexperimentation it became clear that it would be difficult to display dataand run rule-based expert systems in a hard constrained fashion.andP;  The natureof rule-based expert systems makes it difficult to guarantee hard real-timeperformance.andP;  In rule-based expert systems, computational load varies basedon the number of rules fired--and this varies with circumstances beingmonitored.andM;Examining the actual monitoring tasks performed by flight controllers revealsthat although data is displayed at once per second, it is not monitored atthat rate.andP;  Flight controllers are themselves multi-tasking and monitorseveral screens, event lights, and voice loops as well as using othermaterials such as procedures and schematics.andP;  The human monitor is a softreal-time implementation.andM;In RTDS, faults monitoring tasks were structured so that only key detectionlogic was being evaluated every second.andP;  Supporting logic was only activatedwhen primary logic detected a problem.andP;  This significantly improved real-timeperformance.andP;  In particular, a rule-based expert system monitoring theshuttle's communications system utilized approximately 500 rules.andP;  These wereinitially implemented in CLIPS, a rule-based expert system tool developed bythe Mission Planning and Analysis Division at Johnson Space Center.andP;  Thistool does not have any special real-time support.andP;  By structuring the rulesinto phases and enforcing certain precedents, approximately 100 rules wererequired to capture the key detection logic.andP;  In the Unix environment, CLIPSwas able to fire these 100 rules approximately two to three times a second.andO;When the key logic rules detected problems, additional rules fired, whichslowed down the system and caused only momentary violation of real-timeconstraints.andM;It is important to realize that the shuttle systems do not normally operatewith continuous failures being introduced.andP;  One of the goals of the expertsystems is to provide expert evaluation when failures occur.andP;  If the systemslows down when the failure occurs, but is still able to provide theexpertise, then it is meeting its desired function.andM;Tests on the performance of the fault detection revealed that a largepercentage of the processing was meeting the once-a-second constraint and allof the processing was being performed on a two- to three-second cycle.andP;  Thiswas not detectable by flight controllers looking at the RTDS displays.andM;RTDS displays telemetry three to four seconds ahead of the older mainframecomplex because the RTDS architecture minimizes the number of data transfersbetween processors.andP;  Because the mainframe performs such a large number ofcomputations, it requires extensive minicomputer preprocessing to meetreal-time constraints.andP;  This introduces significant dalay in the mainframesystem.andP;  On several occasions during actual shuttle flight, RTDS has detectedproblems and brought them to the attention of flight controllers before theynoticed the problems on the conventional displays.andP;  In several cases themainframe displays have been completely removed from the control center andthe controllers rely entirely on the workstation based displays.andP;  Photo 5shows a workstation installed directly in a console next to the traditionaldisplays.andM;Support Techniques ForandM;Real-time ExpertandM;SystemsandM;Several critical techniques were utilized in developing real-time dataacquisition support for expert systems.andP;  The most important technique is thetime-homogeneous buffers.andP;  If task automation or a rule-based expert systemis to combine several different pieces of sampled information and make adecision based on them, then the time relationship of these samples must beknown.andP;  Typically, RTDS combines only data from the same data acquisitionsampling cycles or major frame.andP;  A major frame is the time period in asampled data system when all measurements are sampled at least once.andP;  OnSpace Shuttle the major frame is sampled and transmitted once per second.andO;All measurements from a given major frame represent a time-homogeneousdataset bounded by the sampling rate.andM;An example of the importance of this type of relationship is detecting afailed reaction control system jet thruster on the Space Shuttle.andP;  There aretwo conditions that we want to detect: a jet that does not fire in responseto command is considered failed off; or a jet that does not turn off when thecommand is removed is failed on.andM;We have two rules to handle these conditions:andM;1.andP;  If jet command is on and jet chamber pressure is low, then jet is notfiring and failed off.andM;2.andP;  If jet command is off and jet chamber pressure is high, then jet isfiring and failed on.andM;If the jet command telemetry parameter is not from the same sampling periodas the jet chamber pressure command, two situations can occur which cause anormal jet firing to be misdiagnosed as a failure: If the command measurementleads the response measurement, then the first rule will be satisfiedindicating that the jet is not responding to commands.andP;  If the command lagsthe response, then the second rule will be satisfied indicating that the jetis firing without a command.andP;  It is only when the command and response arefrom the same frame that a normal firing will be properly evaluated.andM;RTDS places data into time-homogeneous buffers in shared memory on majorframe boundaries.andP;  Four buffers are used on a round robin basis.andP;  The bufferstuffer places telemetry parameters in the round robin buffers in namedlocations where they can be extracted by applications using standard libraryroutines.andP;  Whenever a parameter is placed in the buffer it is marked as validfor that major frame.andP;  The stuffer also searches for the frame markers in thetelemetry stream.andP;  When a major frame marker is detected, the buffer stuffercloses the buffer being updated and makes it available to applications forreading.andP;  Flags are set in shared memory to indicate the most recentlyupdated buffer.andP;  After releasing the completed buffer to applications, thebuffer stuffer then opens the next round robin buffer.andP;  Before starting tofill this new buffer, data from the last major frame period is copied intothe new buffer.andP;  All data is marked as invalid for the new major frame whenit is copied forward.andP;  As each parameter is processed in the new major frame,the parameter status is updated to valid.andP;  By copying forward the mostrecently received data, we ensure that applications always have access to themost recently received data (with appropriately marked validity), even if thedata is not received in a given major frame due to errors in transmission.andO;By switching buffers and making them available to applications at major frameboundaries, the time-homogeneity of the original sampled data stream ismaintained.andM;In order to maintain major frame time-homogeneity in the applications, it wasnecessary to ensure that once the data acquisition library starts to pulldata from a buffer, all of the parameters are pulled from only that onebuffer (major frame).andP;  This must happen while Unix is switching applications,paging and swapping.andP;  It may take more than one second for an application tocomplete its computation cycle between data acquisitions.andP;  Thefour-round-robin buffer design gives an application three major frame timesto complete an acquisition before the buffer is overwritten.andM;This major frame buffer technique maintains the data-time characteristics forautomated monitoring and expert systems.andP;  Alternative approaches have beenused in other telemetry computer systems which lose this critical timerelationship information.andP;  An alternative technique that has been implementedin at least one major NASA system and two new commercial off-the-shelftelemetry monitoring systems is called the Current Value Table (CVT).andP;  InCVT, telemetry data is acquired and the most current values of parameters areplaced in a single table without regard to the major frame.andP;  When anapplication requests data, the CVT ships out the most current value receivedfor the requested parameters.andP;  Because the requests occur asynchronously withthe data acquisition, it is almost certain that data from multiple majorframes are in the same data request.andP;  This technique may be acceptable forlow-rate data displays and limited automated monitoring but is not acceptablefor advanced automation using rule-based systems.andM;Major Frame BuffersandM;For Logging and DistributionandM;The major frame buffers are also a powerful structure for logging data.andP;  InRTDS, the buffer stuffer logs all parameters to disk in contiguous files.andO;RTDS has an instant replay mode where real-time data acquisition is stoppedand a replay stuffer is used to stuff data into the major frame buffers.andP;  Inthis way all of the real-time applications can be used in playblacks.andP;  Thereplay stuffer has a control panel which is fashioned after a conventionalvideocassette recorder control panel (Figure 6).andP;  We close this interfacebecause it was familiar to almost everyone and it has all of the functionallyneeded.andP;  With the VCR control panel, users can playback data, view in fastforward, rewind, or shuttle between set points.andP;  Speed of the playblack canbe adjusted for slow-motion analysis.andM;This capability has turned out to be essential for three reasons: First, itwas necessary for debugging the automation applications.andP;  Data signaturescaptured during actual flight or simulations can be replayed time and timeagain to work out bugs in automation and expert systems as well as to performregression testing.andP;  Second, as a real-time tool it enables operators tosignificantly cut the time required to view playback data.andP;  This capabilitywas used dramatically after the pad engine shutdown and countdown abort onthe first STS-30 launch attempt.andP;  RTDS enabled engineers and managers toreplay the shutdown within minutes to troubleshoot the cause.andP;  This is agreat improvement over the current playback systems which can take from 30minutes to 5 hours to retrieve playback data.andP;  In fact, the director ofMission Operation has stated that RTDS paid for its entire development inthose few minutes.andP;  Third, there has been an unexpected training benefit fromthe playback capability.andP;  Flight controllers can record simulations and thenplay them back at their convenience for training.andP;  Several trainingobjectives in flight controller certification are now met by this technique.andO;This saves the large costs associated with meeting training objectives bysimulations with the entire simulator, control center, and flight team inplace.andM;The major frame buffer is also a natural format for distributing data overlocal area networks.andP;  RTDS distributes major frame buffers over Ethernet.andO;This enables RTDS to provide remote telemetry monitoring and softwarecheckout, even on computers which could not normally support real-time dataacquisition.andP;  This capability has allowed us to conduct operationaldemonstrations where flight controllers monitored data out of their offices.andO;RTDS sends the data to the experts, rather than sending the experts to thecontrol center.andP;  This technique will become more important as NASA pursueslong-term missions such as Space Station where it becomes less feasible tolimit experts to a central location.andM;Data Quality of FramesandM;and Individual ParametersandM;In order for expert systems and task automation to use real-time data, it isnecessary to determine the quality of the data.andP;  There are two measures ofdata quality; the quality of a major frame, and the validity status ofindividual parameters.andM;In order to determine the validity of a frame of data, RTDS utilized the factthat each major frame of telemetry is divided into a number of smallerframes, called minor frames.andP;  Each minor frame contains an identifyingcounter.andP;  In Shuttle there are 100 minor frames per major frame and one majorframe per second.andP;  Parameters are spread across the minor frames.andP;  Intelemetry systems, data can be interrupted due to radio-frequency noise onthe space-to-ground link.andP;  Typically, noise is of short duration and willonly affect one or two minor frames.andM;In order to inform applications when noise is present, the minor framecounter is transferred via DMA to the workstation.andP;  The buffer stufferexamines each frame counter to ensure that all 100 frames are received insequence for a given major frame.andP;  This quality parameter is expressed as anumber from 0 to 100, indicating a rough percentage of the quality of thedata.andP;  The quality parameter is placed in shared memory, with one qualityestimate for each major frame buffer.andP;  Applications receive the bufferquality value whenever they request data from a buffer.andP;  In this wayapplications can chose to display or discard data based on overall dataquality.andP;  Many data display tasks in RTDS display all of the data even inhigh noise (low quality) conditions.andP;  In critical task automation, however,data is discarded when it is below 100% quality to prevent erroneous results.andM;There are approximately 32,000 parameters in the Space Shuttle system butonly approximately half of them are being downlinked at any one time.andP;  Thisis due to the restriction of the downlink bandwidth of the telemetry systemand recognizes the fact that certain data is not required during all flightphases.andP;  For example, engine data is only needed during launch.andP;  If data isnot in the specific telemetry format, during a major frame, then RTDS marksthe individual parameter status as invalid.andP;  When an application attempts toacquire the parameter, the application receives both the value and the statusof the parameter from the buffer.andM;Individual parameter validity status is an important technique that has beenoverlooked in several NASA and commercial systems and caused seriousarchitectural problems when retrofitted into these systems.andP;  This functionmust be provided by the data acquisition subsystem.andP;  Without a systemsolution, each application must contain sufficient format definitioninformation to independently assess validity.andP;  This is a large softwaremaintenance requirement and leaves the possibility that applications mightfunction improperly due to stale data.andM;Calibration and ConversionandM;In typical flight vehicle telemetry systems data originates from one of twomajor sources.andP;  Some data is acquired directly from sensors and other data isthe result of computations in the onboard computer.andP;  Calibration is thefunction of calculating engineering unit values (temperature, pressure,etc....) from sensor telemetry.andP;  Conversion is the process of transformingvalues from the word formats of the flight vehicle computer into the wordformats of the ground computer.andP;  Both of these functions must be performed ifan expert system is to use telemetry.andM;Typical sensors convert some physical quantity (e.g.andP;  temperature, pressure)into an analog value proportional over a specified range (Figure 7).andP;  Sensoroutput voltages are normally amplified and then converted to a digital value.andO;These values are usually called counts.andP;  The sensor value in counts(8,10,11,12 and 16 bit are popular sizes) is placed in a serial stream fortransmission to the ground.andP;  On the ground, the computer system convertsthese to a number representating a physical quantity.andP;  This is because it ismuch easier for humans and expert systems to reason about physical quantitiesthan counts.andP;  This is done with a calibration curve of the form:andM;y = A(0) + [A(1).sup.*.X] + [A(2).sup.*.X.sup.2] + [A(3).sup.*.X.sup.3] .andP;  . andM;.  .  .where the counts are supplied as the X values and the A(N) values are thecoefficients.andP;  RTDS uses the Shuttle program standard fifth orderpolynomials.andP;  The coefficients for this polynomial are stored in sharedmemory so they can be viewed and altered and to ensure they are common to allapplications.andP;  Acquired data is placed in the shared memory in counts andwhen applications request data, the shared memory is examined to obtain andapply the calibration curve.andM;Flight vehicle computers historically have unique architectures due to thedemands on weight, size, power consumption and reliability in hostileenvironments.andP;  In fact, the Space Station program is the first NASA mannedprogram to specify a hardened standard commercial-off-the-shelf architecturefor an 80386 flight computer.andP;  Because these computers tend to be unique,they usually have unique floating point formats (Figure 8).andP;  Unixworkstations usually use IEEE standard floating point formats ormanufacturers' variants.andP;  The data acquisition subsystem must be able toconvert between these different number representation subsystems if thedisplay user or expert system is to interpret the data.andM;RTDS keeps the parameter conversion information in shared memory togetherwith the calibration curve.andP;  Data is kept in the flight vehicle form in theshared memory.andP;  When an application requests data, the shared memory is usedto select and apply the appropriate conversions.andP;  Twelve different types ofconversions are required on Space Shuttle.andP;  Override modes for bothcalibration and conversion are provided in the library calls so that userapplications can acquire raw data directly as it was downlinked from thevehicle.andM;Noise FilteringandM;Even when the quality and individual parameter validity mechanisms are used,there still is the possibility of getting incorrect data into a real-timeexpert system.andP;  There are two basic sources of error.andP;  First, communicationsnoise may be of very short duration, only affecting a small number of bits.andO;If the noise does not affect a frame counter or frame synchronization marker,then it is difficult to determine (from a data communications standpoint)that an error has occurred.andP;  Some telemetry systems use parity bits onindividual parameters and frames or a forward-error-correction technique butthese are not available on the Shuttle.andP;  The second source of noise is thesensor itself.andP;  Sensors are nonideal devices and can be noisy.andP;  RTDS appliednoise-filtering techniques to minimize the effects of these errors onapplications.andM;The first technique was applicable to discrete (binary 1 or 0) values, suchas switch settings and valve positions.andP;  Whenever one of these items changed,it would not be provided to the expert system unless the change was presentfor a specified number of seconds (N).andP;  This N-count noise filter is atechnique which has been used successfully in the onboard automation of theSpace Shuttle.andP;  The problem with this filter is that a chattering sensor isnot detected if it changes state faster or at the same rate as the noisefilter.andP;  Operationally, the N-count algorithm worked well for ourapplications.andM;The second technique was applicable to numbers.andP;  A numeric value may takemany values.andP;  In a slowly changing situation the same N Count algorithm usedfor discretes can be used.andP;  But where values change rapidly, comparingupdates to the last value can result in no updates being made available tothe expert system because the last value never stabilizes.andP;  For fast-changingnumeric values we used reasonableness tests.andP;  The expert systems andautomation would reject values that were not in a specified reasonable rangefor that parameter.andM;In some cases, these checks were performed within the expert system orautomation.andP;  But in many cases the same noise-filtered value was required byseveral applications (automated fault detection, displays etc.andP;  .  .  .).  Inthese cases a single authoritative copy for all applications is desired.andO;RTDS used another shared memory buffer to which the noise-filtering routinescould write.andP;  This signal buffer was accessible by all applications byrequesting parameter names through a library routine.andP;  This signal buffer didnot represent a major frame time-homogeneous buffer.andP;  Because noise filtersare set at different values for each parameter, there was no way to maintaintime homogeneity.andP;  The mechanism, however, worked very well as both arepository for best-estimate values for low dynamics tasks and a generalpurpose mechanism for communicating results between applications.andP;  Manyapplications used this mechanism.andM;ConclusionsandM;The advances in workstations and real time Unix have enabled smallprogramming teams to implement real-time telemetry systems that have mademajor improvements in NASA space and aeronautics mission operations.andP;  Severalreal-time adjustments must be made to Unix and applications properlystructured to meet hard and soft real-time demands.andP;  Many monitoring problemsare actually soft real-time problems and thus can be implemented usingcurrent workstations and expert systems technology.andP;  New techniques in dataacquisition have been developed to ensure that the correctness of the expertsystem recommendations is not affected by the data acquisition process.andO;These mechanisms are general and can be applied to any real-time expertsystem.andP;  Although these techniques are more traditionally associated withreal-time systems or process control rather than expert systems, they must beapplied for real-time expert systems to provide useful information in missioncritical environments.andM;ReferencesandM;[1] Jones, C., Madison, R., and Flanders, J. Real-time discrete monitoring.andO;AIAA Fifth Biannual Flight Test Conference, AIAA-90-1311, 1990.andM;[2] Mackall, D., McBride, D., and Cohen, D. Overview of the NASA Ames-DrydenIntegrated Test Facility.andP;  NASA TM-101720, 1990.andM;[3] Stankovic, J. and Ramamritham, K. Hard Real-Time Systems--A Tutorial.andO;Computer Society Press (IEEE), Washington DC, 1988.andM;[4] Understanding Real Time Unix.andP;  Concurrent Computer Corporation, 1989.andM;(TM) RTU is a trademark of Concurrent Corporation.andM;(TM) Lynx is a trademark of Lynx Real Time System Inc.andM;(TM) Unix is a trademark of ATandamp;T Bell Laboratories.andM;(TM) G2 is a trademark of Gensym Corporation.andM;JOHN MURATORE is chief of the Reconfiguration Management Division for NASA atthe Johnson Space Center (JSC) in Houston, Texas.andP;  Formerly manger of theRTDS project, he now leads the division responsible for production of SpaceShuttle Mission Control and onboard flight software.andP;  He can be reached viaTelemail at JMURATORE at NASAMAIL.andM;TROY HEINDEL developed many of the expert systems and tools in RTDS.andP;  He nowis the manager of the RTDS project for NASA at JSA and is responsible for thedevelopment of additional real-time expert systems for flight operations.andP;  Hecan be reached via Telemail at THEINDEL at NASA MAIL.andM;TERRI MURPHY development critical tools which interface applications to thereal-time data acquisition of RTDS.andP;  She recently completed a year of studyat Stanford University in computer science and is now training as a flightcontroller for NASA at JSC.andP;  She can be reached via Telemail at TMURPHY atNASAMAIL.andM;ARTHUR RASMUSSEN was the lead knowledge engineer for several of the RTDSexpert systems and led the development of the flight to flight telemetryreconfiguration aspects of the RTDS.andP;  He is now working on distributedcooperative expert systems utilizing RTDS as a testbed.andP;  He is employed byMITRE Corporation in Houston, Texas and can be contacted via Telemail atARASMUSSEN at NASAMAIL.andM;ROBERT MCFARLAND led the coding and verification of the real-time dataacquisition system.andP;  He is employed by UNISYS Corporation in Houston, Texasand is currently expanding the real time data acquisition capabilities of thesystem.andO;</TEXT></DOC>
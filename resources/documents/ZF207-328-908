<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-328-908  </DOCNO><DOCID>07 328 908.andO;</DOCID><JOURNAL>UNIX World  June 1989 v6 n6 p109(5).andM;</JOURNAL><TITLE>Porting to ANSI C.andO;</TITLE><AUTHOR>Butzen, Fred.andM;</AUTHOR><TEXT><ABSTRACT>The second part of a two-part tutorial on porting C programminglanguage code to the ANSI C standard addresses the preprocessor,time functions, the new concept of locales, the ANSI suite oftypes, and other ANSI C attributes.andP;  Locales are sets of data forlanguage- and country-specific variations in C. Pre-ANSI C codethat uses the preprocessor may require substantial rewriting forthe new standard.andP;  Time in ANSI C utilizes the Universal TimeCoordinated standard in place of Greenwich Mean Time.andP;  Differencesin several ANSI C data types are described, including long float,long double, size_t, ptrdiff_t, void, type suffixes and typequalifiers.andP;  Other differences affect comments, name space, stringliterals, escape sequences, memory management, scope and switchstatements.andM;</ABSTRACT></TEXT><DESCRIPT>Topic:     ANSIC Programming LanguageSoftware MigrationTutorial.andO;Feature:   illustrationtable.andO;Caption:   ANSI C has standardized many preprocessor directives. (table)The ANSI standard defines many time-related functions. (table)ANSI C has also standardized data types. (table)andM;</DESCRIPT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-693-822  </DOCNO><DOCID>08 693 822.andM;</DOCID><JOURNAL>AI Expert  August 1990 v5 n8 p48(7)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Metamorph: a genetic algorithmic tool. (genetic processstrategies; includes related article on genes and tokens)</TITLE><AUTHOR>Austin, Scott.andM;</AUTHOR><SUMMARY>Metamorph, developed in LISP (LISt Processing) and considered agenetic algorithmic tool, is best used for genetic-processstrategies, operators and other useful functions.andP;  Metamorph isdesigned to accomplish definite goals, including establishing ahigh degree of generality for the tool and simplifying use withprocesses and results.andP;  The right selection of fitness measure isimportant for success of the genetic-algorithm process.andP;  Metamorphwas developed using a Macintosh II and Procyon's Common LISPDevelopers Tool from ExperTelligence, Goleta, CA.andP;  The toolincludes a powerful structure editor and embedded graphicsfunctions, and is an excellent implementation of Common LISP.andM;</SUMMARY><DESCRIPT>Topic:     GeneticsAlgorithmsProgram Development ToolsBiologyLISPProgramming Instruction.andO;Feature:   illustrationgraphchart.andO;Caption:   Plots of four experiments using same initial parameters. (graph)Search-experiment function. (graph)Initial generation module. (chart)andM;</DESCRIPT><TEXT>Metamorph is a great tool for expert genetic-process strategies, operators,and other useful functionsandM;In &quot;An Introduction to Genetic Algorithms&quot; (AI EXPERT, Mar. 1990, pp.andO;48-53), 1 introduced the emerging field of genetic algorithms as a promisingtechnique for machine learning, search, and optimization.andP;  Last year, geneticalgorithms were cited as an area for increased funding in DARPA's MachineLearning Initiative.(1)andM;This article reviews biological, modeling, and evolutionary programming until1980 (research subsequent to 1980 will be analyzed in a future article).andO;I'll discuss the principles of genetic algorithms through an example ofevolutionary search for the extrema of a simple function.andP;  This excursion isfacilitated using a genetic algorithm tool I've developed in LISP calledMetamorph.andM;EVOLUTIONARY PARADIGMSandM;The discovery in 1900 by H. de Vries, C. Correns, and E. Teschermak of GregorMendel's 1865 paper on the inheritance characteristics of peas signaled theemergence of modern genetics.andP;  D. P. Doolittle provides a good account of thedevelopment of genetics and a comprehensive introduction to populationgenetics in particular.(2)andM;The metaphor of neo-Darwinian evolution motivated the technique of geneticalgorithms.andP;  Two fundamental inspirations derived from genetics form thebasis of the method:andM;* The concept of the simple encoding of a population of solutions thatnaturally retains the historical record of their transits through the problemspaceandM;* At each step of the process, the population of solutions is dynamic andinteracting, evolving the population toward a global optimum through localoperations of reproduction, modification, and selection, based on a scalarperformance measure.andM;Mathematical models.andP;  Since Thomas Malthus' Essay on the Principles ofPopulations (1798), deterministic approaches to the modeling of biologicaladaption bear the imprint of some of the best mathematical minds of the pasttwo centuries.andP;  This approach includes N. Marchal's 1897 seminalinvestigations on insect population growth, G. H. Hardy's &quot;MendelianProportions in a Mixed Population&quot; (1980), A. S. Lotka's Elements of PhysicalBiology (1924), V. Volterra's fundamental 1927 study on coexisting animalspecies, the blind mathematician W. O. Kermack's collaboration with A. G.andO;McKendrick on epidemiology in 1927, and A. Kolomogorov's generalizations andextensions of Volterra's results in 1936 and 1937.3 Also, several expositionson mathematical ecology have evolved, of which Pielou's is particularlyinteresting because of its attention to measures of diversity.(4) Propermaintenance of population diversity is particularly important to theeffectiveness of genetic algorithms.andM;All of this research examined population behavior under various influencesand modeled the evolutionary process through nonlinear differentialequations.andP;  Aside from their own scientific merit, these works are useful tothe researcher in genetic algorithms for acquiring insights todomain-specific evolution strategies or developing special genetic operators.andM;Algorthmic models.andP;  Contemporary modeling of biological adaption andevolution coincides with the first digital computing machines (1945-1955), ifyou consider J. von Neumann's work on self-reproducing automata(5) and theearly work by S. Ulam at Los Alamos, where some of the most powerfulmachines.andP;  of that era were available.(6) In 1960, Fraser was among the firstto use early digital machines to investigate biogenetic processes.andP;  In themid-1960s, Fogel, Walsh, and others conducted investigations on AI throughsimulated evolution.andP;  Their work focused on mutation as the only variationalprocess and employed small populations.andP;  The term &quot;genetic algorithm&quot; in itspresent definition dates from J. D. Bagley's investigations in 1967.andP;  D. J.andO;Cavicchico in 1970 employed adaptive search in his pattern-classificationinvestigations of &quot;alphabets&quot; of hand-printed characters.(7)andM;The father of modern genetic-algorithm research, however, is considered to bejohn Holland.andP;  He and his legacy of students have had the most influence onthe field's development over the past 20 years.andP;  (You could speculate thatthis research is the academic metaphor of genetic search and optimization.andO;The self-referential nature of this process is both fitting and ironic, adomain of investigation evolving through the very processes it wishes tounderstand.)andM;The appearance of Holland's Adaptation in Natural and Artificial Systems in1975 produced both the formalism and much of the theory for the field'ssubsequent expansion and acceptance.(3) More recently, J. R. Sampson(7) andD. Goldberg(8) have provided excellent introductions to biological modelingand genetic-algorithm methods.andP;  In the past five years, genetic-algorithmresearch activity has dramatically expanded, with its own internationalconferences(9-11) and special issues on genetic algorithms appearing inacademic journals.(12)andM;METAMORPHandM;Metamorph is structured to achieve three goals:andM;* Simplifying use, including lucidity of processes and results.andP;  This goalincludes providing an audit trail for each string in each generation, withgraphical displays for best and average population performance (Figure 1).andM;* Keeping the LISP code for the basic algorithm components at a levelcompatible with the tools available to the greatest number of potentialusers.andP;  The design employs procedure and data abstraction to enhance thealgorithm's clarity.andM;* Establishing a high degree of generality for the tool, which allowsresearchers to use arbitrary alphabets and domain-specific functions bestsuited to their specific applications.andP;  No data structures other than thebasic list and no hardware-specific functions are employed.andM;The ultimate design goal for Metamorph is to create a point-and-click toolwith menu selection for different alphabets and several crossover andmutation strategies (simple crossover, multiple crossover, simple mutation,biased and unbiased mutation) and other useful operators (inversion,dominance, and so on).andP;  In this discussion, however, only the functionsrelevant to the primary genetic processes (simple reproduction, crossover,and mutation) and their evolutionary auditing will be provided.andP;  (Thecomplete source code is available on the AI EXPERT Bulletin Board System.)andM;Design strategy.andP;  The evolutionary concept can be expressed simply;(13)andM;generation + selection + variation = adaption.andM;Metamorph has been designed to reflect this expression since its modules arepartitioned into three groups: population, selection, and variationfunctions, as represented by the action diagram shown in Figure 2.andM;Once the population size is determined by the user, it remains constantthroughout the evolutionary process until the goal is reached or until thenumber of user-specified generations are exceeded.andP;  Support modules alsocontrol the display of the evolutionary history (both tabular and graphical)for a particular experiment.andP;  An experiment is intended as one invocation ofMetamorph with a given set of parameters.andP;  Figure I shows four experiments,each using the same initial parameters.andP;  Using Metamorph in a Monte Carlofashion to generate a series of experiments to investigate system performancefor a set of parameter settings is easy:andM;DOTIMES (EXPCOUNT N) (Metamorph))andM;Examples of the various output modes are shown in Figure 1.andM;Function optimization.andP;  The example chosen to illustrate the geneticalgorithm pro cess is the search for the binary representation of the domainvalue  (x) that yields the maximum of the function [x.sup.n], where 0 andless;= x andless;=1.0; in this instance, n = 10 (Figure 3).andP;  The domain values (x) of thefunction are represented as binary chromosomes 31 tokens long.andP;  This functionrepresents a search space of [2.sup.31] ([approximately] 109 possibleelements): too large to enumerate exhaustively or search randomly.andP;  We knowthat the desired goal is a string of 31 tokens, but the purpose of theexperiment is to see how close and how quickly the algorithm converges tothis representation using only proportional reproduction, crossover, andsimple mutation.andM;Parameter initialization.andP;  The family of functions representing Metamorph arekept as several LISP files.andP;  After these files have been loaded into the LISPenvironment, Metamorph is invoked by a simple function call:andM;andgt; (Metamorph)andM;This function first calls an initialization file INIT-FUNCTIONS, in which allthe parameter and initialization lists for the system are contained.andM;Creating the initial generation.andP;  Figure 4 shows an action diagram of theINITIALGENERATION module.andP;  This module generates the initial randompopulation of chromosomes from the user-specified alphabet.andP;  A samplepopulation of five randomly generated binary strings, each composed of 10tokens, is created by the following function call:andM;andgt; (MAKE-RANDOM-POPULATION 5 10 SIMPLE-BINARY)andM;((0 1 0 0 1 1 0 0 1 1 1)andM;(1 0 0 1 0 0 1 1 1 1 1)andM;(2 1 0 1 0 1 1 0 1 0 1)andM;(3 0 1 0 0 0 0 0 0 0 0)andM;(4 0 0 0 0 0 0 0 1 1 0))andM;A sample population of 10 randomly generated strings of seven tokens each,composed from an alphabet created from the frequency distribution of the 26most commonly used English words, would be created by:andM;andgt; (make-random-population 10 7 'ewf)andM;((O IN IN THE THE I THE TO)andM;(1 THE THE THE AND IN FROM OF)andM;(2 TO THE IT TO THE IT FROM)andM;(3 THE IN THE OF AND FROM FROM)andM;(4 THE THE IN OF OF FROM IN)andM;(5 IS OF A THE IN THE OF)andM;(6 AS OF THE IN THE IN THE)andM;(7 IT THE IN THE THE TO FROM)andM;(8 IT THE THE THE THE THE OF)andM;(9 IT IN THE THE IN FROM FROM))andM;The need for special encodings is debatable.andP;  Any representation can bereduced to a binary one, the number of bits per gene (see sidebar) determinedby the required accuracy.andP;  Holland has shown that binary encoding is in somesense optimal.andM;Potential applications for the genetic process are possible, however, wherethe generation of strings comprising tokens of a user-defined alphabet mightbe useful.andP;  Some examples are the synthetic generation and optimization ofverse or text and in certain cryptographic applications.andP;  A third morerelevant example is in encoding messages or events for analysis in classifiersystems.andP;  In this example, the initial generation of strings and thegeneration profile  max, min and average fitness, number of crossovers, andmutations) and a summary of the experiment profiles is available on the AIEXPERT BBS.andM;Selection.andP;  SELECTION is the group of functions that provides the fitnessevaluations of population and maintains the chromosomal profiles andgenerational history.andP;  SELECTION has the following form:andM;(DEFUN SELECTION (GENCOUNTandM;POPLIS EVAL-PARAMS ATTRIBSLIS)andM;(FIND-FITNESS POPLIS EVAL-PARAMS)andM;(MAKEPROFILE POPLIS FITNESSLIST)andM;(MAKEGENHISTORY GENCOUNTandM;PROFILELIST ATTRIBSLIS)andM;(TERM-CRITERIA FITNESSLIST))andM;where GENCOUNT is the generation index, POPLIS is the population list,EVAL-PARAMS is the parameter list for the problem-specific fitness function,and ATTRIBS-LIS is a dynamic list recording the evolutionary  characteristicsof  the  strings through the generations and maintained by the functionsnamed MAKEPROFILE and MAKEGENHISTORYandM;Fitness.andP;  Proper selection of the fitness measure is the key for success ofthe genetic-algorithm process.andP;  Choice of the fitness measure coincides withthe choice of representation.andP;  In our experiment, the fitness andrepresentation were straightforward since the binary representation of thefunction domain maps directly into the values of the function range.andP;  Thiswill not always be the case, and determination of the best representation fora given problem and what the proper measure of performance should be oftenrequires great intuition and cleverness.andM;Because of the desire to develop a point-and-click capability with generalityand flexibility, much of the infrastructure of the algorithm must betransparent to the user.andP;  Thus the argument structure of the geneticalgorithm can become complicated at times.andP;  In the case of EVAL-PARAMS, thelist contains the specific fitness function name and the list name of thefitness function arguments.andP;  For example:andM;(SETF EVALPOP-PARAMSandM;(LIST 'EVAL-BINARY-CHROMOSOMES EBC-LIST))andM;(SETF EBC-LIST (LIST 'XNTH XNTHLIST))andM;(DEFUN XNTH (XVAL NTHPWR)andM;(SETF FX (EXPT XVAL NTHPWR)))andM;(SETF XNTHLIST '(0.0 10)),andM;are the fitness functions and lists for the experiment in the text.andP;  XNTHLISTis the argument list for the function XNTH.)andM;Variation.andP;  Along with selection, proper variation of the population isfundamental to the performance of the algorithm.andP;  Metamorph applies thesimple genetic operators in this order:andM;Reproduction: The top level reproduction function has the following form:andM;(DEFUN REPRODUCE (FITNES STRATEGYandM;-    PARAMS POPSIZE)andM;(MAKE-REPRO-POOL FITNES POPSIZEandM;STRATEGY-PARAMS)andM;(GET-EVOLVERS REPRO-LIST POPSIZE)andM;(MAKE-MATES-LIST EVOLVERS POPSIZE))andM;Replication is in proportion to fitness to form a reproduction pool.andP;  In theMAKE-REPRO-POOL function, the replication factors are computed by thefunctions LIST-AVERAGE, PROBSELECT and EXPECTED-COUNT The predominantreplication strategy in the literature has been the biased roulette wheel.andP;  Ihave chosen instead to use the individual string fitness fi and the fitnessaverage favg to compute the expected times a string should be reproduced:andM;EC = fi/favgandM;The actual reproduction count is computed by rounding the expected count tothe nearest integer.andP;  This computation may yield a population size slightlylarger or smaller than the actual size, which may require adjusting theindividual replication factors correspondingly up or down to keep thepopulation constant.andP;  The manner in which this task is performed is shown inthe source code for the ADJUST-COUNT functions.andM;Two population-maintenance strategies can be employed to direct theevolution.andP;  These techniques are chosen through the selection-strategyfunction within MAKE-REPRO-POOL.andM;One is a pure selection strategy, in which the strings are reproduced inproportion to their fitness.andP;  This strategy has two pitfalls.andP;  The first isthat a super performer substantially more fit than the rest of the populationbut still suboptimal can appear early in the evolutionary process, dominatethe population, and cause the appearance of a genetic plateau.andP;  The searchprocess becomes glacial because of this near-zero diversity, and the systemmay fail to converge to the neighborhood of the optimal solution.andP;  The secondproblem is that the processes of crossover and mutation, if applied to everyevolving string, can result in nonmonotonic fitness behavior and the loss ofimportant performance history.andM;Monotonic fitness improvement and some nonzero diversity measure aremaintained by using elitist selection.andP;  Elitist selection has been usedexclusively in the Metamorph experiments performed so far, but Metamorph canimplement either.andP;  In the elitist strategy, the user specifies a gap factorthat indicates the number of population members to evolve or, conversely, howmany members to keep from the previous generation.andP;  For example, a gap factorof .8 for a population size of 20 would mean that the four best performersare kept unchanged from the previous generation and the other 16 stringsforming the evolver population would undergo crossover and mutation accordingto the respective probability factors.andP;  The plots shown in Figure 1 representan elitist strategy.andM;Crossover: Crossover indicates the random selection of mates for reproductionpool strings.andP;  The reproduction-pool chromosomes are probabilistically chosenfor crossover (employing a user-specified crossover probability).andP;  Thesestrings are called &quot;evolvers.&quot; The mates for the evolvers are chosen randomlyfrom the initial population with the restriction that no string can crossoverwith itself.andP;  Crossover-site selection is of the chromosome oruser-specified, meaning that all chromosomes crossing over will do so at thesame locus.andM;Mutation: Tokens of the post-crossover evolvers mutate according to auser-specified mutation probability.andP;  The APPLY-MUTATION functions arestructured to allow the user the greatest flexibility in the alphabets fromwhich the mutated tokens can be chosen.andP;  If the initial alphabet and mutationalphabet are the same, no character is mutated into itself.andM;Implementation tools.andP;  Metamorph was developed on a Macintosh II environmentusing Procyon's Common LISP Developers Tool (from ExperTelligence, Goleta,Calif.).andP;  This tool is an excellent implementation of Common LISP with apowerful structure editor, embedded graphics functions, and an interfacedesigners toolkit.andP;  My choice of LISP does not imply that it conveys anyintrinsic advantage over other programming languages.andP;  (D.andP;  E. Goldbergpresents his programs in Pascal.andP;  I highly recommend his book to seriousresearchers.(8))andM;CLOSING REMARKSandM;Aside from its obvious success in the development of biological forms, whyshould evolution be chosen as the inspiration for a methodology of machinelearning? Part of the answer lies in an observation that has been maderepeatedly since humans began to observe nature: evolution is the primeexample of a truly creative activity.andP;  Evolution is seen on a scale rangingfrom the cosmic to the atomic-it is the ability to create order from chaos inapparent violation of some of the first principles of physics.andM;Computer science has been unable to effectively address several persistentlydifficult problems.andP;  These problems include:andM;* Sensor fusion: merging data received from multiple, possibly conflicting,sensorsandM;* Target recognition: recognizing a target in clutterandM;* Adaptive navigation: real-time planning and route finding in a dynamicenvironment.andP;  One characteristic these problems share is that they areroutinely solved even by modest biological systems.andP;  This fact has ledcomputer scientists to study neural networks, computer architectures based onthe nervous systems of various living creatures, including the brain of Homosapiens.andP;  The next article of this series will investigate the synthesis of asimple neural topology using genetic algorithms and review some of theresearch in this area.andM;REFERENCESandM;1.andP;  Simpson, R. L. &quot;DARPA Machine Learning Program Plan&quot;  draft).andP;  DARPAMachine Learning Initative, DARPA Program Office, Washington, D.C., Mar.andO;1989.andM;2.andP;  Doolittle, D. P. Population Genetics: Basic Principles.andP;  Berlin:Springer-Verlag, 1986.andM;3.andP;  Holland, J. H. Adaption in Natural and Artificial Systems.andP;  Ann Arbor,Mich.: University of Michigan Press, 1988.andM;4.andP;  Pielou, E. C. An Introduction to Mathematical Ecology.andP;  New York,N.Y.-John Wiley andamp; Sons, 1969.andM;5.andP;  von Neumann, J. Theory of Self-reproducting Automata.andP;  A.W.andP;  Burks, ed.andO;Urbana, Illinois: University of Illinois Press.andM;6.andP;  Ulam, S. &quot;On Some Mathematical Problems Connected with Patterns of Growthof Figures.&quot; In A.W.andP;  Burks (Ed.) Essays on Cellular Automata.andP;  Urbana, Ill.:andO;University of Illinois Press, 1970.andM;7.andP;  Sampson, J. R. Biological Information Processing.Current Theory andComputer Simulation.andP;  New York, N.Y.: John Wiley andamp; Sons, 1984.andM;8.andP;  Goldberg, D. E. Genetic Algorithms in Search, Optimization andamp; MachineLearning.andP;  Menlo Park, Calif.: Addison-Wesley, 1989.andM;9.andP;  Grefenstette, J. J., ed.andP;  Proceedings of an International Conference onGenetic Algorithms and Their Applications.andP;  Hillsdale, NJ.: Lawrence ErlbaumAssociates, 1985.andM;10.andP;  Grefenstette, J. J., ed.andP;  &quot;Genetic Algorithms and Their Applications,&quot;Proceedings of the Second International Conference on Genetic Algorithms andTheir Applications.andP;  Hillsdale, NJ.: Lawrence Erlbaum Associates, 1985.andM;11.andP;  Shaffer, J. D., ed.andP;  Proceedings of the Third International Conferenceon Genetic Algorithms.andP;  San Mateo, Calif.: Morgan Kaufman, 1989.andM;12.andP;  Machine Learning 3 (Special issue on genetic algorithms).andP;  TheNetherlands: Kluwer Academic Publishers, 1988.andM;13.andP;  Casti, J. L. Alternate Realities: Mathematical Models of Nature and Man.andO;New York, N.Y.: John Wiley andamp; Sons,1989.andM;Scott Austin is a senior scientist in the AI and signal-processing dept.andP;  ofMcDonnell Douglas Corp., Huntington Beach, Calif.andO;</TEXT></DOC>
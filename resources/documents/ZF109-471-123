<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-471-123  </DOCNO><DOCID>09 471 123.andM;</DOCID><JOURNAL>AI Expert  Oct 1990 v5 n10 p61(2)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Turbo C++/C++ Professional: learn C++ using your own tools.andO;(Software Review) (Borland International's implementations ofobject-oriented C) (evaluation)</TITLE><AUTHOR>Brothers, Hardin.andM;</AUTHOR><SUMMARY>Borland International's $199.95 Turbo C++ and $299.95 Turbo C++Professional are excellent programs for learning theobject-oriented C++ programming language while continuing todevelop and maintain C programming language applications.andP;  This isbecause the software packages contain both C and C++ compilerswhich are always available.andP;  Eventually, the programmer who islearning C++ can create applications that combine C, C++ andassembler modules.andP;  Turbo C++/C++ Professional features bothcommand-line and mouse-and-keyboard-driven 'integrated developmentenvironment' control of the compiler.andP;  The Professional versionalso features a Turbo Profiler, Turbo Debugger, Turbo Assemblerand TLINK linker.andP;  Very good documentation accompanies thesoftware packages.andP;  Minimum host system is an IBM PC or compatiblewith MS-DOS 2.0 or later, 640Kbytes RAM and a hard disk.andM;</SUMMARY><DESCRIPT>Company:   Borland International Inc. (products).andO;Product:   Turbo C++ (Program development software)Turbo C++ Professional (Program development software).andO;Topic:     EvaluationSoftware PackagesProgram Development ToolsCompilersSpecificationsC Programming LanguageObject-Oriented Languages.andM;</DESCRIPT><TEXT>Turbo C++: $199.95andM;Turbo C ++ Professional: $299.95andM;Requirements: IBM PC or compatible, MS-DOS v. 2.0 or greater, 640K RAM, harddisk.andM;Available from: Borland International P.O. Box 660001 Scotts Valley, Calif.andO;95067-0001 (800) 331-0877andM;I know that object-oriented programming languages (OOPLs) are the wave of thefuture, and the sooner I start using one, the sooner I'll realize theirbenefits.andP;  But I also know that the switch is going to take time and I'llhave to do a lot of relearning and recoding.andM;Changing to an OOPL costs significant time and money.andP;  OOPL purists tell meto dump my knowledge of C, editors, compilers, and other utilities so that Ican start fresh learning a language such as Smalltalk.andP;  But bosses andclients aren't about to let me forget pending deadlines and don't want tosubsidize the transition.andM;If you have the same feelings, C++, especially Borland International's newTurbo C++ package, belongs on your development machine.andP;  You can make themove to object-oriented programming gradually when you have time and use yourfavorite tools to boot.andP;  Purists sniff that C++ isn't a &quot;real&quot; OOPL, and theymay be right-Turbo C++ simply offers the best tools I've seen to help aprogrammer move toward object-oriented programming and keep up withdevelopment schedules at the same time.andM;Turbo C++ is really two systems combined.andP;  One is a standard C (or ANSI C)conforming compiler that is quick and has very good library support.andP;  Ifyou're interested in creating DOS-only tools, this system may be the only Ccompiler you'll ever need.andP;  Its major weaknesses, which will probably beaddressed in later updates, are that it can't be used to create programs thatrun under Microsoft Windows, OS/2, or Presentation Manager, and it doesn'tperform some sophisticated optimizations that other C compilers can.andM;As a C compiler alone, Turbo C++ is worthy of serious consideration.andP;  But thesystem is also a C++ compiler that closely follows ATandamp;T's version 2.0 C++specifications, the only standard for the language until an ANSI C++ standardis adopted.andP;  Unlike some other C++ implementations for DOS machines, TurboC++ is a true compiler, not just a front-end program that changes C++ intostandard C for further compilation.andP;  And because you have both C and C++compilers always available, you can learn C++ gradually while finishingcurrent C projects.andP;  As you begin to adopt object-oriented programmingtechniques, you can integrate modules written in C++, C, and Assembler into asingle program easily.andM;Borland has put both compilers into a single program that determines whetherit should expect C or C++ syntax based upon the file extension of the moduleyou're compiling.andP;  You also can tell the compiler explicitly, withcommand-line switches or an installation program, which language you'reusing.andM;The compilers are accessible either from the command line, if you prefer touse a third-party editor such as Brief, or from an integrated developmentenvironment (IDE).andP;  If you've used other Borland compilers, you'll besurprised by this IDE.andP;  It sports an entirely new mouse-and-keyboard userinterface complete with multiple text windows that you can move, resize,tile, and overlap to your heart's content.andM;Programmers who like the IDE of previous Borland C, Pascal, PROLOG, and BASICcompilers often dislike the new user interface at first.andP;  But many whodisliked the early Borland interfaces find this one very pleasant to use.andP;  Iparticularly like being able to use a mouse to move windows around the screenand from one window to another.andP;  The ability to work on parts of severalfiles simultaneously is another useful feature.andM;The IDE includes a simple debugger that lets you set break points and tracethrough a program while you watch the values of variables.andP;  The debugger issufficient and valuable for debugging small programs but too limited forlarge and complex ones.andP;  For those you need Borland's newest Turbo Debugger,which is included in Turbo C++ Professional or sold separately as TurboDebugger and Tools.andM;The new Turbo Debugger looks a lot like the IDE.andP;  It, too, has amouse-and-keyboard interface with multiple windows that can be dragged aroundthe screen and overlapped or tiled.andP;  But unlike the simple debugger in theIDE, the Turbo Debugger has a great deal of specialized power; its ability toshow class hierarchies is essential if you're learning C++.andP;  This tool isalso a must if you're debugging a complex program written in C++ orobject-oriented Turbo Pascal v. 5.5.andP;  With the click of a mouse or a fewkeystrokes, you can see the complete class history of an object displayed asa tree that shows the classes from which it was derived.andM;The debugger lets you single-step both forwards and backwards through aprogram.andP;  If you've been around computers long enough to remember the freedomyou enjoyed after moving from a line editor to a full-screen one, you'll feelthe same way when you single-step backwards while debugging and see thevalues your variables once had.andM;A second program included in the professional version of Turbo C++ is mostuseful for finding the performance bottlenecks in your programs.andP;  The TurboProfiler, which also has a multiwindow interface, lets you time sections ofcode and count the number of iterations of each function or line of yourprogram.andP;  You can define interactively the parts of the program you want toinspect, so profiling becomes a process of looking deeper and deeper intoyour program until you find whatever has been holding it up or decide thatit's running efficiently.andM;If you're a programmer learning C++, the Profiler will help you see whatkinds of constructs produce tight code and which language features incurlarge time or code space penalties.andP;  For example, some object-initializationroutines end up calling a large amount of code from their parent classes'initializations.andP;  The Profiler will help you decide whether you want to speedup a program by giving objects a larger scope, even making them global,rather than creating and discarding them each time control enters a function.andM;Other tools are included in the professional package.andP;  The Turbo Assembler(TASM) is very good, and Borland's linker, TLINK, now allows the use ofoverlays to help you squeeze large programs into limited DOS memory.andP;  Theseprograms compare favorably with Microsoft's assembler and linker and aregenerally faster.andM;DOCUMENTING THE GOODSandM;No matter how good your tools are, you can't learn to write in a language oruse a compiler without proper documentation.andP;  Borland includes four manualswith Turbo C++ and another five with the professional package.andM;The manuals for Turbo Debugger and Profiler are generally very good and wellorganized.andP;  So is the manual for the C and C++ runtime library, although Iprefer documentation that places each library function on a separate page.andO;The remainder of the documentation is clear, but some items are difficult tofind because you can't always predict which manual will contain theinformation you need.andM;For example, descriptions of the C and C++ library routines and globalvariables are easy to find in the Library Reference, but the 12-pagecross-reference of library functions is in the Programmer's Guide.andP;  Ten pagesof information about C++'s stream functions are in a manual called GettingStarted; the remaining 20 pages are in the Programmer's Guide.andP;  The C++tutorial in the manual is the best part of the documentation.andP;  It takes youthrough the underlying concepts of C++ and helps you write and modify enoughexamples to make you soon feel comfortable with the language.andP;  You won'tbecome an expert C++ programmer from this tutorial alone but you will becomereasonably proficient, especially if you're already comfortable with C. Beprepared to study the tutorial examples thoroughly; the later parts of thetutorial, in particular, tend to move through difficult material quitequickly.andP;  If your only interest, now and for the foreseeable future, iswriting C, Turbo C++ is good, but so are many other C compilers.andP;  The TurboDebugger is invaluable, and you may want to buy it as a separate package andstick with your current compiler.andP;  But if you're a C programmer who wants tolearn C++, this package is excellent.andP;  Skip the standard package and buy theprofessional version.andP;  The added cost will be easily offset by the use you'llget from the debugger and profiler.andM;Several years ago, when I first tried to learn C, I had difficultyunderstanding even the most simple constructs until I could see how thecompiler was translating them into machine code.andP;  As soon as I understoodthat, I learned the language rapidly.andP;  The same is true of C++.andP;  With TurboC++ and Turbo Debugger, you will soon understand how C++ works and movequickly into the world of object-oriented programming while you continue tomaintain the programs that you've written in standard C.andM;Hardin Brothers is has been writing about computers and programming for nineyears.andP;  He is a freelance programmer and reviews editor for CompuServemagazine.andO;</TEXT></DOC>
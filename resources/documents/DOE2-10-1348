<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO> DOE2-10-1348 </DOCNO><TEXT>Tight synchronization in parallel programs executed on multiprogrammedmultiprocessors may result in catastrophic performance losses as a resultof the absence of swapped-out processes. Our work introduces a programmingmethodology that utilizes computational synchronization and avoids tightcontrol-flow synchronization in parallel programs. In this methodology,each phase of the computation is assigned a status that can be ready,blocked or completed, and tasks in each computational phase are self-scheduledto ensure computational progress by the available executing processes.Results obtained indicate that this methodology avoids the catastrophicperformance losses resulting from the swapping of processes in multiprogrammedmultiprocessors.</TEXT></DOC>
<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF109-543-505  </DOCNO><DOCID>09 543 505.andM;</DOCID><JOURNAL>Release 1.0  Oct 8 1990 v90 n10 p19(5)* Full Text COPYRIGHT EdVenture Holdings 1990.andM;</JOURNAL><TITLE>DB Software: data-driven design.andM;</TITLE><DESCRIPT>Company:   DB Software (products).andO;Product:   DB RE/generator (Program development software) (design andconstruction).andO;Topic:     Software PublishersSoftware PackagesData Base MaintenanceData Base DesignUser Aids.andM;</DESCRIPT><TEXT>Despite the best efforts of Ted Codd among others, databases are notmathematical abstractions.andP;  They're full of messy data (evennon-object-oriented ones), with trade-offs, opportunities for optimization,and those little imperfections that distinguish reality, from models.andO;Designing a database to accommodate real data requires not just algebra but acomplete description of the data elements and the way they relate to oneanother  - a data-driven design process.andP;  Just as users need visualization tosee the structure or metadata of what they're doing, so do database designersneed the reverse  a way to see the data in the structure, to check if itmakes sense and matches reality.andP;  While database design is a fairlytechnical, abstract art, the data itself is real and messy (hence the needfor obiect-oriented databases), and in the end the database must accommodatereality (more or less).andP;  The data the database will hold is not preciselypredictable but it is generally statistically describable.andP;  Thus what thedatabase designer most needs is a way to visualize the data  - not thenumbers or averages or trends, nor even the metadata of the model  - but theactual relationships, which can best be done with intelligent sampling.andM;Currently, most database designers use top-down entity-relationshipdiagramming tools from vendors such as Index, Bachman, KnowledgeWare andCadre.andP;  But while these tools can give you a nice idealized picture of therelationships you have defined, DB Software's RE/generator helps you todiscover the hidden structure based on the actual data.andP;  It can be usedeither for reengineering based on real data (rather than just datacatalogues), or for forward engineering based on real or hypothetical data.andM;DB RE/generator is part of a larger suite of tools that help you do databasedesign, maintenance and tuning in general.andP;  It has hooks for trading modelswith entity-relationship diagramming tools and database catalogues (databasespecifications) from the standard sources  - DB2, IMS, Oracle, etc.andP;  Forexample, you can import a database model, refine and normalize it, export itto look at the diagrams, modify them if you want, and then reimport it andlet RE/generator generate the right SQL statements for the database schemayou have designed.andP;  The first release does forward-engineering only, and willbe out next month for $10,000.andP;  It can import models from Cadre Technologies'Teamwork and generates SQL for Oracle or DB2 databases (so much for&quot;standard&quot; SQL).andP;  The full $20,000 version described here won't ship untilearly 1991, although it already performs its basic functions correctly.andM;Forward engineering: Design by exampleandM;RE/generator lets you design your tables more or less the traditional way,specifying domains, columns and rows (or attributes and relations), with aset of menus and forms.andP;  It also helps you define the functional dependenciesbetween fields (shown with arrows below); i.e.andP;  where A always implies Balthough B does not always imply A.andP;  Juan's boss is always Alice, althoughAlice has other reports than Juan.) For example, does a given name alwaysimply a given address, or vice versa? It's pretty obvious to a person that agiven part has only one name, but how does the machine know? Moreoyer, thesame name may have several part numbers, depending on size, say.andP;  And thecustomer may always have the same shipping address  - until Christmas, whenJuan suddenly orders things for Alice as well as for himself.andP;  You're introuble if your database can't accommodate these anomalies.andM;RE/generator lets you can validate the functional dependencies you havedefined with cooked-up data in &quot;example tables&quot; that have all the relevantcombinations, with one example of each: Same name, same address, differentorder number, different part number, different number of parts, and so forth.andO;For example, anyone who sees the table at left below ...andP;  ...  will instantlynotice that &quot;item 217-398-070011 is always a &quot;gold-plated corkscrew,&quot; andthat customer  Fred Bloggs&quot; always lives at 290 Maple Avenue.andP;  These exampletables are generated by the product (from examples supplied by the user) inaccordance with the functional dependencies.andP;  But if the designer thinks longenough he may want to add a record showing Mr. Bloggs at 40 Crescent Hill  -to allow for multiple addresses.andM;He may also decide he doesn't want the same part number for different sizes;each part should have a suffix indicating size.andP;  Nor should a single orderinclude multiple shipping addresses or delivery dates; a partially filledorder should be listed as complete and a new order covering the unshippedgoods created.andP;  These decisions represent business rules and procedures, butthey come from examination of the data and its structure.andP;  RE/generator canautomatically alter the schema to represent the new functional dependencies.andM;Reverse engineering and cleaning dirty dataandM;Just as it does with hypothetical examples, RE/generator can extract relevantsamples of data drawn from real files in VSAM, IMS, IDMS or relationaldatabases, and analyze them to find functional dependencies that may not berecognized in the database schema; for example, the schema contains the keyrelationship between part number and part name, but doesn't recognize thatthe letter prefixes indicate the plant that manufactures each part.andP;  Shouldthe prefix be listed separately? Likewise, the schema knows that student IDuniquely identifies each employee, but it doesn't catch the dependence of ageon date of birth.andM;In the process of finding these functional dependencies, the analyst may alsodiscover suspicious functional  &quot;independencies&quot; (not a formal term) due todirty data.andP;  Not only does Mr. Bloggs have two addresses, but the gold-platedcorkscrew may be listed once as 217-398-0070, or EDventure may have fivedifferent spellings.andP;  Are these mistakes, &quot;dirty data&quot; that needs to becleaned up, or rare but regular occurrences that should be accommodated inthe database structure? Some records look like subscription bills, otherslike invoices for a conference; should they go into separate databases? Thesame items have different names in different tables (DB Software cites an IDCstudy showing 20-to-1 redundancy of multiple names in typical mainframesites); how can you find these?andM;You could almost say that DB Software founder and ceo Dina Bitton was born torun a database software company.andP;  She was certainly named for the job.andP;  Shefounded the company last year, after eight years as a professor at Cornelland the University of Illinois.andP;  The fundamental concepts are hers, but shehas hired old business hands such as marketing manager Bob Healy from Ingres,and software engineers from IBM, Tandem, HP and Apple to help take themcommercial.andP;  Funding of $2.3 million comes from Sutter Hill and Oak.andM;It's only by looking at the actual data that the designer can get a good feelfor the answers to these questions  - and tell them to RE/generator in aninteractive session which results in a schema that is not only internallyconsistent but also reflects reality.andP;  From then on, as you build newrelationships or otherwise want to change your database structure, the systemcan go through and pick out any data that may violate the new model.andM;Feeling the dataandM;This use of sampling and algorithms for dealing with actual data moves RE/generator beyond even the Bachman line of tools, the class act so far indatabase re-engineering.andP;  Bachman derives structure abstractly fromdefinitions; RE/generator derives it from the data.andP;  Using RE/generator isakin to letting an architect build models out of real materials rather thandrawings or computer images.andP;  It just feels different; some designers may notneed it, but others may find the &quot;tangibility&quot; intensely appealing.andP;  Users,too, will probably find it easier to comprehend relationships embodied inreal data than the abstractions of entity-relationship diagrams.andP;  &quot;Oops! Youcan't do that! Some of our people work in several task groups and havedifferent managers for each one.&quot; Or  &quot;We only give the discount if they allgo to the same address, so there is only one address per account number.&quot;)andM;What RE/generator does is not a question of being smart; it requires lookingat all the data  - or making the software do so.andP;  That is what RE/generatordoes, in a matter of minutes.andP;  It considers each field and each combinationof fields as a key for every other combination of fields.andP;  Some can bediscarded pretty quickly; others take longer to reject as, say multipleaddresses, vice presidents who are not male, and other rare but allowedcombinations occur.andP;  Built-in statistical thresholds, which can be adjusted,prevent dirty data from messing up the process by displaying the relationshipit is testing and the data that contradicts it:  Are the different partnumbers for the corkscrew a mistake? What about the female vice president?andO;The user can decide and the system will take it from there.andP;  (From then on,the software can notice and flag inconsistencies for you.)andM;In the other direction, when you're designing a database from scratch (orfrom some non-database records), you can use sample records to construct asimulation of the database structure and have the system define thefunctional dependencies for you.andP;  Some people think mathematically; othersmay think less abstractly and find this a better way to design.andM;There are a lot of re-engineering tools showing up on the market now, butnone of them has RE/generator's sense of closeness to the data.andP;  Call itvirtual reality for databases.andP;  The developer gets the feeling that he'sworking with the real thing, even though he's using RE/generator's carefullyselected statistical sample.andM;Appendix: NormalizationandM;Normalization is a key concept in relational database design (although itsacrifices performance to abstract perfection).andP;  Normalization means puttingthe data into its cleanest, most &quot;flattened-out&quot; form, so that no data itemappears more often than absolutely necessary.andP;  That is, only unique data iskept, and other data is derived through functional dependencies.andP;  Forexample, if you have an order table including part numbers and part namesthat always match, then you really need two smaller tables, one for justorders with part numbers, and another that matches part numbers and partnames.andP;  That way you can never have a part name and number that don't match(although you can type in the wrong number and get the wrong part).andP;  The partnumber itself is necessary data, because it can't be determined any otherway; its presence is part of the data for the individual order.andM;Likewise, if each customer has only one address, you have a table showingeach customer and his address, and you don't repeat the address anywhere else- you get it by asking for the customer's address.andP;  Of course, if thecustomer turns out to have two addresses, you now have a problem.andP;  Now youneed to specify the address with each order, or you could possibly listaddress! and address2, and use address! by default.andP;  These are the kinds ofpesky problems database designers deal with all the time.andM;The value that identifies a unique element in another table is known as theforeign key.andP;  For instance, in a typical employee table, the departmentnumber is a foreign key referencing the departments table.andP;  (In an even morecompact form of storage such as that used by Nucleus (Release 1.0, 88-1), theorders might actually be represented by a vector which would have zerosexcept for those positions on the vector representing the parts ordered, butthat's another story.)andM;Once a database is normalized, developers typically denormalize back tostructures optimized for the most frequent applications and queries.andO;Denormalization involves putting data back into connected tables for greaterexecution and query efficiency, so that you don't need to spend a lot ofprocessing time looking up part numbers.andP;  You may decide, for example, toseparate area codes and phone numbers, or states and ZIP codes.andO;Theoretically, in a normalized database, one should have one table for eachday's orders, but you'd end up with a mess.andP;  (These issues are relevant tothe design of object-oriented databases, too.)andM;While normalized data structures are abstract and mathematical, there may beseveral ways to denormalize, with various trade-offs for performance,redundancy and storage.andP;  The way you denormalize, obviously, has a greatimpact on efficiency both of execution and of storage, and depends a greatdeal on the data itself: How many different values in a particular field? Howmany records in a particular table? (Next come efficiencies of queryexecution: Do you select from table A and then from table B, or from table Band then table A? If A is much larger, you're usually better off startingwith B.)andM;This is perhaps the most painstaking part of database design; it's a blackart.andP;  Either you're planning for data that mostly doesn't exist yet, oryou're working with existing data.andP;  Either way, it's tough to do the designbecause the problems are not abstract: The trade-offs depend on the dataitself: How often do customers have second addresses? Do orders typicallycontain several items or only one? How do salaries compare to job titles?andO;</TEXT></DOC>
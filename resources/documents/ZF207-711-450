<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF207-711-450  </DOCNO><DOCID>07 711 450  OV: 07 711 360.andM; </DOCID><JOURNAL>PC Magazine  Oct 31 1989 v8 n18 p207(2)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>QuickBASIC 4.5, Microsoft BASIC 6.0 (Software Review) (1 of 10BASIC-language evaluations in 'BASIC, yes, feeble, no.')(2Microsoft compilers) (evaluation)</TITLE><AUTHOR>Greenberg, Ross M.andM;</AUTHOR><SUMMARY>Microsoft Corp's QuickBASIC 4.5 and Microsoft BASIC 6.0 representthe state of the art in programming languages.andP;  QuickBASIC has anintegrated editor/compiler that lets users run programsimmediately as they are written.andP;  Its editor automatically placeseach subprogram into a separate editing window, and an additionalwindow allows immediate execution of direct statements.andO;QuickBASIC 4.5 contains a sophisticated interpreter that rapidlyexecutes instructions during program development and a compilerthat generates true standalone .EXE files.andP;  Microsoft BASIC 6.0has the same editing environment and standalone compiler, but addssuch enhancements as the ability to call OS/2 functions andspecial object modules that eliminate unnecessary runtime libraryfunctions.andP;  A major deficiency of both compilers is the lack ofsupport for expanded memory.andM;</SUMMARY><DESCRIPT>Company:   Microsoft Corp. (products).andO;Ticker:    MSFT.andO;Product:   QuickBASIC 4.5 (Compiler)Microsoft BASIC 6.0 (Compiler).andO;Topic:     Programming LanguagesBASICEvaluation.andO;Feature:   illustrationtable.andO;Caption:   Fact file: editor's choice. (table)andM;</DESCRIPT><TEXT>When Microsoft developed the original BASCom 1 compiler (QuickBASIC'spredecessor) for MS-DOS, it was clear that BASIC would never again be justfor beginners .andP;  In the years that followed, no fewer than six new versionshave been released, and each offering has boasted more capabilities than theone before it.andP;  The latest releases of both Microsoft BASIC 6.0 ($295) andits sibling, QuickBASIC 4.5, ($99) represent the state of the art not onlyfor BASIC, but for any compiled language.andM;Programming with QuickBASIC 4.5 is a great pleasure, thanks to an integratededitor/compiler that lets you write programs and run them immediately.andP;  Whensyntax or other errors are detected, the cursor is placed on the offendingstatement, and an appropriate message is displayed.andP;  One particularly nicetouch is the way QuickBASIC's editor automatically places each subprogram andfunction into its own editing window.andP;  The organization of components intothese easily manageable logical portions greatly simplifies viewing andediting large programs.andP;  Two windows may be displayed at once; and text maybe cut, pasted, and copied between them.,andM;IMMEDIATE WINDOWandM;Unlike most language compilers, QuickBASIC provides a window where directstatements like PRINT X may be immediately entered and executed.andP;  Anotherdifference from competing products is that there is only a minimal delaybefore a program begins to run.andP;  In contrast, using Borland's Turbo Basic 1.1to recompile a large program in memory can take several minutes, even if onlya single line has been changed.andM;QuickBASIC 4.5 can accomplish all this because the product is actually twocompilers in one package.andP;  During program development, a sophisticatedinterpreter executes each instruction nearly as fast as it would if theprogram were compiled.andP;  Completed programs may then be compiled into truestandalone .EXE programs either from within QuickBASIC's editor or at the DOScommand line.andM;Where QuickBASIC really shines is in the excellent debugging capability builtinto its editing environment.andP;  Perhaps its most important debugging featureis its ability to trace a program's flow from statement to statement whilemonitoring variable values.andP;  A unique history mode even lets you reverse theexecution, to see how a program arrived at a given statement.andP;  You could tellQuickBASIC, for example, to halt the program if the variable X ever reaches avalue greater than 10.andP;  By then stepping backward through the program, youcan see where the variable was assigned and how the program arrived at thecurrent statement.andM;Besides being the easiest of the available BASIC compilers to learn and use,QuickBASIC 4.5 provides a wealth of other important features.andP;  These includehuge arrays with up to 32,767 elements, true functions, and sophisticatedgraphics commands that work in any of the CGA/ EGA/VGA video modes.andP;  Herculesgraphics is supported, though users will first have to run a special TSRsupport program from the DOS prompt.andP;  Also, QuickBASIC 4.5 lists for a mere$99; the only thing better is its big (and more expensive) sibling, MicrosoftBASIC 6.0.andM;MICROSOFT BASIC 6.0andM;Microsoft's BASIC 6.0 includes the editing environment and standalonecommand-line compiler found in QuickBASIC, but the compiler in thisincarnation has a number of useful enhancements.andP;  For starters', thedocumentation comes in separate three-ring binders, as opposed to thepaperback manuals supplied with QuickBASIC.andP;  But the real difference is thatBASIC 6.0 is able to create programs that run under DOS or OS/2.andM;Microsoft BASIC goes a step further by including a series of special objectmodules that eliminate unnecessary components of the BASIC runtime library.andO;(Microsoft refers to these as &quot;NO&quot; object files because they have names likeNOCOM, NOHERC, and NOLPT.) Normally, a program compiled with QuickBASIC orthe BASIC compiler will automatically add the library routines for COMsupport, graphics, printer output, and so on, even if they are not needed.andO;By explicitly linking one or more of these object modules with the BASICprogram, the unneeded routines can be excluded from the final version at aconsiderable savings in executable file size.andP;  In some cases, the resultant.EXE program may be reduced by 10K or more.andM;Another important addition to the BASIC 6.0 compiler is an alternative mathlibrary, which works much faster than the standard IEEE numeric format usedby all other Microsoft languages.andP;  Prior to QuickBASIC 4.0, all versions ofMicrosoft BASIC utilized a proprietary method for storing floating-pointnumbers; this entailed a tradeoff: math operations could be performed veryquickly but at the expense of accuracy and compatibility with otherlanguages,andM;When QuickBASIC 4.0 was introduced, with support for interlanguage callingand numefic coprocessors, Microsoft was obligated to abandon its nonstandardformnat.andP;  This format has now been reinstated as an option in BASIC 6.0 forprograms in which math performance is paramount and access to routineswritten in other languages is not needed.andM;PROBLEMS AND LIMITATIONSandM;As good as QuickBASIC 4.5 and BASIC 6.0 are, they are not perfect.andP;  Onesorely lacking feature that should be added to both compilers is support forexpanded memory.andP;  The unavailability of this support in any of the Microsoftlanguages is especially annoying when you consider that even a company astardy as Lotus Development Corp.andP;  has been using EMS for years.andM;There is probably no cure for my other objections, since they are too deeplyrooted in the Microsoft BASIC language syntax.andP;  For instance, many commandsare confusing and inconsistent: to deteff nine die current cursor line in aprogram you would use the CSRLIN function, but to obtain the cuffent columnyou have to use POS (0).andP;  Even forgetting that a name such as CSRCOL would bemore consistent, why in the world should this function even require a &quot;dummy&quot;argument? Equally confusing are the many graphics commands and all of theirvariations; die haphazard development of the syntax for graphics statementsmeans that there are often several ways to achieve the same results.andM;These criticisms are not much more than minor quibbles, though.andP;  Microsoftclearly makes the BASIC to beat.andP;  And BASIC 7.0, expected by the end of theyear, is intended to offer even more.andM;PEEKING INSIDE THE BASIC COMPILER To the uninitiated, a BASIC compiler'stranslation of a source file into machine code that the PC's processor canexecute may seem to be magic.andP;  In many cases, however, the conversion of aBASIC statement into assembly language is more straightforward than you mightthink,andM;In the interest of simplicity, this discussion will be limited to simple mathoperations that can be effectively translated into similar or equivalentmachine instructions.andP;  (More-complex BASIC commands are converted into callsto the language library, which is another topic altogether.) In the examplesthat follow, Microsoft's QuickBASIC Version 4 was used because of its abilityto generate an assembly language source listing while a program is beingcompiled.andM;STEP BY STEPandM;Let's say you have the BASIC statement X = 12 in a program.andP;  From thatstatement, QuickBASIC will generate the assembler instruction MOV WORD PTR X,12.andP;  This tells the PC's processor to move the value 12 into the word-sizedmemory location that has been named X.andP;  As with BASIC, an assembly languageprogram may refer to a variable by name; the assembler itself will do thedirty work of finding an appropriate memory address to hold it.andM;Next, consider the statement X = X + 100.andP;  QuickBASIC will translate thisinto ADD WORD PTR X, 100; that means add 100 to the variable X.andP;  Again, thisis an instruction that the PC's processor can execute directly, In mostcases, QuickBASIC will not be as smart as a human at coding in assemblylanguage, but as the program on the right illustrates, it is extremelyefficient when it comes to integral math operations.andM;In the example, X is first assigned the value 4 with the MOV instruction.andO;Then the AX register (one of the processor's built-in variables) is loadedfrom X, where it stays throughout the remaining assignments.andP;  Understand thatany operation performed on a register will be much faster than a similaroperation performed on a variable kept in memory.andM;To multiply X by X, QuickBASIC generates an Integer Multiply instruction, andthen places the result back into X.andP;  Because QuickBASIC is smart enough torealize that AX still holds the contents of X from the previous calculation,all the remaining operations are performed using AX.andM;To multiply X by 2, a Shift-Left instruction is used.andP;  This is more efficientthan the Integer Multiply instruction-whenever the bits in an integervariable are shifted left one position, the value is effectively multipliedby 2.andP;  After shifting, X is again assigned from AX.andM;Multiplying X by 3 cannot be done with shifting, so the CX register (anotherof the processor's built-in variables) is first loaded with the value 3.andP;  CXis then used as the multiplier of AX.andP;  The answer, which is now held in AX,is moved back into X.andM;Two left shifts in a row are then used to multiply AX by four; again, theanswer in AX is assigned to the variable X.andP;  Finally, the X + X assignment iselegantly handled by simply adding the AX register to the value of X.andM;These few examples barely scratch the surface of what a sophisticatedcompiler like QuickBASIC can do.andP;  But these program fragments do show thatthere is really nothing mysterious about a compiler.andP;  Armed with thisknowledge, you might want to experiment with examples of your own-perhaps tosee how QuickBASIC encodes a FOR/NEXT loop, or how a CALL statement is set upand processed.andM;ROLE OF THE OPTIMIZERandM;Besides merely translating your BASIC in structions, many compilers alsoperform what is called optimization.andP;  The Microsoft BASIC compilers, forexample, will remember the results of a previous calculation and reuse themlater.andP;  This feature makes it unnecessary for the compiler to generate thesame code repeatedly.andM;This is transparent to the BASIC programmer and has the effect of eitherreducing the amount of code that is generated or increasing the speed of theresulting program.andP;  In the code fragment below, the ex pression X + Y *Array(1O) would be evaluated, then stored in a temporary memory location:andM;IF X + Y * Array (10) andgt; 100 THENandM;A = X + Y * Array (10) ELSEandM;B = X + Y * Array (10) END IF Thus, QuickBASIC will create code to calculatethe expression just once and then use the results of that calculation.andP;  Thiswould be equivalent toandM;Temp = X + Y * Array (10)andM;IF Temp andgt; 100 THENandM;A = Temp ELSEandM;B = Temp END IFandM;Because many steps are required to evaluate an expression, doing this onceahead of time can provide a considerable savings.andO;</TEXT></DOC>
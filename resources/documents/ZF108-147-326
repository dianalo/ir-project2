<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-147-326  </DOCNO><DOCID>08 147 326.andM;</DOCID><JOURNAL>Computer Language  Feb 1990 v7 n2 p107(11)* Full Text COPYRIGHT Miller Freeman Publications 1990.andM;</JOURNAL><TITLE>Programming with class. (includes related article on SmallTalk forPresentation Manager) (buyers guide)</TITLE><AUTHOR>Bergmen, Noel J.andM;</AUTHOR><SUMMARY>A buyers guide to object-oriented programming libraries covers 11products from 10 vendors.andP;  Included are Smalltalk Goodies fromDigitalk, Actor from the Whitewater Group, and CommonView fromImageSoft Inc.andM;</SUMMARY><DESCRIPT>Topic:     Software PackagesDirectoriesAdd-In-On SoftwareObject-Oriented Programming.andM;</DESCRIPT><TEXT>Programming with class Object-oriented programming is getting a lot of pressthese days, and justifiably so.andP;  In object-oriented programming, we createactive data types (I often refer to them as anthropomorphic data) thatunderstand commands.andP;  These active data types are known as classes.andP;  We canalso derive new data types, known as subclasses, from existing ones (parentclasses), changing or enhancing only those behaviors unique to the new datatype while maintaining the knowledge built into the parent class.andP;  This isknown as inheritance.andM;This philosophy carries certain implications.andP;  First, the number of commandswe humans have to remember is reduced.andP;  We rely on the object to perform theactions necessary to achieve the logical command given to it.andP;  Polymorphismis the ability to use the same command and have its meaning depend upon theclass of the object.andM;Second, the dependencies between what would be called modules in classicstructured programming terminology are redued.andP;  Objects (and theirprogrammers) remain blissfully ignorant of the implementation detailsbelonging to other objects.andM;This philosophy of code sharing through inheritance and the existence ofsimple, well-defined interfaces to classes help programmers create and sharereusable classes.andP;  That is a stated goal of object-oriented programming.andP;  Iset out to see how this was working in the real world.andM;Digitalk Inc.andM;Smalltalk GoodiesandM;Smalltalk is the standard which object-oriented programming is judged.andP;  Ithas been around the longest of the popular object-oriented programminglanguages and has the largest following.andP;  As far as most people areconcerned, Smalltalk is the original object-oriented language.andP;  Most objectlibraries (and the most mature) are available for Smalltalk.andM;As a language, Smalltalk is so dependent upon object-orientation that itwould be virtually useless without a class library.andP;  But Small-talk is muchmore than just a language; it is a complete development environment, repletwith windows, menus, graphics, and programming aids.andP;  All of these exist asobject classes and are included in the typical Smalltalk package.andP;  Digitalk'sSmalltalk/V i86 is one of the more popular implementations of Smalltalk, andcomes with over 100 classes.andM;Some of these classes look like the standard data types of procedurallanguages: strings, arrays, floating-point numbers, and so on.andP;  Some areabstract classes, which are not used directly (they exist to provide a commonparent for related subclasses).andP;  We can divide the rest of the classes intotwo broad categories: those that are related to the user interface and thosethat are not.andM;The latter set includes collections.andP;  Creating collections of arbitraryobject types is one of the more powerful features of Smalltalk.andP;  Array andSTring are derived from Collection.andP;  So is Dictionary, which allows access tostored items through noninteger keys.andP;  Other classes provide multitasking,pattern-matching, directory and file access, a DOS interface, abackward-chaining inference engine, and more.andM;The classes that deal with user-interface-construction are even moreextensive.andP;  Smalltalk has classes for graphics (with or without animation),windows and subwindows, menus, dialogues, and different kinds of visualcontrols.andP;  The classes included in Smalltalk/V 286 don't provide thosecapabilities in isolation but tie them together within a framework forbuilding applications.andP;  And you derive new specialized classes from existingones, allowing you to produce custom applications with very little effort.andM;The paradigm used in Smalltalk/V 286 is essentially the classic SmalltalkModel/View/Controller metaphor.andP;  This is a framework for graphicalapplications that formalizes program structure and places the application'sclasses into one of three categories:andM;* Models virtualize a concept in the application domain without concern forits representation.andM;* Views provide a visual representation of a model.andP;  The Smalltalk/V Panesclass hierarchy implements views.andM;* Controllers provide the interface between the other classes and inputdevices.andP;  The Smalltalk/V Dispatcher class hierarchy implements controllers.andM;MVC (or an modification of it) is used in several of the products reviewedhere.andP;  Learning and using MVC does take a little extra development time, butit is worth it, even though it has its drawbacks.andP;  You have to decide uponformal models for the concepts with which your program works.andP;  Then youcreate views that use the formal interface to the model.andO;Windows/Presentation Manager programmers tend to intertwine windows (views)and the concepts they represent (models).andP;  This makes it more difficult toprovide alternate views of the same information, change the model withoutchanging the view, and vice versa.andP;  Once you have separated form fromsubstance (models from views), it is easier to show different views or evenchange your whole windowing paradigm without impacting the rest of yourapplication.andM;This last point becomes more important when you realize that no two packagescovered in this review have identical metaphors (much less class libraries)for windowing.andP;  Also, none automatically provides style guides, such asmultiple-document interface (MDI).andP;  The Smalltalk environment includes theclasses that make up the applications integrated into it, includingspecilialized editors known as browsers Smalltalk has browsers formanipulating classes and working with the disk.andP;  You can also create your ownspecialized browsers.andP;  Smalltalk has other applications too, such as a paintprogram.andP;  All the classes for all the applications are there, ready to beused, serving multiple roles as applications, reusable classes, and samplecode.andM;Those are just the classes included in the Smalltalk/V 286 package.andP;  A numberof add-on class libraries are available from Digitalk.andP;  These are calledGoodies packs, and each is a largely unrelated collection of useful classes.andM;The imporant thing about all of these packs is that they are not simplestand-alone libraries.andP;  Each is an example of how to extend the existingclass hierarchy by enhancing existing classes and adding new ones.andP;  Asstand-alone classes they provide valuable features, but many of the newclasses are specialized versions of existing classes, providing concreteexamples for novice and expert programmers alike, and can be furtherspecialized for your own needs.andP;  The documentation indicates how each classfits into the class hierarchy and reiterates that most Smalltalk classes arebuilt upon existing work.andM;Goodies #1 was developed for Smalltalk/V and comes with a number of classes(such as multitasking and good interface classes) that are included inSmalltalk/V 286.andP;  However, this disk has some other useful classes, such as aforward-chaining inference engine and a set of classes for composing storing,and playing music on the PC's speaker.andP;  All in all, though, this disk is notas useful for Smalltalk/V 286 owners as the other Goodies packs.andM;Goodies #2 was developed by students at Carleton University in Northfield,Minn.andP;  The classes include a spelling checker, additional pane classes (panesare windows in Windows/PM parlance, in whose terms these would be called newwindow classes), software support for floating-point (for those who lack amatch coprocessor), and enhancements to the existing menu system and classbrowser.andM;In some ways, Goodies #2 is the quintessential Smaltalk add-on disk.andP;  The newpane classes are neatly done and aid in writing database forms entry andspreadsheet programs.andP;  The enhancements to existing Smalltalk classes providedesirable features and show the power you get by using an environment that isbuilt upon object-oriented principles and can be modified.andM;Goodies #3 is another gift from the kids at Carleton University.andP;  LikeGoodies #2, this disk contains old (but enhanced) and new classes.andP;  The oldclass is another enhancement to the browser, this time an application browserthat lets you see only those classes used in the application rather than theentire Smalltalk class hierarchy.andP;  Also, the method list can be restricted toonly methods used in the application.andM;Other classes on this disk include a three-dimensional graphic editor(including classes for doing three-dimensional graphics), a neutral networkengine with which a character-recognition application is developed, classesfor implementing and editing directed graphs, a matrix match class, classesfor displaying and manipulating a chess board, and a simple video arcadegame.andP;  Several of these classes require floating-point match support, so thatis also included in Goodies #3.andM;As with Goodies #2, you not only get useful classes, but they are used insample applications.andP;  In the case of the directed graph classes, you getclasses for implementing the graphs as well as for displaying and editingthem.andM;The Communication Pack, also written for Smalltalk/V and Smalltalk/V 286,provides all of the lower-level tools needed to perform serial I/O, plus acollection of higher-level communication classes.andP;  Among the 10 new classesare a TTY emulator window, a specialized terminal emulator/browser foraccessing UNIX systems, and a browser for interacting with the BIX bulletinboard.andP;  For those who wish to access specialized hardware devices, this packshows to to write and integrate device drivers into Smalltalk/V.andM;Softpert Systems Ltd.andM;Application ManagerandM;Application Manager is a series of enhancements to the Smalltalk/Venvironment that enhances the programmer's ability to work with classes.andP;  Itadds several important features: controlled access to classes, producingdocumentation, commenting classes, version control, performance analysis, andmore.andP;  It's designed to help teams of programmers work together.andM;Essentially, Application Manager is another browser and some tools.andP;  Youdefine your application with the browser, specifying which classes andmethods it uses and owns.andP;  When you want a better overview of yourapplication, a graphical view of the class hierarchy is available and can beprinted.andP;  Once an application has been defined, facilities are provided toload and unload applications.andM;Other useful features include the ability to define custom templates forclasses and methods, and method counting for seeing which methods areexecuted most frequently.andM;Knowledge Systems Corp.andM;Smalltalk classesandM;Knowledge Systems Corp. produces a variety of class libraries for Smalltalk.andO;Available at the time of this review were Pluggable Gauges, NodeGraph-80, andDraw-80, all for ParcPlace's Macintosh implementation of ObjectWorks(ParcPlace's new name for its Smalltalk implementation).andP;  Unfortunately,ObjectWorks was not available, so I am going strictly by the documentation.andM;Not surprisingly, ObjectWorks seems to have maintained its capableimplementation of the MVC paradigm.andP;  Pluggable Gauges, as the name suggests,is a collection of pluggable views and their controllers that implementvarious forms of gauges.andP;  It has bar graphs, needle graphs, circular gaugeswith various labelings, and a simple digit gauge.andP;  Also provided are examplesand a simple editor for working with the gauges.andP;  All in all, PluggableGauges is a nice little package.andM;NodeGraph-80 is a handy package for manipulating directed graphs.andP;  Not onlydoes it include models for nodes and graphs, but it also contains awonderful-sounding editor for working with directed graphs.andP;  The editor hasall sorts of bells and whistles, including multiple types of arcs rangingfrom straight lines to spline curves.andP;  Of course, the basic node class israther abstract.andP;  In many applications, you will derive new classes of nodesto implement your special functionality.andM;One of the most endearing things about these two packages is that the authorsincluded a discussion of design issues and constraints in the documentation.andO;Not only do you see what they did, but you are told why they did it that way.andO;(Documentators of other class libraries, take note!)andM;Draw-80 provides a collection of classes for drawing, editing, scaling,storing, and recalling all sorts of geometric shapes, including uncommon onessuch as parabolic curves.andP;  Draw-80 is provided with all the classes to make agraphical editor; one very useful way to use the package would be as asubview.andP;  If you want MacDraw-like features, this is a valuable classliabrary.andM;The Whitewater GroupandM;ActorandM;Actor is a Smalltalk-like environment for Windows.andP;  The syntax of the Actorlanguage is closer to C or Pascal than Smalltalk, but the semantics of thelanguage and the workings of the environment are clearly in the Smalltalkmold.andM;Not surprisingly, the foundation classes included with Actor are quitesmaller to those found in Smalltalk.andP;  Aside from the GUI-related classes,they are two works on the same theme.andP;  For example, files are located underStream in the Smalltalk class hierarchy, whereas they are under Object inActor.andM;As far as graphics support goes, Small/V and Actor are like day and night.andO;Actor does not address the concept of the application framework.andP;  Neither theMVC paradigm used in Smalltalk/V 286 nor the much-simplified modified paradimin Smalltalk/V PM is present in Actor.andP;  Also, it is impossible to create somesimple things such as pull-down menus directly in Actor code withoutresorting to Windows calls or a resource editor.andP;  On the other hand, recentversions of Actor include frame representation language classes, based inpart on articles that appeared in the Nov. and Dec. 1986 issues of AI EXPERT.andO;These classes can be used to implement fairly flexible information-retrievalstructures.andM;In all fairness, Actor is much smaller than the Smalltalk products, and ithas to work within the much tighter memory constraints imposed by MicrosoftWindows.andP;  Perhaps when Actor is less encumbered, it will move toward thematurity of the Smalltalk implementations.andM;In the meantime, Actor is certainly the fastest way to prototype workingWindows applications.andP;  One of my favorite techniques is prototyping withActor and porting to C talk/Views once a final shape appears.andM;The Whitewater Group has released a single addition to Actor: LanguageExtensions I.andP;  It contains several very useful classes.andP;  My favorites are theobject-storage, pattern-matching, method-browser, and ordered-dictionaryclasses.andM;The Whitewater Group also maintains a BBS for Actor users.andP;  This BBS has manymany classes that are free for the downloading.andP;  A &quot;Best of the BBS&quot; disk Iwas given contains 60-odd compressed archives totalling over 1MB.andO;Uncompressed, that results in a lot of useful extensions and applications forActor.andP;  The BBS and disk contain a lot of very useful classes and other code.andM;The Whitewater Group has released two other products that deserve briefsmention.andP;  WinTrieve, a Windows database server, includes both Actor classesand C libraries for accessing the database.andP;  The Resource Tookit does notinclude classes; it is a resource editor for creating Microsoft Windowsresources such as dialogues and menus.andP;  This is an excellent product for anyWindows developer, and doubly useful for anyone using Actor.andM;Stepstone Corp.andM;Objective-C, IC-Pak 101andM;Objective-C proves that C++ isn't the only way to add objects to C.andO;Objective-C's message syntax looks nothing like a C function call and can bean early turn-off to C programmers.andP;  However, once you get past thelanguage's different feel, it provides excellent object-oriented features andfits them to a higher-performance engine than you are likely to get with anyof the tools mentioned so far.andM;Objective-C extends C with the syntax necessary to define classes and sendmessages.andP;  Messages can be early-bound with strong type-checking orlate-bound with full run-time polymorphism.andP;  This yields the ultimate inflexibility for the programmer and returns control of theperformance/flexibility trade-off to the user, where it belongs.andM;Given that Objective-C has the same semantics as Smalltalk, you might expectit to have a similar class hierarchy.andP;  You would be wrong.andP;  Objective-C isbased on C, and therefore things like integers, floats, longs, and charactersare handled as primitive data types.andP;  Also, the Objective-C class librarydoes not provide date/time classes or some other generally useful classes.andM;The only classes that come with the Objective-C run-time library are Object,AsciiFiler, ObjGraph, and Unknown.andP;  Object is the abstract class at the topof the hierarchy, providing all sorts of default functionality.andP;  The rest areused to implement an archival scheme for objects.andP;  ObjGraph is also generallyuseful.andP;  It generates a graph of objects reachable from an object and is usedwhenever you need to get beyond the top level of a collection; for example,deep copy (copying the actual contents of a collection, rather than thereferences stored in the collection).andP;  IC-Pak 101 provides a few otherclasses, such as arrays, collections, balanced nodes, strings, points,rectangles, associations, and sequencers.andP;  These are analogous to some of theclasses in Smalltalk, particularly the collection classes.andP;  It is interestingthat sorted collections are implemented under Bal-Node, the abstract classfor balanced trees, rather than Collection.andP;  Of course, since Objective-C hastrue polymorphism, you generally needn't worry about what type of collectionyou are using.andM;CNS Inc.andM;C talk/ViewsandM;C talk is another object-oriented extension to C, very much in the moldpioneered by Objective-C.andP;  C talk is extended from C with two basicconstructs: classes and messages.andP;  C talk messages take the form:andM;andless;1valueandgt; = @ andless;receiverandgt; andless;messageandgt; @andM;Unlike the C++ method/message syntax, which is derived from thatfunctions-call syntax, C talk and Objective-C use a more Smalltalk-likesyntax with named parameters.andP;  C talk's class hierarchy has a single class,object, from which all other classes are derived.andM;One of the major advantages of C talk over Objective-C is that it provides abrowser.andP;  This makes working with class hierarchies a lot easier and moreenjoyable.andP;  You can use a normal text editor, but the C talk-to-Cpreprocessor needs certain specially formatted information, so you wouldprobably use a standard text editor only to edit some methods on occasion.andM;C talk does not provide the strong type-checking and early binding now foundin Objective-C, but a new streamliner tool will automatically perform earlybinding and strip out unused classes or methods.andP;  You streamline afterdebugging the application, then compile and test the streamlined application.andM;C talk comes with a full complement of object classes in the Smalltalk modelwith variations on the theme.andP;  Like Objective-C, C talk is built on top ofthe C language and treats integers, longs, and so on, as primitive datatypes, not classes.andP;  Also, C talk moved collections and streams under anabstract Container class (whereas they are separate in Smalltalk) and addedan explicit Archiver class for manipulating sequential archives of objects(similar to AsciiFiler from Objective-C).andP;  Archiver objects take care of mostof the details involved in storing and loading archives; however, objects tobe kept in the archives must implement the methods putTo and getFrom , whichare responsible for storing and loading the subclass's instance variables.andP;  Anew version of C talk/Views includes classes for communications, timers, aconsole window for debugging, and a few other goodies.andM;To this has been added Views, a rich set of classes for working withgraphical user interfaces.andP;  Earlier versions of C talk also providedwindowing classes (character-based).andP;  The new Views classes should not beconfused with those classes.andP;  Views is really a simplification of the MVCparadigm and is rather similar to that found in Smalltalk/V PM.andP;  The Viewsclasses lack Smalltalk/V PM's interplay between window objects, but theNotifier is somewhat more sophisticated.andM;Unlike the classic MVC paradigm, where controllers talk to views and modelsdirectly and models can be active, the C talk/Views paradigm has a singlecontroller (really an abstraction of the Windows event system--I expect theOS/2 version of C talk/Views to support one Notifier instance per messagequeue thread) that talks only to passive views and models.andM;Views has a few drawbacks.andP;  You can have and often want multiple views of thesame model.andP;  The problem is that all the views using the model have to knowabout each other so they can let each other know when a change is made.andP;  InSmalltalk/V PM, this is formalized in the ApplicationWindow class, but Viewsdoes not provide that formalization.andP;  Future versions of Views should have aformal abstract class for models, so a model keeps track of all views usingit and notifies them when a change is made.andP;  This supports not just multiplesubviews, but also distributed applications where a view is not a localwindow.andM;One of the goodies included with C talk/Views is a utility, CTIG, whichgenerates a C talk/Views class from the template created by the Windowsdialogue editor.andP;  The new class is a subclass of the Dialog class, and has aCreateOf class method and initialize instance methodf you add instancevariables and other methods to complete the class.andP;  The generated code willdisplay correctly on displays with different aspect ratios, addressing acommon complaint of Windows programmers.andM;CTIG is not a stand-alone interface generator but since the dialogue editorcomes with the Windows SDK, CTIG is the next best thing.andM;C++ LibrariesandM;I can hear the C programmers now: &quot;Okay, so much for all of those nonstandardlanguages.andP;  Now we can talk about the good stuff.&quot;andP;  Staunch optimists, all.andO;I have good news and bad news.andM;The good news is that C++ class libraries do exist and they are reasonablyfast with compact data structures.andP;  The bad news is that few are worthy ofthe term &quot;object-oriented.&quot;andP;  They may provide data hiding and protectimplementation details, but most have little (if any) abstraction,polymorphism, or inheritance.andP;  For the most part they are more like Adapackages than object-oriented class libraries.andM;Zortech Inc.andM;C++ Developer's EditionandM;The preceding paragraph applies in full to the Zortech class library.andP;  Youcan't deny the usefulness of Zortech's classes, but the whole library hasessentially two instances of inheritance.andM;Classes provided by Zortech include vectors, linked lists, dynamic arrays,virtual (disk-based) arrays, binary trees, hash tables, directories, textwindows, and event queues.andP;  Full source is included on disk and in thedocumentation.andP;  The documentation does a fairly good job of walking youthrough each class, explaining how it was built.andP;  Although this is intendedto be an introduction to good C++ programming, it might have been moreeffective if Zortech had used more object-oriented design.andP;  The company seemsto take the position that C++ programmers value performance over abstraction.andO;This may sound like a criticism, but other than my disappointment with thelevel of abstraction, I think Zortech's classes are pretty decent.andM;Rogue Wave Associates Inc.andM;C++ Vector MatrixandM;Ansys Software Inc.andM;M++andM;Zortech isn't the only company providing classes, of course.andP;  Rogue WaveAssociates and Ansys Software both produce class libraries for handlingmatrices and vectors.andP;  My initial reaction upon seeing them was hope that C++could be used for the kind of number-intensive applications for which FORTRANis commonly used.andP;  Looking at the features they provide, I believe it can.andM;Both C++ Vector Matrix and M++ support vectors and matrices.andP;  They differ insome of the operations you can perform on each type, but both support afairly full spectrum of math operations on the data types.andP;  Each libraryseparates integer, float, double, and complex types into completely seperateclasses rather than attempting to abstract common features.andM;The Rogue Wave documentation is particularly good from a design point ofview.andP;  The company is very forward in its discussion of design decisions.andP;  Inthe philosophy section, the manual says that the classes were designed to beas small and fast as possible.andP;  &quot;Toward getting the best out of thelanguage,&quot; they say, they chose not to use abstract classes or any virtualfunctions.andP;  They claim that problems involving run-time binding are bestsolved using multiple inheritance.andM;In any event, if you are doing serious number-crunching in C++, take a lookat these two class libraries.andP;  They may not be the greatest examples of classhierarchies, but they do crunch numbers!andM;ImageSoft Inc.andM;CommonViewandM;Another major vendor of C++ for PCs, ImageSoft Inc., has produced a classlibrary for abstracting windowing systems called CommonView.andP;  The companybundles a C++ translator with it.andM;For straightforward Windows and PM applications, CommonView is certainlyuseful, but when you try to do more complicated things it gets in the way.andO;CommonView is weak in the areas of graphics, printing, MDI, and dynamic dataexchange.andP;  In some cases, you can &quot;kickdown,&quot; which is the CommonView termfor accessing the environment directly.andP;  In other cases, ImageSoft can supplyadditional documentation or work-arounds until a future version adds directsupport.andM;The key to CommonView's abstraction for windowing systems is the eventcontext.andP;  The event context is responsible for taking messages from theenvironment and translating and dispatching them to the appropriate eventhandler (a virtual function) in the target window.andP;  Controls such as buttomsalso generate events that are dispatched to their own windows.andP;  Basically,most of the work you do in c CommonView application is deriving specializedforms of AppWindow, writing new event handlers to perform the desired actionfor each kind of event.andM;A major problem with CommonView is that the stock event context code does nothandle all situations, and the company didn't put sufficient information inthe manual for you to change it.andP;  This creates some of the problems involvedwith handling dynamic data exchange and MDI.andM;CommonView does show off some of C++'s advantages.andP;  The code is tight andfast.andP;  Most of CommonView resides in a dynamic link library, and developersare encouraged to create additional DLLs as part of theapplication-development process.andP;  You could extend an application by addingnew classes in a new DLL, but the necessary support is  not yet provided.andM;CommonView also comes with a neat set of classes, Containers and FreeStores,which abstract logical and physical access methods.andP;  These classes have beenput into the public domain by Glockenspiel in the hope that other C++implementors will adopt them.andM;Sample FreeStores are provided to access the local and global Windows heapsand a disk-based FreeStores for Windows which is used with Glockenspiel'sCardFile application.andP;  Sample Containers include basic heaps, rings, stacks,and tables.andM;All in all, CommonView is a mixed blessing.andP;  It ranges from being veryhelpful to really getting in the way.andP;  I look forward to future versions,which may make the decision to use CommonView less difficult.andM;What's ahead for librariesandM;This review has looked at a large variety of object-oriented programminglibraries, some free-standing, others with their own object-orientedprogramming systems.andP;  I hope you've gotten a feel for what comes with eachproduct and what is available by way of add-on libraries.andP;  Most importantly,I hope that the power of object-oriented programming has come across.andM;Over the next year, a lot more will happen with object-oriented programmingtools.andP;  We'll see more of them, as well as updates to existing tools.andP;  Ctalk/Views will be ported to different hardware platforms.andP;  Views will beported to different language (C++ and Actor).andP;  And, of course, CNS willenhance the products.andM;CommonView will be upgraded.andP;  The next release is supposed to include aDrawObject hierarchy and a bunch of new features.andP;  It will be interesting tosee how CommonView reacts to competition in an area they have held alone forthe past year.andM;The Whitewater Group will release Actor for PM, along with a number of Actorextensions.andP;  We'll see how it stacks up against the competition, once theystart playing in the same arena.andM;Noel J. Bergman is president of development Technologies Inc., a softwaredevelopment consulting firm with special interersts in OS/2, Window, andobject-oriented programming.andP;  He can be reached on CompuServe (CIS ID:76704,34), where he is a volunteer sysop on Microsoft's CompuServe fora.andO;</TEXT></DOC>
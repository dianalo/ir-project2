<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF107-912-886  </DOCNO><DOCID>07 912 886.andM;</DOCID><JOURNAL>Digital Review  Nov 27 1989 v6 n47 p27(6)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1989.andM;</JOURNAL><TITLE>Finding the path to the best data delivery platform. (justifyingdecisions)(includes related articles on reader survey, comparingscenarios)</TITLE><AUTHOR>Jenkins, Avery.andM;</AUTHOR><SUMMARY>Data base management system (DBMS) selection is a criticaldecision because a poor choice can waste MIS resources.andP;  Mostusers implement database management systems to improve access todata.andP;  Powerful relational database management (RDBMS) systemshave high-performance sorting algorithms and applicationgenerators.andP;  DEC and IBM bundle run-time versions of theirdatabases with their operating systems, which a fourth-generationlanguage can turn into a development system at low cost.andO;Development tools account for much of the cost of an RDBMS and areamong the most powerful programming languages available.andP;  Therelational model is popular because of its flexibility and ease ofmaintenance, but some applications are too complex for it tohandle efficiently.andP;  An excellent method of cost-justifying RDBMSsoftware is to note the productivity benefits of its accompanyingdevelopment toolkit.andM;</SUMMARY><DESCRIPT>Topic:     Cost Benefit AnalysisProject JustificationData Base Management SystemsSoftware SelectionMISManagement-EDP Relations.andO;Feature:   illustrationgraphtable.andO;Caption:   Cost comparison of third-party RDBMS vs. DEC RDB, third-party 4GL.andO;(graph)Selecting a toolkit. (table)Responses to reader survey (graph)andM;</DESCRIPT><TEXT>FINDING THE PATH TO THE BEST DATA DELIVERY PLATFORMandM;Choosing a database management system is one of those purchasing moves thatconsultants gently call a &quot;career decision.&quot;andP;  To put it bluntly, buying thewrong database management system can break an MIS manager's career.andM;With the right database management system, MIS can arm managers, salespeopleand other workers with strategic information--a powerful weapon in acompany's arsenal.andP;  But a poor database management system choice can absorb acompany's MIS resources like a sponge, eating man-hours, CPU time and dollarswith indiscriminate voracity.andM;What's the rationale for using any database management system?andP;  Why, forexample, should an MIS manager opt for DEC's bundled relational databasemanager, Rdb, instead of simply using the VAX Record Management Services(RMS) to handle data?andP;  After all, RMS is a perfectly adequate means ofmanaging files and records.andM;According to an exclusive DR Strategies poll, most user's primary reason forimplementing a database management system is to improve access to data.andO;Almost as compelling are the faster application development time, flexibilityand better data presentation that a database management system offers.andM;Of course, there are other good reasons for buying a database managementsystem that didn't show up in the poll.andP;  For starters, a database managementsystem provides capabilities that an organization often needs to ensure thesecurity and integrity of its valuable data.andP;  File management systems lackdatabase integrity features such as journaling, rollback records, backuputilities and file-level field validation.andM;Then there are the features that make database management systems moreefficient than file management systems (See &quot;Retrieval Efficiency Improves AsRecords Increase,&quot; below.)andP;  A database manager is more likely to havehigher-performance sorting algorithms than a file management system such asRMS.andP;  And even though a database manager and a file manager may both use thesame fourth-generation language (4GL) in applications development, thedatabase manager spares programmers from having to worry about file accessroutines, which can become very ornate.andM;Database management systems clearly offer a lot.andP;  But that doesn't mean MISmanagers should rush out to buy a relational database management system;purchasing an RDBMS isn't a decision to make lightly.andM;An existing database may be expensive to maintain or use for developing newapplications, but converting to an RDBMS will require both new programmingand management skills.andP;  The switch may also demand that MIS managers adopt anentirely new perspective on their information resources.andM;Now, more than ever, the key to successful entry into the RDBMS arena is notjust the database package itself, but the tools with which it can bemanipulated.andM;BUNDLING UPandM;In the past, some database programs gained favor in the marketplace bysupporting a heterogeneous environment.andP;  A database that could run under VMS,Unix and other operating systems appeared to be the perfect soluton toincompatible data structures.andM;But it didn't take long for MIS managers to discover that, like junkiesswitching from heroin to methadone, they were merely trading one dependencyfor another.andP;  Although they were no longer locked into a single hardwareplatform or operating system, they were now tied to a single databasearchitecture.andP;  Despite the promise of an ANSI-standard sequential querylanguage (SQL), RDBMSes from different vendors do not speak the samelanguage; thus, they cannot use the same applications.andM;And although the industry has begun work on developing a truly interoperableSQL language, it will be at least two years before users reap the fruit ofthat labor.andM;In a world where the average Fortune 1000 company has at least three databasesystems up and running (not to mention millions of dollars invested inflat-file systems, or sequential lists of records), the incompatibility ofmultiple database systems could pose as much of a threast as the earlierroadblock of incompatible operating systems.andM;Meanwhile, as many users were just beginning to wrestle with databaseincompatibility, the Big Two of corporate computing decided to change therules of the game: Both DEC and IBM bundled run-time versions of theirdatabases with their operating systems.andM;The bundled database software engines represent an important opportunity forusers to save money.andP;  Many RDBMS vendors charge much higher license fees torun their products on larger systems, inflating the expense of a hardwareupgrade.andP;  With a bundled runtime RDBMS license, any applications that use thedatabase manager can be moved to a larger system without incurring additionallicensing fees.andM;So why should MIS managers consider spending as much as $180,000 for athird-party database when they can get a runtime version practically free andturn it into a development system for little more than the cost of a 4GL?andM;The number of high-quality development toolkits for Rdb, from boththird-party vendors as well as DEC, is increasing.andP;  Also, the most recentversion of Rdb is regarded as a stronger product than earlier releases, andis robust enough to support most applications.andM;Still, there are times when Rdb just won't do.andP;  Third-party RDBMSes are notedfor their ease of use, which cuts database administration needs.andP;  Over tiem,administration cost savings could offset the higher cost of a third-partyRDBMS when compared with a bundled database engine.andM;It is important to note that a run-time license for an RDBMS is just theengine for the MIS data management vehicle.andP;  Around that engine, developersmust build their applications.andP;  Savvy third-party database vendors haverecognized that they can simultaneously meet user needs and avoid severedamage in an unwinnable price war by providing application development toolsthat support bundled databases such as Rdb.andM;These tools, whether computer-aided software engineering systems, 4GLs orfull-blown development environments, can be used to creaste applications fordifferent database engines.andP;  In some cases, a single application would beable to combine data stored in two or more RDBMSes.andP;  For example, it couldretrieve data from both an Rdb table and an Oracle table, making it appear tothe user as if the information all came from the same place.andM;Development tools don't come cheap, however.andP;  One thing many potential RDBMSbuyers don't realize is that only a fraction of the RDBMS cost resides in thedatabase management software itself.andP;  For example, a development license fora VAX 6360 may cost $65,000, which is about the same as the one-year cost fora single analyst plus overhead.andP;  And the development tools may cost as muchas the database license.andM;Even with powerful development tools, one application may take six or moreman-months to complete, so by the time an organization has developed two bigapplications, it has already spent more than the cost of the databaselicense.andP;  Many users have come to realize that the cost of developing andmaintaining applications is the overwhelming expense of RDBMS ownership.andM;WHY RELATIONAL?andM;There are a few promising hard facts for MIS managers who are concerned aboutinvesting in a relatively new technology, as well as for value-addedresellers and others considering a move into the RDBMS market.andM;On the technical side, the RDBMS is a major step away from older systems inwhich the representation of records was closely tied to their physicalstorage.andP;  The appeal of the relational model--its flexibility andpower--stems from this critical development.andM;From a market perspective, there is plenty of room for continued growth.andO;Estimates of the number of VMS and Unix sites equipped with a complete RDBMSrange from 10 percent to 25 percent.andP;  And the majority of companies that areinvesting in a database management system are buying RDBMSes.andP;  The relationalmodel is gaining allure, thanks to the combined influence of technicalconsiderations, business requirements and market forces.andM;The strongest competitor to the relational model is the network databasemodel developed by the Conference on Data Systems Languages (Codasyl).andO;Network database provide extremely high efficiency and enable linking recordsin complex patterns, but the connections must be established when the systemis created.andP;  Because paths are physically coded into the database,restructuring any path requires assistance from a database administrator.andM;Database management systems have evolved from the now-forgotten hierarchicalmodel to the fading Codasyl database to the popular relational system.andP;  Inthe future, methods such as object-oriented programming andentity-relationship (ER) database management technology will likelyaugment--or even supplant--relational databases.andM;TECHNOLOGICAL LAGandM;Although more RDBMS purveyors have already begun incorporatingobject-oriented features into their products, the lag time between conceptionand commercial applicability in most technologies is about 15 years.andP;  Thetrue worth of ER and object-oriented methodologies will likely not becomeapparent on any wide scale until the middle to late 1990s.andM;In the meantime, today's relational model is flexible and easily maintained.andO;Moreover, the suite of development tools available for many RDBMSes candramatically cut application development time.andM;In a relational database, the physical data storage structure has beencompletely divorced from the data's logical and semantic structure.andO;Therefore, relationships among records and items can be defined on the flyand at the applications level instead of at the database system level.andM;As a result, relational databases can change rapidly to meet shiftingbusiness demands.andP;  The model's ability to create relations among recordswithout demanding a corresponding change in the database structure or codemeans that new database queries can be put together rapidly using anon-procedural language and little programming.andM;Thus, relational databases are particularly well suited for applicationsrequiring ad hoc queries, such as decision support systems, as well as forapplications in which the database is volatile.andM;Now, however, the combination of increased power and speed in operatingsystems, hardware and the RDBMS programs themselves has led to growing use ofrelational databases for online transaction processing and applications suchas real-time data acquisition, process control and even Wall Street programtrading.andM;Frequently, performance is the factor on which an RDBMS vendor rests itsreputation.andP;  As database vendors have sought to erase the relational model'sstigma of poor performance, benchmark one-upmanship has become the name ofthe RDBMS marketing game, especially in the past year.andM;For information systems managers planning to implement online applicationsbuilt on a relational database, it is important to have a real estimate ofthe necessary level of performance they will require.andM;According to a study by the Aberdeen Group, a Boston-based consulting firmmost relational databases on the market meet all but the most stringentperformance requirements, as measured by the TP1 transaction processingbenchmark.andP;  The study found that a database and hardware platform capable ofa peak rate of 12 debit or credit transactions per second can support 90percent of existing applications.andM;To put this figure in perspective, the Aberdeen Group study noted that alarge regional bank with a network of more than 800 automated teller machineshad an average throughput requirement of two transactions per second.andP;  At itsChristmas season peak, this system still required only eight transactions persecond.andM;In comparison, airline reservation systems required a capacity of 2,000transactions per second, while telephone number information servicestypically required a capacity of 200 to 300 transactions per second.andP;  But ahome shopping club operator network with more than 100 telephone operatorstaking orders required no more than 80 transactions per second.andM;The Aberdeen Group study concluded that only a few hundred applicationsworldwide require a capacity greater than 50 transactions per second--wellwithin the reach of just about any RDBMS on the market.andM;EFFICIENCY VS COMPLEXITYandM;RDBMSes have become faster and more efficient.andP;  But despite vendor claims,however, relational databases are not the be-all and end-all of databasemanagement technology.andM;Some applications that incorporate millions of records into a large number oftables are simply too complex for the relational model to handle efficiently.andM;Likewise, databases with recursive links among data elements don't lendthemselves to the relational model.andP;  A good example of this type is thebill-of-materials database.andM;In a bill-of-materials database, some parts may comprise several other partsin a way that makes relational description difficult.andP;  The recursiveconnection among the parts could quickly foul up the database design efforts.andM;These caveats aside, the RDBMS has proved itself in a variety ofapplications.andP;  In fact, the relational model has become widely accepted forthe growing number of distributed databases.andM;The escalating popularity of RDBMSes owes much to the flexibility of therelational model.andP;  But it is the welath of development tools available forRDBMSes that has made the move to relational databased even more attractiveto MIS managers.andM;STONE-AGE DEVELOPMENTandM;While computer databases have been the engines of the post-indutrial age, thefuel for these engines has been provided by a preindustrial throwback: thecraftspeople and artisans called programmers.andP;  Programming is still highlydependent on the individual skills of programmers, and the highest cost ofany application is the labor associated with developing and maintaining it.andM;One of the major benefits of RDBMS acquisition today is the range andstrength of the tools available for this technology.andP;  RDBMS development toolshave grown increasingly capable, extending beyond the capabilities ofhigh-level languages such as SQL, or even 4GLs.andM;The cost savings provided by development toolkits show up in several ways.andO;The most obvious savings offered by a good set of tools is enhancedprogrammer productivity.andP;  Many analysts have estimated a 300 percentproductivity gain through the use of development tools and an RDBMS.andM;A complete development toolkit is more than just a 4GL or frontend CASEsoftware.andP;  The toolkit should include debugging facilities, operationsmanagement, documentation and auditing capabilities for the developmentprocess.andM;Development tools must also be integrated.andP;  If each tool has its owndictionary and interface, the programmer's job becomes that much harder.andM;Development tools are playing an increasingly important role in creatingapplications that can mix and match data from other RDBMSes.andM;Specific development tool gateways to &quot;foreign&quot; databases are stillnecessary, even though ANSI has standardized SQL.andP;  Few vendors remain withinthe boundaries of the SQL standard, because the ANSI version is widelyregarded as too weak to adequately handle some of the features vendors wantto provide.andM;As RDBMSes become commodity items, vendors will be forced to conform to amarket-determined SQL standard.andP;  But for right now it's a good bet that SQL,like Unix, will continue to come in a variety of flavors.andM;When choosing development tools for an RDBMS, it is important to note thepoints in the application life cycle where costs are highest and errors mostprolific.andM;Research indicates that requirements analysis and design add up to only 11percent of the cost of development.andP;  (See &quot;Cost Breakdown of ApplicationDevelopment,&quot; above.)andP;  Yet 56 percent of the errors occur during therequirements analysis phase, and correcting these errors absorbs 82 percentof the maintenance cost.andP;  The mistakes made in software design are far morecomplex and time-consuming to fix than simple coding errors.andM;CASE tools for the RDBMS environment are now focusing on the front end of theapplication life cycle.andP;  These tools use special graphical user interfaces(GUIs) to provide facilities such as data flow diagram editors and dataentity relationship diagrams, as well as the more common screen and formgenerators.andM;MIS managers shouldn't under-estimate the importance of adding automatedtools to the early phases of the software development cycle.andP;  According toBarry Boehm, former director of software research and technology for TRW andauthor of Software Engineering Economics, the cost of fixing an error at theintegration and test phase can run 200 times higher than the cost of fixingthe same error at the requirements analysis phase.andM;By catching errors earlier in the development cycle through the use of CASEtools, MIS managers gain significant leverage in dealing with the system'slater operation and maintenance costs.andP;  A survey by Strategic Focus, aconsulting firm in Milpitas, Calif., found that CASE tools reduced the numberof errors introduced into an application by 41 percent.andM;Libraries in which reusable routines can be stored are another elementvendors are increasingly adding to development toolkits.andP;  In some cases, theRDBMS program lets applications developers create and store frequently usedSQL scripts for access by end users.andM;POWER TO THE USERSandM;The combination of a 4GL and CASE tools to automate the application designprocess with a complete set of debugging and testing utilities yields strongcost savings throughout the entire software life cycle.andP;  But tools andidiot-proof front ends can also save MIC departments money by allowing usersto become their own database &quot;programmers.&quot;andM;Although SQL is a high-level, non-procedural language, it is still toocomplex to allow the average user to write even simple queries.andP;  A GUI-basedfront end lets users create their own reports with considerably lessdifficulty.andM;Any development toolkit is only as good as the initial database design.andO;Here, too, vendors have advanced the state of the art.andM;In traditional systems development methodologies, the data model is builtafter business data processing requirements have been defined.andP;  The methodworks because the processes were used to define the data model.andM;But as RDBMS administrators have discovered time and again, the same data canbe incorporated into an infinite number of processes.andP;  Once users have anunderstanding of the data that is accessible to them, they begin creating newways to generate information from that data.andM;If the database design does not take these potential processes into account,new applications may be more complex to develop because of the way the datais organized.andM;In an effort to cope with this problem, Relational Systems, a consultancy inBirmingham, Mich., developed a design methodology called extended relationalanalysis (ERA).andP;  ERA has been used successfully in large RDBMS installationssuch as the Hartford Insurance Group's life insurance division, whereintegrated applications are being developed.andM;ERA employs a structured user-interviewing process that creates models of theentities and relations that will inhabit the database.andP;  These models arestructured in tables, parallelling the RDBMS itself.andP;  The tables make it easyfor users and analysts to see the variety of combinations available beforethe database has been structured.andP;  Thus, the potential combinations can betaken into account when the actual database is created.andM;By ensuring that the initial database design incorporates all of theprocesses users are likely to employ, analysts and programmers can recognizesubstantial savings in later applications development.andM;The true cost of a database is more than just the cost of the RDBMS itself.andO;It involves many variables that are difficult to quantify in advance.andP;  Eventhe database design affects the long-term cost of the system.andM;Although studies by vendors and market analysts consistently point out thatbuyers rate the cost of an RDBMS low on their list of priorities, it would befoolish to ignore the sweeping range of prices for RDBMSes.andP;  (See &quot;CostComparison of Third-Party RDBMS vs.andP;  Rdb, Third-Party 4GL,&quot; above.)andM;There has been much talk recently about how standard SQL and other factorsare turning relationational databases into commodity items.andP;  But the range ofprices for databases today is far wider than what would be found in acommodity market.andM;Among the top four vendors in the VAX market--DEC, Ingres Corp., Oracle andSybase--there is at least a 4-to-1 price spread.andP;  For example, an RDBMS on aVAX 6240 can cost as little as $58,000, or as much as $200,000.andM;More important to a strategic purchasing decision are the development andend-user tools that can be applied to that particular database.andM;PAYING FOR THE TOOLSandM;As mentioned earlier, these tools can be expensive.andP;  The cost of a 4GL on aVAX 6420, for example may range from $21,000 to $107,000.andP;  In addition, thevendor of a 4GL or CASE tool that can access multiple database systems willcharge extra for each additional database to be supported.andP;  The cost mayrange from $300 for each additional RDBMS gateway at the workstation level toas much as $30,000 for each gateway on a VAX 9000.andM;Connectivity also plays a role in the marginal cost of database ownership.andO;Incorporating IBM PCs and Apple Macintosh micros (both of which are found inabundance at many VAX sites) into the distributed database loop can be anexpensive proposition.andP;  Some vendors may require that a network product or aspecial compiler for the PC be purchased along with the PC-level productitself.andM;Perhaps not surprisingly, maintenance and technical support costs vary widelyfrom vendor to vendor.andP;  Maintenance can range from 4 percent to 15 percent oflist price.andP;  And some vendors do not discount their maintenance for volumerun-time licenses.andM;The key to successfully examining the cost of entry into RDBMS technology isto total these widely varying marginal expenses: the cost of connectivityrequirements, including PC and mainframe access, if necessary; run-timelicense fees, for distributed applications; maintenance and technical supportfees; the cost of any required features that are not bundled into the system;and, of course, the cost of the RDBMS itself.andM;But RDBMS cost estimation doesn't end with a tally of marginal costs.andP;  Theexpense of moving old data files into the new database system can varywidely, depending on the size and type of files.andM;Training costs can be expensive as well, although some vendors will thrwo intraining as part of a purchase package.andP;  If a deal that includes trainingcannot be arranged, however, users should expect to spend anywhere from $200to $500 per person per day on training programs.andM;Figuring out costs is only half of determining the return on investment.andO;What's the best way to quantify the benefits of a relational database?andM;In many cases, users said they did not have to formally calculate the returnon their investment in an RDBMS.andP;  Because of high maintenance costs and theneed to develop new strategic applications quickly without expanding thebudget, the investment would clearly pay for itself.andM;At some companies, the aging code has become such a monstrosity to maintainthat a change--any change--would be a saving grace.andM;Perhaps the best way to cost-justify an RDBMS is to look at the productivitybenefits of its accompanying toolkit.andM;One way to do this is to estimate the cost and time required to developed theapplication using current technology.andP;  If existing application developmentuses 3GL technology, the constructive cost model (Cocomo) developed bySoftware Engineering Economics author Barry Boehm provides a good,rough-and-ready baseline.andM;Boehm's Cocomo provides an estimate of the man-months required to develop anapplication based on the estimated number of delivered source codeinstructions.andM;The basic Cocomo equation provides rough estimates of software costs in thefollowing form:andM;MM = 2.4 [(KDSI).sup.1.05]andM;where MM is the number of man-months and KDSI is thousands of deliveredsource instructions.andM;It is important to note that the basic Cocomo equation does not include thetime required for the software requirements review or the software acceptancereview.andP;  The use of CASE tools and methodologies such as ERA will increasethe time and effort spent in the analysis and design phases in the hope ofreducing the cost of maintenance.andM;LOOKING TOWARD THE FUTUREandM;Relational technology is changing.andP;  In the near future, consultants expect tosee the relational database incorporate some of the capabilities of expertsystems.andM;The RDBMS of the future will likely have the ability to store not only dataitems and their relationships, but rules as well.andP;  Rules will help databaseadministrators maintain consistency across applications and provide a way ofembedding organizational policies in the system itself.andP;  Currently triggers,which induce database activity based on a value or change in values, handlesuch functions.andM;In future relational databases, these functions will be capable ofrecursivity.andP;  They will be able to start procedures and then kick in rulesthat themselves begin an activity, which could consist of modifying theoriginal rule.andM;Another change likely to occur is the increased use of object-orienteddatabase concepts to make the RDBMS more flexible.andM;Already, some database vendors are beginning to include object-orientedtechniques, such as defining complex entities with related operations as asingle unit, into their products.andP;  Object-oriented methods show particularpromise in the areas of computer-aided design, manufacturing and engineering,and computer-integrated manufacturing, where complex 3-D modeling requires arelational database to access a large number of records even for relativelysimple designs.andM;Object-oriented technology today stands where relational databases were 15years ago: little known and little understood, yet full of promise.andM;It is unlikely that this technology will replace the surging relationaldatabase any time soon.andP;  Managers who invest in relational technology todaydo not have to worry about its sudden obsolescence in the next couple ofyears.andM;Many companies are only beginning to justify investment in RDBMS technologyas a step into the future.andP;  The rapidly changing demands of business aremeshing well with the flexibility of the relational database.andP;  The baseproducts are mture enough so that there is little risk involved in theinvestment.andP;  And the intangible benefits derived from relational databases intheir ability to support the strategic goals of an organization, as well asto bring the most expensive MIS costs in line, are well-founded.andM;DR STRATEGIESandM;POLLandM;RDBMS Speeds Development ProcessandM;The respondents to a DR Strategies poll of more than 100 VAX sites possess amedian level of experience with a relational database management system of2.81 years.andP;  The poll was taken of users selected randomly from a listprovided by Computer Intelligence, a market research house in La Jolla,Calif.andP;  The respondents indicated they use an RDBMS in applications such asadministration, inventory control, CAD, document management and on-linetransaction processing.andM;About 84 percent of the respondents said they had had no experience with adatabase management system prior to implementing an RDBMS.andM;Seventy-four percent of the respondents use the RDBMS in a time-sharingenvironment; 18 percent, in a client/server environment.andP;  More than 42percent indicated they run the RDBMS on a VAXcluster.andP;  About 63 percentindicated they had fewer than 50 users on the system.andP;  Ten percent, however,indicated that they had more than 250 users.andM;According to the survey, the median price of software for an RDBMS is about$40,000.andP;  The average price spent on application development is $41,000.andM;Of the small group of respondents who indicated prior experience with a DBMS,about 35 percent indicated they were either able to convert or access filesfrom an earlier DBMS.andP;  Nearly 29 percent said they could not use the oldfiles, whereas the rest said they hadn't tried.andP;  The degree of success forfile conversion appeared to be almost even among those who had previouslyused a hierarchical system or a networked DBMS.andM;Among new users--those with less than two years of experience--the chiefconcern was with the user interface and response time.andP;  For users having morethan two years' experience, the chief concerns were response time, CPU powerand cost.andP;  Portability issues were near the bottom of the list of concernsfor both groups.andM;The major benefit of an RDBMS, according to the two groups, was ease of dataaccess, followed by ease of data manipulation and faster applicationdevelopment.andM;As an important benefit, transaction processing speed scored low for bothgroups.andM;More than 66 percent of those surveyed said they were satisfied with theprice/performance of their RDBMS; 30 percent said they were only somewhatsatisfied.andP;  Two percent said they were unsatisfied.andM;Fifty-two percent of the respondents said they used a 4GL or otherdevelopment tool.andP;  The choice of brand included an array of vendors: Noparticuilar supplier garnered a large portion of the market.andP;  Surprisingly,48 percent indicated they used no tools at all.andM;As might be expected, 91 percent of the sites used terminals, and 35 percentindicated they also used PCs.andM;DR STRATEGIESandM;MODELandM;Database Features Demand ComparisonandM;Our model railroad company, LogiTrax, runs a nationwide freight servicefamous for its on-time scheduling.andP;  With its business booming, LogiTrax isfaced with how to optionally schedule its freight car shipments.andP;  To do this,LogiTrax must know where any one of the freight cars is at a particularmoment.andM;To accomplish this task, the company plans to assign four programmer/analyststo develop a rolling-stock tracking system on the railroad's VAX 6000 model410.andP;  LogiTrax's Chief Information Officer estimates that this project willrequire 40,000 lines of code using RMS files and written in Cobol.andP;  Employingthe Cocomo model, he estimates this project will take 120 man-months.andM;Currently, the average annual salary for programmer/analysts at LogiTrax is$40,000 plus an additional 30 percent in benefits.andP;  Inflation is projected as5 percent per year, and LogiTrax plans to raise salaries by 7 percent tominimize turnover.andM;Anticipating a 3-to-1 productivity boost, LogiTrax's CIO plans to build thetracking system using an RDBMS and a 4GL.andP;  His choice of development toolsfalls to a decision between using either a third-party RDBMS (including itsown native toolkit and 4GL) or a third-party toolkit (including a 4GL) tobuild the application on top of DEC's run-time Rdb.andM;The complete RDBMS development system costs $165,000, and maintenance willcost an additional $22,500 starting in the second year of ownership.andP;  Thethird-party toolkit will cost significantly less at $65,000 and maintenancewill be $20,000, also starting in the second year.andM;The third-party RDBMS, however, includes rudimentary support for the semanticdata model and also can dynamically allocate additional file space.andM;If the third-party RDBMS is chosen, LogiTrax's CIO will not have to add adatabase administrator to the MIS staff at an annual salary of $48,000 plusbenefits.andM;To evaluate the two alternatives, the CIO creates two models.andP;  The results,he discovers, are not as disparate as the initial purchase costs wouldindicate.andM;Using LogiTrax's 10 percent return on equity rule, the net present value(NPV) of both scenarios returns a positive cash flow.andP;  With a third-partyRDBMS the NPV amounts to $3,638, while with run-time Rdb and a third-partytoolkit the NPV is $17,293, only $13,655 more and significantly less than the$100,000 differential in purchase price.andM;In fact, this differential will continue to drop should the databaseadministrator position be required in the future.andM;In this case, additional functionality of the third-party RDBMS still makesit a viable alternative.andO;</TEXT></DOC>
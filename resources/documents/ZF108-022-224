<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-022-224  </DOCNO><DOCID>08 022 224.andM;</DOCID><JOURNAL>PC Week  Jan 8 1990 v6 n1 p76(1)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>Gain management support by measuring productivity. (AppliedIntelligence)(part 3) (column)</TITLE><AUTHOR>Martin, James.andM;</AUTHOR><SUMMARY>Rapid application development (RAD) is a new technique for quicklydeveloping applications using computer-aided software (CASE)tools.andP;  RAD employs CASE tools, small teems of personnel,interactive joint application design (JAD) techniques andmanagement processes to break down obstacles to high-speeddevelopment.andP;  RAD is believed to be effective primarily because ofimproved management processes; only 20 percent is attributed tothe use of computer technology.andP;  Periodic measurement ofproductivity relating to project complexity is necessary formanagers to set quality standards and reward teams that achievehigh levels of productivity and quality.andP;  Complexity measurementshould consider inputs, outputs, system data stores, data storesshared with other systems and inquiries.andP;  A RAD project shouldcost about $100 per function point, compared to more than $1,000per point for large bureaucratic projects.andM;</SUMMARY><DESCRIPT>Topic:     Information SystemsNew TechniqueProductivityMeasurement TechniquesTeam Approach.andO;Feature:   illustrationgraph.andO;Caption:   Differences in development productivity. (graph)andM;</DESCRIPT><TEXT>Gain Management Support by Measuring ProductivityandM;Information-system (IS) organizations strive to develop systems that arefaster, higher in quality and lower in cost.andM;This can be achieved by using new development techniques such as RAD.andP;  TheRAD life cycle is based on the use of integrated computer-aided softwareengineering (CASE) tools, small teams of highly trained and motivatedpersonnel, interactive joint application design (JAD) techniques, andmanagement processes focused on breaking down obstacles to high-speeddevelopment.andM;RAD is an effective management technique for application development.andP;  Itfocuses on the management techniques needed to facilitate communicationbetween end users and analysts, motivate the development team, build completeapplications within a strictly defined window of time, and ensure thatcompleted applications meet end users' needs.andM;Approximately 80 percent of RAD's effectiveness is attributable to bettermanagement processes; only about 20 percent is due to the use of computertechnology.andM;One of RAD's management techniques is the measurement and reporting ofdevelopment productivity.andP;  Appropriate measurements enable managers tomotivate and set goals for developers.andP;  They permit the comparison of toolsand techniques, and enable managers to detect, examine and, possibly,replicate examples of excellence.andM;Periodic measurements of productivity enable managers to establish qualitystandards and reward development teams that achieve high levels ofproductivity and quality.andP;  Measurement techniques also facilitate estimatingand planning.andP;  They can be used to identify areas in which improvements areneeded and to establish an ongoing program for improvement.andM;All meaningful measurement of development productivity should relate toproject complexity.andP;  In IS organizations, it is valuable to plot variousmeasurements of productivity against project complexity.andP;  But how do wemeasure complexity?andM;At the time when all projects were built with third-generation languages suchas COBOL, complexity was usually measured by counting the number of lines ofcode.andP;  This metric cannot be used for direct comparison of fourth-generationlanguage (4GL) projects with COBOL projects because a 4GL may require a greatdeal less code.andM;Lines of COBOL must be counted with caution.andP;  The count should includeexecutable lines of code and the Data Division lines, but should excludecomments.andM;It's desirable to measure project complexity independent of any particularcomputer language.andM;The complexity metric that's most commonly used is the function-point method.andO;This was developed at IBM and improved in GUIDE, the IBM users' organization.andM;The function-point method lists and counts the elements of a system,including:andM;* inputs (screens, messages and batch transactions);andM;* outputs (screens, reports, messages and batch transactions);andM;* system data stores (logical files);andM;* data stores shared with other systems (external interface files); andandM;* inquiries.andM;The method assigns a weight to each of these elements based on itscomplexity, totals the results, and then adjusts the result for factorsestimating the internal processing complexity and general system complexity.andM;Function-point metrics are generally not appropriate for scientific orengineering computing or for systems in which complex algorithms must becoded.andM;It is useful to have a basis for comparing different projects, estimates orvendors' claims.andP;  Some individuals remember measurements such as equivalentlines of COBOL per person-day, relating this perhaps to their own experiencesin programming.andP;  Other individuals remember function points per person-month.andO;I recommend that IS executives measure and remember function points perperson-month.andM;For systems of average complexity without elaborate user interfaces, onefunction point per person-month equals about five lines of COBOL perperson-day.andM;For systems with human interfaces such as a mouse, icons and pull-down menus,the ratio becomes higher.andM;The U.S.andP;  average development productivity is five function points perperson-month, corresponding to about 25 lines of COBOL per person-day.andM;Many organizations developing systems with COBOL, database tools and thetraditional IS life cycle average about 40 lines of COBOL per person-day(about eight function points per person-month).andP;  Some have used productivityaids with otherwise manual COBOL development and have pushed theirproductivity up to about 60 lines of COBOL per person-day (about 12 functionpoints per person-month).andM;The objective of today's power tools and techniques is to achievesubstantially higher productivity numbers.andM;The figure shows measurements of IS productivity at Marine Midland Bank inBuffalo, N.Y.andP;  COBOL development had reached a plateau of about 12 functionpoints per person-day across all measured projects.andM;The first introduction of 4GL technology using the Telon code generator fromPansophic Systems Inc. resulted in slightly lower productivity, but the staffrapidly climbed a learning curve, building to about 40 function points perperson-day.andM;This is a fairly typical number for well-managed use of a 4GL/CASE tool witha code generator.andP;  Using an integrated CASE environment and a tightermethodology, the productivity figures are likely to increase.andM;Highly trained teams using integrated CASE tools and a RAD methodology canachieve much higher productivity figures.andP;  Some teams regularly achieve 1,000equivalent lines of COBOL per person-day (or 200 function points perperson-month) on projects of moderate complexity.andM;Measurements in the Du Pont Fibers division show skilled developers averaging13.8 hours per function point with a traditional Yourdon structuredmethodology, while other Du Pont analysts were averaging two hours perfunction point using its &quot;time box&quot; methodology, which is a version of RAD.andM;Some large and bureaucratic application-development projects average only twoor three function points per person-month, at a cost of more than $1,000 perfunction point.andP;  Some software-development companies charge more than $1,000per function point.andP;  IS organizations typically average about $500 perfunction point.andP;  A reasonable target for a RAD project is about $100 perfunction point (corresponding to 100 function points per person-month).andM;CEO Productivity ReportandM;A corporate president should monitor IS productivity because of its vitaleffect on corporate capabilities.andM;The CEO report should include five types of measurements:andM;* speed of development;andM;* development costs;andM;* development productivity;andM;* quality of delivered systems; andandM;* maintenance.andM;When this type of report is requested on a quarterly basis by the CEO, the ISmanager is motivated to strive vigorously for the most efficient use ofpowerful development techniques.andM;Next week I will discuss the automated tools that are appropriate for use ina RAD life cycle.andO;</TEXT></DOC>
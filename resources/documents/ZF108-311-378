<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-311-378  </DOCNO><DOCID>08 311 378.andM;</DOCID><JOURNAL>Digital Review  April 2 1990 v7 n13 p27(4)* Full Text COPYRIGHT Ziff-Davis Publishing Co. 1990.andM;</JOURNAL><TITLE>SQL as a second language. (Software Review) (Natural LanguageInc.'s Natural Language, a natural language interface)(evaluation)</TITLE><AUTHOR>Melnitsky, Stuart.andM;</AUTHOR><SUMMARY>Natural Language Inc's Natural Language (NL), a natural languageinterface, takes time to set up, but can understand the meaning ofusers' queries from their context.andP;  NI works well with suchrelational database management systems, including Oracle, Ingresand Sybase, and can access information from several databasessimultaneously.andP;  The product breaks sentences in users' queriesinto their distinct parts of speech, parsing sentences todetermine the meaning of a word.andP;  NL then converts English queriesinto structured query language which are submitted to the database management system.andP;  Natural language is an exciting product,but much forethought and planning must go into the connectionprocess.andP;  Price must also be considered, since prices range from$20,400 on a VAXstation 3100 to $46,6000 on a VAX9000 Model 210.andM;</SUMMARY><DESCRIPT>Company:   Natural Language Inc. (products).andO;Product:   Natural Language (Natural language user interface).andO;Topic:     EvaluationSoftware PackagesStructured Query LanguageInterface.andO;Feature:   illustrationphotographtablechart.andO;Caption:   Test lab briefs. (table)Natural language processor flow. (chart)andM;</DESCRIPT><TEXT>SQL AS A SECOND LANGUAGEandM;TEST LABS BRIEFandM;PRODUCT: Natural LanguageandM;DESCRIPTION: An English language interface to relational database managementsystemsandM;VENDOR: Natural Language Inc. 2910 Seventh St. Berkeley, CA 94710 (415)841-3500andM;TEST CONFIGURATION: Natural Language version 3.1 on a MicroVAX 3600 andIngres version 6.2 on a MicroVAX II in an LAVC environment running VMSversion 5.1andM;PRICE AS TESTED: $21,840andM;PROS: *Provides database access in vial English queries *Can be customizedfor different environments *Works with Ingres, Oracle, Rdb and Sybase RDBMSproductsandM;CONS: *Customization process can be lengthy and time-consuming, requiringmuch planning and forethoughtandM;READER SERVICE: Circle No.andP;  400 on Reader Service CardandM;In an effort to make SQL easier for people to use, applications developershave come up with a variety of point-and-click, menu-driven and graphicaluser interfaces that present SQL concepts in a more intuitive way.andM;Some developers, however, believe that's the wrong approach to simplifyingdatabase access.andP;  Instead of focusing on making SQL easier for users, theyhave concentrated on making English easier for computers.andP;  By buildingso-called &quot;natural language&quot; interfaces to database management systems, theymake it possible for users to access information in their databases withoutknowing anything about database concepts or SQL.andP;  All they need to know isEnglish.andM;Many early natural language interface products offered only limitedfunctions.andP;  One method was to tailor the natural language interface tospecific markets and applications, thereby limiting the vocabulary to avoidambiguity and confusion.andP;  Now, however, most natural language productsapproach the problem of language interpretation in one of two ways: keywordrepresentation or parsing.andM;Keyword representation involves the mapping of key terms to specificmeanings, depending on the database environment.andP;  For instance, in amanufacturing database, the word &quot;make&quot; can be mapped to mean &quot;manufacture,&quot;so users can ask, &quot;How many VAXes did DEC make last year?&quot;andM;The limitation of this approach, however, is that a word can have only onerepresentation, even if the word has more than one meaning.andP;  If the same userposed the question, &quot;How much money did DEC make last year?&quot; the system wouldmistakenly interpret the question, &quot;How much money did DEC manufacture lastyear?&quot;andM;Natural Language Inc. (NLI) offers a natural language interface, NaturalLanguage, that circumvents this problem by using a sophisticated parsingtechnique.andP;  Natural Language analyzes user queries by breaking sentences intotheir distinct parts of speech.andP;  By diagramming sentences in such a way,Natural Language can determine the contextual meaning of users' questions.andO;For instance, Natural Language can parse sentences to determine the meaningof the word &quot;make&quot; (Fig.andP;  1).andP;  Natural Language then converts these Englishqueries into SQL statements, and these statements are submitted to theappropriate DBMS.andM;Users with appropriate privileges can update and delete entries in thedatabase, as well as query it.andM;Natural Language works with many prominent relational database managementsystems, including Ingres, Oracle, Rdb and Sybase, as well as NLI's owninternal DBMS.andP;  Natural Language runs on the VAX/VMS and Ultrix platforms, aswell as Apple, HP and Sun workstations.andP;  Natural Language also supportsDECwindows.andM;A particularly attractive feature in Natural Language is its ability toaccess information from several databases simultaneously.andP;  For example, endusers can retrieve information from both an Ingres and an Rdb database in asingle query.andM;The NLI Natural Language package includes two main elements--the NaturalLanguage Processor and the NLI Application Development Package.andP;  Both ofthese are accessed through a common interface called System Without a Name(SWAN).andM;The NLI Application Development Package allows the database administrator todo much of the setup work required before end users can run the package.andO;With it, the administrator can describe one or more databases to NaturalLanguage and build applications that allow end users to access theirinformation in those databases through Natural Language.andM;The Natural Language Processor acts as an intermediary between the user andthe DBMS.andP;  It consists of the English Language Parser, the SemanticInterface, the Semantic/Pragmatics Interpreter, the Conversation Monitor, theEnglish Generator, the Deductive System and the Database Interface.andM;THE NATURAL TRANSFORMATIONandM;English queries flow through the Natural Language Processor and aretransformed into SQL commands, which are then submitted to the databasemanager.andP;  The database response is returned to the Natural Language Processorand relayed back to the user (Fig.andP;  2).andM;The overall success of this package depends on several factors.andP;  First, thedatabase must accurately and efficiently represent the real-world informationit is attempting to model.andP;  Although it is not imperative that the databasebe normalized, database administrators should do their best to ensure thattheir databases are designed as efficiently as possible.andM;Second, the databases must be described accurately to Natural Language duringa mandatory customization process.andP;  NLI provides a menu-driven interfacecalled the NLI Connector, which helps in this process.andP;  For administratorsnew to natural language interfaces, NLI offers training courses thatspecifically cover the connection process.andM;Finally, end users must generate coherent and pertinent questions.andP;  That is,questions must, for the most part, be grammatically and syntactically correctin order for Natural Language to understand them.andP;  Furthermore, questionsmust relate to the information in the databases being queried.andP;  Ambiguity andawkward sentence structure can lead to incorrect results.andM;Before end users can take advantage of the more glamorous aspects of thispackage, however, Natural Language must be connected to the database.andP;  Duringthis connection process, the database administrator must accurately describethe contents and structure of the database to Natural Language.andP;  Depending onthe size and complexity of the database, this connection process can be alengthy and sometimes tedious process.andP;  Careful attention to detail at thisstage, however, will pay off handsomely later on.andM;During this connection process, the database administrator creates aconnection file that retains concepts and relationships that are needed torefer to objects in the database.andP;  Connection files can be created in one oftwo ways: with a text/file editor or with the NLI Connector.andP;  Although thetext/file editor approach is quicker and more direct, we initially felt morecomfortable using the menu-driven NLI Connector.andP;  Once we became morefamiliar with the product, however, we made changes to the connection fileusing a standard text editor.andM;The SWAN interface is invoked by typing SWAN at the DCL prompt.andP;  Once in theSWAN application, the database administrator can initiate a new connection ormodify an existing one.andP;  In our case, we initiated a connection to a testsubset of our test circulation database (CIRC) via the Ingres databasemanager.andM;The CIRC database consists of three relations--User3, Mach and System.andP;  TheUser3 relation contains 15 attributes, the Mach relation contains 75attributes and the System relation contains 13 attributes.andP;  The database isloaded with 40,844 records.andM;The NLI Connector took us through several steps.andP;  Since an external databasemanager was specified, the connector automatically verified the databaseschema and then prompted for information about each relation in the database(Fig.andP;  3).andM;The connector prioritizes relations according to their number of keys.andO;Relations with single attribute keys are accessed first, then relations withtwo attribute keys, followed by relations with three attribute keys, and soon.andP;  In our case, each database relation had only one key.andM;Connecting a database relation involves defining the relation, as well as itsattributes.andP;  A relation can be defined as one of four types: A Type 1relation represents an entity, a Type 1A relation relates two entities, aType 2 relation has a time attribute in the key list, and a Type 3 relationis anything else.andP;  In our database example, the relation User3 in ourcirculation database is a Type 1 relation because it represents an entity.andM;Once we declared the User3 relation, the connector prompted us for a word orphrase that best represented this entity.andP;  We responded that the User3 entitywas best represented by the word &quot;subscriber.&quot;andM;On the other hand, the relation Mach was a Type 3 relation because it was notcharacterized by a single word or phrase, it did not relate two attributesand it contained no time attribute.andM;The NLI Connector asks for information about the attributes of each relationthrough a series of menus.andP;  These menus allow database administrators toexpress the relationships between attributes and relations.andP;  For instance,the attribute &quot;company&quot; represents an organization that the subscriber worksfor, which is option eight on the attribute menu (Fig.andP;  4).andP;  The attribute&quot;area code,&quot; however, can be related to the subscriber by a prepositionalproperty (the area code of the subscriber).andP;  In some case, attributes in onerelation may need to be linked to other relations.andP;  The connector permitsthese types of relationships.andM;The NLI Connector's next step is to find out how attributes can be used insentences or questions.andP;  For instance, in or CIRC database, the relation Machhas several attributes that represent different computer systems, such as theVAX 8800.andP;  The NLI Connector presents a menu of sentence templates and asksthe database administrator to choose the template that fits the situation.andO;In our case, the template was &quot;Subscribers _ VAX 8800s.&quot;andP;  Next, the databaseadministrator is prompted for the word that best fills the blank in thetemplate.andP;  We chose the verb &quot;own,&quot; so the final sentence became &quot;Subscribersown VAX 8800s.&quot;andM;Database administrators can select the relations and attributes they want todefine.andP;  Certain relations and attributes can be omitted from the connectionprocess if they are not relevant to the application needs of the end users.andM;After the selected relations have been connected, the NLI Connector lets thedatabase administrator specify global items--that is, items that apply to theentire database connection.andP;  Global options include defining patterns forattributes, adding new wods, clarifying ambiguous numeric concepts, definingspecial references, setting special meanings for the words &quot;we&quot; and &quot;us,&quot;specifying the default null value and choosing items from a wide assortmentof end-menu options.andM;Not every database administrator may need to set all of these global options,but many of them can be helpful.andP;  For instance, certain attributes--such associal security numbers, employee-identification numbers and credit cardnumbers--have values that conform to specific patterns.andP;  If these patternsare defined, Natural Language will be able to recognize that strings withdefined patterns are values of specific attributes.andP;  Our data did not requireany pattern settings, but this process is easy and advantageous for thoseadministrators who need it.andM;Choosing end-menu options is the final task in the connection procedure.andP;  Theend-menu options allow the database administrator to perform a number ofuseful actions, such as specifying a help file for end users, definingsynonyms for words and concepts, changing Natural Language defaults, andspecifying superlative definitions.andP;  Superlative definitions allow thedatabase administrator to define terms such as &quot;best&quot; or &quot;worst&quot; in terms ofan attribute.andP;  For instance, the &quot;best salesperson&quot; could be defined to meanthe salesperson who earned the highest commission.andM;The connection process can take a long time to complete.andP;  Thus, databaseadministrators might be unable to finish the task in one sitting.andP;  With thisin mind, the NLI Connector uses several files that allow the databaseadministrators to resume the connection process without having to start overagain.andP;  Database administrators can use these files to resume the connectionprocess at the point where they left off or to modify earlier parts of theconnection.andM;The connection process requires much forethought and planning, as well as anexcellent understanding of the database environment.andP;  We found that the NLIConnector was generally easy to use, although it was a little slow to respondto some commands.andP;  The BACKUP command was particularly slow.andP;  We occasionallyused this command to return to previous questions in the connection process,to make changes or add information.andP;  Many times during the connection processwe sat idly at our terminals for up to 10 minutes waiting for the NLI prompt.andO;After several days, however, we felt comfortable enough to sidestep themenu-driven NLI Connector and directly edit our connection files.andM;FORM FOLLOWS FUNCTIONandM;Once the connection process is completed, the connection file is written.andO;This file contains all the information supplied by the database administratorduring the connection process.andP;  However, these user-supplied answers areconverted to NLI forms, a method of notation that represents four types ofinformation--relations, attributes, mappings and information.andP;  All formstatements are followed by a semicolon (Fig.andP;  5).andM;Relation forms contain information about the relations in the database, suchas the attributes, the keys and--if it is a Type 1 relation--the word used todescribe the entity.andP;  For example, the word &quot;subscriber&quot; was used torepresent the relational entity User3.andP;  This relationship is expressed as arelation form.andM;Attribute forms contain information about the attributes themselves.andO;Information for these forms can include fields that designate different namesfor table headers, designate words that can be used to represent attributesor establish units of measure for attributes.andM;Mapping forms define the database concepts in terms of English constructs.andO;NLI permits two kinds of mappings--binary and template.andP;  Binary mappingsdefine relationships between two database objects.andP;  For instance, subscribersand their titles can be linked with a binary mapping form that links thesubscriber (User3) relation and the title attribute.andM;Template mapping forms also establish relationships between two databaseobjects, but express these relationships in English sentences.andP;  In our testdatabase, for example, we used a template mapping to express the relationship&quot;Subscribers currently own VAX 8800s.&quot;andM;Information forms convey a wide assortment of information, such as numericattributes, synonym lists for words or concepts, or a specific attribute'spart of speech (noun, proper noun, etc.).andP;  Information forms also provide amechanism for computing new attributes based on existing attributes.andP;  Forexample, in our connection process we created an attribute called &quot;vaxco,&quot;which represented the total number of all VAX computers owned by a givensubscriber.andM;Once the connection file has been created, the database administrator needsto test the connection by issuing some representative queries to NaturalLanguage.andP;  This can be done through the SWAN interface by typing RUN followedby the connection file name.andP;  In our case, we typed RUN CIRC.andM;In our first run-through, we found that Natural Language did not respondcorrectly to all our questions because of errors in the connection file.andP;  Wehad to return to the connection file several times to add new form statementsand clarify certain database concepts.andP;  This is to be expected.andP;  There is acertain amount of refinement that goes into the connection process, anddatabase administrators should be prepared to make modifications andrevisions to the connections file.andM;Just as the original connections can be made in two ways, any neededmodifications can be made using the NLI Connector or by editing the text filedirectly.andM;BUILDING FOR THE FUTUREandM;In theory, end users could access Natural Language from within the SWANinterface instead of building a close-ended application.andP;  By typing RUN CIRC,for example, users could invoke Natural Language and access the database,based on the information in the connection file.andM;In practice, however, there are several problems with permitting this type ofaccess.andP;  First, users would be able to make changes to the connection file byissuing certain commands at the Natural Language prompt.andP;  For example, a usercould add a synonym list to the connection file by issuing the DEFINE SYNONYMcommand at the Natural Language prompt.andP;  Secondly, users would have to gothrough the additional step of invoking the SWAN interface.andM;Instead, the preferred method is for the database administrator to create aseparate method of access for end users.andP;  From within SWAN, the databaseadministrator or the system manager can build an application (an executablefile) for his or her end users.andP;  This executable file gives users access tothe database, but because it is a separate image, non-privileged users cannottamper with the actual connection file.andP;  To build an application calledCIRCULATION, which would provide users with access to the CIRC database, thedatabase administrator would type BUILD CIRCULATION CIRC.andM;Like other executable files, this newly created application is invoked withthe RUN command.andP;  By typing RUN CIRC at the DCL prompt, end users can invokeNatural Language without going through the SWAN interface.andM;Changes made to the connection during a session running an executable fileare active only during users' current sessions.andP;  No changes can be savedpermanently to the connection file.andP;  For instance, if an end user defines asynonym for a word, the synonym will be remembered only during the currentsession.andP;  It will need to be redefined in future Natural Language sessions.andM;The prompt in the Natural Language environment is a colon.andP;  At this prompt,end users can type in their queries.andP;  Several useful settings allow end usersto see what Natural Language is doing.andP;  For instance, by typing PREVIEW THEQUERY, users can view the SQL statement before the database query isinitiated (Fig.andP;  6).andM;DR Labs ran Natural Language through its paces and found it workedexceptionally well.andP;  Natural Language imposes no limitations on theoperations users can perform on the databases.andP;  Rather, database privilegesare determined by the appropriate database manager, just as they would be ifNatural Language were not being used.andP;  Fully privileged database users canuse Natural Language to perform the same data retrieval and modificationtasks that they formerly performed with SQL commands, such as adding anddeleting records.andP;  In our tests, we found it both easy and quick to modifythe data stored in the database.andM;We typed many different queries to retrieve various information from our CIRCdatabase.andP;  We asked the following questions: &quot;Which subscribers work forcompanies in California?&quot;andP;  &quot;How many subscribers own VAXes?&quot;andP;  &quot;Whichsubscribers run VAX/VMS or Unix?&quot; and &quot;Which subscribers are planning topurchase VAXes?&quot;andM;We asked for information that spanned all three of our relations.andP;  Wediscovered that Natural Language had no difficulty translating the queries toSQL and retrieving the appropriate information.andM;Although Natural Language allows non-technical users to access informationfrom their databases, there is a price to pay in the form of the additionaloverhead that's incurred during the query building stage.andP;  To test thisadditional overhead, we designed six English queries (see table).andM;The simplest query--&quot;How many subscribers are there?&quot;--requested the numberof records in the database.andP;  It took Natural Language 6.6 seconds to buildthe appropriate SQL query.andM;The other five queries all took between 15 and 27 seconds of CPU time to beconverted into SQL.andP;  In all cases, this was comparable to or better than thetime it would have taken an experienced SQL user to generate the SQL on hisown.andM;One feature of Natural Language that we liked was its ability to understandpronouns that referred to subjects specified in earlier questions.andP;  Our fifthquery--&quot;Which of these subscribers run VAX/VMS or Unix?&quot;--was an example ofthis type of question, called an ellipsis.andP;  In this query, &quot;thesesubscribers&quot; referred to the group of subscribers selected in the previousquery.andP;  Natural Language handled these types of questions with no problems.andM;One difficulty that we discovered, however, is that Natural Language will notgive a clear indication that a query is poorly phrased.andP;  For instance, weasked the question, &quot;How many subscribers work for companies located inMassachusetts?&quot;andP;  Natural Language generated an inefficient SQL query thatwould have taken too long to execute.andP;  The problem resulted because duringthe connection process, we defined the attribute &quot;state&quot; as the location ofthe subscriber, instead of the location of the company.andM;The difference is subtle, but significantly affects Natural Language'sability to provide information accurately and efficiently.andP;  Such problems canbe particularly troublesome because many Natural Language users areunfamiliar with SQL and would not recognize an inefficient query.andM;As long as we expressed our questions clearly and precisely.andP;  NaturalLanguage was able to satisfy our requests.andP;  Although there was occasionallysome confusion, we were always able to rephrase our requests to make themmore understandable.andM;For example, during one session we asked to see the subscribers who worked inCalifornia.andP;  Next, we typed the following ellipsis: &quot;Show their companies andaddresses, as well as their titles.&quot;andP;  Natural Language responded to thisquery by indicating that it did not have any information about the health oftitles.andM;Natural Language misunderstood the meaning of the phrase &quot;as well as&quot; andinterpreted it to mean &quot;as healthy as.&quot;andP;  By rephrasing the sentence, we wereable to avoid this confusion.andP;  Alternatively, we could have edited theoriginal connection file and redefined the phrase &quot;as well as&quot; to mean &quot;inaddition to.&quot;andM;The previous example serves to illustrate Natural Language's adeptness athandling the many difficulties that confront natural language products.andP;  Itwould be virtually impossible to account for all of the complexities andnuances of the English language.andP;  Slang words are a prime example.andP;  NaturalLanguage's strength is its ability to adjust its vocabulary to the needs ofits end users.andM;Natural Language is an exciting and extremely appealing product, but muchplanning and forethought must go into the connection process.andM;In addition, price could be a major consideration.andP;  NLI's Natural Languageranges in price from $20,400 on a VAXstation 3100 to $46,600 on a VAX 9000Model 210.andM;All things considered, however, the Natural Language interface is a wiseinvestment for many sites that work extensively with databases.andP;  There issomething very humanizing about communicating in English with a computer.andM;TEST LABS MODELandM;DR Labs tested Natural Language version 3.1 on a MicroVAX 3600 in a localarea VAXcluster configuration running VMS version 5.1.andP;  Natural Language wasused to connect to Ingres 6.2 running on a MicroVAX II running in the samelocal area VAXcluster.andM;The ultimate success of a natural language database interface product dependsupon how well it understands the English syntax and vocabularies and how wellit relates users' queries to the database environment.andP;  With this in mind, wetested both the customization process and the Natural Language interfaceitself.andM;We used NLI's customization package, called the NLI Connector, to describethe structure and contents of our Ingres database, called CIRC.andP;  The CIRCdatabase comprises three relations--User3, Mach and System.andP;  The User3relation consisted of 15 attributes, the Mach relation consisted of 75attributes, and the System relation was made up of 13 attributes.andP;  Thedatabase was loaded with 40,844 records.andM;We then tested Natural Language's ability to parse sentences and to transformthem into effective SQL commands.andP;  We posed the types of questions that anysite might ask to access information from the different database relations.andO;We made English queries to access information from the three relations in ourCIRC database, and we performed record additions and deletions via Englishstatements as well.andM;We also measured the overhead involved with using Natural Language to builddatabase queries.andP;  There is no significant overhead involved in sending theSQL to the database manager.andP;  We designed six questions, ranging from simpleto complex, to test Natural Language's efficiency in transforming Englishqueries into SQL statements.andO;</TEXT></DOC>
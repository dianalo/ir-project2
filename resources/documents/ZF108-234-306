<?xml version='1.0' encoding='UTF-8'?>
<DOC><DOCNO>  ZF108-234-306  </DOCNO><DOCID>08 234 306.andM;</DOCID><JOURNAL>Release 1.0  Feb 27 1990 v90 n2 p3(4)* Full Text COPYRIGHT EdVenture Holdings 1990.andM;</JOURNAL><TITLE>Artificial life: the best things in life are grown. (the SecondConference on Artificial Life at the Center for Non-Linear Studiesat Los Alamos National Labs)andM;</TITLE><DESCRIPT>Topic:     Research and DevelopmentFuture TechnologiesBiologyConferencesTheoretical ResearchConference on Artificial LifeLos Alamos National LaboratoryArtificial Life.andM;</DESCRIPT><TEXT>ARTIFICIAL LIFE: THE BEST THINGS IN LIFE ARE GROWN The great thing aboutartificial life is where it is beginning -- not in a primordial soupsomewhere, but in Santa Fe.andP;  Researchers at the Santa Fe Institute and thenearby Center for Non-Linear Studies at Los Alamos National Labs are leadingthe search.andP;  We recently attended the Second Conference on Artificial Lifethere, along with about 300 people who had the higest IQs and the lowestnumber of affiliations of any group we've run into lately.andP;  Many people werelisted simply by their names and addresses, which tended towards Berkeley,Palo Alto and Cambridge, MA.andM;Artificial life is of interest to computer folk for two reasons: Mostartificial life &quot;grows&quot; in computers...andP;  Is it just simulations?andP;  Or is itreal artificial life?andP;  No matter.andP;  They do everything life does, althoughthey consume pure energy rather than turn matter into energy.andP;  Whether or notit's &quot;real,&quot; the study of artificial life can provide useful techniques forprogramming, much as artificial intelligence has.andM;The first tenet oif ALife is that life is a property of organization, not ofmatter.andP;  Systems that grow, reproduce, consume resources and reverse entropy(locally) are alive, whether or not they are wet and squishy andcarbon-based.andP;  Those seemingly cute names have more foundation to them thanwe imagined.andP;  The same materials can be dead or alive; just look at anycorpse -- or the transformation of a living carrot into a frozen piece offood and subsequently into the body of a dutiful vegetable-eater.andP;  (Orconsider many of the new foods we have; they are &quot;food material,&quot; but theyare manufactured, not grown.)andP;  In computers, it is not the silicon but thesoftware -- the &quot;ghost in the machine&quot; -- that is alive.andP;  The best-knownexamples of artificial life are viruses, worms, bugs and other computerwildlife.andM;The second fundamental tenet is that things grow bottom-up.andP;  Artificial lifeis another name for self-organizing systems; evolving societies, freemarkets, swarms of bees, all have some characteristics of life.andP;  (See Release1.0, 89-6, for a full discussion of self-organizing systems and some examplesof how they can be used.andP;  Control is dispersed, and life takes on form andstructure from the interactions of multitudes of independent parts.andM;You cannot design a living thing; you can only design (program) its parts.andO;Those parts then interact to form the living, perpetually changing being.andO;There is no equilibrium other than death (or non-aliveness), either in anorganism or an ecosystem.andP;  Any living thing keeps on changing until it dies,and the scientifically interesting moments are those of transition andtransformation; achievement of equilibrium is an illusion, because there areinternal and external irregularities that render a steady state impossible.andM;Not a lotta metaandM;There was not a lotta meta at the conference; most of the talks were aboutbuilding ants that could follow paths; the possibilities, planet by planet,of extraterrestrial life; and techniques, experiments and studies.andP;  Theorytalks were tantalizing but unsatisfying.andM;But one fundamental question was clear if not formally stated (and an exampleof that AI stalwart of reasoning-by-analogy): Why is or is not artificiallife like artificial intelligence?andP;  AI is many things, but most peopleconsider it a disappointment.andP;  In fact, it has led to a lot of fruitfuldevelopments in computer applications -- diagnostic systems, expert systemsfor product support, voice recognition for order-entry systems, handwritingrecognition (stay tuned), machine vision for factory applications, knowledgebases for product support, natural language interfaces to databases, moreflexibility in traditional data-driven applications.andM;Yet AI has failed to live up to its early promise.andP;  It's not the realitythat's disappointing, but the difference between the reality and the promise.andO;In the Fifties, Allen Newell and Herb Simon, in particular, promised greatthings for AI; within ten years, a computer would be the world's chesschampion, compose music and so forth (as described in &quot;Machines Who Think.&quot;)andM;The broken promise of ALife?andM;Artificial life may suffer the same backlash as AI (the &quot;AI winter?) if itspractitioners aren't careful.andP;  The proponents of artificial life aren't quiteso rash; they don't give dates.andP;  But there was enough press at ALife II thatpromises will still be inferred even if they are not made.andP;  (Whereas thefirst ALife conference was covered by Jim Gleick, a science writer for TheNew York Times, the second was covered by John Markoff, its computer writer,not given to hype, but an applied technologist nonetheless.andP;  Markoff alsoattended the first ALife conference as a reporter for the San FranciscoExaminer, but that's another story.)andM;The leaders in the field (including Doyne Farmer and Chris Langton of LosAlamos, Norm Packard of the Santa Fe Institute, Jim Crutchfield of Berkeleyand John Holland of the University of Michigan) are looking for thetheoretical foundations of life -- not quite a Grand Unified Theory, butsomething more solid than &quot;50 pieces of hackery,&quot; says Farmer, the earnestbut intensely personable man credited for a fair amount of modern chaostheory, puts it.andP;  &quot;Are there a few basic principles underlying it all?andP;  If wedidn't think so, half of us, the scientists, would have gone home.&quot;andM;Likewise, the early AI pioneers hoped to find some general principles of AI.andO;But it turns out that intelligence, natural or artificial, is best understoodas a collection of ad-hoc capabilities rather than a couple of principles.andO;They include pattern recognition (vision and speech recognition), reasoning(expert systems and other inference-based systems), natural languageunderstanding (a collection of skills including parsing, pattern recognition,reasoning by analogy and knowledge representation), learning (neural nets),and even plain old data management.andM;Two out of five?andM;All these constitute part of human intelligence, in varying degrees.andP;  Many ofthem are susceptible to implementation on a computer.andP;  Is a computer withonly one of them &quot;intelligent&quot;?andP;  Or do you need three out of five?andP;  Is thatquestion relevant?andP;  A more relevant question is, Is that computer useful?andO;Unless you really care about the comuter, its behavior, not its intelligence,is your concern.andM;In a similar vein, a computer system need not be alive (or follow a unifyingtheory) to exhibit useful, commercially interesting, lifelike behavior:iterative optimization, learning (as in a neural net), growth, adaptability,self-organization, reproduction, self-identification and immune responses,evolution or coevolution.andP;  All these are based on the interactions ofindividual objects that end up creating complex, self-organizing systemswhich keep changing in ways that are unpredictable except by simulation.andM;The value of artificial life is creating and handling complexity beyond whatwe can do ourselves.andP;  It requires giving up some direct control -- just asthe farmer growing carrots could not &quot;build&quot; the carrots himself, he canfoster their growth with proper inputs -- and he can definitely predict thathe will produce carrots, not rutabagas, from a given handful of seeds.andP;  Thedifference between traditional AI and ALife is that AI is programmed to dowhat it does, whereas ALife is &quot;programmed&quot; to develop itself.andP;  The AI systemwill be the same after its experiences, whereas the ALife system will beirrevocably changed -- just as a person is by the vicissitudes of life.andM;Safe computing and immune systemsandM;In terms of computers, there are potential applications of ALifetheory/techniques in graphics, programming (generic algorithms),optimization, learning, simulation and modeling, among others.andP;  Perhaps thefirst big benefit (aside from simulation games such as the wonderful SimCity,computer art and other unproductive if enriching uses) will be counteringsome of the artificial life already out there -- computer viruses, worms andbugs.andM;The notion of an ALife immune system, which can recognize itself and destroyforeign bodies, makes a lot of sense.andP;  What worries people about viruses isthat systems are so complex that integrity cannot be guaranteed.andP;  [1]  Whatwe have now -- vaccines -- is akin to antibiotics, or human-built specificsubstances that can fight specific strains of viruses.andP;  This of course is alosing battle.andP;  An immune system, by contrast, is an indigenous livingeco-system that recognizes and grows antibodies to specific new viruses asthey appear; the feedback loop is much faster and target-specific becausehumans don't get in the middle.andP;  Also, somehow, we could add in the notion ofinoculation, to raise sensitivity to broad strains of viruses.andM;A second notion is a repudiation of excessive standardization.andP;  There isstrength in diversity, because chances are that somewhere there will be asystsem resistant to any particular danger.andP;  Of course, that doesn't help thesystems that are directly vulnerable, but it limits the danger to society atlarge.andP;  Also, diversity fosters adaptability, because it's more likely that arange of existing systems will contain one suited to a new environment; toomuch specialization renders a thing unfit for any situation other than theone it is so well-suited to.andM;Will we then, in the future, grow rather than copy our operating systems, sothat each is unique?andP;  Suppose we just grew them to meet, say, the POSIXspecs?andP;  (We could devise some scoring system to favor fast performance.)andO;This may sound a little far-fetched, but in fact it's already happening, on aslower scale, in the marketplace -- that same marketplace that the standardsorganizations are attempting to subvert.andP;  (Or are they themselves part of alarger self-organizing system that includes both profit-making units andbodies at least ostensibly motivated by other goals?)andP;  The difference is thatthese systems are made (programmed) rather than grown, and so the number ofvarieties is smaller, and there are many exact copies of each.andM;The implicationsandM;For the moment, the major implications of artificial life for computing seemto be in an approach to programming and system design rather than wholesaleefforts to create complete instances of artificial life -- whatever it is.andO;Just as AI capabilities or techniques enrich traditional applications, socould ALife features.andP;  Most of these are things we already know how to do --optimization techniques, for example.andP;  We have to learn to let them takeover, rather than try to control everything centrally.andP;  For example, youcould use ALife in allocating resources, in designing communicationsnetworks, in building adaptive user interfaces.andP;  Object-oriented programming-- the real kind, where the objects interact with each other, rather thanrespond to calls from a central program that's in control -- is another case.andO;The individual objects need to be programmed, yes, but the system as a wholeorganizes itself.andP;  (This is not magic: You want to run the system to makesure it organizes itself properly.andP;  The value of object-oriented programmingis not that you can avoid programming, but that you can reuse the objects inoriginal or modified form once they have been programmed.)andM;Of course, there are cases where the AI is most of the system, as instand-alone expert systems, and there are parallels in ALife as well --notably in genetic algorithms, where you use evolution as a programmingtechnique.andP;  While most MIS managers will tell you there's no way they'd usesoftware that was grown, attitudes may ultimately change -- when people stopthinking of software as digital.andP;  After all, they use people -- howeverunwillingly.andM;Local optima and the value of diversityandM;Evolution and diversity in the end may be our only defense against computerviruses, and a major source of incremental performance improvements.andP;  On theother hand, the mind of a brilliant programmer/designer, rather than thesubtle incremental improvements of evolution and genetic algorithms, may bethe only hope for the kind of fundamental progress represented by, say, theNeXT machine (regardless of whether NeXT itself is commercially successful).andO;If there's one thing that ALife teaches us, it's that coevolution -- whereboth an organism and the problems it is solving are changing -- leads to realprogress.andP;  Human minds are part of the scheme of things; it may be ourability to think of new problems, as well as answers, that is our real edge.andM;But perhaps the most important by-product of ALife is better understanding ofthe market and other forces that guide our industry.andP;  The concepts of localoptima, the value of diversity and coevolution in fostering progress, thenecessity for error as well as trial, and the fundamental assumption thatprogress cannot be planned or controlled are tremendously important.andP;  We canrail at all the waste -- but consider the alternatives.andM;(1) The same applies to the reliability of large systems such as SDI.andP;  Thereis no foolproof way to keep an attack system from pushing the button; youhave to keep it physically unplugged -- in which case, why bother?andP;  This iswhy brilliant pebbles or smart bullets, which can be statistically if notabsolutely reliable, make more sense than just a few large, offensiveboulders.andP;  Whether any of it makes sense is another issue.andP;  .  .  .andO;</TEXT></DOC>